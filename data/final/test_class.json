{"class_name": "GroupPerSiteResult", "java_source": "/*\n * Crafter Studio Web-content authoring solution\n * Copyright (C) 2007-2017 Crafter Software Corporation.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\npublic class GroupPerSiteResult {\n\n  protected String groupName;\n  protected String groupDescription;\n  protected String username;\n  protected String firstName;\n  protected String lastName;\n  protected String email;\n\n  public String getGroupName() {\n    return groupName;\n  }\n\n  public void setGroupName(String groupName) {\n    this.groupName = groupName;\n  }\n\n  public String getGroupDescription() {\n    return groupDescription;\n  }\n\n  public void setGroupDescription(String groupDescription) {\n    this.groupDescription = groupDescription;\n  }\n\n  public String getUsername() {\n    return username;\n  }\n\n  public void setUsername(String username) {\n    this.username = username;\n  }\n\n  public String getFirstName() {\n    return firstName;\n  }\n\n  public void setFirstName(String firstName) {\n    this.firstName = firstName;\n  }\n\n  public String getLastName() {\n    return lastName;\n  }\n\n  public void setLastName(String lastName) {\n    this.lastName = lastName;\n  }\n\n  public String getEmail() {\n    return email;\n  }\n\n  public void setEmail(String email) {\n    this.email = email;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super GroupPerSiteResult \n.super java/lang/Object \n.field protected groupName Ljava/lang/String; \n.field protected groupDescription Ljava/lang/String; \n.field protected username Ljava/lang/String; \n.field protected firstName Ljava/lang/String; \n.field protected lastName Ljava/lang/String; \n.field protected email Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 22 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getGroupName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GroupPerSiteResult groupName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 31 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setGroupName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field GroupPerSiteResult groupName Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 32 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getGroupDescription : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GroupPerSiteResult groupDescription Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setGroupDescription : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field GroupPerSiteResult groupDescription Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 35 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getUsername : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GroupPerSiteResult username Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 37 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setUsername : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field GroupPerSiteResult username Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 38 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFirstName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GroupPerSiteResult firstName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 40 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setFirstName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field GroupPerSiteResult firstName Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 41 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getLastName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GroupPerSiteResult lastName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 43 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setLastName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field GroupPerSiteResult lastName Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 44 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getEmail : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GroupPerSiteResult email Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setEmail : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field GroupPerSiteResult email Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 47 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'GroupPerSiteResult.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 05:47:51 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class GroupPerSiteResult_ESTest extends GroupPerSiteResult_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      groupPerSiteResult0.setUsername(\"\");\n      String string0 = groupPerSiteResult0.getUsername();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      groupPerSiteResult0.lastName = \"\";\n      String string0 = groupPerSiteResult0.getLastName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      groupPerSiteResult0.groupName = \"\u007fTZUm\";\n      String string0 = groupPerSiteResult0.getGroupName();\n      assertEquals(\"\u007fTZUm\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      groupPerSiteResult0.groupName = \"\";\n      String string0 = groupPerSiteResult0.getGroupName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      groupPerSiteResult0.setGroupDescription(\"\");\n      String string0 = groupPerSiteResult0.getGroupDescription();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      groupPerSiteResult0.firstName = \":CSD!$ATF(]iz.aAk3f\";\n      String string0 = groupPerSiteResult0.getFirstName();\n      assertEquals(\":CSD!$ATF(]iz.aAk3f\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      groupPerSiteResult0.firstName = \"\";\n      String string0 = groupPerSiteResult0.getFirstName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      groupPerSiteResult0.setEmail(\"+KYJqU$NOa?&^~og\u007f\");\n      String string0 = groupPerSiteResult0.getEmail();\n      assertEquals(\"+KYJqU$NOa?&^~og\u007f\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      groupPerSiteResult0.setUsername(\"\u007fTZUm\");\n      String string0 = groupPerSiteResult0.getUsername();\n      assertEquals(\"\u007fTZUm\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      String string0 = groupPerSiteResult0.getEmail();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      String string0 = groupPerSiteResult0.getGroupDescription();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      groupPerSiteResult0.setEmail(\"\");\n      String string0 = groupPerSiteResult0.getEmail();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      String string0 = groupPerSiteResult0.getLastName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      String string0 = groupPerSiteResult0.getUsername();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      groupPerSiteResult0.setGroupDescription(\"07\\\"\");\n      String string0 = groupPerSiteResult0.getGroupDescription();\n      assertEquals(\"07\\\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      groupPerSiteResult0.setLastName(\"\u007fTZUm\");\n      String string0 = groupPerSiteResult0.getLastName();\n      assertEquals(\"\u007fTZUm\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      groupPerSiteResult0.setGroupName(\"+Y\");\n      assertNull(groupPerSiteResult0.getGroupDescription());\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      String string0 = groupPerSiteResult0.getGroupName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      groupPerSiteResult0.setFirstName((String) null);\n      assertNull(groupPerSiteResult0.getGroupName());\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      GroupPerSiteResult groupPerSiteResult0 = new GroupPerSiteResult();\n      String string0 = groupPerSiteResult0.getFirstName();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 05:47:51 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class GroupPerSiteResult_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"GroupPerSiteResult\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpdpju1w5w\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(GroupPerSiteResult_ESTest_scaffolding.class.getClassLoader() ,\n      \"GroupPerSiteResult\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(GroupPerSiteResult_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"GroupPerSiteResult\"\n    );\n  }\n}\n", "class_idx": 0}
{"class_name": "GIFEncoderHashitem", "java_source": "// GIFEncoderHashitem.java\n//\n// Copyright 2003 by Jack Boyce (jboyce@users.sourceforge.net) and others\n\n/*\n    This file is part of Juggling Lab.\n\n    Juggling Lab is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    Juggling Lab is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with Juggling Lab; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n*/\n\nimport java.awt.*;\n\npublic class GIFEncoderHashitem {\n  public int rgb;\n  public int count;\n  public int index;\n  public Color color;\n\n  public GIFEncoderHashitem(int rgb, Color color, int count, int index) {\n    this.rgb = rgb;\n    this.count = count;\n    this.index = index;\n    this.color = color;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super GIFEncoderHashitem \n.super java/lang/Object \n.field public rgb I \n.field public count I \n.field public index I \n.field public color Ljava/awt/Color; \n\n.method public <init> : (ILjava/awt/Color;II)V \n    .code stack 2 locals 5 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field GIFEncoderHashitem rgb I \nL9:     aload_0 \nL10:    iload_3 \nL11:    putfield Field GIFEncoderHashitem count I \nL14:    aload_0 \nL15:    iload 4 \nL17:    putfield Field GIFEncoderHashitem index I \nL20:    aload_0 \nL21:    aload_2 \nL22:    putfield Field GIFEncoderHashitem color Ljava/awt/Color; \nL25:    return \nL26:    \n        .linenumbertable \n            L0 35 \n            L4 36 \n            L9 37 \n            L14 38 \n            L20 39 \n            L25 40 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'GIFEncoderHashitem.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 18:57:45 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.awt.Color;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class GIFEncoderHashitem_ESTest extends GIFEncoderHashitem_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Color color0 = Color.green;\n      GIFEncoderHashitem gIFEncoderHashitem0 = new GIFEncoderHashitem(1, color0, 0, 0);\n      assertEquals(0, gIFEncoderHashitem0.index);\n      assertEquals(1, gIFEncoderHashitem0.rgb);\n      assertEquals(0, gIFEncoderHashitem0.count);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 18:57:45 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class GIFEncoderHashitem_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"GIFEncoderHashitem\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp6lo_it5z\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(GIFEncoderHashitem_ESTest_scaffolding.class.getClassLoader() ,\n      \"GIFEncoderHashitem\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(GIFEncoderHashitem_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"GIFEncoderHashitem\"\n    );\n  }\n}\n", "class_idx": 1}
{"class_name": "MyDependsOnBean", "java_source": "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n * agreements. See the NOTICE file distributed with this work for additional information regarding\n * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n * copy of the License at\n *\n * <p>http://www.apache.org/licenses/LICENSE-2.0\n *\n * <p>Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @version\n */\npublic class MyDependsOnBean {\n\n  private long time;\n  private String endpointName;\n\n  public String getEndpointName() {\n    return endpointName;\n  }\n\n  public void setEndpointName(String endpointName) {\n    // time when we was invoked by Spring\n    this.time = System.nanoTime();\n    this.endpointName = endpointName;\n  }\n\n  public long getTime() {\n    return time;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super MyDependsOnBean \n.super java/lang/Object \n.field private time J \n.field private endpointName Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 22 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getEndpointName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field MyDependsOnBean endpointName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setEndpointName : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     invokestatic Method java/lang/System nanoTime ()J \nL4:     putfield Field MyDependsOnBean time J \nL7:     aload_0 \nL8:     aload_1 \nL9:     putfield Field MyDependsOnBean endpointName Ljava/lang/String; \nL12:    return \nL13:    \n        .linenumbertable \n            L0 33 \n            L7 34 \n            L12 35 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getTime : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field MyDependsOnBean time J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 38 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'MyDependsOnBean.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 14:26:44 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.System;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class MyDependsOnBean_ESTest extends MyDependsOnBean_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      MyDependsOnBean myDependsOnBean0 = new MyDependsOnBean();\n      myDependsOnBean0.setEndpointName(\"\");\n      long long0 = myDependsOnBean0.getTime();\n      assertEquals(1392409281320000L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      System.setCurrentTimeMillis((-43996L));\n      MyDependsOnBean myDependsOnBean0 = new MyDependsOnBean();\n      myDependsOnBean0.setEndpointName(\"\");\n      long long0 = myDependsOnBean0.getTime();\n      assertEquals((-43996000L), long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      MyDependsOnBean myDependsOnBean0 = new MyDependsOnBean();\n      myDependsOnBean0.setEndpointName(\"\u007fk<]qd*+vXi\");\n      String string0 = myDependsOnBean0.getEndpointName();\n      assertEquals(\"\u007fk<]qd*+vXi\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      MyDependsOnBean myDependsOnBean0 = new MyDependsOnBean();\n      String string0 = myDependsOnBean0.getEndpointName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      MyDependsOnBean myDependsOnBean0 = new MyDependsOnBean();\n      long long0 = myDependsOnBean0.getTime();\n      assertEquals(0L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      MyDependsOnBean myDependsOnBean0 = new MyDependsOnBean();\n      myDependsOnBean0.setEndpointName(\"\");\n      String string0 = myDependsOnBean0.getEndpointName();\n      assertEquals(\"\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 14:26:44 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class MyDependsOnBean_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"MyDependsOnBean\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp0t6uav5z\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MyDependsOnBean_ESTest_scaffolding.class.getClassLoader() ,\n      \"MyDependsOnBean\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MyDependsOnBean_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"MyDependsOnBean\"\n    );\n  }\n}\n", "class_idx": 2}
{"class_name": "Student", "java_source": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.*;\n\npublic class Student implements Comparable<Student> {\n  private String firstName;\n  private String lastName;\n\n  public Student(String firstName, String lastName) {\n    this.firstName = firstName;\n    this.lastName = lastName;\n  }\n\n  public String getName() {\n    return this.firstName + \" \" + this.lastName;\n  }\n\n  @Override\n  public int compareTo(Student student) {\n    int result = this.lastName.compareTo(student.lastName);\n\n    if (result == 0) {\n      result = this.firstName.compareTo(student.firstName);\n    }\n\n    return result;\n  }\n\n  @Override\n  public String toString() {\n    String result = firstName + \" \" + lastName;\n\n    return result;\n  }\n\n  public static void main(String[] args) throws FileNotFoundException {\n    HashMap<String, ArrayList<Student>> courses = new HashMap<String, ArrayList<Student>>();\n    Scanner input =\n        new Scanner(\n            new File(\"out/production/Student/\" + \"tutorials/othersingleexamples/students.txt\"),\n            \"windows-1251\");\n\n    try {\n      while (input.hasNext()) {\n        String line = input.nextLine();\n        String[] studentEntry = line.split(\"\\\\s*\\\\|\\\\s*\");\n        String firstName = studentEntry[0];\n        String lastName = studentEntry[1];\n        String course = studentEntry[2];\n        ArrayList<Student> students = courses.get(course);\n\n        if (students == null) {\n          students = new ArrayList<Student>();\n          courses.put(course, students);\n        }\n\n        Student student = new Student(firstName, lastName);\n        students.add(student);\n      }\n    } finally {\n      input.close();\n    }\n\n    Set<String> coursesNames = courses.keySet();\n\n    for (String course : coursesNames) {\n      System.out.println(\"Course \" + course + \":\");\n      ArrayList<Student> students = courses.get(course);\n      Student[] studentsArr = students.toArray(new Student[students.size()]);\n      Arrays.sort(studentsArr);\n\n      for (Student student : studentsArr) {\n        System.out.printf(\"\\t%s\\n\", student);\n      }\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Student \n.super java/lang/Object \n.implements java/lang/Comparable \n.field private firstName Ljava/lang/String; \n.field private lastName Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field Student firstName Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field Student lastName Ljava/lang/String; \nL14:    return \nL15:    \n        .linenumbertable \n            L0 11 \n            L4 12 \n            L9 13 \n            L14 14 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     aload_0 \nL8:     getfield Field Student firstName Ljava/lang/String; \nL11:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL14:    ldc ' ' \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    aload_0 \nL20:    getfield Field Student lastName Ljava/lang/String; \nL23:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL26:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL29:    areturn \nL30:    \n        .linenumbertable \n            L0 17 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public compareTo : (LStudent;)I \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     getfield Field Student lastName Ljava/lang/String; \nL4:     aload_1 \nL5:     getfield Field Student lastName Ljava/lang/String; \nL8:     invokevirtual Method java/lang/String compareTo (Ljava/lang/String;)I \nL11:    istore_2 \nL12:    iload_2 \nL13:    ifne L28 \nL16:    aload_0 \nL17:    getfield Field Student firstName Ljava/lang/String; \nL20:    aload_1 \nL21:    getfield Field Student firstName Ljava/lang/String; \nL24:    invokevirtual Method java/lang/String compareTo (Ljava/lang/String;)I \nL27:    istore_2 \n\n        .stack append Integer \nL28:    iload_2 \nL29:    ireturn \nL30:    \n        .linenumbertable \n            L0 22 \n            L12 24 \n            L16 25 \n            L28 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 2 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     aload_0 \nL8:     getfield Field Student firstName Ljava/lang/String; \nL11:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL14:    ldc ' ' \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    aload_0 \nL20:    getfield Field Student lastName Ljava/lang/String; \nL23:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL26:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL29:    astore_1 \nL30:    aload_1 \nL31:    areturn \nL32:    \n        .linenumbertable \n            L0 33 \n            L30 35 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 6 locals 12 \nL0:     new java/util/HashMap \nL3:     dup \nL4:     invokespecial Method java/util/HashMap <init> ()V \nL7:     astore_1 \nL8:     new java/util/Scanner \nL11:    dup \nL12:    new java/io/File \nL15:    dup \nL16:    ldc 'out/production/Student/tutorials/othersingleexamples/students.txt' \nL18:    invokespecial Method java/io/File <init> (Ljava/lang/String;)V \nL21:    ldc 'windows-1251' \nL23:    invokespecial Method java/util/Scanner <init> (Ljava/io/File;Ljava/lang/String;)V \nL26:    astore_2 \n        .catch [0] from L27 to L123 using L130 \n\n        .stack append Object java/util/HashMap Object java/util/Scanner \nL27:    aload_2 \nL28:    invokevirtual Method java/util/Scanner hasNext ()Z \nL31:    ifeq L123 \nL34:    aload_2 \nL35:    invokevirtual Method java/util/Scanner nextLine ()Ljava/lang/String; \nL38:    astore_3 \nL39:    aload_3 \nL40:    ldc '\\\\s*\\\\|\\\\s*' \nL42:    invokevirtual Method java/lang/String split (Ljava/lang/String;)[Ljava/lang/String; \nL45:    astore 4 \nL47:    aload 4 \nL49:    iconst_0 \nL50:    aaload \nL51:    astore 5 \nL53:    aload 4 \nL55:    iconst_1 \nL56:    aaload \nL57:    astore 6 \nL59:    aload 4 \nL61:    iconst_2 \nL62:    aaload \nL63:    astore 7 \nL65:    aload_1 \nL66:    aload 7 \nL68:    invokevirtual Method java/util/HashMap get (Ljava/lang/Object;)Ljava/lang/Object; \nL71:    checkcast java/util/ArrayList \nL74:    astore 8 \nL76:    aload 8 \nL78:    ifnonnull L99 \nL81:    new java/util/ArrayList \nL84:    dup \nL85:    invokespecial Method java/util/ArrayList <init> ()V \nL88:    astore 8 \nL90:    aload_1 \nL91:    aload 7 \nL93:    aload 8 \nL95:    invokevirtual Method java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nL98:    pop \n\n        .stack full \n            locals Object [Ljava/lang/String; Object java/util/HashMap Object java/util/Scanner Object java/lang/String Object [Ljava/lang/String; Object java/lang/String Object java/lang/String Object java/lang/String Object java/util/ArrayList \n            stack \n        .end stack \nL99:    new Student \nL102:   dup \nL103:   aload 5 \nL105:   aload 6 \nL107:   invokespecial Method Student <init> (Ljava/lang/String;Ljava/lang/String;)V \nL110:   astore 9 \nL112:   aload 8 \nL114:   aload 9 \nL116:   invokevirtual Method java/util/ArrayList add (Ljava/lang/Object;)Z \nL119:   pop \nL120:   goto L27 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object java/util/HashMap Object java/util/Scanner \n            stack \n        .end stack \nL123:   aload_2 \nL124:   invokevirtual Method java/util/Scanner close ()V \nL127:   goto L139 \n        .catch [0] from L130 to L132 using L130 \n\n        .stack stack_1 Object java/lang/Throwable \nL130:   astore 10 \nL132:   aload_2 \nL133:   invokevirtual Method java/util/Scanner close ()V \nL136:   aload 10 \nL138:   athrow \n\n        .stack same \nL139:   aload_1 \nL140:   invokevirtual Method java/util/HashMap keySet ()Ljava/util/Set; \nL143:   astore_3 \nL144:   aload_3 \nL145:   invokeinterface InterfaceMethod java/util/Set iterator ()Ljava/util/Iterator; 1 \nL150:   astore 4 \n\n        .stack append Object java/util/Set Object java/util/Iterator \nL152:   aload 4 \nL154:   invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL159:   ifeq L292 \nL162:   aload 4 \nL164:   invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL169:   checkcast java/lang/String \nL172:   astore 5 \nL174:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL177:   new java/lang/StringBuilder \nL180:   dup \nL181:   invokespecial Method java/lang/StringBuilder <init> ()V \nL184:   ldc 'Course ' \nL186:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL189:   aload 5 \nL191:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL194:   ldc ':' \nL196:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL199:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL202:   invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL205:   aload_1 \nL206:   aload 5 \nL208:   invokevirtual Method java/util/HashMap get (Ljava/lang/Object;)Ljava/lang/Object; \nL211:   checkcast java/util/ArrayList \nL214:   astore 6 \nL216:   aload 6 \nL218:   aload 6 \nL220:   invokevirtual Method java/util/ArrayList size ()I \nL223:   anewarray Student \nL226:   invokevirtual Method java/util/ArrayList toArray ([Ljava/lang/Object;)[Ljava/lang/Object; \nL229:   checkcast [LStudent; \nL232:   astore 7 \nL234:   aload 7 \nL236:   invokestatic Method java/util/Arrays sort ([Ljava/lang/Object;)V \nL239:   aload 7 \nL241:   astore 8 \nL243:   aload 8 \nL245:   arraylength \nL246:   istore 9 \nL248:   iconst_0 \nL249:   istore 10 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object java/util/HashMap Object java/util/Scanner Object java/util/Set Object java/util/Iterator Object java/lang/String Object java/util/ArrayList Object [LStudent; Object [LStudent; Integer Integer \n            stack \n        .end stack \nL251:   iload 10 \nL253:   iload 9 \nL255:   if_icmpge L289 \nL258:   aload 8 \nL260:   iload 10 \nL262:   aaload \nL263:   astore 11 \nL265:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL268:   ldc '\\t%s\\n' \nL270:   iconst_1 \nL271:   anewarray java/lang/Object \nL274:   dup \nL275:   iconst_0 \nL276:   aload 11 \nL278:   aastore \nL279:   invokevirtual Method java/io/PrintStream printf (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; \nL282:   pop \nL283:   iinc 10 1 \nL286:   goto L251 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object java/util/HashMap Object java/util/Scanner Object java/util/Set Object java/util/Iterator \n            stack \n        .end stack \nL289:   goto L152 \n\n        .stack chop 1 \nL292:   return \nL293:   \n        .linenumbertable \n            L0 39 \n            L8 41 \n            L27 45 \n            L34 46 \n            L39 47 \n            L47 48 \n            L53 49 \n            L59 50 \n            L65 51 \n            L76 53 \n            L81 54 \n            L90 55 \n            L99 58 \n            L112 59 \n            L120 60 \n            L123 62 \n            L127 63 \n            L130 62 \n            L136 63 \n            L139 65 \n            L144 67 \n            L174 68 \n            L205 69 \n            L216 70 \n            L220 71 \n            L226 70 \n            L234 72 \n            L239 74 \n            L265 75 \n            L283 74 \n            L289 77 \n            L292 78 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/FileNotFoundException \n.end method \n\n.method public bridge synthetic compareTo : (Ljava/lang/Object;)I \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     checkcast Student \nL5:     invokevirtual Method Student compareTo (LStudent;)I \nL8:     ireturn \nL9:     \n        .linenumbertable \n            L0 7 \n        .end linenumbertable \n    .end code \n.end method \n.signature Ljava/lang/Object;Ljava/lang/Comparable<LStudent;>; \n.sourcefile 'Student.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 08:31:21 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.io.FileNotFoundException;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Student_ESTest extends Student_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String[] stringArray0 = new String[0];\n      try { \n        Student.main(stringArray0);\n        fail(\"Expecting exception: FileNotFoundException\");\n      \n      } catch(FileNotFoundException e) {\n         //\n         // out/production/Student/tutorials/othersingleexamples/students.txt (No such file or directory)\n         //\n         verifyException(\"java.io.FileInputStream\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Student student0 = new Student(\"\", \"o2D1]*12D<bca\\\"\");\n      Student student1 = new Student(\"\", \"\");\n      int int0 = student0.compareTo(student1);\n      assertEquals(14, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Student student0 = new Student(\"\", \"\");\n      int int0 = student0.compareTo(student0);\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Student student0 = new Student(\"|\", \"|\");\n      Student student1 = new Student(\"| |\", \"| |\");\n      int int0 = student0.compareTo(student1);\n      assertEquals((-2), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Student student0 = new Student(\"|\", \"|\");\n      String string0 = student0.getName();\n      assertEquals(\"| |\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Student student0 = new Student(\"\", \"o2D1]*12D<bca\\\"\");\n      String string0 = student0.toString();\n      assertEquals(\" o2D1]*12D<bca\\\"\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 08:31:21 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Student_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Student\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpgg5wkmnp\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Student_ESTest_scaffolding.class.getClassLoader() ,\n      \"Student\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Student_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Student\"\n    );\n  }\n}\n", "class_idx": 3}
{"class_name": "Book", "java_source": "import java.math.BigDecimal;\n\n/** Created by jarec on 01.02.16. */\npublic class Book {\n\n  private String author;\n  private String name;\n  private BigDecimal price;\n\n  public String getAuthor() {\n    return author;\n  }\n\n  public void setAuthor(String author) {\n    this.author = author;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public BigDecimal getPrice() {\n    return price;\n  }\n\n  public void setPrice(BigDecimal price) {\n    this.price = price;\n  }\n\n  @Override\n  public String toString() {\n    return \"Book{\"\n        + \"author='\"\n        + author\n        + '\\''\n        + \", name='\"\n        + name\n        + '\\''\n        + \", price=\"\n        + price\n        + '}';\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Book \n.super java/lang/Object \n.field private author Ljava/lang/String; \n.field private name Ljava/lang/String; \n.field private price Ljava/math/BigDecimal; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getAuthor : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Book author Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 15 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setAuthor : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Book author Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 19 \n            L5 20 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Book name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Book name Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 27 \n            L5 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPrice : ()Ljava/math/BigDecimal; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Book price Ljava/math/BigDecimal; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 31 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPrice : (Ljava/math/BigDecimal;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Book price Ljava/math/BigDecimal; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 35 \n            L5 36 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     ldc \"Book{author='\" \nL9:     invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL12:    aload_0 \nL13:    getfield Field Book author Ljava/lang/String; \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 39 \nL21:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL24:    ldc \", name='\" \nL26:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL29:    aload_0 \nL30:    getfield Field Book name Ljava/lang/String; \nL33:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL36:    bipush 39 \nL38:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL41:    ldc ', price=' \nL43:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL46:    aload_0 \nL47:    getfield Field Book price Ljava/math/BigDecimal; \nL50:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/Object;)Ljava/lang/StringBuilder; \nL53:    bipush 125 \nL55:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL58:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL61:    areturn \nL62:    \n        .linenumbertable \n            L0 40 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Book.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 08:20:57 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Book_ESTest extends Book_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      Book book0 = new Book();\n      BigDecimal bigDecimal0 = new BigDecimal(47428.60995296697);\n      book0.setPrice(bigDecimal0);\n      BigDecimal bigDecimal1 = book0.getPrice();\n      assertEquals((short) (-18108), bigDecimal1.shortValue());\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      Book book0 = new Book();\n      BigInteger bigInteger0 = BigInteger.ZERO;\n      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);\n      book0.setPrice(bigDecimal0);\n      BigDecimal bigDecimal1 = book0.getPrice();\n      assertSame(bigDecimal1, bigDecimal0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      Book book0 = new Book();\n      BigDecimal bigDecimal0 = BigDecimal.ONE;\n      book0.setPrice(bigDecimal0);\n      BigDecimal bigDecimal1 = book0.getPrice();\n      assertEquals((short)1, bigDecimal1.shortValue());\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      Book book0 = new Book();\n      BigDecimal bigDecimal0 = new BigDecimal(14988L);\n      book0.setPrice(bigDecimal0);\n      BigDecimal bigDecimal1 = book0.getPrice();\n      assertSame(bigDecimal1, bigDecimal0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      Book book0 = new Book();\n      book0.setName(\">y])U)K2-O*2k\");\n      String string0 = book0.getName();\n      assertEquals(\">y])U)K2-O*2k\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      Book book0 = new Book();\n      book0.setName(\"\");\n      String string0 = book0.getName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      Book book0 = new Book();\n      book0.setAuthor(\"l,B#$C*PuXyY-RrGe<\");\n      String string0 = book0.getAuthor();\n      assertEquals(\"l,B#$C*PuXyY-RrGe<\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Book book0 = new Book();\n      book0.setAuthor(\"\");\n      String string0 = book0.getAuthor();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      Book book0 = new Book();\n      String string0 = book0.getName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      Book book0 = new Book();\n      BigDecimal bigDecimal0 = book0.getPrice();\n      assertNull(bigDecimal0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      Book book0 = new Book();\n      String string0 = book0.toString();\n      assertEquals(\"Book{author='null', name='null', price=null}\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Book book0 = new Book();\n      String string0 = book0.getAuthor();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 08:20:57 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Book_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Book\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp5_txtoa4\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Book_ESTest_scaffolding.class.getClassLoader() ,\n      \"Book\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Book_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Book\"\n    );\n  }\n}\n", "class_idx": 4}
{"class_name": "ProductVersion", "java_source": "public class ProductVersion {\n  private String versionString = null;\n  /* A String representation of a BSON ObjectId */\n  private String id = null;\n  private String productName = null;\n\n  public String getVersionString() {\n    return versionString;\n  }\n\n  public void setVersionString(String versionString) {\n    this.versionString = versionString;\n  }\n\n  public String getId() {\n    return id;\n  }\n\n  public void setId(String id) {\n    this.id = id;\n  }\n\n  public String getProductName() {\n    return productName;\n  }\n\n  public void setProductName(String productName) {\n    this.productName = productName;\n  }\n\n  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"class ProductVersion {\\n\");\n    sb.append(\"  versionString: \").append(versionString).append(\"\\n\");\n    sb.append(\"  id: \").append(id).append(\"\\n\");\n    sb.append(\"  productName: \").append(productName).append(\"\\n\");\n    sb.append(\"}\\n\");\n    return sb.toString();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ProductVersion \n.super java/lang/Object \n.field private versionString Ljava/lang/String; \n.field private id Ljava/lang/String; \n.field private productName Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aconst_null \nL6:     putfield Field ProductVersion versionString Ljava/lang/String; \nL9:     aload_0 \nL10:    aconst_null \nL11:    putfield Field ProductVersion id Ljava/lang/String; \nL14:    aload_0 \nL15:    aconst_null \nL16:    putfield Field ProductVersion productName Ljava/lang/String; \nL19:    return \nL20:    \n        .linenumbertable \n            L0 3 \n            L4 4 \n            L9 6 \n            L14 7 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getVersionString : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ProductVersion versionString Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 9 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setVersionString : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ProductVersion versionString Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 12 \n            L5 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getId : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ProductVersion id Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 16 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setId : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ProductVersion id Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 19 \n            L5 20 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProductName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ProductVersion productName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProductName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ProductVersion productName Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 26 \n            L5 27 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 2 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     astore_1 \nL8:     aload_1 \nL9:     ldc 'class ProductVersion {\\n' \nL11:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL14:    pop \nL15:    aload_1 \nL16:    ldc '  versionString: ' \nL18:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL21:    aload_0 \nL22:    getfield Field ProductVersion versionString Ljava/lang/String; \nL25:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL28:    ldc '\\n' \nL30:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL33:    pop \nL34:    aload_1 \nL35:    ldc '  id: ' \nL37:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL40:    aload_0 \nL41:    getfield Field ProductVersion id Ljava/lang/String; \nL44:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL47:    ldc '\\n' \nL49:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL52:    pop \nL53:    aload_1 \nL54:    ldc '  productName: ' \nL56:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL59:    aload_0 \nL60:    getfield Field ProductVersion productName Ljava/lang/String; \nL63:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL66:    ldc '\\n' \nL68:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL71:    pop \nL72:    aload_1 \nL73:    ldc '}\\n' \nL75:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL78:    pop \nL79:    aload_1 \nL80:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL83:    areturn \nL84:    \n        .linenumbertable \n            L0 31 \n            L8 32 \n            L15 33 \n            L34 34 \n            L53 35 \n            L72 36 \n            L79 37 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ProductVersion.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 20:54:06 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ProductVersion_ESTest extends ProductVersion_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ProductVersion productVersion0 = new ProductVersion();\n      productVersion0.setVersionString(\"\");\n      String string0 = productVersion0.getVersionString();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      ProductVersion productVersion0 = new ProductVersion();\n      productVersion0.setProductName(\"\");\n      String string0 = productVersion0.getProductName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      ProductVersion productVersion0 = new ProductVersion();\n      productVersion0.setId(\"\");\n      String string0 = productVersion0.getId();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      ProductVersion productVersion0 = new ProductVersion();\n      String string0 = productVersion0.getVersionString();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      ProductVersion productVersion0 = new ProductVersion();\n      productVersion0.setId(\"v_* n/'+&wSr\");\n      String string0 = productVersion0.getId();\n      assertEquals(\"v_* n/'+&wSr\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      ProductVersion productVersion0 = new ProductVersion();\n      productVersion0.setVersionString(\"v_* n/'+&wSr\");\n      String string0 = productVersion0.getVersionString();\n      assertEquals(\"v_* n/'+&wSr\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      ProductVersion productVersion0 = new ProductVersion();\n      String string0 = productVersion0.getProductName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      ProductVersion productVersion0 = new ProductVersion();\n      String string0 = productVersion0.getId();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      ProductVersion productVersion0 = new ProductVersion();\n      String string0 = productVersion0.toString();\n      assertEquals(\"class ProductVersion {\\n  versionString: null\\n  id: null\\n  productName: null\\n}\\n\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test9()  throws Throwable  {\n      ProductVersion productVersion0 = new ProductVersion();\n      productVersion0.setProductName(\"v_* n/'+&wSr\");\n      String string0 = productVersion0.getProductName();\n      assertEquals(\"v_* n/'+&wSr\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 20:54:06 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ProductVersion_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ProductVersion\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpqs7czf3c\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ProductVersion_ESTest_scaffolding.class.getClassLoader() ,\n      \"ProductVersion\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ProductVersion_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ProductVersion\"\n    );\n  }\n}\n", "class_idx": 5}
{"class_name": "ParserConfig", "java_source": "/*\n * Copyright 1999-2017 Alibaba Group.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npublic class ParserConfig {\n  public void setSafeMode(boolean safeMode) {}\n}\n", "jasm_code": ".version 52 0 \n.class public super ParserConfig \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 18 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setSafeMode : (Z)V \n    .code stack 0 locals 2 \nL0:     return \nL1:     \n        .linenumbertable \n            L0 19 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ParserConfig.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 04:08:29 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ParserConfig_ESTest extends ParserConfig_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ParserConfig parserConfig0 = new ParserConfig();\n      parserConfig0.setSafeMode(true);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 04:08:29 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ParserConfig_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ParserConfig\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpqs5xbbxa\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ParserConfig_ESTest_scaffolding.class.getClassLoader() ,\n      \"ParserConfig\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ParserConfig_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ParserConfig\"\n    );\n  }\n}\n", "class_idx": 6}
{"class_name": "User", "java_source": "import static java.util.Objects.requireNonNull;\n\n/**\n * An entity that represents a user.\n *\n * @author Miguel Reboiro Jato\n */\npublic class User {\n  private String login;\n  private String password;\n  private String role;\n\n  // Constructor needed for the JSON conversion\n  User() {}\n\n  /**\n   * Constructs a new instance of {@link User}.\n   *\n   * @param login login that identifies the user in the system.\n   * @param password password of the user encoded using SHA-256 and with the \"salt\" prefix added.\n   */\n  public User(String login, String password, String role) {\n    this.setLogin(login);\n    this.setPassword(password);\n    this.setRole(role);\n  }\n\n  /**\n   * Returns the login of the user.\n   *\n   * @return the login of the user.\n   */\n  public String getLogin() {\n    return login;\n  }\n\n  /**\n   * Sets the login of the user.\n   *\n   * @param login the login that identifies the user in the system.\n   */\n  public void setLogin(String login) {\n    this.login = requireNonNull(login, \"Login can't be null\");\n  }\n\n  /**\n   * Returns the password of the user.\n   *\n   * @return the password of the user.\n   */\n  public String getPassword() {\n    return password;\n  }\n\n  /**\n   * Sets the users password.\n   *\n   * @param password the password of the user encoded using SHA-256 and with the \"salt\" prefix\n   *     added.\n   */\n  public void setPassword(String password) {\n    requireNonNull(password, \"Password can't be null\");\n    if (!password.matches(\"[a-zA-Z0-9]{64}\"))\n      throw new IllegalArgumentException(\"Password must be a valid SHA-256\");\n\n    this.password = password;\n  }\n\n  /**\n   * Returns the role of the user.\n   *\n   * @return the role of the user.\n   */\n  public String getRole() {\n    return role;\n  }\n\n  /**\n   * Sets the role of the user.\n   *\n   * @param role the role of the user\n   */\n  public void setRole(String role) {\n    this.role = requireNonNull(role, \"Role can't be null\");\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super User \n.super java/lang/Object \n.field private login Ljava/lang/String; \n.field private password Ljava/lang/String; \n.field private role Ljava/lang/String; \n\n.method <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 16 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     invokevirtual Method User setLogin (Ljava/lang/String;)V \nL9:     aload_0 \nL10:    aload_2 \nL11:    invokevirtual Method User setPassword (Ljava/lang/String;)V \nL14:    aload_0 \nL15:    aload_3 \nL16:    invokevirtual Method User setRole (Ljava/lang/String;)V \nL19:    return \nL20:    \n        .linenumbertable \n            L0 25 \n            L4 26 \n            L9 27 \n            L14 28 \n            L19 29 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getLogin : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field User login Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 37 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setLogin : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     ldc \"Login can't be null\" \nL4:     invokestatic Method java/util/Objects requireNonNull (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; \nL7:     checkcast java/lang/String \nL10:    putfield Field User login Ljava/lang/String; \nL13:    return \nL14:    \n        .linenumbertable \n            L0 46 \n            L13 47 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPassword : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field User password Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 55 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPassword : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     aload_1 \nL1:     ldc \"Password can't be null\" \nL3:     invokestatic Method java/util/Objects requireNonNull (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; \nL6:     pop \nL7:     aload_1 \nL8:     ldc '[a-zA-Z0-9]{64}' \nL10:    invokevirtual Method java/lang/String matches (Ljava/lang/String;)Z \nL13:    ifne L26 \nL16:    new java/lang/IllegalArgumentException \nL19:    dup \nL20:    ldc 'Password must be a valid SHA-256' \nL22:    invokespecial Method java/lang/IllegalArgumentException <init> (Ljava/lang/String;)V \nL25:    athrow \n\n        .stack same \nL26:    aload_0 \nL27:    aload_1 \nL28:    putfield Field User password Ljava/lang/String; \nL31:    return \nL32:    \n        .linenumbertable \n            L0 64 \n            L7 65 \n            L16 66 \n            L26 68 \n            L31 69 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getRole : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field User role Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 77 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRole : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     ldc \"Role can't be null\" \nL4:     invokestatic Method java/util/Objects requireNonNull (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; \nL7:     checkcast java/lang/String \nL10:    putfield Field User role Ljava/lang/String; \nL13:    return \nL14:    \n        .linenumbertable \n            L0 86 \n            L13 87 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'User.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 18:21:16 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class User_ESTest extends User_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      User user0 = new User();\n      user0.setRole(\"Password must be a valid SHA-256\");\n      user0.getRole();\n      user0.setLogin(\"Password can't be null\");\n      user0.getLogin();\n      // Undeclared exception!\n      try { \n        user0.setPassword(\"Password can't be null\");\n        fail(\"Expecting exception: IllegalArgumentException\");\n      \n      } catch(IllegalArgumentException e) {\n         //\n         // Password must be a valid SHA-256\n         //\n         verifyException(\"User\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      User user0 = new User();\n      user0.setRole(\"Password can't be null\");\n      String string0 = user0.getRole();\n      assertEquals(\"Password can't be null\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      User user0 = new User();\n      user0.setRole(\"\");\n      String string0 = user0.getRole();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      User user0 = new User();\n      String string0 = user0.getPassword();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      User user0 = new User();\n      user0.setLogin(\"Password can't be null\");\n      String string0 = user0.getLogin();\n      assertEquals(\"Password can't be null\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      User user0 = new User();\n      user0.setLogin(\"\");\n      String string0 = user0.getLogin();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      User user0 = new User(\"0000000000000000000000000000000000000000000000000000000000000000\", \"0000000000000000000000000000000000000000000000000000000000000000\", \"0000000000000000000000000000000000000000000000000000000000000000\");\n      user0.setPassword(\"0000000000000000000000000000000000000000000000000000000000000000\");\n      assertEquals(\"0000000000000000000000000000000000000000000000000000000000000000\", user0.getPassword());\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      User user0 = new User();\n      String string0 = user0.getLogin();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      User user0 = new User();\n      String string0 = user0.getRole();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test9()  throws Throwable  {\n      User user0 = new User(\"\", \"0000000000000000000000000000000000000000000000000000000000000000\", \"\");\n      String string0 = user0.getPassword();\n      assertEquals(\"0000000000000000000000000000000000000000000000000000000000000000\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 18:21:16 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class User_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"User\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpz3_3v35x\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(User_ESTest_scaffolding.class.getClassLoader() ,\n      \"User\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(User_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"User\"\n    );\n  }\n}\n", "class_idx": 7}
{"class_name": "UserAccount", "java_source": "/** */\nimport java.util.Date;\n\n/**\n * User Account Class\n *\n * @author MADHAVAN001\n */\npublic class UserAccount {\n  String id;\n  String email;\n  String password;\n  Date date;\n  String userName;\n\n  /**\n   * @param email\n   * @param password\n   * @param date\n   * @param userName\n   */\n  public UserAccount(String email, String password, Date date, String userName) {\n    this.email = email;\n    this.password = password;\n    this.date = date;\n    this.userName = userName;\n  }\n\n  /*\n   * (non-Javadoc)\n   *\n   * @see java.lang.Object#hashCode()\n   */\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((email == null) ? 0 : email.hashCode());\n    return result;\n  }\n\n  /*\n   * (non-Javadoc)\n   *\n   * @see java.lang.Object#equals(java.lang.Object)\n   */\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (obj == null) return false;\n    if (!(obj instanceof UserAccount)) return false;\n    UserAccount other = (UserAccount) obj;\n    if (email == null) {\n      if (other.email != null) return false;\n    } else if (!email.equals(other.email)) return false;\n    return true;\n  }\n\n  /**\n   * @return the id\n   */\n  public String getId() {\n    return id;\n  }\n\n  /**\n   * @param id the id to set\n   */\n  public void setId(String id) {\n    this.id = id;\n  }\n\n  /**\n   * @return the email\n   */\n  public String getEmail() {\n    return email;\n  }\n\n  /**\n   * @param email the email to set\n   */\n  public void setEmail(String email) {\n    this.email = email;\n  }\n\n  /**\n   * @return the password\n   */\n  public String getPassword() {\n    return password;\n  }\n\n  /**\n   * @param password the password to set\n   */\n  public void setPassword(String password) {\n    this.password = password;\n  }\n\n  /**\n   * @return the date\n   */\n  public Date getDate() {\n    return date;\n  }\n\n  /**\n   * @param date the date to set\n   */\n  public void setDate(Date date) {\n    this.date = date;\n  }\n\n  /**\n   * @return the userName\n   */\n  public String getUserName() {\n    return userName;\n  }\n\n  /**\n   * @param userName the userName to set\n   */\n  public void setUserName(String userName) {\n    this.userName = userName;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super UserAccount \n.super java/lang/Object \n.field id Ljava/lang/String; \n.field email Ljava/lang/String; \n.field password Ljava/lang/String; \n.field date Ljava/util/Date; \n.field userName Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V \n    .code stack 2 locals 5 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field UserAccount email Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field UserAccount password Ljava/lang/String; \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field UserAccount date Ljava/util/Date; \nL19:    aload_0 \nL20:    aload 4 \nL22:    putfield Field UserAccount userName Ljava/lang/String; \nL25:    return \nL26:    \n        .linenumbertable \n            L0 28 \n            L4 29 \n            L9 30 \n            L14 31 \n            L19 32 \n            L25 33 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public hashCode : ()I \n    .code stack 2 locals 3 \nL0:     iconst_1 \nL1:     istore_2 \nL2:     bipush 31 \nL4:     iload_2 \nL5:     imul \nL6:     aload_0 \nL7:     getfield Field UserAccount email Ljava/lang/String; \nL10:    ifnonnull L17 \nL13:    iconst_0 \nL14:    goto L24 \n\n        .stack full \n            locals Object UserAccount Top Integer \n            stack Integer \n        .end stack \nL17:    aload_0 \nL18:    getfield Field UserAccount email Ljava/lang/String; \nL21:    invokevirtual Method java/lang/String hashCode ()I \n\n        .stack full \n            locals Object UserAccount Top Integer \n            stack Integer Integer \n        .end stack \nL24:    iadd \nL25:    istore_2 \nL26:    iload_2 \nL27:    ireturn \nL28:    \n        .linenumbertable \n            L0 43 \n            L2 44 \n            L26 45 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public equals : (Ljava/lang/Object;)Z \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     if_acmpne L7 \nL5:     iconst_1 \nL6:     ireturn \n\n        .stack same \nL7:     aload_1 \nL8:     ifnonnull L13 \nL11:    iconst_0 \nL12:    ireturn \n\n        .stack same \nL13:    aload_1 \nL14:    instanceof UserAccount \nL17:    ifne L22 \nL20:    iconst_0 \nL21:    ireturn \n\n        .stack same \nL22:    aload_1 \nL23:    checkcast UserAccount \nL26:    astore_2 \nL27:    aload_0 \nL28:    getfield Field UserAccount email Ljava/lang/String; \nL31:    ifnonnull L43 \nL34:    aload_2 \nL35:    getfield Field UserAccount email Ljava/lang/String; \nL38:    ifnull L59 \nL41:    iconst_0 \nL42:    ireturn \n\n        .stack append Object UserAccount \nL43:    aload_0 \nL44:    getfield Field UserAccount email Ljava/lang/String; \nL47:    aload_2 \nL48:    getfield Field UserAccount email Ljava/lang/String; \nL51:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL54:    ifne L59 \nL57:    iconst_0 \nL58:    ireturn \n\n        .stack same \nL59:    iconst_1 \nL60:    ireturn \nL61:    \n        .linenumbertable \n            L0 55 \n            L5 56 \n            L7 57 \n            L11 58 \n            L13 59 \n            L20 60 \n            L22 61 \n            L27 62 \n            L34 63 \n            L41 64 \n            L43 65 \n            L57 66 \n            L59 67 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getId : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field UserAccount id Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 74 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setId : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field UserAccount id Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 82 \n            L5 83 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getEmail : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field UserAccount email Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 89 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setEmail : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field UserAccount email Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 97 \n            L5 98 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPassword : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field UserAccount password Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 104 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPassword : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field UserAccount password Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 112 \n            L5 113 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getDate : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field UserAccount date Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 119 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setDate : (Ljava/util/Date;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field UserAccount date Ljava/util/Date; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 127 \n            L5 128 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getUserName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field UserAccount userName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 134 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setUserName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field UserAccount userName Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 142 \n            L5 143 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'UserAccount.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 06:22:59 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.time.Instant;\nimport java.util.Date;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.time.MockInstant;\nimport org.evosuite.runtime.mock.java.util.MockDate;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class UserAccount_ESTest extends UserAccount_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      UserAccount userAccount0 = new UserAccount((String) null, (String) null, (Date) null, \"~Y8%K^zBR9ba\");\n      userAccount0.email = \">~caAz)7k8-g\";\n      userAccount0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      UserAccount userAccount0 = new UserAccount(\"\", \"\", (Date) null, \"\");\n      userAccount0.setUserName(\"}G`b]RI\");\n      String string0 = userAccount0.getUserName();\n      assertEquals(\"}G`b]RI\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      UserAccount userAccount0 = new UserAccount(\"\", \"9g-D@ha-\", (Date) null, \"9g-D@ha-\");\n      userAccount0.setUserName(\"\");\n      String string0 = userAccount0.getUserName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      UserAccount userAccount0 = new UserAccount(\">~caAz)7k8-g\", \"~Y8%K^zBR9ba\", (Date) null, \"FEtLn\");\n      String string0 = userAccount0.getPassword();\n      assertEquals(\"~Y8%K^zBR9ba\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      MockDate mockDate0 = new MockDate();\n      UserAccount userAccount0 = new UserAccount(\"\", \"\", mockDate0, \"\");\n      String string0 = userAccount0.getPassword();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      MockDate mockDate0 = new MockDate((-74336), (-74336), (-74336));\n      UserAccount userAccount0 = new UserAccount((String) null, (String) null, mockDate0, \"IY(VkYbCC_BAN@Z\");\n      userAccount0.id = \"K5T+8*z8T|9\";\n      String string0 = userAccount0.getId();\n      assertEquals(\"K5T+8*z8T|9\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      UserAccount userAccount0 = new UserAccount(\"UserAccount\", \"`VBE42v;J\", (Date) null, \"UserAccount\");\n      userAccount0.setId(\"\");\n      String string0 = userAccount0.getId();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      UserAccount userAccount0 = new UserAccount((String) null, (String) null, (Date) null, \"~Y8%K^zBR9ba\");\n      String string0 = userAccount0.getEmail();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      UserAccount userAccount0 = new UserAccount((String) null, (String) null, (Date) null, \"~Y8%K^zBR9ba\");\n      userAccount0.email = \">~caAz)7k8-g\";\n      String string0 = userAccount0.getEmail();\n      assertEquals(\">~caAz)7k8-g\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      UserAccount userAccount0 = new UserAccount((String) null, (String) null, (Date) null, \"~Y8%K^zBR9ba\");\n      Date date0 = userAccount0.getDate();\n      assertNull(date0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      MockDate mockDate0 = new MockDate(16790L);\n      UserAccount userAccount0 = new UserAccount(\"s_-VtO=/\", \"\", mockDate0, \"s_-VtO=/\");\n      UserAccount userAccount1 = new UserAccount(\"\", \"\\\"1\", mockDate0, \"\");\n      boolean boolean0 = userAccount0.equals(userAccount1);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Instant instant0 = MockInstant.ofEpochMilli(15525L);\n      Date date0 = Date.from(instant0);\n      UserAccount userAccount0 = new UserAccount(\"Ed\", \"Ed\", date0, \"+krS,78J]:!$m?G4@w\");\n      userAccount0.setEmail((String) null);\n      UserAccount userAccount1 = new UserAccount(\"x\\\"+R=\", (String) null, date0, \"FaMEL@tT\");\n      boolean boolean0 = userAccount0.equals(userAccount1);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      UserAccount userAccount0 = new UserAccount((String) null, (String) null, (Date) null, \"~Y8%K^zBR9ba\");\n      userAccount0.email = \">~caAz)7k8-g\";\n      UserAccount userAccount1 = new UserAccount(\">~caAz)7k8-g\", \"~Y8%K^zBR9ba\", (Date) null, \"FEtLn\");\n      boolean boolean0 = userAccount0.equals(userAccount1);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      UserAccount userAccount0 = new UserAccount((String) null, (String) null, (Date) null, \"~Y8%K^zBR9ba\");\n      UserAccount userAccount1 = new UserAccount((String) null, \"~Y8%K^zBR9ba\", (Date) null, \"buQ|bx\");\n      boolean boolean0 = userAccount0.equals(userAccount1);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      UserAccount userAccount0 = new UserAccount((String) null, (String) null, (Date) null, \"~Y8%K^zBR9ba\");\n      boolean boolean0 = userAccount0.equals((Object) null);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      MockDate mockDate0 = new MockDate();\n      UserAccount userAccount0 = new UserAccount(\"\", \"\", mockDate0, \"\");\n      boolean boolean0 = userAccount0.equals(userAccount0);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      MockDate mockDate0 = new MockDate();\n      UserAccount userAccount0 = new UserAccount(\"\", \"\", mockDate0, \"\");\n      Object object0 = new Object();\n      boolean boolean0 = userAccount0.equals(object0);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      UserAccount userAccount0 = new UserAccount((String) null, (String) null, (Date) null, \"~Y8%K^zBR9ba\");\n      userAccount0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      UserAccount userAccount0 = new UserAccount(\"UserAccount\", \"`VBE42v;J\", (Date) null, \"UserAccount\");\n      String string0 = userAccount0.getId();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      MockDate mockDate0 = new MockDate(44883L);\n      UserAccount userAccount0 = new UserAccount((String) null, (String) null, mockDate0, (String) null);\n      String string0 = userAccount0.getUserName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      MockDate mockDate0 = new MockDate();\n      UserAccount userAccount0 = new UserAccount(\"\", \"\", mockDate0, \"\");\n      userAccount0.setPassword(\"\");\n      assertNull(userAccount0.getId());\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      UserAccount userAccount0 = new UserAccount((String) null, (String) null, (Date) null, \"~Y8%K^zBR9ba\");\n      String string0 = userAccount0.getPassword();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test22()  throws Throwable  {\n      UserAccount userAccount0 = new UserAccount((String) null, (String) null, (Date) null, \"~Y8%K^zBR9ba\");\n      userAccount0.setDate((Date) null);\n      assertNull(userAccount0.getPassword());\n  }\n\n  @Test(timeout = 4000)\n  public void test23()  throws Throwable  {\n      MockDate mockDate0 = new MockDate();\n      UserAccount userAccount0 = new UserAccount(\"\", \"\", mockDate0, \"\");\n      String string0 = userAccount0.getEmail();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test24()  throws Throwable  {\n      MockDate mockDate0 = new MockDate();\n      UserAccount userAccount0 = new UserAccount(\"\", \"\", mockDate0, \"\");\n      Date date0 = userAccount0.getDate();\n      assertEquals(\"Fri Feb 14 20:21:21 GMT 2014\", date0.toString());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 06:22:59 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class UserAccount_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"UserAccount\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpkjesoj3r\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(UserAccount_ESTest_scaffolding.class.getClassLoader() ,\n      \"UserAccount\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(UserAccount_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"UserAccount\"\n    );\n  }\n}\n", "class_idx": 8}
{"class_name": "FileSPFilter", "java_source": "/**\n * Copyright (C) 2000 - 2013 Silverpeas\n *\n * <p>This program is free software: you can redistribute it and/or modify it under the terms of the\n * GNU Affero General Public License as published by the Free Software Foundation, either version 3\n * of the License, or (at your option) any later version.\n *\n * <p>As a special exception to the terms and conditions of version 3.0 of the GPL, you may\n * redistribute this Program in connection with Free/Libre Open Source Software (\"FLOSS\")\n * applications as described in Silverpeas's FLOSS exception. You should have received a copy of the\n * text describing the FLOSS exception, and it is also available here:\n * \"http://www.silverpeas.org/docs/core/legal/floss_exception.html\"\n *\n * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * <p>You should have received a copy of the GNU Affero General Public License along with this\n * program. If not, see <http://www.gnu.org/licenses/>.\n */\nimport java.io.File;\nimport java.io.FileFilter;\n\npublic class FileSPFilter implements FileFilter {\n\n  private static FileSPFilter INSTANCE = null;\n\n  private FileSPFilter() {}\n\n  public static synchronized FileSPFilter getInstance() {\n    if (INSTANCE == null) {\n      INSTANCE = new FileSPFilter();\n    }\n    return INSTANCE;\n  }\n\n  @Override\n  public boolean accept(File file) {\n    return file != null && file.isFile();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super FileSPFilter \n.super java/lang/Object \n.implements java/io/FileFilter \n.field private static INSTANCE LFileSPFilter; \n\n.method private <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 34 \n            L4 35 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static synchronized getInstance : ()LFileSPFilter; \n    .code stack 2 locals 0 \nL0:     getstatic Field FileSPFilter INSTANCE LFileSPFilter; \nL3:     ifnonnull L16 \nL6:     new FileSPFilter \nL9:     dup \nL10:    invokespecial Method FileSPFilter <init> ()V \nL13:    putstatic Field FileSPFilter INSTANCE LFileSPFilter; \n\n        .stack same \nL16:    getstatic Field FileSPFilter INSTANCE LFileSPFilter; \nL19:    areturn \nL20:    \n        .linenumbertable \n            L0 38 \n            L6 39 \n            L16 41 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public accept : (Ljava/io/File;)Z \n    .code stack 1 locals 2 \nL0:     aload_1 \nL1:     ifnull L15 \nL4:     aload_1 \nL5:     invokevirtual Method java/io/File isFile ()Z \nL8:     ifeq L15 \nL11:    iconst_1 \nL12:    goto L16 \n\n        .stack same \nL15:    iconst_0 \n\n        .stack stack_1 Integer \nL16:    ireturn \nL17:    \n        .linenumbertable \n            L0 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 1 locals 0 \nL0:     aconst_null \nL1:     putstatic Field FileSPFilter INSTANCE LFileSPFilter; \nL4:     return \nL5:     \n        .linenumbertable \n            L0 32 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'FileSPFilter.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 15:14:22 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.io.File;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.io.MockFile;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class FileSPFilter_ESTest extends FileSPFilter_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      FileSPFilter fileSPFilter0 = FileSPFilter.getInstance();\n      MockFile mockFile0 = new MockFile(\"HUJh&D2uH\u007f&E^]\");\n      boolean boolean0 = fileSPFilter0.accept(mockFile0);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      FileSPFilter fileSPFilter0 = FileSPFilter.getInstance();\n      MockFile mockFile0 = new MockFile(\"\");\n      boolean boolean0 = fileSPFilter0.accept(mockFile0);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      FileSPFilter fileSPFilter0 = FileSPFilter.getInstance();\n      assertNotNull(fileSPFilter0);\n      \n      boolean boolean0 = fileSPFilter0.accept((File) null);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      FileSPFilter fileSPFilter0 = FileSPFilter.getInstance();\n      FileSPFilter fileSPFilter1 = FileSPFilter.getInstance();\n      assertSame(fileSPFilter1, fileSPFilter0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 15:14:22 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class FileSPFilter_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"FileSPFilter\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpv4he86t2\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FileSPFilter_ESTest_scaffolding.class.getClassLoader() ,\n      \"FileSPFilter\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FileSPFilter_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"FileSPFilter\"\n    );\n  }\n}\n", "class_idx": 9}
{"class_name": "StreamUtil", "java_source": "import java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/** \u529f\u80fd\uff1a\u5904\u7406\u6d41\u7684\u5de5\u5177\u7c7b Created by danke on 2017/3/6. */\npublic class StreamUtil {\n  /**\n   * \u4ece\u8f93\u5165\u6d41\u4e2d\u83b7\u53d6\u5b57\u7b26\u4e32\n   *\n   * @param is\n   * @return\n   * @throws IOException\n   */\n  public static String readStream(InputStream is) throws IOException {\n    // \u5185\u5b58\u8f93\u51fa\u6d41\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    byte[] buffer = new byte[1024];\n    int len = -1;\n    while ((len = is.read(buffer)) != -1) {\n      bos.write(buffer, 0, len);\n    }\n    is.close();\n    bos.close();\n    return bos.toString();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super StreamUtil \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 12 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static readStream : (Ljava/io/InputStream;)Ljava/lang/String; \n    .code stack 4 locals 4 \nL0:     new java/io/ByteArrayOutputStream \nL3:     dup \nL4:     invokespecial Method java/io/ByteArrayOutputStream <init> ()V \nL7:     astore_1 \nL8:     sipush 1024 \nL11:    newarray byte \nL13:    astore_2 \nL14:    iconst_m1 \nL15:    istore_3 \n\n        .stack append Object java/io/ByteArrayOutputStream Object [B Integer \nL16:    aload_0 \nL17:    aload_2 \nL18:    invokevirtual Method java/io/InputStream read ([B)I \nL21:    dup \nL22:    istore_3 \nL23:    iconst_m1 \nL24:    if_icmpeq L37 \nL27:    aload_1 \nL28:    aload_2 \nL29:    iconst_0 \nL30:    iload_3 \nL31:    invokevirtual Method java/io/ByteArrayOutputStream write ([BII)V \nL34:    goto L16 \n\n        .stack same \nL37:    aload_0 \nL38:    invokevirtual Method java/io/InputStream close ()V \nL41:    aload_1 \nL42:    invokevirtual Method java/io/ByteArrayOutputStream close ()V \nL45:    aload_1 \nL46:    invokevirtual Method java/io/ByteArrayOutputStream toString ()Ljava/lang/String; \nL49:    areturn \nL50:    \n        .linenumbertable \n            L0 22 \n            L8 23 \n            L14 24 \n            L16 25 \n            L27 26 \n            L37 28 \n            L41 29 \n            L45 30 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/IOException \n.end method \n.sourcefile 'StreamUtil.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 01:10:29 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.DataInputStream;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class StreamUtil_ESTest extends StreamUtil_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      byte[] byteArray0 = new byte[8];\n      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (-77564));\n      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);\n      String string0 = StreamUtil.readStream(dataInputStream0);\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      byte[] byteArray0 = new byte[7];\n      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n      String string0 = StreamUtil.readStream(byteArrayInputStream0);\n      assertEquals(\"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      StreamUtil streamUtil0 = new StreamUtil();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 01:10:29 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class StreamUtil_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"StreamUtil\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpsr4p4ucg\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StreamUtil_ESTest_scaffolding.class.getClassLoader() ,\n      \"StreamUtil\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StreamUtil_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"StreamUtil\"\n    );\n  }\n}\n", "class_idx": 10}
{"class_name": "AddBinary", "java_source": "/**\n * Given two binary strings, return their sum (also a binary string).\n *\n * <p>For example, a = \"11\" b = \"1\" Return \"100\".\n *\n * @author Joshua Wei\n */\npublic class AddBinary {\n  public String addBinary(String a, String b) {\n    if (a == null && b == null) return null;\n    if (a == null || a.length() == 0) return b;\n    if (b == null || b.length() == 0) return a;\n\n    String c = \"\";\n\n    int x = a.length() - 1;\n    int y = b.length() - 1;\n    int carried = 0;\n\n    while (x >= 0 || y >= 0 || carried > 0) {\n      int sum = carried;\n      if (x >= 0 && y >= 0) {\n        sum += (a.charAt(x) - '0') + (b.charAt(y) - '0');\n      } else if (x >= 0 && y < 0) {\n        sum += a.charAt(x) - '0';\n      } else if (x < 0 && y >= 0) {\n        sum += b.charAt(y) - '0';\n      }\n      c = (sum % 2) + c;\n      carried = sum / 2;\n      x--;\n      y--;\n    }\n\n    return c;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super AddBinary \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public addBinary : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; \n    .code stack 4 locals 8 \nL0:     aload_1 \nL1:     ifnonnull L10 \nL4:     aload_2 \nL5:     ifnonnull L10 \nL8:     aconst_null \nL9:     areturn \n\n        .stack same \nL10:    aload_1 \nL11:    ifnull L21 \nL14:    aload_1 \nL15:    invokevirtual Method java/lang/String length ()I \nL18:    ifne L23 \n\n        .stack same \nL21:    aload_2 \nL22:    areturn \n\n        .stack same \nL23:    aload_2 \nL24:    ifnull L34 \nL27:    aload_2 \nL28:    invokevirtual Method java/lang/String length ()I \nL31:    ifne L36 \n\n        .stack same \nL34:    aload_1 \nL35:    areturn \n\n        .stack same \nL36:    ldc '' \nL38:    astore_3 \nL39:    aload_1 \nL40:    invokevirtual Method java/lang/String length ()I \nL43:    iconst_1 \nL44:    isub \nL45:    istore 4 \nL47:    aload_2 \nL48:    invokevirtual Method java/lang/String length ()I \nL51:    iconst_1 \nL52:    isub \nL53:    istore 5 \nL55:    iconst_0 \nL56:    istore 6 \n\n        .stack full \n            locals Object AddBinary Object java/lang/String Object java/lang/String Object java/lang/String Integer Integer Integer \n            stack \n        .end stack \nL58:    iload 4 \nL60:    ifge L73 \nL63:    iload 5 \nL65:    ifge L73 \nL68:    iload 6 \nL70:    ifle L202 \n\n        .stack same \nL73:    iload 6 \nL75:    istore 7 \nL77:    iload 4 \nL79:    iflt L114 \nL82:    iload 5 \nL84:    iflt L114 \nL87:    iload 7 \nL89:    aload_1 \nL90:    iload 4 \nL92:    invokevirtual Method java/lang/String charAt (I)C \nL95:    bipush 48 \nL97:    isub \nL98:    aload_2 \nL99:    iload 5 \nL101:   invokevirtual Method java/lang/String charAt (I)C \nL104:   bipush 48 \nL106:   isub \nL107:   iadd \nL108:   iadd \nL109:   istore 7 \nL111:   goto L165 \n\n        .stack append Integer \nL114:   iload 4 \nL116:   iflt L141 \nL119:   iload 5 \nL121:   ifge L141 \nL124:   iload 7 \nL126:   aload_1 \nL127:   iload 4 \nL129:   invokevirtual Method java/lang/String charAt (I)C \nL132:   bipush 48 \nL134:   isub \nL135:   iadd \nL136:   istore 7 \nL138:   goto L165 \n\n        .stack same \nL141:   iload 4 \nL143:   ifge L165 \nL146:   iload 5 \nL148:   iflt L165 \nL151:   iload 7 \nL153:   aload_2 \nL154:   iload 5 \nL156:   invokevirtual Method java/lang/String charAt (I)C \nL159:   bipush 48 \nL161:   isub \nL162:   iadd \nL163:   istore 7 \n\n        .stack same \nL165:   new java/lang/StringBuilder \nL168:   dup \nL169:   invokespecial Method java/lang/StringBuilder <init> ()V \nL172:   iload 7 \nL174:   iconst_2 \nL175:   irem \nL176:   invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL179:   aload_3 \nL180:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL183:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL186:   astore_3 \nL187:   iload 7 \nL189:   iconst_2 \nL190:   idiv \nL191:   istore 6 \nL193:   iinc 4 -1 \nL196:   iinc 5 -1 \nL199:   goto L58 \n\n        .stack chop 1 \nL202:   aload_3 \nL203:   areturn \nL204:   \n        .linenumbertable \n            L0 15 \n            L10 16 \n            L23 17 \n            L36 19 \n            L39 21 \n            L47 22 \n            L55 23 \n            L58 25 \n            L73 26 \n            L77 27 \n            L87 28 \n            L114 29 \n            L124 30 \n            L141 31 \n            L151 32 \n            L165 34 \n            L187 35 \n            L193 36 \n            L196 37 \n            L199 38 \n            L202 40 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'AddBinary.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 00:08:20 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class AddBinary_ESTest extends AddBinary_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      AddBinary addBinary0 = new AddBinary();\n      addBinary0.addBinary(\"ZY_g\", \"ZY_g\");\n      addBinary0.addBinary(\"]nVH+\\\"nzfmQ%\", \"]nVH+\\\"nzfmQ%\");\n      String string0 = addBinary0.addBinary(\"]nVH+\\\"nzfmQ%\", \"AddBinary\");\n      assertEquals(\"110000111010001100\", string0);\n      \n      String string1 = addBinary0.addBinary(\"AddBinary\", \"110000111010001100\");\n      assertEquals(\"110100111111011101\", string1);\n      \n      addBinary0.addBinary(\"]nVH+\\\"nzfmQ%\", \"]nVH+\\\"nzfmQ%\");\n      String string2 = addBinary0.addBinary(\"1011001101001110110\", \"10100010010\");\n      assertEquals(\"1011001111110001000\", string2);\n      \n      addBinary0.addBinary(\"]nVH+\\\"nzfmQ%\", \"Z<\");\n      addBinary0.addBinary(\"1011001111110001000\", \"\");\n      addBinary0.addBinary(\"1011001111110001000\", (String) null);\n      addBinary0.addBinary(\"Z<\", (String) null);\n      String string3 = addBinary0.addBinary(\"`)mO\u007fwDUXY<a)_\", (String) null);\n      assertNotNull(string3);\n      \n      addBinary0.addBinary(\"ZY_g\", \"V\");\n      String string4 = addBinary0.addBinary(\"\", \"tGE&|7rf}?2r)\");\n      assertEquals(\"tGE&|7rf}?2r)\", string4);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      AddBinary addBinary0 = new AddBinary();\n      String string0 = addBinary0.addBinary(\"&Qh\", \")]O%<7\");\n      assertEquals(\"1100101101\", string0);\n      \n      String string1 = addBinary0.addBinary(\"1100101101\", (String) null);\n      assertNotNull(string1);\n      \n      String string2 = addBinary0.addBinary((String) null, \"1100101101\");\n      assertNotNull(string2);\n      \n      String string3 = addBinary0.addBinary(\"D'QOvlI!)FCR\", \"\");\n      assertEquals(\"D'QOvlI!)FCR\", string3);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      AddBinary addBinary0 = new AddBinary();\n      addBinary0.addBinary(\"\", \"\");\n      addBinary0.addBinary(\"\", \"\");\n      addBinary0.addBinary((String) null, \"K$\");\n      String string0 = addBinary0.addBinary((String) null, \"\");\n      assertNotNull(string0);\n      \n      String string1 = addBinary0.addBinary(\"\", \"K$\");\n      addBinary0.addBinary(\"\", \"4\\\"L}\");\n      addBinary0.addBinary(\"4\\\"L}\", \"\");\n      String string2 = addBinary0.addBinary(\"K$\", \"Lrr<@uc \");\n      assertEquals(\"10100110010100\", string2);\n      \n      String string3 = addBinary0.addBinary(\"K$\", \"\");\n      assertTrue(string3.equals((Object)string1));\n      \n      addBinary0.addBinary(\"(5)g!#ME!<UR\", \"\");\n      String string4 = addBinary0.addBinary(\"\", \"\");\n      assertFalse(string4.equals((Object)string3));\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      AddBinary addBinary0 = new AddBinary();\n      addBinary0.addBinary(\"\", \"\");\n      addBinary0.addBinary(\"\", \"\");\n      String string0 = addBinary0.addBinary((String) null, \"\");\n      assertNotNull(string0);\n      \n      addBinary0.addBinary(\"\", \"Rb$;o]si^O\");\n      addBinary0.addBinary(\"\", (String) null);\n      addBinary0.addBinary((String) null, (String) null);\n      addBinary0.addBinary(\"\", \"\");\n      addBinary0.addBinary(\"\", (String) null);\n      addBinary0.addBinary(\"\", \"\");\n      String string1 = addBinary0.addBinary(\"Cb^@qQmI>$U.S\", \" g}*~E0\");\n      assertEquals(\"1000000010111110101\", string1);\n      \n      addBinary0.addBinary(\"\", \"\");\n      addBinary0.addBinary(\"\", \"\");\n      addBinary0.addBinary(\"\", \"\");\n      String string2 = addBinary0.addBinary(\"1000000010111110101\", (String) null);\n      assertNotNull(string2);\n      \n      addBinary0.addBinary(\"\", \"\");\n      addBinary0.addBinary(\"\", \"\");\n      String string3 = addBinary0.addBinary(\"\", \"Rb$;o]si^O\");\n      assertEquals(\"Rb$;o]si^O\", string3);\n      \n      String string4 = addBinary0.addBinary(\"AddBinary\", \"1000000010111110101\");\n      assertEquals(\"1000100011101000110\", string4);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 00:08:20 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class AddBinary_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"AddBinary\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpp2rf_gk2\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AddBinary_ESTest_scaffolding.class.getClassLoader() ,\n      \"AddBinary\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AddBinary_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"AddBinary\"\n    );\n  }\n}\n", "class_idx": 11}
{"class_name": "Charsets", "java_source": "/**\n * Copyright (C) 2007 The Guava Authors\n *\n * <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of the License at\n *\n * <p>http://www.apache.org/licenses/LICENSE-2.0\n *\n * <p>Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport java.nio.charset.Charset;\n\n/**\n * Contains constant definitions for the six standard {@link Charset} instances, which are\n * guaranteed to be supported by all Java platform implementations.\n *\n * <p>Assuming you're free to choose, note that <b>{@link #UTF_8} is widely preferred</b>.\n *\n * <p>See the Guava User Guide article on <a\n * href=\"http://code.google.com/p/guava-libraries/wiki/StringsExplained#Charsets\">{@code\n * Charsets}</a>.\n *\n * @author Mike Bostock\n * @since 1.0\n */\npublic final class Charsets {\n\n  /**\n   * US-ASCII: seven-bit ASCII, the Basic Latin block of the Unicode character set (ISO646-US).\n   *\n   * <p><b>Note for Java 7 and later:</b> this constant should be treated as deprecated; use {@link\n   * java.nio.charset.StandardCharsets#US_ASCII} instead.\n   */\n  public static final Charset US_ASCII = Charset.forName(\"US-ASCII\");\n\n  /**\n   * ISO-8859-1: ISO Latin Alphabet Number 1 (ISO-LATIN-1).\n   *\n   * <p><b>Note for Java 7 and later:</b> this constant should be treated as deprecated; use {@link\n   * java.nio.charset.StandardCharsets#ISO_8859_1} instead.\n   */\n  public static final Charset ISO_8859_1 = Charset.forName(\"ISO-8859-1\");\n\n  /**\n   * UTF-8: eight-bit UCS Transformation Format.\n   *\n   * <p><b>Note for Java 7 and later:</b> this constant should be treated as deprecated; use {@link\n   * java.nio.charset.StandardCharsets#UTF_8} instead.\n   */\n  public static final Charset UTF_8 = Charset.forName(\"UTF-8\");\n\n  /**\n   * UTF-16: sixteen-bit UCS Transformation Format, byte order identified by an optional byte-order\n   * mark.\n   *\n   * <p><b>Note for Java 7 and later:</b> this constant should be treated as deprecated; use {@link\n   * java.nio.charset.StandardCharsets#UTF_16} instead.\n   */\n  public static final Charset UTF_16 = Charset.forName(\"UTF-16\");\n\n  /*\n   * Please do not add new Charset references to this class, unless those character encodings are\n   * part of the set required to be supported by all Java platform implementations! Any Charsets\n   * initialized here may cause unexpected delays when this class is loaded. See the Charset\n   * Javadocs for the list of built-in character encodings.\n   */\n}\n", "jasm_code": ".version 52 0 \n.class public final super Charsets \n.super java/lang/Object \n.field public static final US_ASCII Ljava/nio/charset/Charset; \n.field public static final ISO_8859_1 Ljava/nio/charset/Charset; \n.field public static final UTF_8 Ljava/nio/charset/Charset; \n.field public static final UTF_16 Ljava/nio/charset/Charset; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 33 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 1 locals 0 \nL0:     ldc 'US-ASCII' \nL2:     invokestatic Method java/nio/charset/Charset forName (Ljava/lang/String;)Ljava/nio/charset/Charset; \nL5:     putstatic Field Charsets US_ASCII Ljava/nio/charset/Charset; \nL8:     ldc 'ISO-8859-1' \nL10:    invokestatic Method java/nio/charset/Charset forName (Ljava/lang/String;)Ljava/nio/charset/Charset; \nL13:    putstatic Field Charsets ISO_8859_1 Ljava/nio/charset/Charset; \nL16:    ldc 'UTF-8' \nL18:    invokestatic Method java/nio/charset/Charset forName (Ljava/lang/String;)Ljava/nio/charset/Charset; \nL21:    putstatic Field Charsets UTF_8 Ljava/nio/charset/Charset; \nL24:    ldc 'UTF-16' \nL26:    invokestatic Method java/nio/charset/Charset forName (Ljava/lang/String;)Ljava/nio/charset/Charset; \nL29:    putstatic Field Charsets UTF_16 Ljava/nio/charset/Charset; \nL32:    return \nL33:    \n        .linenumbertable \n            L0 41 \n            L8 49 \n            L16 57 \n            L24 66 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Charsets.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 14:36:14 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Charsets_ESTest extends Charsets_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Charsets charsets0 = new Charsets();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 14:36:14 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Charsets_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Charsets\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp_5det1la\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Charsets_ESTest_scaffolding.class.getClassLoader() ,\n      \"Charsets\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Charsets_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Charsets\"\n    );\n  }\n}\n", "class_idx": 12}
{"class_name": "DynamicGridLayout", "java_source": "/*****************************************************************************\n *                        Web3d.org Copyright (c) 2003-2005\n *                               Java Source\n *\n * This source is licensed under the GNU GPL v2.0\n * Please read http://www.gnu.org/copyleft/gpl.html for more information\n *\n * This software comes with the standard NO WARRANTY disclaimer for any\n * purpose. Use it at your own risk. If there's a problem you get to fix it.\n *\n ****************************************************************************/\n\n// External imports\nimport java.awt.*;\n\n// Local Imports\n// None\n\n/**\n * A layout manager that lays out a container's components in a rectangular grid, with different\n * sizes for each row/column.\n *\n * <p>As with GridLayout one component is placed in each rectangle, but the width of columns and\n * height of rows are not necessarily the same. By default each row and column will be sized in\n * proportion to the minimum size of the largest component in that row or column. Alternatively,\n * individual rows or columns can be set to a fixed percentage of the container or their minimum\n * size with various options. Components can also be set to fill the assigned area or use their\n * minimum size and align themselves within that allocated space. If the grid itself doesn't\n * completely fill the area assigned by the container there are methods to set this alignment too.\n *\n * <p>Here's a simple example of using a DynamicGridLayout.\n *\n * <p>\n *\n * <blockquote>\n *\n * <pre>\n *   //create the layout and set it\n *   setLayout(dgl=new DynamicGridLayout(2,2,5,5));\n *\n *   //set any styles, sizes or alignments\n *   dgl.setRowSize(0,dgl.MINIMUM);\n *\n *   //add the components\n *   add(new Button(\"Row One/Col One\"));\n *   add(new Button(\"Row One/Col Two\"));\n *\n *   add(new Button(\"Row Two/Col One\"));\n *   add(new Button(\"Row Two/Col Two\"));\n * </pre>\n *\n * </blockquote>\n *\n * @author Robert Nielsen\n * @version $Revision: 1.2 $\n */\npublic class DynamicGridLayout implements LayoutManager, java.io.Serializable {\n  // Constants for size\n  public static final int DYNAMIC = 0;\n  public static final int MINIMUM = -1;\n  public static final int ABOVE_MINIMUM = -2;\n  public static final int BELOW_MINIMUM = -3;\n  private static final int ABOVE_MARKER = -5;\n  private static final int BELOW_MARKER = -6;\n\n  // Constants for alignment\n  public static final int FILL = 0;\n  public static final int CENTER = 1;\n  public static final int LEFT = 2;\n  public static final int RIGHT = 3;\n  public static final int TOP = 4;\n  public static final int BOTTOM = 5;\n\n  // Constants for style\n  public static final int LABEL_FILL = 6;\n  public static final int LABEL_MIN = 7;\n\n  private int hgap;\n  private int vgap;\n  private int rows;\n  private int cols;\n  private int[] row_align;\n  private int[] col_align;\n  private int[] row_size;\n  private int[] col_size;\n  private int[] row_height;\n  private int[] col_width;\n\n  private int vert_align = CENTER;\n  private int horiz_align = CENTER;\n\n  /** Creates a grid layout with a default of one column per component, in a single row. */\n  public DynamicGridLayout() {\n    this(1, 0, 0, 0);\n  }\n\n  /**\n   * Creates a grid layout with the specified number of rows and columns. All components in the\n   * layout are given equal size.\n   *\n   * <p>One, but not both, of <code>rows</code> and <code>cols</code> can be zero, which means that\n   * any number of objects can be placed in a row or in a column.\n   *\n   * @param rows the rows, with the value zero meaning any number of rows.\n   * @param cols the columns, with the value zero meaning any number of columns.\n   */\n  public DynamicGridLayout(int rows, int cols) {\n    this(rows, cols, 0, 0);\n  }\n\n  /**\n   * Creates a grid layout with the specified number of rows and columns.\n   *\n   * <p>In addition, the horizontal and vertical gaps are set to the specified values. Horizontal\n   * gaps are placed at the left and right edges, and between each of the columns. Vertical gaps are\n   * placed at the top and bottom edges, and between each of the rows.\n   *\n   * <p>One, but not both, of <code>rows</code> and <code>cols</code> can be zero, which means that\n   * any number of objects can be placed in a row or in a column.\n   *\n   * @param rows the rows, with the value zero meaning any number of rows.\n   * @param cols the columns, with the value zero meaning any number of columns.\n   * @param hgap the horizontal gap.\n   * @param vgap the vertical gap.\n   * @exception IllegalArgumentException if the of <code>rows</code> or <code>cols</code> is\n   *     invalid.\n   */\n  public DynamicGridLayout(int rows, int cols, int hgap, int vgap) {\n    if ((rows == 0) && (cols == 0))\n      throw new IllegalArgumentException(\"rows and cols cannot both be zero\");\n    this.rows = rows;\n    this.cols = cols;\n    this.hgap = hgap;\n    this.vgap = vgap;\n    resetGrid();\n  }\n\n  /**\n   * Gets the number of rows in this layout.\n   *\n   * @return the number of rows in this layout.\n   */\n  public int getRows() {\n    return rows;\n  }\n\n  /**\n   * Sets the number of rows in this layout to the specified value.\n   *\n   * @param rows the number of rows in this layout.\n   * @exception IllegalArgumentException if the value of both <code>rows</code> and <code>cols\n   *     </code> is set to zero.\n   */\n  public void setRows(int rows) {\n    if ((rows == 0) && (this.cols == 0))\n      throw new IllegalArgumentException(\"rows and cols cannot both be zero\");\n    this.rows = rows;\n    resetGrid();\n  }\n\n  /**\n   * Gets the number of columns in this layout.\n   *\n   * @return the number of columns in this layout.\n   * @since JDK1.1\n   */\n  public int getColumns() {\n    return cols;\n  }\n\n  /**\n   * Sets the number of columns in this layout to the specified value.\n   *\n   * @param cols the number of columns in this layout.\n   * @exception IllegalArgumentException if the value of both <code>rows</code> and <code>cols\n   *     </code> is set to zero.\n   */\n  public void setColumns(int cols) {\n    if ((cols == 0) && (this.rows == 0))\n      throw new IllegalArgumentException(\"rows and cols cannot both be zero\");\n    this.cols = cols;\n    resetGrid();\n  }\n\n  /**\n   * Gets the horizontal gap between components.\n   *\n   * @return the horizontal gap between components.\n   */\n  public int getHgap() {\n    return hgap;\n  }\n\n  /**\n   * Sets the horizontal gap between components to the specified value.\n   *\n   * @param hgap the horizontal gap between components.\n   */\n  public void setHgap(int hgap) {\n    this.hgap = hgap;\n  }\n\n  /**\n   * Gets the vertical gap between components.\n   *\n   * @return the vertical gap between components.\n   */\n  public int getVgap() {\n    return vgap;\n  }\n\n  /**\n   * Sets the vertical gap between components to the specified value.\n   *\n   * @param vgap the vertical gap between components.\n   */\n  public void setVgap(int vgap) {\n    this.vgap = vgap;\n  }\n\n  /**\n   * Resets the grid parameters. All styles, alignments and sizes are reset to their default values.\n   */\n  public void resetGrid() {\n    row_align = new int[rows];\n    col_align = new int[cols];\n    row_size = new int[rows];\n    col_size = new int[cols];\n  }\n\n  /**\n   * Sets the style of this grid. This provides a shortcut to producing several standard styles of\n   * grid layout by setting various row alignments and sizes. The style can be tweaked by using the\n   * set(Row|Column)Alignment and set(Row|Column)Size methods after a call to this one.\n   *\n   * <p>The style parameter has the following parameters:\n   *\n   * <ul>\n   *   <li>FILL to use all available space, with component heights and widths relative to their\n   *       preferred size.\n   *   <li>CENTER to use the same spacing as FILL but with each component being it's preferred size\n   *       and centered in the space.\n   *   <li>LABEL_FILL is a simple layout where the 1st, 3rd, etc. columns are considered to be\n   *       labels and the intervening ones are the data components (TextFields, ComboBoxes). The\n   *       labels are minimum size and right aligned and the others fill all available space.\n   *   <li>LABEL_MIN is the same as LABEL_FILL but the data components are minimum too and aligned\n   *       left.\n   * </ul>\n   *\n   * @param the style to be set.\n   */\n  public void setStyle(int style) {\n    switch (style) {\n      case FILL:\n        setColumnAlignments(0, cols - 1, FILL);\n        setRowAlignments(0, rows - 1, FILL);\n        setColumnSizes(0, cols - 1, DYNAMIC);\n        setRowSizes(0, rows - 1, DYNAMIC);\n        break;\n      case CENTER:\n        setColumnAlignments(0, cols - 1, CENTER);\n        setRowAlignments(0, rows - 1, CENTER);\n        setColumnSizes(0, cols - 1, DYNAMIC);\n        setRowSizes(0, rows - 1, DYNAMIC);\n        break;\n      case LABEL_FILL:\n      case LABEL_MIN:\n        for (int i = 0; i < cols; i += 2) {\n          setColumnAlignment(i, RIGHT);\n          setColumnSize(i, MINIMUM);\n          if (style == LABEL_FILL) {\n            setColumnAlignment(i + 1, DYNAMIC);\n            setColumnSize(i + 1, FILL);\n          } else {\n            setColumnAlignment(i + 1, LEFT);\n            setColumnSize(i + 1, BELOW_MINIMUM);\n          }\n        }\n        break;\n    }\n  }\n\n  /**\n   * This method is only required if there are no columns with dynamic widths which may cause the\n   * layout to be smaller than the allocated space. The horizontal alignment of the grid in this\n   * space can then be specified using this method. The default is centered. The available\n   * alignments are:\n   *\n   * <ul>\n   *   <li>LEFT - align the grid to the left of the space available.\n   *   <li>CENTER - center the grid in the space.\n   *   <li>RIGHT - align the grid to the right of the space available.\n   * </ul>\n   *\n   * @param value the alignment to set\n   */\n  public void setHorizontalAlignment(int value) {\n    horiz_align = value;\n  }\n\n  /**\n   * This method is only required if there are no rows with dynamic heights which may cause the\n   * layout to be smaller than the allocated space. The vertical alignment of the grid in this space\n   * can then be specified using this method. The default is centered. The available alignments are:\n   *\n   * <ul>\n   *   <li>TOP - align the grid to the top of the space available.\n   *   <li>CENTER - center the grid in the space.\n   *   <li>BOTTOM - align the grid to the bottom of the space available.\n   * </ul>\n   *\n   * @param value the alignment to set\n   */\n  public void setVerticalAlignment(int value) {\n    vert_align = value;\n  }\n\n  /**\n   * Sets the alignment for a particular row. If the alignment is not FILL, the preferred size of\n   * the component will be used unless it is greater than the available space, in which case it will\n   * be truncated. The default alignment is FILL for all rows. The available alignments are:\n   *\n   * <ul>\n   *   <li>FILL - fill the entire vertical space available.\n   *   <li>TOP - align to the top of the space available.\n   *   <li>CENTER - center the component in the space.\n   *   <li>BOTTOM - align with the bottom of the space available.\n   * </ul>\n   *\n   * @param row the row to set the alignment for\n   * @param the alignment to set.\n   */\n  public void setRowAlignment(int row, int value) {\n    row_align[row] = value;\n  }\n\n  /**\n   * Sets the alignment of multiple rows. See setRowAlignment for details of alignment values.\n   *\n   * @param start the inclusive start row to set\n   * @param start the inclusive end row to set\n   * @param value the alignment to set\n   * @see #setRowAlignment\n   */\n  public void setRowAlignments(int start, int end, int value) {\n    for (int i = start; i <= end; i++) row_align[i] = value;\n  }\n\n  /**\n   * Sets the alignment for a particular column. If the alignment is not FILL, the preferred size of\n   * the component will be used unless it is greater than the available space, in which case it will\n   * be truncated. The default alignment is FILL for all columns. The available alignments are:\n   *\n   * <ul>\n   *   <li>FILL - fill the entire vertical space available.\n   *   <li>LEFT - align to the left of the space available.\n   *   <li>CENTER - center the component in the space.\n   *   <li>RIGHT - align to the right of the space available.\n   * </ul>\n   *\n   * @param row the column to set the alignment for\n   * @param the alignment to set.\n   */\n  public void setColumnAlignment(int col, int value) {\n    col_align[col] = value;\n  }\n\n  /**\n   * Sets the alignment of multiple columns. See setColumnAlignment for details of alignment values.\n   *\n   * @param start the inclusive start column to set\n   * @param start the inclusive end column to set\n   * @param value the alignment to set\n   * @see #setColumnAlignment\n   */\n  public void setColumnAlignments(int start, int end, int value) {\n    for (int i = start; i <= end; i++) col_align[i] = value;\n  }\n\n  /**\n   * Sets the size of a row. The available sizes are:\n   *\n   * <ul>\n   *   <li>percentage - a value between 1 and 100 for the percentage of the width of the grid that\n   *       this row should take up.\n   *   <li>MINIMUM - make sure that the height of this row is always the minimum height of of the\n   *       largest component in the row no matter what it does to the formatting. It can look ugly\n   *       if you resize the window too small but is good for labels which must always display all\n   *       their text.\n   *   <li>DYNAMIC - After the percentages and minumum components are removed from the grid width\n   *       the rows with dynamic sizes are allocated a proportion of the remaining space based on\n   *       the minimum height of the largest component in the row. This is the default size for all\n   *       rows.\n   *   <li>BELOW_MINIMUM - the height is set to MINIMUM unless this minimum size would be smaller\n   *       than a dynamically allocated one, in which case DYNAMIC allocation is used. This setting\n   *       is useful if you want a component to stick to it's minimum size in most situations but go\n   *       even smaller if the panel size gets really small.\n   *   <li>ABOVE_MINIMUM - the height is allocated using the DYNAMIC setting unless it would make\n   *       the component smaller than it's minimum size, where MINIMUM is used. This option is\n   *       useful if you want a component to take up any available space but never go smaller than\n   *       it's minumum size.\n   * </ul>\n   */\n  public void setRowSize(int row, int value) {\n    row_size[row] = value;\n  }\n\n  /**\n   * Sets the size of multiple rows. See setRowSize for details of alignment values.\n   *\n   * @param start the inclusive start row to set\n   * @param start the inclusive end row to set\n   * @param value the size to set\n   * @see #setRowSize\n   */\n  public void setRowSizes(int start, int end, int value) {\n    for (int i = start; i <= end; i++) row_size[i] = value;\n  }\n\n  /**\n   * Sets the size of a column. The available sizes are:\n   *\n   * <ul>\n   *   <li>percentage - a value between 1 and 100 for the percentage of the width of the grid that\n   *       this column should take up.\n   *   <li>MINIMUM - make sure that the width of this column is always the minimum width of the\n   *       largest component in the column no matter what it does to the formatting. It can look\n   *       ugly if you resize the window too small but is good for labels which must always display\n   *       all their text.\n   *   <li>DYNAMIC - After the percentages and minumum components are removed from the grid width\n   *       the columns with dynamic sizes are allocated a proportion of the remaining space based on\n   *       the minimum width of the largest component in the row. This is the default size for all\n   *       column.\n   *   <li>BELOW_MINIMUM - the height is set to MINIMUM unless this minimum size would be smaller\n   *       than a dynamically allocated one, in which case DYNAMIC allocation is used. This setting\n   *       is useful if you want a component to stick to it's minimum size in most situations but go\n   *       even smaller if the panel size gets really small.\n   *   <li>ABOVE_MINIMUM - the width is allocated using the DYNAMIC setting unless it would make the\n   *       component smaller than it's minimum size, where MINIMUM is used. This option is useful if\n   *       you want a component to take up any available space but never go smaller than it's\n   *       minumum size.\n   * </ul>\n   */\n  public void setColumnSize(int col, int value) {\n    col_size[col] = value;\n  }\n\n  /**\n   * Sets the size of multiple columns. See setColumnSize for details of alignment values.\n   *\n   * @param start the inclusive start column to set\n   * @param start the inclusive end column to set\n   * @param value the size to set\n   * @see #setColumnSize\n   */\n  public void setColumnSizes(int start, int end, int value) {\n    for (int i = start; i <= end; i++) col_size[i] = value;\n  }\n\n  /**\n   * Adds the specified component with the specified name to the layout.\n   *\n   * @param name the name of the component.\n   * @param comp the component to be added.\n   */\n  public void addLayoutComponent(String name, Component comp) {}\n\n  /**\n   * Removes the specified component from the layout.\n   *\n   * @param comp the component to be removed.\n   */\n  public void removeLayoutComponent(Component comp) {}\n\n  /**\n   * Calculate the largest either minimum or preferred size for the components in each row and\n   * column.\n   *\n   * @param parent the container of all the components to be laid out.\n   * @param prefered TRUE to use preferred size, FALSE to use minimum size\n   */\n  private void getWidthsAndHeights(Container parent, boolean preferred) {\n    int ncomponents = parent.getComponentCount();\n    col_width = new int[cols];\n    row_height = new int[rows];\n\n    for (int i = 0; i < ncomponents && i < rows * cols; i++) {\n      Component comp = parent.getComponent(i);\n      Dimension d;\n      if (preferred) d = comp.getPreferredSize();\n      else d = comp.getMinimumSize();\n      if (d.width > col_width[i % cols]) col_width[i % cols] = d.width;\n      if (d.height > row_height[i / cols]) row_height[i / cols] = d.height;\n    }\n  }\n\n  private int getMaximumSize(int[] perc, int[] min) {\n    int perc_sum = 0;\n    int leftover_sum = 0;\n    int temp;\n    int max = 0;\n    int size = perc.length;\n    for (int i = 0; i < size; i++) {\n      if (perc[i] > 0) {\n        temp = min[i] * 100 / perc[i];\n        if (temp > max) max = temp;\n        perc_sum += min[i];\n      } else leftover_sum += min[i];\n    }\n    temp = leftover_sum * 100 / (100 - perc_sum);\n    if (temp > max) max = temp;\n    return max;\n  }\n\n  /**\n   * Given an array of sizes, calculate the grid positions. This method is called both with the row\n   * sizes and the column sizes.\n   *\n   * @param len the length of the space we need to allocate\n   * @param perce the sizes of each row or column\n   * @param value the array to place the calculated positions into.\n   */\n  private int spaceOut(int len, int[] perc, int[] value) {\n    int sum = 0; // sum of all dynamic values\n    int dyn_cnt = 0; // a count of the number of dynamic entries\n    int size = perc.length; // the number of grid squares\n    int space_left = len; // the remaining space to allocate between the dynamics\n    boolean check_above_minimum = false; // efficiency flags\n    boolean check_below_minimum = false;\n    for (int i = 0; i < size; i++) {\n      if (perc[i] > 0) // a percentage\n      {\n        value[i] = len * perc[i] / 100;\n        space_left -= value[i];\n      } else if (perc[i] == DYNAMIC || perc[i] == ABOVE_MINIMUM || perc[i] == ABOVE_MARKER) {\n        if (perc[i] == ABOVE_MARKER) perc[i] = ABOVE_MINIMUM;\n        if (perc[i] != DYNAMIC) check_above_minimum = true;\n        sum += value[i];\n        dyn_cnt++;\n      } else // minimum, below_minumum, or below_marker\n      {\n        if (perc[i] == BELOW_MARKER) // reset the marker\n        perc[i] = BELOW_MINIMUM;\n        if (perc[i] != MINIMUM) check_below_minimum = true;\n        space_left -= value[i]; // lower the available space\n      }\n    }\n    if (check_below_minimum)\n      for (int i = 0; i < size; i++)\n        if ((perc[i] == BELOW_MINIMUM) && (space_left + value[i]) / (sum + value[i]) < 1) {\n          perc[i] = BELOW_MARKER;\n          sum += value[i];\n          space_left += value[i];\n          dyn_cnt++;\n        }\n    if (check_above_minimum)\n      for (int i = 0; i < size; i++) {\n        if ((perc[i] == ABOVE_MINIMUM) && (space_left - value[i]) / (sum - value[i]) < 1) {\n          perc[i] = ABOVE_MARKER;\n          sum -= value[i];\n          space_left -= value[i];\n          dyn_cnt--;\n        }\n      }\n    if (dyn_cnt > 0) {\n      int leftover = space_left;\n      int lastdyn = -1; // this had better be changed or there is something wrong with cnt\n      for (int i = 0; i < size; i++)\n        if (perc[i] == DYNAMIC || perc[i] == BELOW_MARKER || perc[i] == ABOVE_MINIMUM) {\n          if (sum == 0) value[i] = 0;\n          else value[i] = Math.round(value[i] * space_left / sum);\n          leftover -= value[i];\n          lastdyn = i;\n        }\n      value[lastdyn] += leftover; // if there is any leftovers give it to the last dynamic one\n      return 0;\n    }\n    if (space_left < 0) return 0;\n    else return space_left;\n  }\n\n  private void placeComponent(Component c, int x, int y, int w, int h, int ra, int ca) {\n    Dimension pref = c.getPreferredSize();\n    if (ra != FILL && pref.height < h) {\n      if (ra == CENTER) y += Math.round((h - pref.height) / 2.0);\n      else if (ra == BOTTOM) y += (h - pref.height);\n      h = pref.height;\n    }\n    if (ca != FILL && pref.width < w) {\n      if (ca == CENTER) x += Math.round((w - pref.width) / 2.0);\n      else if (ca == RIGHT) x += (w - pref.width);\n      w = pref.width;\n    }\n    c.setBounds(x, y, w, h);\n  }\n\n  /**\n   * Determines the preferred size of the container argument using this grid layout.\n   *\n   * <p>The preferred width of a grid layout is the largest preferred width of any of the widths in\n   * the container times the number of columns, plus the horizontal padding times the number of\n   * columns plus one, plus the left and right insets of the target container.\n   *\n   * <p>The preferred height of a grid layout is the largest preferred height of any of the heights\n   * in the container times the number of rows, plus the vertical padding times the number of rows\n   * plus one, plus the top and bottom insets of the target container.\n   *\n   * @param target the container in which to do the layout.\n   * @return the preferred dimensions to lay out the subcomponents of the specified container.\n   * @see java.awt.GridLayout#minimumLayoutSize\n   * @see java.awt.Container#getPreferredSize()\n   */\n  public Dimension preferredLayoutSize(Container parent) {\n    getWidthsAndHeights(parent, true);\n    int w = getMaximumSize(col_size, col_width);\n    int h = getMaximumSize(row_size, row_height);\n    Insets insets = parent.getInsets();\n    return new Dimension(\n        insets.left + insets.right + w + (cols - 1) * hgap,\n        insets.top + insets.bottom + h + (rows - 1) * vgap);\n  }\n\n  /**\n   * Determines the minimum size of the container argument using this grid layout.\n   *\n   * <p>The minimum width of a grid layout is the largest minimum width of any of the widths in the\n   * container times the number of columns, plus the horizontal padding times the number of columns\n   * plus one, plus the left and right insets of the target container.\n   *\n   * <p>The minimum height of a grid layout is the largest minimum height of any of the heights in\n   * the container times the number of rows, plus the vertical padding times the number of rows plus\n   * one, plus the top and bottom insets of the target container.\n   *\n   * @param target the container in which to do the layout.\n   * @return the minimum dimensions needed to lay out the subcomponents of the specified container.\n   * @see java.awt.GridLayout#preferredLayoutSize\n   * @see java.awt.Container#doLayout\n   */\n  public Dimension minimumLayoutSize(Container parent) {\n    getWidthsAndHeights(parent, false);\n    int w = getMaximumSize(col_size, col_width);\n    int h = getMaximumSize(row_size, row_height);\n    Insets insets = parent.getInsets();\n    return new Dimension(\n        insets.left + insets.right + w + (cols - 1) * hgap,\n        insets.top + insets.bottom + h + (rows - 1) * vgap);\n  }\n\n  /**\n   * Lays out the specified container using this layout.\n   *\n   * <p>This method reshapes the components in the specified target container in order to satisfy\n   * the constraints of the <code>GridLayout</code> object.\n   *\n   * <p>The grid layout manager determines the size of individual components by dividing the free\n   * space in the container into equal-sized portions according to the number of rows and columns in\n   * the layout. The container's free space equals the container's size minus any insets and any\n   * specified horizontal or vertical gap. All components in a grid layout are given the same size.\n   *\n   * @param target the container in which to do the layout.\n   * @see java.awt.Container\n   * @see java.awt.Container#doLayout\n   */\n  public void layoutContainer(Container parent) {\n    Insets insets = parent.getInsets();\n    int ncomponents = parent.getComponentCount();\n    Dimension p = parent.getSize();\n\n    int w = p.width - (insets.left + insets.right);\n    int h = p.height - (insets.top + insets.bottom);\n    w = (w - (cols - 1) * hgap);\n    h = (h - (rows - 1) * vgap);\n    getWidthsAndHeights(parent, true);\n\n    int row_leftover = spaceOut(h, row_size, row_height);\n    int col_leftover = spaceOut(w, col_size, col_width);\n    int col_indent = 0;\n    switch (horiz_align) {\n      case CENTER:\n        col_indent = (int) Math.round(col_leftover / 2.0);\n        break;\n      case RIGHT:\n        col_indent = col_leftover;\n        break;\n    }\n\n    int row_indent = 0;\n    switch (vert_align) {\n      case CENTER:\n        row_indent = (int) Math.round(row_leftover / 2.0);\n        break;\n      case BOTTOM:\n        row_indent = row_leftover;\n        break;\n    }\n\n    for (int c = 0, x = insets.left + col_indent; c < cols; x += col_width[c++] + hgap) {\n      for (int r = 0, y = insets.top + row_indent; r < rows; y += row_height[r++] + vgap) {\n        int i = r * cols + c;\n        if (i < ncomponents)\n          placeComponent(\n              parent.getComponent(i),\n              x,\n              y,\n              col_width[c],\n              row_height[r],\n              row_align[r],\n              col_align[c]);\n      }\n    }\n  }\n\n  /*\n  public void dump()\n  {\n        System.out.print(\"Rows: \");\n    for(int i=0;i<rows;i++)\n      System.out.print(row_height[i]+\",\");\n    System.out.print(\"\\nCols: \");\n    for(int i=0;i<cols;i++)\n      System.out.print(col_width[i]+\",\");\n    System.out.println();\n  }\n  */\n\n  /**\n   * Returns the string representation of this grid layout's values.\n   *\n   * @return a string representation of this grid layout.\n   */\n  public String toString() {\n    return getClass().getName()\n        + \"[hgap=\"\n        + hgap\n        + \",vgap=\"\n        + vgap\n        + \",rows=\"\n        + rows\n        + \",cols=\"\n        + cols\n        + \"]\";\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super DynamicGridLayout \n.super java/lang/Object \n.implements java/awt/LayoutManager \n.implements java/io/Serializable \n.field public static final DYNAMIC I = 0 \n.field public static final MINIMUM I = -1 \n.field public static final ABOVE_MINIMUM I = -2 \n.field public static final BELOW_MINIMUM I = -3 \n.field private static final ABOVE_MARKER I = -5 \n.field private static final BELOW_MARKER I = -6 \n.field public static final FILL I = 0 \n.field public static final CENTER I = 1 \n.field public static final LEFT I = 2 \n.field public static final RIGHT I = 3 \n.field public static final TOP I = 4 \n.field public static final BOTTOM I = 5 \n.field public static final LABEL_FILL I = 6 \n.field public static final LABEL_MIN I = 7 \n.field private hgap I \n.field private vgap I \n.field private rows I \n.field private cols I \n.field private row_align [I \n.field private col_align [I \n.field private row_size [I \n.field private col_size [I \n.field private row_height [I \n.field private col_width [I \n.field private vert_align I \n.field private horiz_align I \n\n.method public <init> : ()V \n    .code stack 5 locals 1 \nL0:     aload_0 \nL1:     iconst_1 \nL2:     iconst_0 \nL3:     iconst_0 \nL4:     iconst_0 \nL5:     invokespecial Method DynamicGridLayout <init> (IIII)V \nL8:     return \nL9:     \n        .linenumbertable \n            L0 98 \n            L8 99 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (II)V \n    .code stack 5 locals 3 \nL0:     aload_0 \nL1:     iload_1 \nL2:     iload_2 \nL3:     iconst_0 \nL4:     iconst_0 \nL5:     invokespecial Method DynamicGridLayout <init> (IIII)V \nL8:     return \nL9:     \n        .linenumbertable \n            L0 115 \n            L8 116 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (IIII)V \n    .code stack 3 locals 5 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iconst_1 \nL6:     putfield Field DynamicGridLayout vert_align I \nL9:     aload_0 \nL10:    iconst_1 \nL11:    putfield Field DynamicGridLayout horiz_align I \nL14:    iload_1 \nL15:    ifne L32 \nL18:    iload_2 \nL19:    ifne L32 \nL22:    new java/lang/IllegalArgumentException \nL25:    dup \nL26:    ldc 'rows and cols cannot both be zero' \nL28:    invokespecial Method java/lang/IllegalArgumentException <init> (Ljava/lang/String;)V \nL31:    athrow \n\n        .stack full \n            locals Object DynamicGridLayout Integer Integer Integer Integer \n            stack \n        .end stack \nL32:    aload_0 \nL33:    iload_1 \nL34:    putfield Field DynamicGridLayout rows I \nL37:    aload_0 \nL38:    iload_2 \nL39:    putfield Field DynamicGridLayout cols I \nL42:    aload_0 \nL43:    iload_3 \nL44:    putfield Field DynamicGridLayout hgap I \nL47:    aload_0 \nL48:    iload 4 \nL50:    putfield Field DynamicGridLayout vgap I \nL53:    aload_0 \nL54:    invokevirtual Method DynamicGridLayout resetGrid ()V \nL57:    return \nL58:    \n        .linenumbertable \n            L0 140 \n            L4 89 \n            L9 90 \n            L14 141 \n            L22 142 \n            L32 143 \n            L37 144 \n            L42 145 \n            L47 146 \n            L53 147 \n            L57 148 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getRows : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DynamicGridLayout rows I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 156 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRows : (I)V \n    .code stack 3 locals 2 \nL0:     iload_1 \nL1:     ifne L21 \nL4:     aload_0 \nL5:     getfield Field DynamicGridLayout cols I \nL8:     ifne L21 \nL11:    new java/lang/IllegalArgumentException \nL14:    dup \nL15:    ldc 'rows and cols cannot both be zero' \nL17:    invokespecial Method java/lang/IllegalArgumentException <init> (Ljava/lang/String;)V \nL20:    athrow \n\n        .stack same \nL21:    aload_0 \nL22:    iload_1 \nL23:    putfield Field DynamicGridLayout rows I \nL26:    aload_0 \nL27:    invokevirtual Method DynamicGridLayout resetGrid ()V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 167 \n            L11 168 \n            L21 169 \n            L26 170 \n            L30 171 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getColumns : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DynamicGridLayout cols I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 180 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setColumns : (I)V \n    .code stack 3 locals 2 \nL0:     iload_1 \nL1:     ifne L21 \nL4:     aload_0 \nL5:     getfield Field DynamicGridLayout rows I \nL8:     ifne L21 \nL11:    new java/lang/IllegalArgumentException \nL14:    dup \nL15:    ldc 'rows and cols cannot both be zero' \nL17:    invokespecial Method java/lang/IllegalArgumentException <init> (Ljava/lang/String;)V \nL20:    athrow \n\n        .stack same \nL21:    aload_0 \nL22:    iload_1 \nL23:    putfield Field DynamicGridLayout cols I \nL26:    aload_0 \nL27:    invokevirtual Method DynamicGridLayout resetGrid ()V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 191 \n            L11 192 \n            L21 193 \n            L26 194 \n            L30 195 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getHgap : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DynamicGridLayout hgap I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 203 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setHgap : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field DynamicGridLayout hgap I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 212 \n            L5 213 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getVgap : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DynamicGridLayout vgap I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 221 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setVgap : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field DynamicGridLayout vgap I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 230 \n            L5 231 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public resetGrid : ()V \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     aload_0 \nL2:     getfield Field DynamicGridLayout rows I \nL5:     newarray int \nL7:     putfield Field DynamicGridLayout row_align [I \nL10:    aload_0 \nL11:    aload_0 \nL12:    getfield Field DynamicGridLayout cols I \nL15:    newarray int \nL17:    putfield Field DynamicGridLayout col_align [I \nL20:    aload_0 \nL21:    aload_0 \nL22:    getfield Field DynamicGridLayout rows I \nL25:    newarray int \nL27:    putfield Field DynamicGridLayout row_size [I \nL30:    aload_0 \nL31:    aload_0 \nL32:    getfield Field DynamicGridLayout cols I \nL35:    newarray int \nL37:    putfield Field DynamicGridLayout col_size [I \nL40:    return \nL41:    \n        .linenumbertable \n            L0 239 \n            L10 240 \n            L20 241 \n            L30 242 \n            L40 243 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setStyle : (I)V \n    .code stack 4 locals 3 \nL0:     iload_1 \nL1:     tableswitch 0 \n            L48 \n            L99 \n            L220 \n            L220 \n            L220 \n            L220 \n            L150 \n            L150 \n            default : L220 \n\n\n        .stack same \nL48:    aload_0 \nL49:    iconst_0 \nL50:    aload_0 \nL51:    getfield Field DynamicGridLayout cols I \nL54:    iconst_1 \nL55:    isub \nL56:    iconst_0 \nL57:    invokevirtual Method DynamicGridLayout setColumnAlignments (III)V \nL60:    aload_0 \nL61:    iconst_0 \nL62:    aload_0 \nL63:    getfield Field DynamicGridLayout rows I \nL66:    iconst_1 \nL67:    isub \nL68:    iconst_0 \nL69:    invokevirtual Method DynamicGridLayout setRowAlignments (III)V \nL72:    aload_0 \nL73:    iconst_0 \nL74:    aload_0 \nL75:    getfield Field DynamicGridLayout cols I \nL78:    iconst_1 \nL79:    isub \nL80:    iconst_0 \nL81:    invokevirtual Method DynamicGridLayout setColumnSizes (III)V \nL84:    aload_0 \nL85:    iconst_0 \nL86:    aload_0 \nL87:    getfield Field DynamicGridLayout rows I \nL90:    iconst_1 \nL91:    isub \nL92:    iconst_0 \nL93:    invokevirtual Method DynamicGridLayout setRowSizes (III)V \nL96:    goto L220 \n\n        .stack same \nL99:    aload_0 \nL100:   iconst_0 \nL101:   aload_0 \nL102:   getfield Field DynamicGridLayout cols I \nL105:   iconst_1 \nL106:   isub \nL107:   iconst_1 \nL108:   invokevirtual Method DynamicGridLayout setColumnAlignments (III)V \nL111:   aload_0 \nL112:   iconst_0 \nL113:   aload_0 \nL114:   getfield Field DynamicGridLayout rows I \nL117:   iconst_1 \nL118:   isub \nL119:   iconst_1 \nL120:   invokevirtual Method DynamicGridLayout setRowAlignments (III)V \nL123:   aload_0 \nL124:   iconst_0 \nL125:   aload_0 \nL126:   getfield Field DynamicGridLayout cols I \nL129:   iconst_1 \nL130:   isub \nL131:   iconst_0 \nL132:   invokevirtual Method DynamicGridLayout setColumnSizes (III)V \nL135:   aload_0 \nL136:   iconst_0 \nL137:   aload_0 \nL138:   getfield Field DynamicGridLayout rows I \nL141:   iconst_1 \nL142:   isub \nL143:   iconst_0 \nL144:   invokevirtual Method DynamicGridLayout setRowSizes (III)V \nL147:   goto L220 \n\n        .stack same \nL150:   iconst_0 \nL151:   istore_2 \n\n        .stack append Integer \nL152:   iload_2 \nL153:   aload_0 \nL154:   getfield Field DynamicGridLayout cols I \nL157:   if_icmpge L220 \nL160:   aload_0 \nL161:   iload_2 \nL162:   iconst_3 \nL163:   invokevirtual Method DynamicGridLayout setColumnAlignment (II)V \nL166:   aload_0 \nL167:   iload_2 \nL168:   iconst_m1 \nL169:   invokevirtual Method DynamicGridLayout setColumnSize (II)V \nL172:   iload_1 \nL173:   bipush 6 \nL175:   if_icmpne L197 \nL178:   aload_0 \nL179:   iload_2 \nL180:   iconst_1 \nL181:   iadd \nL182:   iconst_0 \nL183:   invokevirtual Method DynamicGridLayout setColumnAlignment (II)V \nL186:   aload_0 \nL187:   iload_2 \nL188:   iconst_1 \nL189:   iadd \nL190:   iconst_0 \nL191:   invokevirtual Method DynamicGridLayout setColumnSize (II)V \nL194:   goto L214 \n\n        .stack same \nL197:   aload_0 \nL198:   iload_2 \nL199:   iconst_1 \nL200:   iadd \nL201:   iconst_2 \nL202:   invokevirtual Method DynamicGridLayout setColumnAlignment (II)V \nL205:   aload_0 \nL206:   iload_2 \nL207:   iconst_1 \nL208:   iadd \nL209:   bipush -3 \nL211:   invokevirtual Method DynamicGridLayout setColumnSize (II)V \n\n        .stack same \nL214:   iinc 2 2 \nL217:   goto L152 \n\n        .stack chop 1 \nL220:   return \nL221:   \n        .linenumbertable \n            L0 266 \n            L48 269 \n            L60 270 \n            L72 271 \n            L84 272 \n            L96 273 \n            L99 275 \n            L111 276 \n            L123 277 \n            L135 278 \n            L147 279 \n            L150 282 \n            L160 284 \n            L166 285 \n            L172 286 \n            L178 288 \n            L186 289 \n            L197 293 \n            L205 294 \n            L214 282 \n            L220 299 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setHorizontalAlignment : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field DynamicGridLayout horiz_align I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 316 \n            L5 317 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setVerticalAlignment : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field DynamicGridLayout vert_align I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 334 \n            L5 335 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRowAlignment : (II)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     getfield Field DynamicGridLayout row_align [I \nL4:     iload_1 \nL5:     iload_2 \nL6:     iastore \nL7:     return \nL8:     \n        .linenumbertable \n            L0 353 \n            L7 354 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRowAlignments : (III)V \n    .code stack 3 locals 5 \nL0:     iload_1 \nL1:     istore 4 \n\n        .stack append Integer \nL3:     iload 4 \nL5:     iload_2 \nL6:     if_icmpgt L23 \nL9:     aload_0 \nL10:    getfield Field DynamicGridLayout row_align [I \nL13:    iload 4 \nL15:    iload_3 \nL16:    iastore \nL17:    iinc 4 1 \nL20:    goto L3 \n\n        .stack chop 1 \nL23:    return \nL24:    \n        .linenumbertable \n            L0 366 \n            L9 367 \n            L17 366 \n            L23 368 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setColumnAlignment : (II)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     getfield Field DynamicGridLayout col_align [I \nL4:     iload_1 \nL5:     iload_2 \nL6:     iastore \nL7:     return \nL8:     \n        .linenumbertable \n            L0 387 \n            L7 388 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setColumnAlignments : (III)V \n    .code stack 3 locals 5 \nL0:     iload_1 \nL1:     istore 4 \n\n        .stack append Integer \nL3:     iload 4 \nL5:     iload_2 \nL6:     if_icmpgt L23 \nL9:     aload_0 \nL10:    getfield Field DynamicGridLayout col_align [I \nL13:    iload 4 \nL15:    iload_3 \nL16:    iastore \nL17:    iinc 4 1 \nL20:    goto L3 \n\n        .stack chop 1 \nL23:    return \nL24:    \n        .linenumbertable \n            L0 400 \n            L9 401 \n            L17 400 \n            L23 402 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRowSize : (II)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     getfield Field DynamicGridLayout row_size [I \nL4:     iload_1 \nL5:     iload_2 \nL6:     iastore \nL7:     return \nL8:     \n        .linenumbertable \n            L0 430 \n            L7 431 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRowSizes : (III)V \n    .code stack 3 locals 5 \nL0:     iload_1 \nL1:     istore 4 \n\n        .stack append Integer \nL3:     iload 4 \nL5:     iload_2 \nL6:     if_icmpgt L23 \nL9:     aload_0 \nL10:    getfield Field DynamicGridLayout row_size [I \nL13:    iload 4 \nL15:    iload_3 \nL16:    iastore \nL17:    iinc 4 1 \nL20:    goto L3 \n\n        .stack chop 1 \nL23:    return \nL24:    \n        .linenumbertable \n            L0 443 \n            L9 444 \n            L17 443 \n            L23 445 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setColumnSize : (II)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     getfield Field DynamicGridLayout col_size [I \nL4:     iload_1 \nL5:     iload_2 \nL6:     iastore \nL7:     return \nL8:     \n        .linenumbertable \n            L0 473 \n            L7 474 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setColumnSizes : (III)V \n    .code stack 3 locals 5 \nL0:     iload_1 \nL1:     istore 4 \n\n        .stack append Integer \nL3:     iload 4 \nL5:     iload_2 \nL6:     if_icmpgt L23 \nL9:     aload_0 \nL10:    getfield Field DynamicGridLayout col_size [I \nL13:    iload 4 \nL15:    iload_3 \nL16:    iastore \nL17:    iinc 4 1 \nL20:    goto L3 \n\n        .stack chop 1 \nL23:    return \nL24:    \n        .linenumbertable \n            L0 486 \n            L9 487 \n            L17 486 \n            L23 488 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public addLayoutComponent : (Ljava/lang/String;Ljava/awt/Component;)V \n    .code stack 0 locals 3 \nL0:     return \nL1:     \n        .linenumbertable \n            L0 496 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public removeLayoutComponent : (Ljava/awt/Component;)V \n    .code stack 0 locals 2 \nL0:     return \nL1:     \n        .linenumbertable \n            L0 503 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private getWidthsAndHeights : (Ljava/awt/Container;Z)V \n    .code stack 4 locals 7 \nL0:     aload_1 \nL1:     invokevirtual Method java/awt/Container getComponentCount ()I \nL4:     istore_3 \nL5:     aload_0 \nL6:     aload_0 \nL7:     getfield Field DynamicGridLayout cols I \nL10:    newarray int \nL12:    putfield Field DynamicGridLayout col_width [I \nL15:    aload_0 \nL16:    aload_0 \nL17:    getfield Field DynamicGridLayout rows I \nL20:    newarray int \nL22:    putfield Field DynamicGridLayout row_height [I \nL25:    iconst_0 \nL26:    istore 4 \n\n        .stack append Integer Integer \nL28:    iload 4 \nL30:    iload_3 \nL31:    if_icmpge L157 \nL34:    iload 4 \nL36:    aload_0 \nL37:    getfield Field DynamicGridLayout rows I \nL40:    aload_0 \nL41:    getfield Field DynamicGridLayout cols I \nL44:    imul \nL45:    if_icmpge L157 \nL48:    aload_1 \nL49:    iload 4 \nL51:    invokevirtual Method java/awt/Container getComponent (I)Ljava/awt/Component; \nL54:    astore 5 \nL56:    iload_2 \nL57:    ifeq L70 \nL60:    aload 5 \nL62:    invokevirtual Method java/awt/Component getPreferredSize ()Ljava/awt/Dimension; \nL65:    astore 6 \nL67:    goto L77 \n\n        .stack append Object java/awt/Component \nL70:    aload 5 \nL72:    invokevirtual Method java/awt/Component getMinimumSize ()Ljava/awt/Dimension; \nL75:    astore 6 \n\n        .stack append Object java/awt/Dimension \nL77:    aload 6 \nL79:    getfield Field java/awt/Dimension width I \nL82:    aload_0 \nL83:    getfield Field DynamicGridLayout col_width [I \nL86:    iload 4 \nL88:    aload_0 \nL89:    getfield Field DynamicGridLayout cols I \nL92:    irem \nL93:    iaload \nL94:    if_icmple L114 \nL97:    aload_0 \nL98:    getfield Field DynamicGridLayout col_width [I \nL101:   iload 4 \nL103:   aload_0 \nL104:   getfield Field DynamicGridLayout cols I \nL107:   irem \nL108:   aload 6 \nL110:   getfield Field java/awt/Dimension width I \nL113:   iastore \n\n        .stack same \nL114:   aload 6 \nL116:   getfield Field java/awt/Dimension height I \nL119:   aload_0 \nL120:   getfield Field DynamicGridLayout row_height [I \nL123:   iload 4 \nL125:   aload_0 \nL126:   getfield Field DynamicGridLayout cols I \nL129:   idiv \nL130:   iaload \nL131:   if_icmple L151 \nL134:   aload_0 \nL135:   getfield Field DynamicGridLayout row_height [I \nL138:   iload 4 \nL140:   aload_0 \nL141:   getfield Field DynamicGridLayout cols I \nL144:   idiv \nL145:   aload 6 \nL147:   getfield Field java/awt/Dimension height I \nL150:   iastore \n\n        .stack chop 2 \nL151:   iinc 4 1 \nL154:   goto L28 \n\n        .stack chop 1 \nL157:   return \nL158:   \n        .linenumbertable \n            L0 513 \n            L5 514 \n            L15 515 \n            L25 517 \n            L48 519 \n            L56 521 \n            L60 522 \n            L70 524 \n            L77 525 \n            L97 526 \n            L114 527 \n            L134 528 \n            L151 517 \n            L157 530 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private getMaximumSize : ([I[I)I \n    .code stack 3 locals 9 \nL0:     iconst_0 \nL1:     istore_3 \nL2:     iconst_0 \nL3:     istore 4 \nL5:     iconst_0 \nL6:     istore 6 \nL8:     aload_1 \nL9:     arraylength \nL10:    istore 7 \nL12:    iconst_0 \nL13:    istore 8 \n\n        .stack full \n            locals Object DynamicGridLayout Object [I Object [I Integer Integer Top Integer Integer Integer \n            stack \n        .end stack \nL15:    iload 8 \nL17:    iload 7 \nL19:    if_icmpge L79 \nL22:    aload_1 \nL23:    iload 8 \nL25:    iaload \nL26:    ifle L64 \nL29:    aload_2 \nL30:    iload 8 \nL32:    iaload \nL33:    bipush 100 \nL35:    imul \nL36:    aload_1 \nL37:    iload 8 \nL39:    iaload \nL40:    idiv \nL41:    istore 5 \nL43:    iload 5 \nL45:    iload 6 \nL47:    if_icmple L54 \nL50:    iload 5 \nL52:    istore 6 \n\n        .stack full \n            locals Object DynamicGridLayout Object [I Object [I Integer Integer Integer Integer Integer Integer \n            stack \n        .end stack \nL54:    iload_3 \nL55:    aload_2 \nL56:    iload 8 \nL58:    iaload \nL59:    iadd \nL60:    istore_3 \nL61:    goto L73 \n\n        .stack full \n            locals Object DynamicGridLayout Object [I Object [I Integer Integer Top Integer Integer Integer \n            stack \n        .end stack \nL64:    iload 4 \nL66:    aload_2 \nL67:    iload 8 \nL69:    iaload \nL70:    iadd \nL71:    istore 4 \n\n        .stack same \nL73:    iinc 8 1 \nL76:    goto L15 \n\n        .stack chop 1 \nL79:    iload 4 \nL81:    bipush 100 \nL83:    imul \nL84:    bipush 100 \nL86:    iload_3 \nL87:    isub \nL88:    idiv \nL89:    istore 5 \nL91:    iload 5 \nL93:    iload 6 \nL95:    if_icmple L102 \nL98:    iload 5 \nL100:   istore 6 \n\n        .stack full \n            locals Object DynamicGridLayout Object [I Object [I Integer Integer Integer Integer Integer \n            stack \n        .end stack \nL102:   iload 6 \nL104:   ireturn \nL105:   \n        .linenumbertable \n            L0 534 \n            L2 535 \n            L5 537 \n            L8 538 \n            L12 539 \n            L22 541 \n            L29 543 \n            L43 544 \n            L50 545 \n            L54 546 \n            L64 549 \n            L73 539 \n            L79 551 \n            L91 552 \n            L98 553 \n            L102 554 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private spaceOut : (I[I[I)I \n    .code stack 5 locals 13 \nL0:     iconst_0 \nL1:     istore 4 \nL3:     iconst_0 \nL4:     istore 5 \nL6:     aload_2 \nL7:     arraylength \nL8:     istore 6 \nL10:    iload_1 \nL11:    istore 7 \nL13:    iconst_0 \nL14:    istore 8 \nL16:    iconst_0 \nL17:    istore 9 \nL19:    iconst_0 \nL20:    istore 10 \n\n        .stack full \n            locals Object DynamicGridLayout Integer Object [I Object [I Integer Integer Integer Integer Integer Integer Integer \n            stack \n        .end stack \nL22:    iload 10 \nL24:    iload 6 \nL26:    if_icmpge L167 \nL29:    aload_2 \nL30:    iload 10 \nL32:    iaload \nL33:    ifle L61 \nL36:    aload_3 \nL37:    iload 10 \nL39:    iload_1 \nL40:    aload_2 \nL41:    iload 10 \nL43:    iaload \nL44:    imul \nL45:    bipush 100 \nL47:    idiv \nL48:    iastore \nL49:    iload 7 \nL51:    aload_3 \nL52:    iload 10 \nL54:    iaload \nL55:    isub \nL56:    istore 7 \nL58:    goto L161 \n\n        .stack same \nL61:    aload_2 \nL62:    iload 10 \nL64:    iaload \nL65:    ifeq L86 \nL68:    aload_2 \nL69:    iload 10 \nL71:    iaload \nL72:    bipush -2 \nL74:    if_icmpeq L86 \nL77:    aload_2 \nL78:    iload 10 \nL80:    iaload \nL81:    bipush -5 \nL83:    if_icmpne L126 \n\n        .stack same \nL86:    aload_2 \nL87:    iload 10 \nL89:    iaload \nL90:    bipush -5 \nL92:    if_icmpne L101 \nL95:    aload_2 \nL96:    iload 10 \nL98:    bipush -2 \nL100:   iastore \n\n        .stack same \nL101:   aload_2 \nL102:   iload 10 \nL104:   iaload \nL105:   ifeq L111 \nL108:   iconst_1 \nL109:   istore 8 \n\n        .stack same \nL111:   iload 4 \nL113:   aload_3 \nL114:   iload 10 \nL116:   iaload \nL117:   iadd \nL118:   istore 4 \nL120:   iinc 5 1 \nL123:   goto L161 \n\n        .stack same \nL126:   aload_2 \nL127:   iload 10 \nL129:   iaload \nL130:   bipush -6 \nL132:   if_icmpne L141 \nL135:   aload_2 \nL136:   iload 10 \nL138:   bipush -3 \nL140:   iastore \n\n        .stack same \nL141:   aload_2 \nL142:   iload 10 \nL144:   iaload \nL145:   iconst_m1 \nL146:   if_icmpeq L152 \nL149:   iconst_1 \nL150:   istore 9 \n\n        .stack same \nL152:   iload 7 \nL154:   aload_3 \nL155:   iload 10 \nL157:   iaload \nL158:   isub \nL159:   istore 7 \n\n        .stack same \nL161:   iinc 10 1 \nL164:   goto L22 \n\n        .stack chop 1 \nL167:   iload 9 \nL169:   ifeq L243 \nL172:   iconst_0 \nL173:   istore 10 \n\n        .stack append Integer \nL175:   iload 10 \nL177:   iload 6 \nL179:   if_icmpge L243 \nL182:   aload_2 \nL183:   iload 10 \nL185:   iaload \nL186:   bipush -3 \nL188:   if_icmpne L237 \nL191:   iload 7 \nL193:   aload_3 \nL194:   iload 10 \nL196:   iaload \nL197:   iadd \nL198:   iload 4 \nL200:   aload_3 \nL201:   iload 10 \nL203:   iaload \nL204:   iadd \nL205:   idiv \nL206:   iconst_1 \nL207:   if_icmpge L237 \nL210:   aload_2 \nL211:   iload 10 \nL213:   bipush -6 \nL215:   iastore \nL216:   iload 4 \nL218:   aload_3 \nL219:   iload 10 \nL221:   iaload \nL222:   iadd \nL223:   istore 4 \nL225:   iload 7 \nL227:   aload_3 \nL228:   iload 10 \nL230:   iaload \nL231:   iadd \nL232:   istore 7 \nL234:   iinc 5 1 \n\n        .stack same \nL237:   iinc 10 1 \nL240:   goto L175 \n\n        .stack chop 1 \nL243:   iload 8 \nL245:   ifeq L319 \nL248:   iconst_0 \nL249:   istore 10 \n\n        .stack append Integer \nL251:   iload 10 \nL253:   iload 6 \nL255:   if_icmpge L319 \nL258:   aload_2 \nL259:   iload 10 \nL261:   iaload \nL262:   bipush -2 \nL264:   if_icmpne L313 \nL267:   iload 7 \nL269:   aload_3 \nL270:   iload 10 \nL272:   iaload \nL273:   isub \nL274:   iload 4 \nL276:   aload_3 \nL277:   iload 10 \nL279:   iaload \nL280:   isub \nL281:   idiv \nL282:   iconst_1 \nL283:   if_icmpge L313 \nL286:   aload_2 \nL287:   iload 10 \nL289:   bipush -5 \nL291:   iastore \nL292:   iload 4 \nL294:   aload_3 \nL295:   iload 10 \nL297:   iaload \nL298:   isub \nL299:   istore 4 \nL301:   iload 7 \nL303:   aload_3 \nL304:   iload 10 \nL306:   iaload \nL307:   isub \nL308:   istore 7 \nL310:   iinc 5 -1 \n\n        .stack same \nL313:   iinc 10 1 \nL316:   goto L251 \n\n        .stack chop 1 \nL319:   iload 5 \nL321:   ifle L427 \nL324:   iload 7 \nL326:   istore 10 \nL328:   iconst_m1 \nL329:   istore 11 \nL331:   iconst_0 \nL332:   istore 12 \n\n        .stack append Integer Integer Integer \nL334:   iload 12 \nL336:   iload 6 \nL338:   if_icmpge L416 \nL341:   aload_2 \nL342:   iload 12 \nL344:   iaload \nL345:   ifeq L366 \nL348:   aload_2 \nL349:   iload 12 \nL351:   iaload \nL352:   bipush -6 \nL354:   if_icmpeq L366 \nL357:   aload_2 \nL358:   iload 12 \nL360:   iaload \nL361:   bipush -2 \nL363:   if_icmpne L410 \n\n        .stack same \nL366:   iload 4 \nL368:   ifne L379 \nL371:   aload_3 \nL372:   iload 12 \nL374:   iconst_0 \nL375:   iastore \nL376:   goto L397 \n\n        .stack same \nL379:   aload_3 \nL380:   iload 12 \nL382:   aload_3 \nL383:   iload 12 \nL385:   iaload \nL386:   iload 7 \nL388:   imul \nL389:   iload 4 \nL391:   idiv \nL392:   i2f \nL393:   invokestatic Method java/lang/Math round (F)I \nL396:   iastore \n\n        .stack same \nL397:   iload 10 \nL399:   aload_3 \nL400:   iload 12 \nL402:   iaload \nL403:   isub \nL404:   istore 10 \nL406:   iload 12 \nL408:   istore 11 \n\n        .stack same \nL410:   iinc 12 1 \nL413:   goto L334 \n\n        .stack chop 1 \nL416:   aload_3 \nL417:   iload 11 \nL419:   dup2 \nL420:   iaload \nL421:   iload 10 \nL423:   iadd \nL424:   iastore \nL425:   iconst_0 \nL426:   ireturn \n\n        .stack chop 2 \nL427:   iload 7 \nL429:   ifge L434 \nL432:   iconst_0 \nL433:   ireturn \n\n        .stack same \nL434:   iload 7 \nL436:   ireturn \nL437:   \n        .linenumbertable \n            L0 566 \n            L3 567 \n            L6 568 \n            L10 569 \n            L13 570 \n            L16 571 \n            L19 572 \n            L29 574 \n            L36 576 \n            L49 577 \n            L61 580 \n            L86 582 \n            L95 583 \n            L101 584 \n            L108 585 \n            L111 586 \n            L120 587 \n            L126 591 \n            L135 592 \n            L141 593 \n            L149 594 \n            L152 595 \n            L161 572 \n            L167 598 \n            L172 599 \n            L182 600 \n            L210 602 \n            L216 603 \n            L225 604 \n            L234 605 \n            L237 599 \n            L243 607 \n            L248 608 \n            L258 610 \n            L286 612 \n            L292 613 \n            L301 614 \n            L310 615 \n            L313 608 \n            L319 618 \n            L324 620 \n            L328 621 \n            L331 622 \n            L341 623 \n            L366 625 \n            L371 626 \n            L379 628 \n            L397 629 \n            L406 630 \n            L410 622 \n            L416 633 \n            L425 634 \n            L427 636 \n            L432 637 \n            L434 639 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private placeComponent : (Ljava/awt/Component;IIIIII)V \n    .code stack 6 locals 9 \nL0:     aload_1 \nL1:     invokevirtual Method java/awt/Component getPreferredSize ()Ljava/awt/Dimension; \nL4:     astore 8 \nL6:     iload 6 \nL8:     ifeq L75 \nL11:    aload 8 \nL13:    getfield Field java/awt/Dimension height I \nL16:    iload 5 \nL18:    if_icmpge L75 \nL21:    iload 6 \nL23:    iconst_1 \nL24:    if_icmpne L51 \nL27:    iload_3 \nL28:    i2l \nL29:    iload 5 \nL31:    aload 8 \nL33:    getfield Field java/awt/Dimension height I \nL36:    isub \nL37:    i2d \nL38:    ldc2_w +2.0 \nL41:    ddiv \nL42:    invokestatic Method java/lang/Math round (D)J \nL45:    ladd \nL46:    l2i \nL47:    istore_3 \nL48:    goto L68 \n\n        .stack append Object java/awt/Dimension \nL51:    iload 6 \nL53:    iconst_5 \nL54:    if_icmpne L68 \nL57:    iload_3 \nL58:    iload 5 \nL60:    aload 8 \nL62:    getfield Field java/awt/Dimension height I \nL65:    isub \nL66:    iadd \nL67:    istore_3 \n\n        .stack same \nL68:    aload 8 \nL70:    getfield Field java/awt/Dimension height I \nL73:    istore 5 \n\n        .stack same \nL75:    iload 7 \nL77:    ifeq L144 \nL80:    aload 8 \nL82:    getfield Field java/awt/Dimension width I \nL85:    iload 4 \nL87:    if_icmpge L144 \nL90:    iload 7 \nL92:    iconst_1 \nL93:    if_icmpne L120 \nL96:    iload_2 \nL97:    i2l \nL98:    iload 4 \nL100:   aload 8 \nL102:   getfield Field java/awt/Dimension width I \nL105:   isub \nL106:   i2d \nL107:   ldc2_w +2.0 \nL110:   ddiv \nL111:   invokestatic Method java/lang/Math round (D)J \nL114:   ladd \nL115:   l2i \nL116:   istore_2 \nL117:   goto L137 \n\n        .stack same \nL120:   iload 7 \nL122:   iconst_3 \nL123:   if_icmpne L137 \nL126:   iload_2 \nL127:   iload 4 \nL129:   aload 8 \nL131:   getfield Field java/awt/Dimension width I \nL134:   isub \nL135:   iadd \nL136:   istore_2 \n\n        .stack same \nL137:   aload 8 \nL139:   getfield Field java/awt/Dimension width I \nL142:   istore 4 \n\n        .stack same \nL144:   aload_1 \nL145:   iload_2 \nL146:   iload_3 \nL147:   iload 4 \nL149:   iload 5 \nL151:   invokevirtual Method java/awt/Component setBounds (IIII)V \nL154:   return \nL155:   \n        .linenumbertable \n            L0 644 \n            L6 645 \n            L21 647 \n            L27 648 \n            L51 650 \n            L57 651 \n            L68 652 \n            L75 654 \n            L90 656 \n            L96 657 \n            L120 659 \n            L126 660 \n            L137 661 \n            L144 663 \n            L154 664 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public preferredLayoutSize : (Ljava/awt/Container;)Ljava/awt/Dimension; \n    .code stack 6 locals 5 \nL0:     aload_0 \nL1:     aload_1 \nL2:     iconst_1 \nL3:     invokespecial Method DynamicGridLayout getWidthsAndHeights (Ljava/awt/Container;Z)V \nL6:     aload_0 \nL7:     aload_0 \nL8:     getfield Field DynamicGridLayout col_size [I \nL11:    aload_0 \nL12:    getfield Field DynamicGridLayout col_width [I \nL15:    invokespecial Method DynamicGridLayout getMaximumSize ([I[I)I \nL18:    istore_2 \nL19:    aload_0 \nL20:    aload_0 \nL21:    getfield Field DynamicGridLayout row_size [I \nL24:    aload_0 \nL25:    getfield Field DynamicGridLayout row_height [I \nL28:    invokespecial Method DynamicGridLayout getMaximumSize ([I[I)I \nL31:    istore_3 \nL32:    aload_1 \nL33:    invokevirtual Method java/awt/Container getInsets ()Ljava/awt/Insets; \nL36:    astore 4 \nL38:    new java/awt/Dimension \nL41:    dup \nL42:    aload 4 \nL44:    getfield Field java/awt/Insets left I \nL47:    aload 4 \nL49:    getfield Field java/awt/Insets right I \nL52:    iadd \nL53:    iload_2 \nL54:    iadd \nL55:    aload_0 \nL56:    getfield Field DynamicGridLayout cols I \nL59:    iconst_1 \nL60:    isub \nL61:    aload_0 \nL62:    getfield Field DynamicGridLayout hgap I \nL65:    imul \nL66:    iadd \nL67:    aload 4 \nL69:    getfield Field java/awt/Insets top I \nL72:    aload 4 \nL74:    getfield Field java/awt/Insets bottom I \nL77:    iadd \nL78:    iload_3 \nL79:    iadd \nL80:    aload_0 \nL81:    getfield Field DynamicGridLayout rows I \nL84:    iconst_1 \nL85:    isub \nL86:    aload_0 \nL87:    getfield Field DynamicGridLayout vgap I \nL90:    imul \nL91:    iadd \nL92:    invokespecial Method java/awt/Dimension <init> (II)V \nL95:    areturn \nL96:    \n        .linenumbertable \n            L0 687 \n            L6 688 \n            L19 689 \n            L32 690 \n            L38 691 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public minimumLayoutSize : (Ljava/awt/Container;)Ljava/awt/Dimension; \n    .code stack 6 locals 5 \nL0:     aload_0 \nL1:     aload_1 \nL2:     iconst_0 \nL3:     invokespecial Method DynamicGridLayout getWidthsAndHeights (Ljava/awt/Container;Z)V \nL6:     aload_0 \nL7:     aload_0 \nL8:     getfield Field DynamicGridLayout col_size [I \nL11:    aload_0 \nL12:    getfield Field DynamicGridLayout col_width [I \nL15:    invokespecial Method DynamicGridLayout getMaximumSize ([I[I)I \nL18:    istore_2 \nL19:    aload_0 \nL20:    aload_0 \nL21:    getfield Field DynamicGridLayout row_size [I \nL24:    aload_0 \nL25:    getfield Field DynamicGridLayout row_height [I \nL28:    invokespecial Method DynamicGridLayout getMaximumSize ([I[I)I \nL31:    istore_3 \nL32:    aload_1 \nL33:    invokevirtual Method java/awt/Container getInsets ()Ljava/awt/Insets; \nL36:    astore 4 \nL38:    new java/awt/Dimension \nL41:    dup \nL42:    aload 4 \nL44:    getfield Field java/awt/Insets left I \nL47:    aload 4 \nL49:    getfield Field java/awt/Insets right I \nL52:    iadd \nL53:    iload_2 \nL54:    iadd \nL55:    aload_0 \nL56:    getfield Field DynamicGridLayout cols I \nL59:    iconst_1 \nL60:    isub \nL61:    aload_0 \nL62:    getfield Field DynamicGridLayout hgap I \nL65:    imul \nL66:    iadd \nL67:    aload 4 \nL69:    getfield Field java/awt/Insets top I \nL72:    aload 4 \nL74:    getfield Field java/awt/Insets bottom I \nL77:    iadd \nL78:    iload_3 \nL79:    iadd \nL80:    aload_0 \nL81:    getfield Field DynamicGridLayout rows I \nL84:    iconst_1 \nL85:    isub \nL86:    aload_0 \nL87:    getfield Field DynamicGridLayout vgap I \nL90:    imul \nL91:    iadd \nL92:    invokespecial Method java/awt/Dimension <init> (II)V \nL95:    areturn \nL96:    \n        .linenumbertable \n            L0 716 \n            L6 717 \n            L19 718 \n            L32 719 \n            L38 720 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public layoutContainer : (Ljava/awt/Container;)V \n    .code stack 9 locals 16 \nL0:     aload_1 \nL1:     invokevirtual Method java/awt/Container getInsets ()Ljava/awt/Insets; \nL4:     astore_2 \nL5:     aload_1 \nL6:     invokevirtual Method java/awt/Container getComponentCount ()I \nL9:     istore_3 \nL10:    aload_1 \nL11:    invokevirtual Method java/awt/Container getSize ()Ljava/awt/Dimension; \nL14:    astore 4 \nL16:    aload 4 \nL18:    getfield Field java/awt/Dimension width I \nL21:    aload_2 \nL22:    getfield Field java/awt/Insets left I \nL25:    aload_2 \nL26:    getfield Field java/awt/Insets right I \nL29:    iadd \nL30:    isub \nL31:    istore 5 \nL33:    aload 4 \nL35:    getfield Field java/awt/Dimension height I \nL38:    aload_2 \nL39:    getfield Field java/awt/Insets top I \nL42:    aload_2 \nL43:    getfield Field java/awt/Insets bottom I \nL46:    iadd \nL47:    isub \nL48:    istore 6 \nL50:    iload 5 \nL52:    aload_0 \nL53:    getfield Field DynamicGridLayout cols I \nL56:    iconst_1 \nL57:    isub \nL58:    aload_0 \nL59:    getfield Field DynamicGridLayout hgap I \nL62:    imul \nL63:    isub \nL64:    istore 5 \nL66:    iload 6 \nL68:    aload_0 \nL69:    getfield Field DynamicGridLayout rows I \nL72:    iconst_1 \nL73:    isub \nL74:    aload_0 \nL75:    getfield Field DynamicGridLayout vgap I \nL78:    imul \nL79:    isub \nL80:    istore 6 \nL82:    aload_0 \nL83:    aload_1 \nL84:    iconst_1 \nL85:    invokespecial Method DynamicGridLayout getWidthsAndHeights (Ljava/awt/Container;Z)V \nL88:    aload_0 \nL89:    iload 6 \nL91:    aload_0 \nL92:    getfield Field DynamicGridLayout row_size [I \nL95:    aload_0 \nL96:    getfield Field DynamicGridLayout row_height [I \nL99:    invokespecial Method DynamicGridLayout spaceOut (I[I[I)I \nL102:   istore 7 \nL104:   aload_0 \nL105:   iload 5 \nL107:   aload_0 \nL108:   getfield Field DynamicGridLayout col_size [I \nL111:   aload_0 \nL112:   getfield Field DynamicGridLayout col_width [I \nL115:   invokespecial Method DynamicGridLayout spaceOut (I[I[I)I \nL118:   istore 8 \nL120:   iconst_0 \nL121:   istore 9 \nL123:   aload_0 \nL124:   getfield Field DynamicGridLayout horiz_align I \nL127:   lookupswitch \n            1 : L152 \n            3 : L168 \n            default : L172 \n\n\n        .stack full \n            locals Object DynamicGridLayout Object java/awt/Container Object java/awt/Insets Integer Object java/awt/Dimension Integer Integer Integer Integer Integer \n            stack \n        .end stack \nL152:   iload 8 \nL154:   i2d \nL155:   ldc2_w +2.0 \nL158:   ddiv \nL159:   invokestatic Method java/lang/Math round (D)J \nL162:   l2i \nL163:   istore 9 \nL165:   goto L172 \n\n        .stack same \nL168:   iload 8 \nL170:   istore 9 \n\n        .stack same \nL172:   iconst_0 \nL173:   istore 10 \nL175:   aload_0 \nL176:   getfield Field DynamicGridLayout vert_align I \nL179:   lookupswitch \n            1 : L204 \n            5 : L220 \n            default : L224 \n\n\n        .stack append Integer \nL204:   iload 7 \nL206:   i2d \nL207:   ldc2_w +2.0 \nL210:   ddiv \nL211:   invokestatic Method java/lang/Math round (D)J \nL214:   l2i \nL215:   istore 10 \nL217:   goto L224 \n\n        .stack same \nL220:   iload 7 \nL222:   istore 10 \n\n        .stack same \nL224:   iconst_0 \nL225:   istore 11 \nL227:   aload_2 \nL228:   getfield Field java/awt/Insets left I \nL231:   iload 9 \nL233:   iadd \nL234:   istore 12 \n\n        .stack append Integer Integer \nL236:   iload 11 \nL238:   aload_0 \nL239:   getfield Field DynamicGridLayout cols I \nL242:   if_icmpge L372 \nL245:   iconst_0 \nL246:   istore 13 \nL248:   aload_2 \nL249:   getfield Field java/awt/Insets top I \nL252:   iload 10 \nL254:   iadd \nL255:   istore 14 \n\n        .stack append Integer Integer \nL257:   iload 13 \nL259:   aload_0 \nL260:   getfield Field DynamicGridLayout rows I \nL263:   if_icmpge L349 \nL266:   iload 13 \nL268:   aload_0 \nL269:   getfield Field DynamicGridLayout cols I \nL272:   imul \nL273:   iload 11 \nL275:   iadd \nL276:   istore 15 \nL278:   iload 15 \nL280:   iload_3 \nL281:   if_icmpge L326 \nL284:   aload_0 \nL285:   aload_1 \nL286:   iload 15 \nL288:   invokevirtual Method java/awt/Container getComponent (I)Ljava/awt/Component; \nL291:   iload 12 \nL293:   iload 14 \nL295:   aload_0 \nL296:   getfield Field DynamicGridLayout col_width [I \nL299:   iload 11 \nL301:   iaload \nL302:   aload_0 \nL303:   getfield Field DynamicGridLayout row_height [I \nL306:   iload 13 \nL308:   iaload \nL309:   aload_0 \nL310:   getfield Field DynamicGridLayout row_align [I \nL313:   iload 13 \nL315:   iaload \nL316:   aload_0 \nL317:   getfield Field DynamicGridLayout col_align [I \nL320:   iload 11 \nL322:   iaload \nL323:   invokespecial Method DynamicGridLayout placeComponent (Ljava/awt/Component;IIIIII)V \n\n        .stack same_extended \nL326:   iload 14 \nL328:   aload_0 \nL329:   getfield Field DynamicGridLayout row_height [I \nL332:   iload 13 \nL334:   iinc 13 1 \nL337:   iaload \nL338:   aload_0 \nL339:   getfield Field DynamicGridLayout vgap I \nL342:   iadd \nL343:   iadd \nL344:   istore 14 \nL346:   goto L257 \n\n        .stack chop 2 \nL349:   iload 12 \nL351:   aload_0 \nL352:   getfield Field DynamicGridLayout col_width [I \nL355:   iload 11 \nL357:   iinc 11 1 \nL360:   iaload \nL361:   aload_0 \nL362:   getfield Field DynamicGridLayout hgap I \nL365:   iadd \nL366:   iadd \nL367:   istore 12 \nL369:   goto L236 \n\n        .stack chop 2 \nL372:   return \nL373:   \n        .linenumbertable \n            L0 744 \n            L5 745 \n            L10 746 \n            L16 748 \n            L33 749 \n            L50 750 \n            L66 751 \n            L82 752 \n            L88 754 \n            L104 755 \n            L120 756 \n            L123 757 \n            L152 760 \n            L165 761 \n            L168 763 \n            L172 767 \n            L175 768 \n            L204 771 \n            L217 772 \n            L220 774 \n            L224 778 \n            L245 780 \n            L266 782 \n            L278 783 \n            L284 784 \n            L326 780 \n            L349 778 \n            L372 787 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     aload_0 \nL8:     invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL11:    invokevirtual Method java/lang/Class getName ()Ljava/lang/String; \nL14:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL17:    ldc '[hgap=' \nL19:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL22:    aload_0 \nL23:    getfield Field DynamicGridLayout hgap I \nL26:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL29:    ldc ',vgap=' \nL31:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL34:    aload_0 \nL35:    getfield Field DynamicGridLayout vgap I \nL38:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL41:    ldc ',rows=' \nL43:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL46:    aload_0 \nL47:    getfield Field DynamicGridLayout rows I \nL50:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL53:    ldc ',cols=' \nL55:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL58:    aload_0 \nL59:    getfield Field DynamicGridLayout cols I \nL62:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL65:    ldc ']' \nL67:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL70:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL73:    areturn \nL74:    \n        .linenumbertable \n            L0 807 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'DynamicGridLayout.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 22:55:45 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.shaded.org.mockito.Mockito.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.awt.AWTEventMulticaster;\nimport java.awt.ComponentOrientation;\nimport java.awt.DefaultFocusTraversalPolicy;\nimport java.awt.HeadlessException;\nimport java.awt.event.HierarchyListener;\nimport java.awt.event.MouseWheelEvent;\nimport java.util.Locale;\nimport javax.swing.BoundedRangeModel;\nimport javax.swing.JFormattedTextField;\nimport javax.swing.JFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuItem;\nimport javax.swing.JPopupMenu;\nimport javax.swing.JSlider;\nimport javax.swing.JTextField;\nimport javax.swing.JToolBar;\nimport javax.swing.SpinnerNumberModel;\nimport javax.swing.text.DefaultCaret;\nimport javax.swing.text.DefaultFormatterFactory;\nimport javax.swing.text.InternationalFormatter;\nimport javax.swing.text.MaskFormatter;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.ViolatedAssumptionAnswer;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class DynamicGridLayout_ESTest extends DynamicGridLayout_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      int int0 = 0;\n      DynamicGridLayout dynamicGridLayout0 = null;\n      try {\n        dynamicGridLayout0 = new DynamicGridLayout(0, 0, 0, 3);\n        fail(\"Expecting exception: IllegalArgumentException\");\n      \n      } catch(IllegalArgumentException e) {\n         //\n         // rows and cols cannot both be zero\n         //\n         verifyException(\"DynamicGridLayout\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      DynamicGridLayout dynamicGridLayout0 = new DynamicGridLayout();\n      JToolBar jToolBar0 = new JToolBar(1);\n      dynamicGridLayout0.removeLayoutComponent(jToolBar0);\n      int int0 = 0;\n      ComponentOrientation componentOrientation0 = ComponentOrientation.LEFT_TO_RIGHT;\n      Locale locale0 = Locale.UK;\n      ComponentOrientation.getOrientation(locale0);\n      jToolBar0.applyComponentOrientation(componentOrientation0);\n      int int1 = 7641;\n      dynamicGridLayout0.setVerticalAlignment(7641);\n      int int2 = (-98940);\n      jToolBar0.getComponentAtIndex((-98940));\n      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();\n      JFrame jFrame0 = null;\n      try {\n        jFrame0 = new JFrame(\"\");\n        fail(\"Expecting exception: HeadlessException\");\n      \n      } catch(HeadlessException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"java.awt.GraphicsEnvironment\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      DynamicGridLayout dynamicGridLayout0 = new DynamicGridLayout();\n      JMenu jMenu0 = new JMenu(\"D`*uiqe.l%W!Y\");\n      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());\n      HierarchyListener hierarchyListener1 = AWTEventMulticaster.add(hierarchyListener0, hierarchyListener0);\n      AWTEventMulticaster.remove(hierarchyListener1, hierarchyListener1);\n      jMenu0.addHierarchyListener((HierarchyListener) null);\n      dynamicGridLayout0.preferredLayoutSize(jMenu0);\n      dynamicGridLayout0.resetGrid();\n      // Undeclared exception!\n      try { \n        dynamicGridLayout0.setRows((-9850));\n        fail(\"Expecting exception: NegativeArraySizeException\");\n      \n      } catch(NegativeArraySizeException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"DynamicGridLayout\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      DynamicGridLayout dynamicGridLayout0 = new DynamicGridLayout();\n      int int0 = 1;\n      dynamicGridLayout0.setVgap(1);\n      // Undeclared exception!\n      try { \n        dynamicGridLayout0.setColumnSizes((-2), (-2), (-16958));\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // -2\n         //\n         verifyException(\"DynamicGridLayout\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      DynamicGridLayout dynamicGridLayout0 = new DynamicGridLayout();\n      int int0 = 109958;\n      // Undeclared exception!\n      try { \n        dynamicGridLayout0.setColumnSize(109958, 109958);\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // 109958\n         //\n         verifyException(\"DynamicGridLayout\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      DynamicGridLayout dynamicGridLayout0 = new DynamicGridLayout(53560, 0, 0, 0);\n      dynamicGridLayout0.getHgap();\n      dynamicGridLayout0.setVerticalAlignment((-39582));\n      JPopupMenu jPopupMenu0 = new JPopupMenu(\"{GAe}_qH(Ur\");\n      dynamicGridLayout0.resetGrid();\n      JMenuItem jMenuItem0 = jPopupMenu0.add(\"{GAe}_qH(Ur\");\n      jMenuItem0.getInputMethodListeners();\n      jMenuItem0.setFocusPainted(false);\n      // Undeclared exception!\n      dynamicGridLayout0.minimumLayoutSize(jMenuItem0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      int int0 = 1;\n      DynamicGridLayout dynamicGridLayout0 = new DynamicGridLayout(1, 1, 1, (-52312));\n      JSlider jSlider0 = null;\n      try {\n        jSlider0 = new JSlider((-2), 77079, 4, 4);\n        fail(\"Expecting exception: IllegalArgumentException\");\n      \n      } catch(IllegalArgumentException e) {\n         //\n         // orientation must be one of: VERTICAL, HORIZONTAL\n         //\n         verifyException(\"javax.swing.JSlider\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      DynamicGridLayout dynamicGridLayout0 = new DynamicGridLayout(1, 1);\n      dynamicGridLayout0.resetGrid();\n      dynamicGridLayout0.toString();\n      dynamicGridLayout0.setHorizontalAlignment((-13571));\n      dynamicGridLayout0.setVgap(63608);\n      // Undeclared exception!\n      try { \n        dynamicGridLayout0.setColumnAlignment(1, (-12640));\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // 1\n         //\n         verifyException(\"DynamicGridLayout\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      int int0 = (-2078);\n      DynamicGridLayout dynamicGridLayout0 = null;\n      try {\n        dynamicGridLayout0 = new DynamicGridLayout((-2078), (-2078));\n        fail(\"Expecting exception: NegativeArraySizeException\");\n      \n      } catch(NegativeArraySizeException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"DynamicGridLayout\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      int int0 = (-1);\n      int int1 = 16857;\n      DynamicGridLayout dynamicGridLayout0 = null;\n      try {\n        dynamicGridLayout0 = new DynamicGridLayout((-1), 0, 16857, (-1));\n        fail(\"Expecting exception: NegativeArraySizeException\");\n      \n      } catch(NegativeArraySizeException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"DynamicGridLayout\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      int int0 = 125449;\n      int int1 = (-62319);\n      DynamicGridLayout dynamicGridLayout0 = null;\n      try {\n        dynamicGridLayout0 = new DynamicGridLayout(125449, (-62319), 125449, 125449);\n        fail(\"Expecting exception: NegativeArraySizeException\");\n      \n      } catch(NegativeArraySizeException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"DynamicGridLayout\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      int int0 = 14781;\n      int int1 = (-2);\n      DynamicGridLayout dynamicGridLayout0 = null;\n      try {\n        dynamicGridLayout0 = new DynamicGridLayout(14781, (-2));\n        fail(\"Expecting exception: NegativeArraySizeException\");\n      \n      } catch(NegativeArraySizeException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"DynamicGridLayout\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      DynamicGridLayout dynamicGridLayout0 = new DynamicGridLayout(3, 27542, 3, 27542);\n      JTextField jTextField0 = new JTextField(\"\");\n      jTextField0.setAlignmentX(0.0F);\n      jTextField0.getGraphics();\n      // Undeclared exception!\n      dynamicGridLayout0.preferredLayoutSize(jTextField0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      int int0 = 0;\n      int int1 = 2;\n      DynamicGridLayout dynamicGridLayout0 = new DynamicGridLayout(0, 2);\n      dynamicGridLayout0.toString();\n      dynamicGridLayout0.setColumnAlignments(2916, 0, 2916);\n      JPopupMenu jPopupMenu0 = new JPopupMenu(\"\");\n      DefaultCaret defaultCaret0 = new DefaultCaret();\n      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jPopupMenu0, (-3), (-1), 0, (-2), 51031, 7, false, (-44158), 2916, (-3));\n      defaultCaret0.mouseMoved(mouseWheelEvent0);\n      SpinnerNumberModel spinnerNumberModel0 = null;\n      try {\n        spinnerNumberModel0 = new SpinnerNumberModel((double) 0, (double) 4, (-30067.442887), (double) 0);\n        fail(\"Expecting exception: IllegalArgumentException\");\n      \n      } catch(IllegalArgumentException e) {\n         //\n         // (minimum <= value <= maximum) is false\n         //\n         verifyException(\"javax.swing.SpinnerNumberModel\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      DynamicGridLayout dynamicGridLayout0 = new DynamicGridLayout();\n      int int0 = 101527;\n      int int1 = 41894;\n      dynamicGridLayout0.setVgap(41894);\n      dynamicGridLayout0.setColumns(41894);\n      int int2 = (-34438);\n      dynamicGridLayout0.setColumnAlignments(101527, 41894, (-34438));\n      int int3 = 38362;\n      dynamicGridLayout0.setColumns(38362);\n      MaskFormatter maskFormatter0 = new MaskFormatter();\n      InternationalFormatter internationalFormatter0 = new InternationalFormatter();\n      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory(maskFormatter0, internationalFormatter0, internationalFormatter0, internationalFormatter0);\n      JFormattedTextField jFormattedTextField0 = new JFormattedTextField((JFormattedTextField.AbstractFormatterFactory) defaultFormatterFactory0);\n      internationalFormatter0.stringToValue(\"^M@g&hm[;bxB]$+P\");\n      BoundedRangeModel boundedRangeModel0 = jFormattedTextField0.getHorizontalVisibility();\n      jFormattedTextField0.postActionEvent();\n      JSlider jSlider0 = new JSlider(boundedRangeModel0);\n      // Undeclared exception!\n      dynamicGridLayout0.layoutContainer(jSlider0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      int int0 = 0;\n      DynamicGridLayout dynamicGridLayout0 = null;\n      try {\n        dynamicGridLayout0 = new DynamicGridLayout(0, 0);\n        fail(\"Expecting exception: IllegalArgumentException\");\n      \n      } catch(IllegalArgumentException e) {\n         //\n         // rows and cols cannot both be zero\n         //\n         verifyException(\"DynamicGridLayout\", e);\n      }\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 22:55:45 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\nimport static org.evosuite.shaded.org.mockito.Mockito.*;\n@EvoSuiteClassExclude\npublic class DynamicGridLayout_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"DynamicGridLayout\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmph_6zouf2\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DynamicGridLayout_ESTest_scaffolding.class.getClassLoader() ,\n      \"DynamicGridLayout\"\n    );\n  } \n  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { \n    mock(Class.forName(\"java.awt.event.HierarchyListener\", false, DynamicGridLayout_ESTest_scaffolding.class.getClassLoader()));\n  }\n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DynamicGridLayout_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"DynamicGridLayout\"\n    );\n  }\n}\n", "class_idx": 13}
{"class_name": "CFichero", "java_source": "/*\n *@author ztc\n */\n\npublic class CFichero {}\n", "jasm_code": ".version 52 0 \n.class public super CFichero \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'CFichero.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 17:45:03 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CFichero_ESTest extends CFichero_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      CFichero cFichero0 = new CFichero();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 17:45:03 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class CFichero_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CFichero\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpkcw05t76\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CFichero_ESTest_scaffolding.class.getClassLoader() ,\n      \"CFichero\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CFichero_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CFichero\"\n    );\n  }\n}\n", "class_idx": 14}
{"class_name": "WorkflowException", "java_source": "/*\n *  Copyright 2008-2013 Hippo B.V. (http://www.onehippo.com)\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * An WorkflowException is thrown when a workflow implementation disallows the workflow step to be\n * taken for some reason.\n */\npublic class WorkflowException extends Exception {\n\n  /**\n   * Constructs a new workflow exception with the specified detail message and without initialized\n   * cause\n   *\n   * @param message the detail message, for later retrieval though getMessage()\n   */\n  public WorkflowException(String message) {\n    super(message);\n  }\n\n  /**\n   * Constructs a new workflow exception with the specified detail message and cause\n   *\n   * @param message the detail message, for later retrieval though getMessage()\n   * @param reason the cause (A null value is permitted, and indicates that the cause is nonexistent\n   *     or unknown)\n   */\n  public WorkflowException(String message, Exception reason) {\n    super(message, reason);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super WorkflowException \n.super java/lang/Exception \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 29 \n            L5 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/Exception;)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     aload_2 \nL3:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;Ljava/lang/Throwable;)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 38 \n            L6 39 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'WorkflowException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 21:13:56 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class WorkflowException_ESTest extends WorkflowException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      WorkflowException workflowException0 = new WorkflowException(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      WorkflowException workflowException0 = new WorkflowException(\"\", (Exception) null);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 21:13:56 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class WorkflowException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"WorkflowException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpoyndk7sd\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(WorkflowException_ESTest_scaffolding.class.getClassLoader() ,\n      \"WorkflowException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(WorkflowException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"WorkflowException\"\n    );\n  }\n}\n", "class_idx": 15}
{"class_name": "PartnerappDomConstants", "java_source": "public class PartnerappDomConstants {\n\n  private PartnerappDomConstants() {}\n\n  public static final String CLASS_TABLE_MAILCONTENT = \"mailContent\";\n\n  public static final String CLASS1_MAILENTRY = \"lightBg\";\n  public static final String CLASS2_MAILENTRY = \"darkBg\";\n\n  public static final String CLASS_MAILTEXT = \"msgText\";\n\n  public static final String PREFIX_MESSAGE_INBOX_UID = \"SubmitMailboxActionForm('inbox','\";\n  public static final String PREFIX_MESSAGE_OUTBOX_UID = \"SubmitMailboxActionForm('outbox','\";\n\n  public static final String ERROR_WRONG_EMAIL =\n      \"Es ist eine ung\u00fcltige Emailadresse von dir bei uns hinterlegt!\";\n}\n", "jasm_code": ".version 52 0 \n.class public super PartnerappDomConstants \n.super java/lang/Object \n.field public static final CLASS_TABLE_MAILCONTENT Ljava/lang/String; = 'mailContent' \n.field public static final CLASS1_MAILENTRY Ljava/lang/String; = 'lightBg' \n.field public static final CLASS2_MAILENTRY Ljava/lang/String; = 'darkBg' \n.field public static final CLASS_MAILTEXT Ljava/lang/String; = 'msgText' \n.field public static final PREFIX_MESSAGE_INBOX_UID Ljava/lang/String; = \"SubmitMailboxActionForm('inbox','\" \n.field public static final PREFIX_MESSAGE_OUTBOX_UID Ljava/lang/String; = \"SubmitMailboxActionForm('outbox','\" \n.field public static final ERROR_WRONG_EMAIL Ljava/lang/String; = 'Es ist eine ung\u00fcltige Emailadresse von dir bei uns hinterlegt!' \n\n.method private <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n            L4 6 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'PartnerappDomConstants.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 08:56:32 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class PartnerappDomConstants_ESTest extends PartnerappDomConstants_ESTest_scaffolding {\n  @Test\n  public void notGeneratedAnyTest() {\n    // EvoSuite did not generate any tests\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 08:56:32 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class PartnerappDomConstants_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"PartnerappDomConstants\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    /*No java.lang.System property to set*/\n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(PartnerappDomConstants_ESTest_scaffolding.class.getClassLoader() ,\n      \"PartnerappDomConstants\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(PartnerappDomConstants_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"PartnerappDomConstants\"\n    );\n  }\n}\n", "class_idx": 16}
{"class_name": "Categorie", "java_source": "/**\n * Beschreibung: Fachklasse f\u00fcr die Abbildung einer Artikelkategorie\n *\n * @author Ansprechpartner Fabian Meise\n */\npublic class Categorie {\n  private int acid;\n  private String name;\n\n  /**\n   * Konstruktor\n   *\n   * @param acid Kategorieid\n   * @param name Kategoriename\n   */\n  public Categorie(int acid, String name) {\n    this.acid = acid;\n    this.name = name;\n  }\n\n  public int getACID() {\n    return acid;\n  }\n\n  public String getName() {\n    return name;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Categorie \n.super java/lang/Object \n.field private acid I \n.field private name Ljava/lang/String; \n\n.method public <init> : (ILjava/lang/String;)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field Categorie acid I \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field Categorie name Ljava/lang/String; \nL14:    return \nL15:    \n        .linenumbertable \n            L0 21 \n            L4 22 \n            L9 23 \n            L14 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getACID : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Categorie acid I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 27 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Categorie name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 31 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Categorie.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 18:15:56 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Categorie_ESTest extends Categorie_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Categorie categorie0 = new Categorie((-46264), (String) null);\n      categorie0.getName();\n      assertEquals((-46264), categorie0.getACID());\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Categorie categorie0 = new Categorie(0, \"]sJO\");\n      categorie0.getName();\n      assertEquals(0, categorie0.getACID());\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Categorie categorie0 = new Categorie(1, \"n:{{~zO2YCw*'\");\n      int int0 = categorie0.getACID();\n      assertEquals(1, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Categorie categorie0 = new Categorie((-57330), \"?!v*A\");\n      int int0 = categorie0.getACID();\n      assertEquals((-57330), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Categorie categorie0 = new Categorie(0, \"\");\n      categorie0.getName();\n      assertEquals(0, categorie0.getACID());\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Categorie categorie0 = new Categorie(0, \"\");\n      int int0 = categorie0.getACID();\n      assertEquals(0, int0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 18:15:56 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Categorie_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Categorie\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpmsqvkqb0\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Categorie_ESTest_scaffolding.class.getClassLoader() ,\n      \"Categorie\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Categorie_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Categorie\"\n    );\n  }\n}\n", "class_idx": 17}
{"class_name": "EmitInfo", "java_source": "import java.util.Collection;\nimport java.util.List;\n\npublic class EmitInfo {\n  public List<Object> values;\n  public String stream;\n  public Collection<Integer> outTasks;\n\n  public EmitInfo(List<Object> values, String stream, Collection<Integer> outTasks) {\n    this.values = values;\n    this.stream = stream;\n    this.outTasks = outTasks;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super EmitInfo \n.super java/lang/Object \n.field public values Ljava/util/List; .fieldattributes \n    .signature Ljava/util/List<Ljava/lang/Object;>; \n.end fieldattributes \n.field public stream Ljava/lang/String; \n.field public outTasks Ljava/util/Collection; .fieldattributes \n    .signature Ljava/util/Collection<Ljava/lang/Integer;>; \n.end fieldattributes \n\n.method public <init> : (Ljava/util/List;Ljava/lang/String;Ljava/util/Collection;)V \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field EmitInfo values Ljava/util/List; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field EmitInfo stream Ljava/lang/String; \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field EmitInfo outTasks Ljava/util/Collection; \nL19:    return \nL20:    \n        .linenumbertable \n            L0 11 \n            L4 12 \n            L9 13 \n            L14 14 \n            L19 15 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/util/List<Ljava/lang/Object;>;Ljava/lang/String;Ljava/util/Collection<Ljava/lang/Integer;>;)V \n.end method \n.sourcefile 'EmitInfo.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 11:32:19 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.LinkedList;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class EmitInfo_ESTest extends EmitInfo_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      LinkedList<Object> linkedList0 = new LinkedList<Object>();\n      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();\n      EmitInfo emitInfo0 = new EmitInfo(linkedList0, \"n`Rohs\", linkedList1);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 11:32:19 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class EmitInfo_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"EmitInfo\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpwuel_nng\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(EmitInfo_ESTest_scaffolding.class.getClassLoader() ,\n      \"EmitInfo\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(EmitInfo_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"EmitInfo\"\n    );\n  }\n}\n", "class_idx": 18}
{"class_name": "Vision", "java_source": "// import org.opencv.core.Core;\n// import org.opencv.core.Mat;\n// import org.opencv.core.MatOfRect;\n// import org.opencv.core.Point;\n// import org.opencv.core.Rect;\n// import org.opencv.core.Scalar;\n// import org.opencv.highgui.Highgui;\n// import org.opencv.objdetect.CascadeClassifier;\n//\n// import edu.wpi.first.wpilibj.CameraServer;\n// import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;\n// import edu.wpi.first.wpilibj.vision.AxisCamera;\n\n/** */\npublic class Vision {\n  public Vision() {\n    // System.load(\"/usr/local/lib/lib_OpenCV/java/libopencv_java2410.so\");\n    //\tAxisCamera cam = new AxisCamera(\"10.15.57.11\");\n\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Vision \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 23 \n            L4 27 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Vision.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 12:22:57 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Vision_ESTest extends Vision_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Vision vision0 = new Vision();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 12:22:57 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Vision_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Vision\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpbu893ryu\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Vision_ESTest_scaffolding.class.getClassLoader() ,\n      \"Vision\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Vision_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Vision\"\n    );\n  }\n}\n", "class_idx": 19}
{"class_name": "TokenNotFoundException", "java_source": "/*\n * Copyright (c) 2018 Memorial Sloan-Kettering Cancer Center.\n *\n * This library is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS\n * FOR A PARTICULAR PURPOSE. The software and documentation provided hereunder\n * is on an \"as is\" basis, and Memorial Sloan-Kettering Cancer Center has no\n * obligations to provide maintenance, support, updates, enhancements or\n * modifications. In no event shall Memorial Sloan-Kettering Cancer Center be\n * liable to any party for direct, indirect, special, incidental or\n * consequential damages, including lost profits, arising out of the use of this\n * software and its documentation, even if Memorial Sloan-Kettering Cancer\n * Center has been advised of the possibility of such damage.\n */\n\n/*\n * Copyright 2002-2018 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * This file is part of cBioPortal.\n *\n * cBioPortal is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n// TODO move back\n\npublic class TokenNotFoundException extends RuntimeException {\n\n  public TokenNotFoundException() {\n    super();\n  }\n\n  public TokenNotFoundException(String message) {\n    super(message);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super TokenNotFoundException \n.super java/lang/RuntimeException \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/RuntimeException <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 56 \n            L4 57 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 60 \n            L5 61 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'TokenNotFoundException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 12:16:02 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class TokenNotFoundException_ESTest extends TokenNotFoundException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      TokenNotFoundException tokenNotFoundException0 = new TokenNotFoundException();\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      TokenNotFoundException tokenNotFoundException0 = new TokenNotFoundException(\"B!]Ina=_57/oAbJ\");\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 12:16:02 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class TokenNotFoundException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"TokenNotFoundException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpw59gwl70\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(TokenNotFoundException_ESTest_scaffolding.class.getClassLoader() ,\n      \"TokenNotFoundException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(TokenNotFoundException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"TokenNotFoundException\"\n    );\n  }\n}\n", "class_idx": 20}
{"class_name": "CommandCount", "java_source": "/*\n * Copyright 1999-2012 Alibaba Group.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @author xianmao.hexm\n */\npublic class CommandCount {\n\n  private long initDB;\n  private long query;\n  private long stmtPrepare;\n  private long stmtExecute;\n  private long stmtClose;\n  private long ping;\n  private long kill;\n  private long quit;\n  private long heartbeat;\n  private long other;\n\n  public void doInitDB() {\n    ++initDB;\n  }\n\n  public long initDBCount() {\n    return initDB;\n  }\n\n  public void doQuery() {\n    ++query;\n  }\n\n  public long queryCount() {\n    return query;\n  }\n\n  public void doStmtPrepare() {\n    ++stmtPrepare;\n  }\n\n  public long stmtPrepareCount() {\n    return stmtPrepare;\n  }\n\n  public void doStmtExecute() {\n    ++stmtExecute;\n  }\n\n  public long stmtExecuteCount() {\n    return stmtExecute;\n  }\n\n  public void doStmtClose() {\n    ++stmtClose;\n  }\n\n  public long stmtCloseCount() {\n    return stmtClose;\n  }\n\n  public void doPing() {\n    ++ping;\n  }\n\n  public long pingCount() {\n    return ping;\n  }\n\n  public void doKill() {\n    ++kill;\n  }\n\n  public long killCount() {\n    return kill;\n  }\n\n  public void doQuit() {\n    ++quit;\n  }\n\n  public long quitCount() {\n    return quit;\n  }\n\n  public void doOther() {\n    ++other;\n  }\n\n  public long otherCount() {\n    return other;\n  }\n\n  public long heartbeat() {\n    return heartbeat;\n  }\n\n  public void doHeartbeat() {\n    ++heartbeat;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super CommandCount \n.super java/lang/Object \n.field private initDB J \n.field private query J \n.field private stmtPrepare J \n.field private stmtExecute J \n.field private stmtClose J \n.field private ping J \n.field private kill J \n.field private quit J \n.field private heartbeat J \n.field private other J \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public doInitDB : ()V \n    .code stack 5 locals 1 \nL0:     aload_0 \nL1:     dup \nL2:     getfield Field CommandCount initDB J \nL5:     lconst_1 \nL6:     ladd \nL7:     putfield Field CommandCount initDB J \nL10:    return \nL11:    \n        .linenumbertable \n            L0 35 \n            L10 36 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public initDBCount : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field CommandCount initDB J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 39 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public doQuery : ()V \n    .code stack 5 locals 1 \nL0:     aload_0 \nL1:     dup \nL2:     getfield Field CommandCount query J \nL5:     lconst_1 \nL6:     ladd \nL7:     putfield Field CommandCount query J \nL10:    return \nL11:    \n        .linenumbertable \n            L0 43 \n            L10 44 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public queryCount : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field CommandCount query J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 47 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public doStmtPrepare : ()V \n    .code stack 5 locals 1 \nL0:     aload_0 \nL1:     dup \nL2:     getfield Field CommandCount stmtPrepare J \nL5:     lconst_1 \nL6:     ladd \nL7:     putfield Field CommandCount stmtPrepare J \nL10:    return \nL11:    \n        .linenumbertable \n            L0 51 \n            L10 52 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public stmtPrepareCount : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field CommandCount stmtPrepare J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 55 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public doStmtExecute : ()V \n    .code stack 5 locals 1 \nL0:     aload_0 \nL1:     dup \nL2:     getfield Field CommandCount stmtExecute J \nL5:     lconst_1 \nL6:     ladd \nL7:     putfield Field CommandCount stmtExecute J \nL10:    return \nL11:    \n        .linenumbertable \n            L0 59 \n            L10 60 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public stmtExecuteCount : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field CommandCount stmtExecute J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 63 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public doStmtClose : ()V \n    .code stack 5 locals 1 \nL0:     aload_0 \nL1:     dup \nL2:     getfield Field CommandCount stmtClose J \nL5:     lconst_1 \nL6:     ladd \nL7:     putfield Field CommandCount stmtClose J \nL10:    return \nL11:    \n        .linenumbertable \n            L0 67 \n            L10 68 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public stmtCloseCount : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field CommandCount stmtClose J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 71 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public doPing : ()V \n    .code stack 5 locals 1 \nL0:     aload_0 \nL1:     dup \nL2:     getfield Field CommandCount ping J \nL5:     lconst_1 \nL6:     ladd \nL7:     putfield Field CommandCount ping J \nL10:    return \nL11:    \n        .linenumbertable \n            L0 75 \n            L10 76 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public pingCount : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field CommandCount ping J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 79 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public doKill : ()V \n    .code stack 5 locals 1 \nL0:     aload_0 \nL1:     dup \nL2:     getfield Field CommandCount kill J \nL5:     lconst_1 \nL6:     ladd \nL7:     putfield Field CommandCount kill J \nL10:    return \nL11:    \n        .linenumbertable \n            L0 83 \n            L10 84 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public killCount : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field CommandCount kill J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 87 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public doQuit : ()V \n    .code stack 5 locals 1 \nL0:     aload_0 \nL1:     dup \nL2:     getfield Field CommandCount quit J \nL5:     lconst_1 \nL6:     ladd \nL7:     putfield Field CommandCount quit J \nL10:    return \nL11:    \n        .linenumbertable \n            L0 91 \n            L10 92 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public quitCount : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field CommandCount quit J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 95 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public doOther : ()V \n    .code stack 5 locals 1 \nL0:     aload_0 \nL1:     dup \nL2:     getfield Field CommandCount other J \nL5:     lconst_1 \nL6:     ladd \nL7:     putfield Field CommandCount other J \nL10:    return \nL11:    \n        .linenumbertable \n            L0 99 \n            L10 100 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public otherCount : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field CommandCount other J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 103 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public heartbeat : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field CommandCount heartbeat J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 107 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public doHeartbeat : ()V \n    .code stack 5 locals 1 \nL0:     aload_0 \nL1:     dup \nL2:     getfield Field CommandCount heartbeat J \nL5:     lconst_1 \nL6:     ladd \nL7:     putfield Field CommandCount heartbeat J \nL10:    return \nL11:    \n        .linenumbertable \n            L0 111 \n            L10 112 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'CommandCount.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 14:49:21 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CommandCount_ESTest extends CommandCount_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      long long0 = commandCount0.pingCount();\n      assertEquals(0L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      long long0 = commandCount0.otherCount();\n      assertEquals(0L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      long long0 = commandCount0.initDBCount();\n      assertEquals(0L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      long long0 = commandCount0.stmtPrepareCount();\n      assertEquals(0L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      commandCount0.doStmtPrepare();\n      long long0 = commandCount0.stmtPrepareCount();\n      assertEquals(1L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      long long0 = commandCount0.stmtExecuteCount();\n      assertEquals(0L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      long long0 = commandCount0.queryCount();\n      assertEquals(0L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      long long0 = commandCount0.killCount();\n      assertEquals(0L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      long long0 = commandCount0.heartbeat();\n      assertEquals(0L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      commandCount0.doHeartbeat();\n      long long0 = commandCount0.heartbeat();\n      assertEquals(1L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      commandCount0.doQuery();\n      long long0 = commandCount0.queryCount();\n      assertEquals(1L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      commandCount0.doStmtClose();\n      long long0 = commandCount0.stmtCloseCount();\n      assertEquals(1L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      commandCount0.doQuit();\n      long long0 = commandCount0.quitCount();\n      assertEquals(1L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      commandCount0.doInitDB();\n      long long0 = commandCount0.initDBCount();\n      assertEquals(1L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      commandCount0.doPing();\n      long long0 = commandCount0.pingCount();\n      assertEquals(1L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      long long0 = commandCount0.quitCount();\n      assertEquals(0L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      commandCount0.doStmtExecute();\n      long long0 = commandCount0.stmtExecuteCount();\n      assertEquals(1L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      commandCount0.doOther();\n      long long0 = commandCount0.otherCount();\n      assertEquals(1L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      commandCount0.doKill();\n      long long0 = commandCount0.killCount();\n      assertEquals(1L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      CommandCount commandCount0 = new CommandCount();\n      long long0 = commandCount0.stmtCloseCount();\n      assertEquals(0L, long0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 14:49:21 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class CommandCount_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CommandCount\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpysoengfk\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CommandCount_ESTest_scaffolding.class.getClassLoader() ,\n      \"CommandCount\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CommandCount_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CommandCount\"\n    );\n  }\n}\n", "class_idx": 21}
{"class_name": "Main", "java_source": "/*\n * Copyright (C) 2016 Intel Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport java.lang.reflect.InvocationTargetException;\nimport java.lang.reflect.Method;\nimport java.util.Arrays;\nimport java.util.Comparator;\n\npublic class Main {\n  public static final int maxIter = 999;\n  /**\n   * @param args\n   */\n  public static void main(String[] args) {\n    Main main = new Main();\n    Class<Main> cls = Main.class;\n    Method[] mets = cls.getDeclaredMethods();\n    Arrays.sort(\n        mets,\n        new Comparator<Method>() {\n          @Override\n          public int compare(Method arg0, Method arg1) {\n            return arg0.getName().compareTo(arg1.getName());\n          }\n        });\n    for (Method met : mets) {\n      if (met.getName().equalsIgnoreCase(\"main\")) continue;\n      try {\n        System.out.println(\"Test \" + met.getName() + \" result: \" + met.invoke(main));\n      } catch (IllegalAccessException e) {\n        e.printStackTrace();\n      } catch (IllegalArgumentException e) {\n        e.printStackTrace();\n      } catch (InvocationTargetException e) {\n        e.printStackTrace();\n      }\n    }\n  }\n\n  public int testInt1() {\n    int i = 0;\n    int res = 0;\n    for (; i > -5; i--) {\n      res -= i;\n    }\n    return res;\n  }\n\n  public int testInt2() {\n    int i = 0;\n    int res = 0;\n    int tmp = 10;\n    for (; i > -50; i--) {\n      res -= i;\n      tmp++;\n      res -= tmp;\n    }\n    return res;\n  }\n\n  public int testInt3() {\n    int i = 0;\n    int res = 0;\n    int tmp = 10;\n    for (i = maxIter; i > 0; i--) {\n      res -= tmp;\n      tmp--;\n    }\n    return res;\n  }\n\n  public int testInt4() {\n    int i = 0;\n    int res = -10000;\n    int tmp = 10;\n    for (i = tmp; i > -res; i--) {\n      res -= tmp;\n      tmp--;\n    }\n    return res;\n  }\n\n  public long testLong1() {\n    long i = 0;\n    long res = 0;\n    for (; i > -5; i--) {\n      res -= i;\n    }\n    return res;\n  }\n\n  public long testLong2() {\n    long i = 0;\n    long res = 0;\n    long tmp = 10;\n    for (; i > -50; i--) {\n      res -= i;\n      tmp++;\n      res -= tmp;\n    }\n    return res;\n  }\n\n  public long testLong3() {\n    long i = 0;\n    long res = 0;\n    long tmp = 10;\n    for (i = maxIter; i > 0; i--) {\n      res -= tmp;\n      tmp--;\n    }\n    return res;\n  }\n\n  public long testLong4() {\n    long i = 0;\n    long res = -10000;\n    long tmp = 10;\n    for (i = tmp; i > -res; i--) {\n      res -= tmp;\n      tmp--;\n    }\n    return res;\n  }\n\n  public byte testByte1() {\n    byte i = 0;\n    byte res = 0;\n    for (; i > -5; i--) {\n      res -= i;\n    }\n    return res;\n  }\n\n  public byte testByte2() {\n    byte i = 0;\n    byte res = 0;\n    byte tmp = 10;\n    for (; i > -50; i--) {\n      res -= i;\n      tmp++;\n      res -= tmp;\n    }\n    return res;\n  }\n\n  public byte testByte3() {\n    byte i = 0;\n    byte res = 0;\n    byte tmp = 10;\n    for (i = Byte.MAX_VALUE; i > Byte.MIN_VALUE; i--) {\n      res -= tmp;\n      tmp--;\n    }\n    return res;\n  }\n\n  public byte testByte4() {\n    byte i = 0;\n    byte res = -100;\n    byte tmp = 10;\n    for (i = tmp; i > -res; i--) {\n      res -= tmp;\n      tmp--;\n    }\n    return res;\n  }\n\n  public short testShort1() {\n    short i = 0;\n    short res = 0;\n    for (; i > -5; i--) {\n      res -= i;\n    }\n    return res;\n  }\n\n  public short testShort2() {\n    short i = 0;\n    short res = 0;\n    short tmp = 10;\n    for (; i > -50; i--) {\n      res -= i;\n      tmp++;\n      res -= tmp;\n    }\n    return res;\n  }\n\n  public short testShort3() {\n    short i = 0;\n    short res = 0;\n    short tmp = 10;\n    for (i = maxIter; i > 0; i--) {\n      res -= tmp;\n      tmp--;\n    }\n    return res;\n  }\n\n  public short testShort4() {\n    short i = 0;\n    short res = -10000;\n    short tmp = 10;\n    for (i = tmp; i > -res; i--) {\n      res -= tmp;\n      tmp--;\n    }\n    return res;\n  }\n\n  public int testFloat1() {\n    int i = 0;\n    float res = 0.0f;\n    for (; i > -5; i--) {\n      res -= i;\n    }\n    return Float.floatToIntBits(res);\n  }\n\n  public int testFloat2() {\n    int i = 0;\n    float res = 0.0f;\n    float tmp = 10.0f;\n    for (; i > -50; i--) {\n      res -= i;\n      tmp++;\n      res -= tmp;\n    }\n    return Float.floatToIntBits(res);\n  }\n\n  public int testFloat3() {\n    int i = 0;\n    float res = 0.0f;\n    float tmp = 10.0f;\n    for (i = maxIter; i < 00; i--) {\n      res -= tmp;\n      tmp--;\n    }\n    return Float.floatToIntBits(res);\n  }\n\n  public int testFloat4() {\n    int i = 0;\n    float res = -10000.0f;\n    float tmp = 10.0f;\n    for (i = (int) tmp; i > -res; i--) {\n      res -= tmp;\n      tmp--;\n    }\n    return Float.floatToIntBits(res);\n  }\n\n  public long testDouble1() {\n    int i = 0;\n    double res = 0.0;\n    for (; i > -5; i--) {\n      res -= i;\n    }\n    return Double.doubleToLongBits(res);\n  }\n\n  public long testDouble2() {\n    int i = 0;\n    double res = 0.0;\n    double tmp = 10.0;\n    for (; i > -50; i--) {\n      res -= i;\n      tmp++;\n      res -= tmp;\n    }\n    return Double.doubleToLongBits(res);\n  }\n\n  public long testDouble3() {\n    int i = 0;\n    double res = 0.0;\n    double tmp = 10.0;\n    for (i = maxIter; i > 00; i--) {\n      res -= tmp;\n      tmp--;\n    }\n    return Double.doubleToLongBits(res);\n  }\n\n  public long testDouble4() {\n    int i = 0;\n    double res = -10000.0;\n    double tmp = 10.0;\n    for (i = (int) tmp; i > res; i--) {\n      res -= tmp;\n      tmp--;\n    }\n    return Double.doubleToLongBits(res);\n  }\n\n  public byte testByte5() {\n    byte i = 0;\n    byte res = 0;\n    byte tmp = 3;\n    for (; i < 5; i++) {\n      res -= (byte) (tmp - i);\n    }\n    return res;\n  }\n\n  public byte testByte6() {\n    byte i = 0;\n    byte res = 0;\n    byte tmp = -10;\n    for (; i < 50; i++) {\n      tmp++;\n      res = (byte) (tmp - i);\n    }\n    return res;\n  }\n\n  public byte testByte7() {\n    byte i = 0;\n    byte res = 0;\n    byte tmp = -10;\n    for (i = Byte.MIN_VALUE; i < Byte.MAX_VALUE; i++) {\n      res = (byte) (tmp - res);\n      tmp++;\n    }\n    return res;\n  }\n\n  public byte testByte8() {\n    byte i = 0;\n    byte res = 100;\n    byte tmp = -10;\n    for (i = tmp; i < res; i++) {\n      res -= (byte) (tmp - res);\n    }\n    return res;\n  }\n\n  public short testShort5() {\n    short i = 0;\n    short res = 0;\n    short tmp = 100;\n    for (; i < 5; i++) {\n      res -= (short) (i - tmp);\n    }\n    return res;\n  }\n\n  public short testShort6() {\n    short i = 0;\n    short res = 0;\n    short tmp = -10;\n    for (; i < 50; i++) {\n      res = (short) (i - tmp);\n      tmp++;\n    }\n    return res;\n  }\n\n  public short testShort7() {\n    short i = 0;\n    short res = 0;\n    short tmp = -10;\n    for (i = 0; i < maxIter; i++) {\n      res = (short) (tmp - res);\n      tmp++;\n    }\n    return res;\n  }\n\n  public short testShort8() {\n    short i = 0;\n    short res = 10000;\n    short tmp = -10;\n    for (i = tmp; i < res; i++) {\n      res -= (short) (tmp - res);\n    }\n    return res;\n  }\n\n  public int testInt5() {\n    int i = 0;\n    int res = 0;\n    int tmp = 100;\n    for (; i < 5; i++) {\n      res -= i - tmp;\n    }\n    return res;\n  }\n\n  public int testInt6() {\n    int i = 0;\n    int res = 0;\n    int tmp = -10;\n    for (; i < 50; i++) {\n      res = i - tmp;\n      tmp++;\n    }\n    return res;\n  }\n\n  public int testInt7() {\n    int i = 0;\n    int res = 0;\n    int tmp = -10;\n    for (i = 0; i < maxIter; i++) {\n      res = i - tmp;\n      tmp++;\n    }\n    return res;\n  }\n\n  public int testInt8() {\n    int i = 0;\n    int res = 10000;\n    int tmp = -10;\n    for (i = tmp; i < res; i++) {\n      res -= i - tmp;\n    }\n    return res;\n  }\n\n  public long testLong5() {\n    long i = 0;\n    long res = 0;\n    long tmp = 100L;\n    for (; i < 5; i++) {\n      res -= i - tmp;\n    }\n    return res;\n  }\n\n  public long testLong6() {\n    long i = 0;\n    long res = 0;\n    long tmp = -10;\n    for (; i < 50; i++) {\n      res = tmp - i;\n      tmp++;\n    }\n    return res;\n  }\n\n  public long testLong7() {\n    long i = 0;\n    long res = 0;\n    long tmp = -10;\n    for (i = 0; i < maxIter; i++) {\n      res = i - tmp;\n      tmp++;\n    }\n    return res;\n  }\n\n  public long testLong8() {\n    long i = 0;\n    long res = 10000;\n    long tmp = -10;\n    for (i = tmp; i < res; i++) {\n      res -= i - tmp;\n    }\n    return res;\n  }\n\n  public int testFloat5() {\n    int i = 0;\n    float res = 0.0f;\n    float tmp = 1.5f;\n    for (; i < 5; i++) {\n      res -= i - tmp;\n    }\n    return Float.floatToIntBits(res);\n  }\n\n  public int testFloat6() {\n    int i = 0;\n    float res = 0.0f;\n    float tmp = -10.0f;\n    for (; i < 50; i++) {\n      res = i - tmp;\n      tmp++;\n    }\n    return Float.floatToIntBits(res);\n  }\n\n  public int testFloat7() {\n    int i = 0;\n    float res = 0.0f;\n    float tmp = -10.0f;\n    for (i = 00; i < maxIter; i++) {\n      res = tmp - i;\n      tmp++;\n    }\n    return Float.floatToIntBits(res);\n  }\n\n  public int testFloat8() {\n    int i = 0;\n    float res = 10000.0f;\n    float tmp = -10.0f;\n    for (i = (int) tmp; i < res; i++) {\n      res += (tmp - i) - 1000;\n    }\n    return Float.floatToIntBits(res);\n  }\n\n  public long testDouble5() {\n    int i = 0;\n    double res = 0.0;\n    double tmp = 1.0;\n    for (; i < 5; i++) {\n      res -= i - tmp;\n    }\n    return Double.doubleToLongBits(res);\n  }\n\n  public long testDouble6() {\n    int i = 0;\n    double res = 0.0;\n    double tmp = -10.0;\n    for (; i < 50; i++) {\n      res = i - tmp;\n      tmp++;\n    }\n    return Double.doubleToLongBits(res);\n  }\n\n  public long testDouble7() {\n    int i = 0;\n    double res = 0.0;\n    double tmp = -10.0;\n    for (i = 00; i < maxIter; i++) {\n      res = tmp - i;\n      tmp++;\n    }\n    return Double.doubleToLongBits(res);\n  }\n\n  public long testDouble8() {\n    int i = 0;\n    double res = 10000.0;\n    double tmp = -10.0;\n    for (i = (int) tmp; i < res; i++) {\n      res += (tmp - i) - 1000;\n    }\n    return Double.doubleToLongBits(res);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Main \n.super java/lang/Object \n.field public static final maxIter I = 999 \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 5 locals 9 \nL0:     new Main \nL3:     dup \nL4:     invokespecial Method Main <init> ()V \nL7:     astore_1 \nL8:     ldc Class Main \nL10:    astore_2 \nL11:    aload_2 \nL12:    invokevirtual Method java/lang/Class getDeclaredMethods ()[Ljava/lang/reflect/Method; \nL15:    astore_3 \nL16:    aload_3 \nL17:    new Main$1 \nL20:    dup \nL21:    invokespecial Method Main$1 <init> ()V \nL24:    invokestatic Method java/util/Arrays sort ([Ljava/lang/Object;Ljava/util/Comparator;)V \nL27:    aload_3 \nL28:    astore 4 \nL30:    aload 4 \nL32:    arraylength \nL33:    istore 5 \nL35:    iconst_0 \nL36:    istore 6 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object Main Object java/lang/Class Object [Ljava/lang/reflect/Method; Object [Ljava/lang/reflect/Method; Integer Integer \n            stack \n        .end stack \nL38:    iload 6 \nL40:    iload 5 \nL42:    if_icmpge L151 \nL45:    aload 4 \nL47:    iload 6 \nL49:    aaload \nL50:    astore 7 \nL52:    aload 7 \nL54:    invokevirtual Method java/lang/reflect/Method getName ()Ljava/lang/String; \nL57:    ldc 'main' \nL59:    invokevirtual Method java/lang/String equalsIgnoreCase (Ljava/lang/String;)Z \nL62:    ifeq L68 \nL65:    goto L145 \n        .catch java/lang/IllegalAccessException from L68 to L115 using L118 \n        .catch java/lang/IllegalArgumentException from L68 to L115 using L128 \n        .catch java/lang/reflect/InvocationTargetException from L68 to L115 using L138 \n\n        .stack append Object java/lang/reflect/Method \nL68:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL71:    new java/lang/StringBuilder \nL74:    dup \nL75:    invokespecial Method java/lang/StringBuilder <init> ()V \nL78:    ldc 'Test ' \nL80:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL83:    aload 7 \nL85:    invokevirtual Method java/lang/reflect/Method getName ()Ljava/lang/String; \nL88:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL91:    ldc ' result: ' \nL93:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL96:    aload 7 \nL98:    aload_1 \nL99:    iconst_0 \nL100:   anewarray java/lang/Object \nL103:   invokevirtual Method java/lang/reflect/Method invoke (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; \nL106:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/Object;)Ljava/lang/StringBuilder; \nL109:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL112:   invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL115:   goto L145 \n\n        .stack stack_1 Object java/lang/IllegalAccessException \nL118:   astore 8 \nL120:   aload 8 \nL122:   invokevirtual Method java/lang/IllegalAccessException printStackTrace ()V \nL125:   goto L145 \n\n        .stack stack_1 Object java/lang/IllegalArgumentException \nL128:   astore 8 \nL130:   aload 8 \nL132:   invokevirtual Method java/lang/IllegalArgumentException printStackTrace ()V \nL135:   goto L145 \n\n        .stack stack_1 Object java/lang/reflect/InvocationTargetException \nL138:   astore 8 \nL140:   aload 8 \nL142:   invokevirtual Method java/lang/reflect/InvocationTargetException printStackTrace ()V \n\n        .stack chop 1 \nL145:   iinc 6 1 \nL148:   goto L38 \n\n        .stack chop 3 \nL151:   return \nL152:   \n        .linenumbertable \n            L0 30 \n            L8 31 \n            L11 32 \n            L16 33 \n            L27 39 \n            L52 40 \n            L65 41 \n            L68 43 \n            L115 50 \n            L118 44 \n            L120 45 \n            L125 50 \n            L128 46 \n            L130 47 \n            L135 50 \n            L138 48 \n            L140 49 \n            L145 39 \n            L151 52 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testInt1 : ()I \n    .code stack 2 locals 3 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \n\n        .stack append Integer Integer \nL4:     iload_1 \nL5:     bipush -5 \nL7:     if_icmple L20 \nL10:    iload_2 \nL11:    iload_1 \nL12:    isub \nL13:    istore_2 \nL14:    iinc 1 -1 \nL17:    goto L4 \n\n        .stack same \nL20:    iload_2 \nL21:    ireturn \nL22:    \n        .linenumbertable \n            L0 54 \n            L2 55 \n            L4 56 \n            L10 57 \n            L14 56 \n            L20 59 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testInt2 : ()I \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \nL4:     bipush 10 \nL6:     istore_3 \n\n        .stack append Integer Integer Integer \nL7:     iload_1 \nL8:     bipush -50 \nL10:    if_icmple L30 \nL13:    iload_2 \nL14:    iload_1 \nL15:    isub \nL16:    istore_2 \nL17:    iinc 3 1 \nL20:    iload_2 \nL21:    iload_3 \nL22:    isub \nL23:    istore_2 \nL24:    iinc 1 -1 \nL27:    goto L7 \n\n        .stack same \nL30:    iload_2 \nL31:    ireturn \nL32:    \n        .linenumbertable \n            L0 62 \n            L2 63 \n            L4 64 \n            L7 65 \n            L13 66 \n            L17 67 \n            L20 68 \n            L24 65 \n            L30 70 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testInt3 : ()I \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \nL4:     bipush 10 \nL6:     istore_3 \nL7:     sipush 999 \nL10:    istore_1 \n\n        .stack append Integer Integer Integer \nL11:    iload_1 \nL12:    ifle L28 \nL15:    iload_2 \nL16:    iload_3 \nL17:    isub \nL18:    istore_2 \nL19:    iinc 3 -1 \nL22:    iinc 1 -1 \nL25:    goto L11 \n\n        .stack same \nL28:    iload_2 \nL29:    ireturn \nL30:    \n        .linenumbertable \n            L0 73 \n            L2 74 \n            L4 75 \n            L7 76 \n            L15 77 \n            L19 78 \n            L22 76 \n            L28 80 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testInt4 : ()I \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     sipush -10000 \nL5:     istore_2 \nL6:     bipush 10 \nL8:     istore_3 \nL9:     iload_3 \nL10:    istore_1 \n\n        .stack append Integer Integer Integer \nL11:    iload_1 \nL12:    iload_2 \nL13:    ineg \nL14:    if_icmple L30 \nL17:    iload_2 \nL18:    iload_3 \nL19:    isub \nL20:    istore_2 \nL21:    iinc 3 -1 \nL24:    iinc 1 -1 \nL27:    goto L11 \n\n        .stack same \nL30:    iload_2 \nL31:    ireturn \nL32:    \n        .linenumbertable \n            L0 83 \n            L2 84 \n            L6 85 \n            L9 86 \n            L17 87 \n            L21 88 \n            L24 86 \n            L30 90 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testLong1 : ()J \n    .code stack 4 locals 5 \nL0:     lconst_0 \nL1:     lstore_1 \nL2:     lconst_0 \nL3:     lstore_3 \n\n        .stack append Long Long \nL4:     lload_1 \nL5:     ldc2_w -5L \nL8:     lcmp \nL9:     ifle L23 \nL12:    lload_3 \nL13:    lload_1 \nL14:    lsub \nL15:    lstore_3 \nL16:    lload_1 \nL17:    lconst_1 \nL18:    lsub \nL19:    lstore_1 \nL20:    goto L4 \n\n        .stack same \nL23:    lload_3 \nL24:    lreturn \nL25:    \n        .linenumbertable \n            L0 93 \n            L2 94 \n            L4 95 \n            L12 96 \n            L16 95 \n            L23 98 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testLong2 : ()J \n    .code stack 4 locals 7 \nL0:     lconst_0 \nL1:     lstore_1 \nL2:     lconst_0 \nL3:     lstore_3 \nL4:     ldc2_w 10L \nL7:     lstore 5 \n\n        .stack append Long Long Long \nL9:     lload_1 \nL10:    ldc2_w -50L \nL13:    lcmp \nL14:    ifle L39 \nL17:    lload_3 \nL18:    lload_1 \nL19:    lsub \nL20:    lstore_3 \nL21:    lload 5 \nL23:    lconst_1 \nL24:    ladd \nL25:    lstore 5 \nL27:    lload_3 \nL28:    lload 5 \nL30:    lsub \nL31:    lstore_3 \nL32:    lload_1 \nL33:    lconst_1 \nL34:    lsub \nL35:    lstore_1 \nL36:    goto L9 \n\n        .stack same \nL39:    lload_3 \nL40:    lreturn \nL41:    \n        .linenumbertable \n            L0 101 \n            L2 102 \n            L4 103 \n            L9 104 \n            L17 105 \n            L21 106 \n            L27 107 \n            L32 104 \n            L39 109 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testLong3 : ()J \n    .code stack 4 locals 7 \nL0:     lconst_0 \nL1:     lstore_1 \nL2:     lconst_0 \nL3:     lstore_3 \nL4:     ldc2_w 10L \nL7:     lstore 5 \nL9:     ldc2_w 999L \nL12:    lstore_1 \n\n        .stack append Long Long Long \nL13:    lload_1 \nL14:    lconst_0 \nL15:    lcmp \nL16:    ifle L37 \nL19:    lload_3 \nL20:    lload 5 \nL22:    lsub \nL23:    lstore_3 \nL24:    lload 5 \nL26:    lconst_1 \nL27:    lsub \nL28:    lstore 5 \nL30:    lload_1 \nL31:    lconst_1 \nL32:    lsub \nL33:    lstore_1 \nL34:    goto L13 \n\n        .stack same \nL37:    lload_3 \nL38:    lreturn \nL39:    \n        .linenumbertable \n            L0 112 \n            L2 113 \n            L4 114 \n            L9 115 \n            L19 116 \n            L24 117 \n            L30 115 \n            L37 119 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testLong4 : ()J \n    .code stack 4 locals 7 \nL0:     lconst_0 \nL1:     lstore_1 \nL2:     ldc2_w -10000L \nL5:     lstore_3 \nL6:     ldc2_w 10L \nL9:     lstore 5 \nL11:    lload 5 \nL13:    lstore_1 \n\n        .stack append Long Long Long \nL14:    lload_1 \nL15:    lload_3 \nL16:    lneg \nL17:    lcmp \nL18:    ifle L39 \nL21:    lload_3 \nL22:    lload 5 \nL24:    lsub \nL25:    lstore_3 \nL26:    lload 5 \nL28:    lconst_1 \nL29:    lsub \nL30:    lstore 5 \nL32:    lload_1 \nL33:    lconst_1 \nL34:    lsub \nL35:    lstore_1 \nL36:    goto L14 \n\n        .stack same \nL39:    lload_3 \nL40:    lreturn \nL41:    \n        .linenumbertable \n            L0 122 \n            L2 123 \n            L6 124 \n            L11 125 \n            L21 126 \n            L26 127 \n            L32 125 \n            L39 129 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testByte1 : ()B \n    .code stack 2 locals 3 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \n\n        .stack append Integer Integer \nL4:     iload_1 \nL5:     bipush -5 \nL7:     if_icmple L23 \nL10:    iload_2 \nL11:    iload_1 \nL12:    isub \nL13:    i2b \nL14:    istore_2 \nL15:    iload_1 \nL16:    iconst_1 \nL17:    isub \nL18:    i2b \nL19:    istore_1 \nL20:    goto L4 \n\n        .stack same \nL23:    iload_2 \nL24:    ireturn \nL25:    \n        .linenumbertable \n            L0 132 \n            L2 133 \n            L4 134 \n            L10 135 \n            L15 134 \n            L23 137 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testByte2 : ()B \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \nL4:     bipush 10 \nL6:     istore_3 \n\n        .stack append Integer Integer Integer \nL7:     iload_1 \nL8:     bipush -50 \nL10:    if_icmple L36 \nL13:    iload_2 \nL14:    iload_1 \nL15:    isub \nL16:    i2b \nL17:    istore_2 \nL18:    iload_3 \nL19:    iconst_1 \nL20:    iadd \nL21:    i2b \nL22:    istore_3 \nL23:    iload_2 \nL24:    iload_3 \nL25:    isub \nL26:    i2b \nL27:    istore_2 \nL28:    iload_1 \nL29:    iconst_1 \nL30:    isub \nL31:    i2b \nL32:    istore_1 \nL33:    goto L7 \n\n        .stack same \nL36:    iload_2 \nL37:    ireturn \nL38:    \n        .linenumbertable \n            L0 140 \n            L2 141 \n            L4 142 \n            L7 143 \n            L13 144 \n            L18 145 \n            L23 146 \n            L28 143 \n            L36 148 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testByte3 : ()B \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \nL4:     bipush 10 \nL6:     istore_3 \nL7:     bipush 127 \nL9:     istore_1 \n\n        .stack append Integer Integer Integer \nL10:    iload_1 \nL11:    bipush -128 \nL13:    if_icmple L34 \nL16:    iload_2 \nL17:    iload_3 \nL18:    isub \nL19:    i2b \nL20:    istore_2 \nL21:    iload_3 \nL22:    iconst_1 \nL23:    isub \nL24:    i2b \nL25:    istore_3 \nL26:    iload_1 \nL27:    iconst_1 \nL28:    isub \nL29:    i2b \nL30:    istore_1 \nL31:    goto L10 \n\n        .stack same \nL34:    iload_2 \nL35:    ireturn \nL36:    \n        .linenumbertable \n            L0 151 \n            L2 152 \n            L4 153 \n            L7 154 \n            L16 155 \n            L21 156 \n            L26 154 \n            L34 158 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testByte4 : ()B \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     bipush -100 \nL4:     istore_2 \nL5:     bipush 10 \nL7:     istore_3 \nL8:     iload_3 \nL9:     istore_1 \n\n        .stack append Integer Integer Integer \nL10:    iload_1 \nL11:    iload_2 \nL12:    ineg \nL13:    if_icmple L34 \nL16:    iload_2 \nL17:    iload_3 \nL18:    isub \nL19:    i2b \nL20:    istore_2 \nL21:    iload_3 \nL22:    iconst_1 \nL23:    isub \nL24:    i2b \nL25:    istore_3 \nL26:    iload_1 \nL27:    iconst_1 \nL28:    isub \nL29:    i2b \nL30:    istore_1 \nL31:    goto L10 \n\n        .stack same \nL34:    iload_2 \nL35:    ireturn \nL36:    \n        .linenumbertable \n            L0 161 \n            L2 162 \n            L5 163 \n            L8 164 \n            L16 165 \n            L21 166 \n            L26 164 \n            L34 168 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testShort1 : ()S \n    .code stack 2 locals 3 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \n\n        .stack append Integer Integer \nL4:     iload_1 \nL5:     bipush -5 \nL7:     if_icmple L23 \nL10:    iload_2 \nL11:    iload_1 \nL12:    isub \nL13:    i2s \nL14:    istore_2 \nL15:    iload_1 \nL16:    iconst_1 \nL17:    isub \nL18:    i2s \nL19:    istore_1 \nL20:    goto L4 \n\n        .stack same \nL23:    iload_2 \nL24:    ireturn \nL25:    \n        .linenumbertable \n            L0 171 \n            L2 172 \n            L4 173 \n            L10 174 \n            L15 173 \n            L23 176 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testShort2 : ()S \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \nL4:     bipush 10 \nL6:     istore_3 \n\n        .stack append Integer Integer Integer \nL7:     iload_1 \nL8:     bipush -50 \nL10:    if_icmple L36 \nL13:    iload_2 \nL14:    iload_1 \nL15:    isub \nL16:    i2s \nL17:    istore_2 \nL18:    iload_3 \nL19:    iconst_1 \nL20:    iadd \nL21:    i2s \nL22:    istore_3 \nL23:    iload_2 \nL24:    iload_3 \nL25:    isub \nL26:    i2s \nL27:    istore_2 \nL28:    iload_1 \nL29:    iconst_1 \nL30:    isub \nL31:    i2s \nL32:    istore_1 \nL33:    goto L7 \n\n        .stack same \nL36:    iload_2 \nL37:    ireturn \nL38:    \n        .linenumbertable \n            L0 179 \n            L2 180 \n            L4 181 \n            L7 182 \n            L13 183 \n            L18 184 \n            L23 185 \n            L28 182 \n            L36 187 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testShort3 : ()S \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \nL4:     bipush 10 \nL6:     istore_3 \nL7:     sipush 999 \nL10:    istore_1 \n\n        .stack append Integer Integer Integer \nL11:    iload_1 \nL12:    ifle L33 \nL15:    iload_2 \nL16:    iload_3 \nL17:    isub \nL18:    i2s \nL19:    istore_2 \nL20:    iload_3 \nL21:    iconst_1 \nL22:    isub \nL23:    i2s \nL24:    istore_3 \nL25:    iload_1 \nL26:    iconst_1 \nL27:    isub \nL28:    i2s \nL29:    istore_1 \nL30:    goto L11 \n\n        .stack same \nL33:    iload_2 \nL34:    ireturn \nL35:    \n        .linenumbertable \n            L0 190 \n            L2 191 \n            L4 192 \n            L7 193 \n            L15 194 \n            L20 195 \n            L25 193 \n            L33 197 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testShort4 : ()S \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     sipush -10000 \nL5:     istore_2 \nL6:     bipush 10 \nL8:     istore_3 \nL9:     iload_3 \nL10:    istore_1 \n\n        .stack append Integer Integer Integer \nL11:    iload_1 \nL12:    iload_2 \nL13:    ineg \nL14:    if_icmple L35 \nL17:    iload_2 \nL18:    iload_3 \nL19:    isub \nL20:    i2s \nL21:    istore_2 \nL22:    iload_3 \nL23:    iconst_1 \nL24:    isub \nL25:    i2s \nL26:    istore_3 \nL27:    iload_1 \nL28:    iconst_1 \nL29:    isub \nL30:    i2s \nL31:    istore_1 \nL32:    goto L11 \n\n        .stack same \nL35:    iload_2 \nL36:    ireturn \nL37:    \n        .linenumbertable \n            L0 200 \n            L2 201 \n            L6 202 \n            L9 203 \n            L17 204 \n            L22 205 \n            L27 203 \n            L35 207 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testFloat1 : ()I \n    .code stack 2 locals 3 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     fconst_0 \nL3:     fstore_2 \n\n        .stack append Integer Float \nL4:     iload_1 \nL5:     bipush -5 \nL7:     if_icmple L21 \nL10:    fload_2 \nL11:    iload_1 \nL12:    i2f \nL13:    fsub \nL14:    fstore_2 \nL15:    iinc 1 -1 \nL18:    goto L4 \n\n        .stack same \nL21:    fload_2 \nL22:    invokestatic Method java/lang/Float floatToIntBits (F)I \nL25:    ireturn \nL26:    \n        .linenumbertable \n            L0 210 \n            L2 211 \n            L4 212 \n            L10 213 \n            L15 212 \n            L21 215 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testFloat2 : ()I \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     fconst_0 \nL3:     fstore_2 \nL4:     ldc +10.0f \nL6:     fstore_3 \n\n        .stack append Integer Float Float \nL7:     iload_1 \nL8:     bipush -50 \nL10:    if_icmple L32 \nL13:    fload_2 \nL14:    iload_1 \nL15:    i2f \nL16:    fsub \nL17:    fstore_2 \nL18:    fload_3 \nL19:    fconst_1 \nL20:    fadd \nL21:    fstore_3 \nL22:    fload_2 \nL23:    fload_3 \nL24:    fsub \nL25:    fstore_2 \nL26:    iinc 1 -1 \nL29:    goto L7 \n\n        .stack same \nL32:    fload_2 \nL33:    invokestatic Method java/lang/Float floatToIntBits (F)I \nL36:    ireturn \nL37:    \n        .linenumbertable \n            L0 218 \n            L2 219 \n            L4 220 \n            L7 221 \n            L13 222 \n            L18 223 \n            L22 224 \n            L26 221 \n            L32 226 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testFloat3 : ()I \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     fconst_0 \nL3:     fstore_2 \nL4:     ldc +10.0f \nL6:     fstore_3 \nL7:     sipush 999 \nL10:    istore_1 \n\n        .stack append Integer Float Float \nL11:    iload_1 \nL12:    ifge L29 \nL15:    fload_2 \nL16:    fload_3 \nL17:    fsub \nL18:    fstore_2 \nL19:    fload_3 \nL20:    fconst_1 \nL21:    fsub \nL22:    fstore_3 \nL23:    iinc 1 -1 \nL26:    goto L11 \n\n        .stack same \nL29:    fload_2 \nL30:    invokestatic Method java/lang/Float floatToIntBits (F)I \nL33:    ireturn \nL34:    \n        .linenumbertable \n            L0 229 \n            L2 230 \n            L4 231 \n            L7 232 \n            L15 233 \n            L19 234 \n            L23 232 \n            L29 236 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testFloat4 : ()I \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     ldc -10000.0f \nL4:     fstore_2 \nL5:     ldc +10.0f \nL7:     fstore_3 \nL8:     fload_3 \nL9:     f2i \nL10:    istore_1 \n\n        .stack append Integer Float Float \nL11:    iload_1 \nL12:    i2f \nL13:    fload_2 \nL14:    fneg \nL15:    fcmpl \nL16:    ifle L33 \nL19:    fload_2 \nL20:    fload_3 \nL21:    fsub \nL22:    fstore_2 \nL23:    fload_3 \nL24:    fconst_1 \nL25:    fsub \nL26:    fstore_3 \nL27:    iinc 1 -1 \nL30:    goto L11 \n\n        .stack same \nL33:    fload_2 \nL34:    invokestatic Method java/lang/Float floatToIntBits (F)I \nL37:    ireturn \nL38:    \n        .linenumbertable \n            L0 239 \n            L2 240 \n            L5 241 \n            L8 242 \n            L19 243 \n            L23 244 \n            L27 242 \n            L33 246 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testDouble1 : ()J \n    .code stack 4 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     dconst_0 \nL3:     dstore_2 \n\n        .stack append Integer Double \nL4:     iload_1 \nL5:     bipush -5 \nL7:     if_icmple L21 \nL10:    dload_2 \nL11:    iload_1 \nL12:    i2d \nL13:    dsub \nL14:    dstore_2 \nL15:    iinc 1 -1 \nL18:    goto L4 \n\n        .stack same \nL21:    dload_2 \nL22:    invokestatic Method java/lang/Double doubleToLongBits (D)J \nL25:    lreturn \nL26:    \n        .linenumbertable \n            L0 249 \n            L2 250 \n            L4 251 \n            L10 252 \n            L15 251 \n            L21 254 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testDouble2 : ()J \n    .code stack 4 locals 6 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     dconst_0 \nL3:     dstore_2 \nL4:     ldc2_w +10.0 \nL7:     dstore 4 \n\n        .stack append Integer Double Double \nL9:     iload_1 \nL10:    bipush -50 \nL12:    if_icmple L37 \nL15:    dload_2 \nL16:    iload_1 \nL17:    i2d \nL18:    dsub \nL19:    dstore_2 \nL20:    dload 4 \nL22:    dconst_1 \nL23:    dadd \nL24:    dstore 4 \nL26:    dload_2 \nL27:    dload 4 \nL29:    dsub \nL30:    dstore_2 \nL31:    iinc 1 -1 \nL34:    goto L9 \n\n        .stack same \nL37:    dload_2 \nL38:    invokestatic Method java/lang/Double doubleToLongBits (D)J \nL41:    lreturn \nL42:    \n        .linenumbertable \n            L0 257 \n            L2 258 \n            L4 259 \n            L9 260 \n            L15 261 \n            L20 262 \n            L26 263 \n            L31 260 \n            L37 265 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testDouble3 : ()J \n    .code stack 4 locals 6 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     dconst_0 \nL3:     dstore_2 \nL4:     ldc2_w +10.0 \nL7:     dstore 4 \nL9:     sipush 999 \nL12:    istore_1 \n\n        .stack append Integer Double Double \nL13:    iload_1 \nL14:    ifle L34 \nL17:    dload_2 \nL18:    dload 4 \nL20:    dsub \nL21:    dstore_2 \nL22:    dload 4 \nL24:    dconst_1 \nL25:    dsub \nL26:    dstore 4 \nL28:    iinc 1 -1 \nL31:    goto L13 \n\n        .stack same \nL34:    dload_2 \nL35:    invokestatic Method java/lang/Double doubleToLongBits (D)J \nL38:    lreturn \nL39:    \n        .linenumbertable \n            L0 268 \n            L2 269 \n            L4 270 \n            L9 271 \n            L17 272 \n            L22 273 \n            L28 271 \n            L34 275 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testDouble4 : ()J \n    .code stack 4 locals 6 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     ldc2_w -10000.0 \nL5:     dstore_2 \nL6:     ldc2_w +10.0 \nL9:     dstore 4 \nL11:    dload 4 \nL13:    d2i \nL14:    istore_1 \n\n        .stack append Integer Double Double \nL15:    iload_1 \nL16:    i2d \nL17:    dload_2 \nL18:    dcmpl \nL19:    ifle L39 \nL22:    dload_2 \nL23:    dload 4 \nL25:    dsub \nL26:    dstore_2 \nL27:    dload 4 \nL29:    dconst_1 \nL30:    dsub \nL31:    dstore 4 \nL33:    iinc 1 -1 \nL36:    goto L15 \n\n        .stack same \nL39:    dload_2 \nL40:    invokestatic Method java/lang/Double doubleToLongBits (D)J \nL43:    lreturn \nL44:    \n        .linenumbertable \n            L0 278 \n            L2 279 \n            L6 280 \n            L11 281 \n            L22 282 \n            L27 283 \n            L33 281 \n            L39 285 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testByte5 : ()B \n    .code stack 3 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \nL4:     iconst_3 \nL5:     istore_3 \n\n        .stack append Integer Integer Integer \nL6:     iload_1 \nL7:     iconst_5 \nL8:     if_icmpge L27 \nL11:    iload_2 \nL12:    iload_3 \nL13:    iload_1 \nL14:    isub \nL15:    i2b \nL16:    isub \nL17:    i2b \nL18:    istore_2 \nL19:    iload_1 \nL20:    iconst_1 \nL21:    iadd \nL22:    i2b \nL23:    istore_1 \nL24:    goto L6 \n\n        .stack same \nL27:    iload_2 \nL28:    ireturn \nL29:    \n        .linenumbertable \n            L0 288 \n            L2 289 \n            L4 290 \n            L6 291 \n            L11 292 \n            L19 291 \n            L27 294 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testByte6 : ()B \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \nL4:     bipush -10 \nL6:     istore_3 \n\n        .stack append Integer Integer Integer \nL7:     iload_1 \nL8:     bipush 50 \nL10:    if_icmpge L31 \nL13:    iload_3 \nL14:    iconst_1 \nL15:    iadd \nL16:    i2b \nL17:    istore_3 \nL18:    iload_3 \nL19:    iload_1 \nL20:    isub \nL21:    i2b \nL22:    istore_2 \nL23:    iload_1 \nL24:    iconst_1 \nL25:    iadd \nL26:    i2b \nL27:    istore_1 \nL28:    goto L7 \n\n        .stack same \nL31:    iload_2 \nL32:    ireturn \nL33:    \n        .linenumbertable \n            L0 297 \n            L2 298 \n            L4 299 \n            L7 300 \n            L13 301 \n            L18 302 \n            L23 300 \n            L31 304 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testByte7 : ()B \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \nL4:     bipush -10 \nL6:     istore_3 \nL7:     bipush -128 \nL9:     istore_1 \n\n        .stack append Integer Integer Integer \nL10:    iload_1 \nL11:    bipush 127 \nL13:    if_icmpge L34 \nL16:    iload_3 \nL17:    iload_2 \nL18:    isub \nL19:    i2b \nL20:    istore_2 \nL21:    iload_3 \nL22:    iconst_1 \nL23:    iadd \nL24:    i2b \nL25:    istore_3 \nL26:    iload_1 \nL27:    iconst_1 \nL28:    iadd \nL29:    i2b \nL30:    istore_1 \nL31:    goto L10 \n\n        .stack same \nL34:    iload_2 \nL35:    ireturn \nL36:    \n        .linenumbertable \n            L0 307 \n            L2 308 \n            L4 309 \n            L7 310 \n            L16 311 \n            L21 312 \n            L26 310 \n            L34 314 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testByte8 : ()B \n    .code stack 3 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     bipush 100 \nL4:     istore_2 \nL5:     bipush -10 \nL7:     istore_3 \nL8:     iload_3 \nL9:     istore_1 \n\n        .stack append Integer Integer Integer \nL10:    iload_1 \nL11:    iload_2 \nL12:    if_icmpge L31 \nL15:    iload_2 \nL16:    iload_3 \nL17:    iload_2 \nL18:    isub \nL19:    i2b \nL20:    isub \nL21:    i2b \nL22:    istore_2 \nL23:    iload_1 \nL24:    iconst_1 \nL25:    iadd \nL26:    i2b \nL27:    istore_1 \nL28:    goto L10 \n\n        .stack same \nL31:    iload_2 \nL32:    ireturn \nL33:    \n        .linenumbertable \n            L0 317 \n            L2 318 \n            L5 319 \n            L8 320 \n            L15 321 \n            L23 320 \n            L31 323 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testShort5 : ()S \n    .code stack 3 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \nL4:     bipush 100 \nL6:     istore_3 \n\n        .stack append Integer Integer Integer \nL7:     iload_1 \nL8:     iconst_5 \nL9:     if_icmpge L28 \nL12:    iload_2 \nL13:    iload_1 \nL14:    iload_3 \nL15:    isub \nL16:    i2s \nL17:    isub \nL18:    i2s \nL19:    istore_2 \nL20:    iload_1 \nL21:    iconst_1 \nL22:    iadd \nL23:    i2s \nL24:    istore_1 \nL25:    goto L7 \n\n        .stack same \nL28:    iload_2 \nL29:    ireturn \nL30:    \n        .linenumbertable \n            L0 326 \n            L2 327 \n            L4 328 \n            L7 329 \n            L12 330 \n            L20 329 \n            L28 332 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testShort6 : ()S \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \nL4:     bipush -10 \nL6:     istore_3 \n\n        .stack append Integer Integer Integer \nL7:     iload_1 \nL8:     bipush 50 \nL10:    if_icmpge L31 \nL13:    iload_1 \nL14:    iload_3 \nL15:    isub \nL16:    i2s \nL17:    istore_2 \nL18:    iload_3 \nL19:    iconst_1 \nL20:    iadd \nL21:    i2s \nL22:    istore_3 \nL23:    iload_1 \nL24:    iconst_1 \nL25:    iadd \nL26:    i2s \nL27:    istore_1 \nL28:    goto L7 \n\n        .stack same \nL31:    iload_2 \nL32:    ireturn \nL33:    \n        .linenumbertable \n            L0 335 \n            L2 336 \n            L4 337 \n            L7 338 \n            L13 339 \n            L18 340 \n            L23 338 \n            L31 342 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testShort7 : ()S \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \nL4:     bipush -10 \nL6:     istore_3 \nL7:     iconst_0 \nL8:     istore_1 \n\n        .stack append Integer Integer Integer \nL9:     iload_1 \nL10:    sipush 999 \nL13:    if_icmpge L34 \nL16:    iload_3 \nL17:    iload_2 \nL18:    isub \nL19:    i2s \nL20:    istore_2 \nL21:    iload_3 \nL22:    iconst_1 \nL23:    iadd \nL24:    i2s \nL25:    istore_3 \nL26:    iload_1 \nL27:    iconst_1 \nL28:    iadd \nL29:    i2s \nL30:    istore_1 \nL31:    goto L9 \n\n        .stack same \nL34:    iload_2 \nL35:    ireturn \nL36:    \n        .linenumbertable \n            L0 345 \n            L2 346 \n            L4 347 \n            L7 348 \n            L16 349 \n            L21 350 \n            L26 348 \n            L34 352 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testShort8 : ()S \n    .code stack 3 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     sipush 10000 \nL5:     istore_2 \nL6:     bipush -10 \nL8:     istore_3 \nL9:     iload_3 \nL10:    istore_1 \n\n        .stack append Integer Integer Integer \nL11:    iload_1 \nL12:    iload_2 \nL13:    if_icmpge L32 \nL16:    iload_2 \nL17:    iload_3 \nL18:    iload_2 \nL19:    isub \nL20:    i2s \nL21:    isub \nL22:    i2s \nL23:    istore_2 \nL24:    iload_1 \nL25:    iconst_1 \nL26:    iadd \nL27:    i2s \nL28:    istore_1 \nL29:    goto L11 \n\n        .stack same \nL32:    iload_2 \nL33:    ireturn \nL34:    \n        .linenumbertable \n            L0 355 \n            L2 356 \n            L6 357 \n            L9 358 \n            L16 359 \n            L24 358 \n            L32 361 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testInt5 : ()I \n    .code stack 3 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \nL4:     bipush 100 \nL6:     istore_3 \n\n        .stack append Integer Integer Integer \nL7:     iload_1 \nL8:     iconst_5 \nL9:     if_icmpge L24 \nL12:    iload_2 \nL13:    iload_1 \nL14:    iload_3 \nL15:    isub \nL16:    isub \nL17:    istore_2 \nL18:    iinc 1 1 \nL21:    goto L7 \n\n        .stack same \nL24:    iload_2 \nL25:    ireturn \nL26:    \n        .linenumbertable \n            L0 364 \n            L2 365 \n            L4 366 \n            L7 367 \n            L12 368 \n            L18 367 \n            L24 370 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testInt6 : ()I \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \nL4:     bipush -10 \nL6:     istore_3 \n\n        .stack append Integer Integer Integer \nL7:     iload_1 \nL8:     bipush 50 \nL10:    if_icmpge L26 \nL13:    iload_1 \nL14:    iload_3 \nL15:    isub \nL16:    istore_2 \nL17:    iinc 3 1 \nL20:    iinc 1 1 \nL23:    goto L7 \n\n        .stack same \nL26:    iload_2 \nL27:    ireturn \nL28:    \n        .linenumbertable \n            L0 373 \n            L2 374 \n            L4 375 \n            L7 376 \n            L13 377 \n            L17 378 \n            L20 376 \n            L26 380 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testInt7 : ()I \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \nL4:     bipush -10 \nL6:     istore_3 \nL7:     iconst_0 \nL8:     istore_1 \n\n        .stack append Integer Integer Integer \nL9:     iload_1 \nL10:    sipush 999 \nL13:    if_icmpge L29 \nL16:    iload_1 \nL17:    iload_3 \nL18:    isub \nL19:    istore_2 \nL20:    iinc 3 1 \nL23:    iinc 1 1 \nL26:    goto L9 \n\n        .stack same \nL29:    iload_2 \nL30:    ireturn \nL31:    \n        .linenumbertable \n            L0 383 \n            L2 384 \n            L4 385 \n            L7 386 \n            L16 387 \n            L20 388 \n            L23 386 \n            L29 390 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testInt8 : ()I \n    .code stack 3 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     sipush 10000 \nL5:     istore_2 \nL6:     bipush -10 \nL8:     istore_3 \nL9:     iload_3 \nL10:    istore_1 \n\n        .stack append Integer Integer Integer \nL11:    iload_1 \nL12:    iload_2 \nL13:    if_icmpge L28 \nL16:    iload_2 \nL17:    iload_1 \nL18:    iload_3 \nL19:    isub \nL20:    isub \nL21:    istore_2 \nL22:    iinc 1 1 \nL25:    goto L11 \n\n        .stack same \nL28:    iload_2 \nL29:    ireturn \nL30:    \n        .linenumbertable \n            L0 393 \n            L2 394 \n            L6 395 \n            L9 396 \n            L16 397 \n            L22 396 \n            L28 399 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testLong5 : ()J \n    .code stack 6 locals 7 \nL0:     lconst_0 \nL1:     lstore_1 \nL2:     lconst_0 \nL3:     lstore_3 \nL4:     ldc2_w 100L \nL7:     lstore 5 \n\n        .stack append Long Long Long \nL9:     lload_1 \nL10:    ldc2_w 5L \nL13:    lcmp \nL14:    ifge L31 \nL17:    lload_3 \nL18:    lload_1 \nL19:    lload 5 \nL21:    lsub \nL22:    lsub \nL23:    lstore_3 \nL24:    lload_1 \nL25:    lconst_1 \nL26:    ladd \nL27:    lstore_1 \nL28:    goto L9 \n\n        .stack same \nL31:    lload_3 \nL32:    lreturn \nL33:    \n        .linenumbertable \n            L0 402 \n            L2 403 \n            L4 404 \n            L9 405 \n            L17 406 \n            L24 405 \n            L31 408 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testLong6 : ()J \n    .code stack 4 locals 7 \nL0:     lconst_0 \nL1:     lstore_1 \nL2:     lconst_0 \nL3:     lstore_3 \nL4:     ldc2_w -10L \nL7:     lstore 5 \n\n        .stack append Long Long Long \nL9:     lload_1 \nL10:    ldc2_w 50L \nL13:    lcmp \nL14:    ifge L35 \nL17:    lload 5 \nL19:    lload_1 \nL20:    lsub \nL21:    lstore_3 \nL22:    lload 5 \nL24:    lconst_1 \nL25:    ladd \nL26:    lstore 5 \nL28:    lload_1 \nL29:    lconst_1 \nL30:    ladd \nL31:    lstore_1 \nL32:    goto L9 \n\n        .stack same \nL35:    lload_3 \nL36:    lreturn \nL37:    \n        .linenumbertable \n            L0 411 \n            L2 412 \n            L4 413 \n            L9 414 \n            L17 415 \n            L22 416 \n            L28 414 \n            L35 418 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testLong7 : ()J \n    .code stack 4 locals 7 \nL0:     lconst_0 \nL1:     lstore_1 \nL2:     lconst_0 \nL3:     lstore_3 \nL4:     ldc2_w -10L \nL7:     lstore 5 \nL9:     lconst_0 \nL10:    lstore_1 \n\n        .stack append Long Long Long \nL11:    lload_1 \nL12:    ldc2_w 999L \nL15:    lcmp \nL16:    ifge L37 \nL19:    lload_1 \nL20:    lload 5 \nL22:    lsub \nL23:    lstore_3 \nL24:    lload 5 \nL26:    lconst_1 \nL27:    ladd \nL28:    lstore 5 \nL30:    lload_1 \nL31:    lconst_1 \nL32:    ladd \nL33:    lstore_1 \nL34:    goto L11 \n\n        .stack same \nL37:    lload_3 \nL38:    lreturn \nL39:    \n        .linenumbertable \n            L0 421 \n            L2 422 \n            L4 423 \n            L9 424 \n            L19 425 \n            L24 426 \n            L30 424 \n            L37 428 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testLong8 : ()J \n    .code stack 6 locals 7 \nL0:     lconst_0 \nL1:     lstore_1 \nL2:     ldc2_w 10000L \nL5:     lstore_3 \nL6:     ldc2_w -10L \nL9:     lstore 5 \nL11:    lload 5 \nL13:    lstore_1 \n\n        .stack append Long Long Long \nL14:    lload_1 \nL15:    lload_3 \nL16:    lcmp \nL17:    ifge L34 \nL20:    lload_3 \nL21:    lload_1 \nL22:    lload 5 \nL24:    lsub \nL25:    lsub \nL26:    lstore_3 \nL27:    lload_1 \nL28:    lconst_1 \nL29:    ladd \nL30:    lstore_1 \nL31:    goto L14 \n\n        .stack same \nL34:    lload_3 \nL35:    lreturn \nL36:    \n        .linenumbertable \n            L0 431 \n            L2 432 \n            L6 433 \n            L11 434 \n            L20 435 \n            L27 434 \n            L34 437 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testFloat5 : ()I \n    .code stack 3 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     fconst_0 \nL3:     fstore_2 \nL4:     ldc +1.5f \nL6:     fstore_3 \n\n        .stack append Integer Float Float \nL7:     iload_1 \nL8:     iconst_5 \nL9:     if_icmpge L25 \nL12:    fload_2 \nL13:    iload_1 \nL14:    i2f \nL15:    fload_3 \nL16:    fsub \nL17:    fsub \nL18:    fstore_2 \nL19:    iinc 1 1 \nL22:    goto L7 \n\n        .stack same \nL25:    fload_2 \nL26:    invokestatic Method java/lang/Float floatToIntBits (F)I \nL29:    ireturn \nL30:    \n        .linenumbertable \n            L0 440 \n            L2 441 \n            L4 442 \n            L7 443 \n            L12 444 \n            L19 443 \n            L25 446 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testFloat6 : ()I \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     fconst_0 \nL3:     fstore_2 \nL4:     ldc -10.0f \nL6:     fstore_3 \n\n        .stack append Integer Float Float \nL7:     iload_1 \nL8:     bipush 50 \nL10:    if_icmpge L28 \nL13:    iload_1 \nL14:    i2f \nL15:    fload_3 \nL16:    fsub \nL17:    fstore_2 \nL18:    fload_3 \nL19:    fconst_1 \nL20:    fadd \nL21:    fstore_3 \nL22:    iinc 1 1 \nL25:    goto L7 \n\n        .stack same \nL28:    fload_2 \nL29:    invokestatic Method java/lang/Float floatToIntBits (F)I \nL32:    ireturn \nL33:    \n        .linenumbertable \n            L0 449 \n            L2 450 \n            L4 451 \n            L7 452 \n            L13 453 \n            L18 454 \n            L22 452 \n            L28 456 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testFloat7 : ()I \n    .code stack 2 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     fconst_0 \nL3:     fstore_2 \nL4:     ldc -10.0f \nL6:     fstore_3 \nL7:     iconst_0 \nL8:     istore_1 \n\n        .stack append Integer Float Float \nL9:     iload_1 \nL10:    sipush 999 \nL13:    if_icmpge L31 \nL16:    fload_3 \nL17:    iload_1 \nL18:    i2f \nL19:    fsub \nL20:    fstore_2 \nL21:    fload_3 \nL22:    fconst_1 \nL23:    fadd \nL24:    fstore_3 \nL25:    iinc 1 1 \nL28:    goto L9 \n\n        .stack same \nL31:    fload_2 \nL32:    invokestatic Method java/lang/Float floatToIntBits (F)I \nL35:    ireturn \nL36:    \n        .linenumbertable \n            L0 459 \n            L2 460 \n            L4 461 \n            L7 462 \n            L16 463 \n            L21 464 \n            L25 462 \n            L31 466 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testFloat8 : ()I \n    .code stack 3 locals 4 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     ldc +10000.0f \nL4:     fstore_2 \nL5:     ldc -10.0f \nL7:     fstore_3 \nL8:     fload_3 \nL9:     f2i \nL10:    istore_1 \n\n        .stack append Integer Float Float \nL11:    iload_1 \nL12:    i2f \nL13:    fload_2 \nL14:    fcmpg \nL15:    ifge L34 \nL18:    fload_2 \nL19:    fload_3 \nL20:    iload_1 \nL21:    i2f \nL22:    fsub \nL23:    ldc +1000.0f \nL25:    fsub \nL26:    fadd \nL27:    fstore_2 \nL28:    iinc 1 1 \nL31:    goto L11 \n\n        .stack same \nL34:    fload_2 \nL35:    invokestatic Method java/lang/Float floatToIntBits (F)I \nL38:    ireturn \nL39:    \n        .linenumbertable \n            L0 469 \n            L2 470 \n            L5 471 \n            L8 472 \n            L18 473 \n            L28 472 \n            L34 475 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testDouble5 : ()J \n    .code stack 6 locals 6 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     dconst_0 \nL3:     dstore_2 \nL4:     dconst_1 \nL5:     dstore 4 \n\n        .stack append Integer Double Double \nL7:     iload_1 \nL8:     iconst_5 \nL9:     if_icmpge L26 \nL12:    dload_2 \nL13:    iload_1 \nL14:    i2d \nL15:    dload 4 \nL17:    dsub \nL18:    dsub \nL19:    dstore_2 \nL20:    iinc 1 1 \nL23:    goto L7 \n\n        .stack same \nL26:    dload_2 \nL27:    invokestatic Method java/lang/Double doubleToLongBits (D)J \nL30:    lreturn \nL31:    \n        .linenumbertable \n            L0 478 \n            L2 479 \n            L4 480 \n            L7 481 \n            L12 482 \n            L20 481 \n            L26 484 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testDouble6 : ()J \n    .code stack 4 locals 6 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     dconst_0 \nL3:     dstore_2 \nL4:     ldc2_w -10.0 \nL7:     dstore 4 \n\n        .stack append Integer Double Double \nL9:     iload_1 \nL10:    bipush 50 \nL12:    if_icmpge L33 \nL15:    iload_1 \nL16:    i2d \nL17:    dload 4 \nL19:    dsub \nL20:    dstore_2 \nL21:    dload 4 \nL23:    dconst_1 \nL24:    dadd \nL25:    dstore 4 \nL27:    iinc 1 1 \nL30:    goto L9 \n\n        .stack same \nL33:    dload_2 \nL34:    invokestatic Method java/lang/Double doubleToLongBits (D)J \nL37:    lreturn \nL38:    \n        .linenumbertable \n            L0 487 \n            L2 488 \n            L4 489 \n            L9 490 \n            L15 491 \n            L21 492 \n            L27 490 \n            L33 494 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testDouble7 : ()J \n    .code stack 4 locals 6 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     dconst_0 \nL3:     dstore_2 \nL4:     ldc2_w -10.0 \nL7:     dstore 4 \nL9:     iconst_0 \nL10:    istore_1 \n\n        .stack append Integer Double Double \nL11:    iload_1 \nL12:    sipush 999 \nL15:    if_icmpge L36 \nL18:    dload 4 \nL20:    iload_1 \nL21:    i2d \nL22:    dsub \nL23:    dstore_2 \nL24:    dload 4 \nL26:    dconst_1 \nL27:    dadd \nL28:    dstore 4 \nL30:    iinc 1 1 \nL33:    goto L11 \n\n        .stack same \nL36:    dload_2 \nL37:    invokestatic Method java/lang/Double doubleToLongBits (D)J \nL40:    lreturn \nL41:    \n        .linenumbertable \n            L0 497 \n            L2 498 \n            L4 499 \n            L9 500 \n            L18 501 \n            L24 502 \n            L30 500 \n            L36 504 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testDouble8 : ()J \n    .code stack 6 locals 6 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     ldc2_w +10000.0 \nL5:     dstore_2 \nL6:     ldc2_w -10.0 \nL9:     dstore 4 \nL11:    dload 4 \nL13:    d2i \nL14:    istore_1 \n\n        .stack append Integer Double Double \nL15:    iload_1 \nL16:    i2d \nL17:    dload_2 \nL18:    dcmpg \nL19:    ifge L40 \nL22:    dload_2 \nL23:    dload 4 \nL25:    iload_1 \nL26:    i2d \nL27:    dsub \nL28:    ldc2_w +1000.0 \nL31:    dsub \nL32:    dadd \nL33:    dstore_2 \nL34:    iinc 1 1 \nL37:    goto L15 \n\n        .stack same \nL40:    dload_2 \nL41:    invokestatic Method java/lang/Double doubleToLongBits (D)J \nL44:    lreturn \nL45:    \n        .linenumbertable \n            L0 507 \n            L2 508 \n            L6 509 \n            L11 510 \n            L22 511 \n            L34 510 \n            L40 513 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Main.java' \n.innerclasses \n    Main$1 [0] [0] static \n.end innerclasses \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 06:03:18 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Main_ESTest extends Main_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      Main main0 = new Main();\n      byte byte0 = main0.testByte2();\n      assertEquals((byte) (-38), byte0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      Main main0 = new Main();\n      main0.testFloat5();\n      String[] stringArray0 = new String[3];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      // Undeclared exception!\n      try { \n        Main.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Main$1\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      Main main0 = new Main();\n      main0.testByte1();\n      main0.testInt5();\n      String[] stringArray0 = new String[6];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"2e1(e<@3 %tRAmYX\";\n      stringArray0[2] = \"\";\n      String string0 = \"`_\";\n      // Undeclared exception!\n      try { \n        Main.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Main$1\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      Main main0 = new Main();\n      long long0 = main0.testDouble3();\n      assertEquals(4692136167540260864L, long0);\n      \n      long long1 = main0.testLong6();\n      assertEquals((-10L), long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      Main main0 = new Main();\n      main0.testShort4();\n      String[] stringArray0 = new String[6];\n      stringArray0[0] = \"V#zuXPktfugr\";\n      stringArray0[1] = \"6=+=kkn8\";\n      stringArray0[2] = \"ps\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \"`\";\n      stringArray0[5] = \"jeF6pOC8?Ud3>&M\";\n      // Undeclared exception!\n      try { \n        Main.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Main$1\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      Main main0 = new Main();\n      main0.testLong2();\n      String[] stringArray0 = new String[5];\n      stringArray0[0] = \"P*]9g< L<eCV/\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"dl].al~|aE+Dgoxr:tk\";\n      stringArray0[3] = \"p^yjD0ipC>OK*[wg3:O\";\n      stringArray0[4] = \"1*c%GtvasT1y7[\";\n      // Undeclared exception!\n      try { \n        Main.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Main$1\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      Main main0 = new Main();\n      short short0 = main0.testShort3();\n      assertEquals((short)29759, short0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Main main0 = new Main();\n      int int0 = main0.testFloat6();\n      assertEquals(1092616192, int0);\n      \n      long long0 = main0.testDouble5();\n      assertEquals((-4606056518893174784L), long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      Main main0 = new Main();\n      main0.testLong1();\n      String[] stringArray0 = new String[8];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"bc6Z><C1oDDZ{NZg(ap\";\n      stringArray0[4] = \"\";\n      stringArray0[5] = \"\";\n      stringArray0[6] = \"~IlIDE\";\n      stringArray0[7] = \" result: \";\n      // Undeclared exception!\n      try { \n        Main.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Main$1\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      Main main0 = new Main();\n      int int0 = main0.testFloat1();\n      assertEquals(1092616192, int0);\n      \n      int int1 = main0.testInt7();\n      assertEquals(10, int1);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      Main main0 = new Main();\n      int int0 = main0.testFloat4();\n      assertEquals((-971227136), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Main main0 = new Main();\n      main0.testLong4();\n      String[] stringArray0 = new String[8];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"Test \";\n      stringArray0[4] = \"\";\n      stringArray0[5] = \"main\";\n      stringArray0[6] = \"Main\";\n      stringArray0[7] = \"\";\n      // Undeclared exception!\n      try { \n        Main.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Main$1\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      Main main0 = new Main();\n      main0.testDouble2();\n      String[] stringArray0 = new String[8];\n      stringArray0[0] = \"|-`YW _rG7LTM\\\"fi\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \"u;/Dl\";\n      stringArray0[5] = \"\";\n      stringArray0[6] = \"\";\n      stringArray0[7] = \"Main\";\n      // Undeclared exception!\n      try { \n        Main.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Main$1\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      Main main0 = new Main();\n      main0.testFloat8();\n      String[] stringArray0 = new String[8];\n      stringArray0[0] = \"1'#\";\n      stringArray0[1] = \")l@w:\";\n      String string0 = \"*xzxw\";\n      String[] stringArray1 = new String[9];\n      stringArray1[0] = \")l@w:\";\n      stringArray1[1] = \")l@w:\";\n      stringArray1[2] = \")l@w:\";\n      stringArray1[3] = \"*xzxw\";\n      stringArray1[4] = \"*xzxw\";\n      stringArray1[5] = \"*xzxw\";\n      stringArray1[6] = \"*xzxw\";\n      stringArray1[7] = \"1'#\";\n      stringArray1[8] = \"lm\";\n      // Undeclared exception!\n      try { \n        Main.main(stringArray1);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Main$1\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      Main main0 = new Main();\n      String[] stringArray0 = new String[7];\n      stringArray0[0] = \"7\u007fjn/={CQw6ED]\";\n      stringArray0[1] = \"l3LKfZioc0,\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"b03{)\";\n      stringArray0[4] = \"PY5<;13)9;X>}Fni4s\";\n      stringArray0[5] = \"main\";\n      stringArray0[6] = \"\";\n      // Undeclared exception!\n      try { \n        Main.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Main$1\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      Main main0 = new Main();\n      String[] stringArray0 = new String[0];\n      String[] stringArray1 = new String[9];\n      stringArray1[0] = \"\";\n      stringArray1[1] = \"\";\n      stringArray1[2] = \"M(?Rr!e[e\\\"^\";\n      stringArray1[3] = \"\";\n      stringArray1[4] = \"|w2+ZJRWm)K\";\n      stringArray1[5] = \"70(lAppx?\";\n      stringArray1[6] = \"\";\n      stringArray1[7] = \"\";\n      stringArray1[8] = \"\";\n      // Undeclared exception!\n      try { \n        Main.main(stringArray1);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Main$1\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      Main main0 = new Main();\n      main0.testShort2();\n      main0.testInt1();\n      String[] stringArray0 = new String[2];\n      // Undeclared exception!\n      try { \n        Main.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Main$1\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      Main main0 = new Main();\n      String[] stringArray0 = new String[3];\n      stringArray0[0] = \"J+q*cH8\u007f\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \" result: \";\n      // Undeclared exception!\n      try { \n        Main.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Main$1\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      Main main0 = new Main();\n      String[] stringArray0 = new String[9];\n      stringArray0[0] = \"*[\";\n      // Undeclared exception!\n      try { \n        Main.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Main$1\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      Main main0 = new Main();\n      String[] stringArray0 = new String[4];\n      // Undeclared exception!\n      try { \n        Main.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Main$1\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      String[] stringArray0 = new String[6];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"Xdq|/UolwFcc\";\n      stringArray0[2] = \"\\n)?\\rGUX\";\n      stringArray0[3] = \"Test \";\n      stringArray0[4] = \"\";\n      stringArray0[5] = \"y4!pH6d[^t/\";\n      // Undeclared exception!\n      try { \n        Main.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Main$1\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      Main main0 = new Main();\n      main0.testFloat8();\n      // Undeclared exception!\n      try { \n        Main.main((String[]) null);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Main$1\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test22()  throws Throwable  {\n      Main main0 = new Main();\n      byte byte0 = main0.testByte5();\n      assertEquals((byte) (-5), byte0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 06:03:18 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Main_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Main\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpalj4b7uf\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Main_ESTest_scaffolding.class.getClassLoader() ,\n      \"Main\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Main_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Main\"\n    );\n  }\n}\n", "class_idx": 22}
{"class_name": "Serializer", "java_source": "/*\n * Copyright 2014 JBoss, by Red Hat, Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\n\n/** */\npublic final class Serializer {\n\n  private Serializer() {}\n\n  public static byte[] toByteArray(final Object obj) throws IOException {\n    final ByteArrayOutputStream b = new ByteArrayOutputStream();\n    final ObjectOutputStream o = new ObjectOutputStream(b);\n    o.writeObject(obj);\n    return b.toByteArray();\n  }\n\n  public static Object fromByteArray(byte[] bytes) throws IOException, ClassNotFoundException {\n    final ByteArrayInputStream b = new ByteArrayInputStream(bytes);\n    final ObjectInputStream o = new ObjectInputStream(b);\n    return o.readObject();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public final super Serializer \n.super java/lang/Object \n\n.method private <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 30 \n            L4 31 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static toByteArray : (Ljava/lang/Object;)[B \n    .code stack 3 locals 3 \nL0:     new java/io/ByteArrayOutputStream \nL3:     dup \nL4:     invokespecial Method java/io/ByteArrayOutputStream <init> ()V \nL7:     astore_1 \nL8:     new java/io/ObjectOutputStream \nL11:    dup \nL12:    aload_1 \nL13:    invokespecial Method java/io/ObjectOutputStream <init> (Ljava/io/OutputStream;)V \nL16:    astore_2 \nL17:    aload_2 \nL18:    aload_0 \nL19:    invokevirtual Method java/io/ObjectOutputStream writeObject (Ljava/lang/Object;)V \nL22:    aload_1 \nL23:    invokevirtual Method java/io/ByteArrayOutputStream toByteArray ()[B \nL26:    areturn \nL27:    \n        .linenumbertable \n            L0 35 \n            L8 36 \n            L17 37 \n            L22 38 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/IOException \n.end method \n\n.method public static fromByteArray : ([B)Ljava/lang/Object; \n    .code stack 3 locals 3 \nL0:     new java/io/ByteArrayInputStream \nL3:     dup \nL4:     aload_0 \nL5:     invokespecial Method java/io/ByteArrayInputStream <init> ([B)V \nL8:     astore_1 \nL9:     new java/io/ObjectInputStream \nL12:    dup \nL13:    aload_1 \nL14:    invokespecial Method java/io/ObjectInputStream <init> (Ljava/io/InputStream;)V \nL17:    astore_2 \nL18:    aload_2 \nL19:    invokevirtual Method java/io/ObjectInputStream readObject ()Ljava/lang/Object; \nL22:    areturn \nL23:    \n        .linenumbertable \n            L0 43 \n            L9 44 \n            L18 45 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/IOException java/lang/ClassNotFoundException \n.end method \n.sourcefile 'Serializer.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 01:04:03 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Serializer_ESTest extends Serializer_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      byte[] byteArray0 = Serializer.toByteArray(\"[<uxE[ Y5~\u007fE[tz\");\n      Object object0 = Serializer.fromByteArray(byteArray0);\n      assertEquals(\"[<uxE[ Y5~\u007fE[tz\", object0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      byte[] byteArray0 = Serializer.toByteArray((Object) null);\n      Object object0 = Serializer.fromByteArray(byteArray0);\n      assertNull(object0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 01:04:03 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Serializer_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Serializer\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpt2c_5vdd\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Serializer_ESTest_scaffolding.class.getClassLoader() ,\n      \"Serializer\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Serializer_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Serializer\"\n    );\n  }\n}\n", "class_idx": 23}
{"class_name": "TimeSlotUsageTransfer", "java_source": "public class TimeSlotUsageTransfer {\n\n  public TimeSlotUsageTransfer() {}\n}\n", "jasm_code": ".version 52 0 \n.class public super TimeSlotUsageTransfer \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n            L4 7 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'TimeSlotUsageTransfer.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 18:47:44 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class TimeSlotUsageTransfer_ESTest extends TimeSlotUsageTransfer_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      TimeSlotUsageTransfer timeSlotUsageTransfer0 = new TimeSlotUsageTransfer();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 18:47:44 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class TimeSlotUsageTransfer_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"TimeSlotUsageTransfer\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp26zzv5sb\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(TimeSlotUsageTransfer_ESTest_scaffolding.class.getClassLoader() ,\n      \"TimeSlotUsageTransfer\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(TimeSlotUsageTransfer_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"TimeSlotUsageTransfer\"\n    );\n  }\n}\n", "class_idx": 24}
{"class_name": "A9", "java_source": "public class A9 {\n  public static void a0(String msg) {\n    System.out.println(\"msg=\" + msg + 0);\n  }\n\n  public static void a1(String msg) {\n    System.out.println(\"msg=\" + msg + 1);\n  }\n\n  public static void a2(String msg) {\n    System.out.println(\"msg=\" + msg + 2);\n  }\n\n  public static void a3(String msg) {\n    System.out.println(\"msg=\" + msg + 3);\n  }\n\n  public static void a4(String msg) {\n    System.out.println(\"msg=\" + msg + 4);\n  }\n\n  public static void a5(String msg) {\n    System.out.println(\"msg=\" + msg + 5);\n  }\n\n  public static void a6(String msg) {\n    System.out.println(\"msg=\" + msg + 6);\n  }\n\n  public static void a7(String msg) {\n    System.out.println(\"msg=\" + msg + 7);\n  }\n\n  public static void a8(String msg) {\n    System.out.println(\"msg=\" + msg + 8);\n  }\n\n  public static void a9(String msg) {\n    System.out.println(\"msg=\" + msg + 9);\n  }\n\n  public static void a10(String msg) {\n    System.out.println(\"msg=\" + msg + 10);\n  }\n\n  public static void a11(String msg) {\n    System.out.println(\"msg=\" + msg + 11);\n  }\n\n  public static void a12(String msg) {\n    System.out.println(\"msg=\" + msg + 12);\n  }\n\n  public static void a13(String msg) {\n    System.out.println(\"msg=\" + msg + 13);\n  }\n\n  public static void a14(String msg) {\n    System.out.println(\"msg=\" + msg + 14);\n  }\n\n  public static void a15(String msg) {\n    System.out.println(\"msg=\" + msg + 15);\n  }\n\n  public static void a16(String msg) {\n    System.out.println(\"msg=\" + msg + 16);\n  }\n\n  public static void a17(String msg) {\n    System.out.println(\"msg=\" + msg + 17);\n  }\n\n  public static void a18(String msg) {\n    System.out.println(\"msg=\" + msg + 18);\n  }\n\n  public static void a19(String msg) {\n    System.out.println(\"msg=\" + msg + 19);\n  }\n\n  public static void a20(String msg) {\n    System.out.println(\"msg=\" + msg + 20);\n  }\n\n  public static void a21(String msg) {\n    System.out.println(\"msg=\" + msg + 21);\n  }\n\n  public static void a22(String msg) {\n    System.out.println(\"msg=\" + msg + 22);\n  }\n\n  public static void a23(String msg) {\n    System.out.println(\"msg=\" + msg + 23);\n  }\n\n  public static void a24(String msg) {\n    System.out.println(\"msg=\" + msg + 24);\n  }\n\n  public static void a25(String msg) {\n    System.out.println(\"msg=\" + msg + 25);\n  }\n\n  public static void a26(String msg) {\n    System.out.println(\"msg=\" + msg + 26);\n  }\n\n  public static void a27(String msg) {\n    System.out.println(\"msg=\" + msg + 27);\n  }\n\n  public static void a28(String msg) {\n    System.out.println(\"msg=\" + msg + 28);\n  }\n\n  public static void a29(String msg) {\n    System.out.println(\"msg=\" + msg + 29);\n  }\n\n  public static void a30(String msg) {\n    System.out.println(\"msg=\" + msg + 30);\n  }\n\n  public static void a31(String msg) {\n    System.out.println(\"msg=\" + msg + 31);\n  }\n\n  public static void a32(String msg) {\n    System.out.println(\"msg=\" + msg + 32);\n  }\n\n  public static void a33(String msg) {\n    System.out.println(\"msg=\" + msg + 33);\n  }\n\n  public static void a34(String msg) {\n    System.out.println(\"msg=\" + msg + 34);\n  }\n\n  public static void a35(String msg) {\n    System.out.println(\"msg=\" + msg + 35);\n  }\n\n  public static void a36(String msg) {\n    System.out.println(\"msg=\" + msg + 36);\n  }\n\n  public static void a37(String msg) {\n    System.out.println(\"msg=\" + msg + 37);\n  }\n\n  public static void a38(String msg) {\n    System.out.println(\"msg=\" + msg + 38);\n  }\n\n  public static void a39(String msg) {\n    System.out.println(\"msg=\" + msg + 39);\n  }\n\n  public static void a40(String msg) {\n    System.out.println(\"msg=\" + msg + 40);\n  }\n\n  public static void a41(String msg) {\n    System.out.println(\"msg=\" + msg + 41);\n  }\n\n  public static void a42(String msg) {\n    System.out.println(\"msg=\" + msg + 42);\n  }\n\n  public static void a43(String msg) {\n    System.out.println(\"msg=\" + msg + 43);\n  }\n\n  public static void a44(String msg) {\n    System.out.println(\"msg=\" + msg + 44);\n  }\n\n  public static void a45(String msg) {\n    System.out.println(\"msg=\" + msg + 45);\n  }\n\n  public static void a46(String msg) {\n    System.out.println(\"msg=\" + msg + 46);\n  }\n\n  public static void a47(String msg) {\n    System.out.println(\"msg=\" + msg + 47);\n  }\n\n  public static void a48(String msg) {\n    System.out.println(\"msg=\" + msg + 48);\n  }\n\n  public static void a49(String msg) {\n    System.out.println(\"msg=\" + msg + 49);\n  }\n\n  public static void a50(String msg) {\n    System.out.println(\"msg=\" + msg + 50);\n  }\n\n  public static void a51(String msg) {\n    System.out.println(\"msg=\" + msg + 51);\n  }\n\n  public static void a52(String msg) {\n    System.out.println(\"msg=\" + msg + 52);\n  }\n\n  public static void a53(String msg) {\n    System.out.println(\"msg=\" + msg + 53);\n  }\n\n  public static void a54(String msg) {\n    System.out.println(\"msg=\" + msg + 54);\n  }\n\n  public static void a55(String msg) {\n    System.out.println(\"msg=\" + msg + 55);\n  }\n\n  public static void a56(String msg) {\n    System.out.println(\"msg=\" + msg + 56);\n  }\n\n  public static void a57(String msg) {\n    System.out.println(\"msg=\" + msg + 57);\n  }\n\n  public static void a58(String msg) {\n    System.out.println(\"msg=\" + msg + 58);\n  }\n\n  public static void a59(String msg) {\n    System.out.println(\"msg=\" + msg + 59);\n  }\n\n  public static void a60(String msg) {\n    System.out.println(\"msg=\" + msg + 60);\n  }\n\n  public static void a61(String msg) {\n    System.out.println(\"msg=\" + msg + 61);\n  }\n\n  public static void a62(String msg) {\n    System.out.println(\"msg=\" + msg + 62);\n  }\n\n  public static void a63(String msg) {\n    System.out.println(\"msg=\" + msg + 63);\n  }\n\n  public static void a64(String msg) {\n    System.out.println(\"msg=\" + msg + 64);\n  }\n\n  public static void a65(String msg) {\n    System.out.println(\"msg=\" + msg + 65);\n  }\n\n  public static void a66(String msg) {\n    System.out.println(\"msg=\" + msg + 66);\n  }\n\n  public static void a67(String msg) {\n    System.out.println(\"msg=\" + msg + 67);\n  }\n\n  public static void a68(String msg) {\n    System.out.println(\"msg=\" + msg + 68);\n  }\n\n  public static void a69(String msg) {\n    System.out.println(\"msg=\" + msg + 69);\n  }\n\n  public static void a70(String msg) {\n    System.out.println(\"msg=\" + msg + 70);\n  }\n\n  public static void a71(String msg) {\n    System.out.println(\"msg=\" + msg + 71);\n  }\n\n  public static void a72(String msg) {\n    System.out.println(\"msg=\" + msg + 72);\n  }\n\n  public static void a73(String msg) {\n    System.out.println(\"msg=\" + msg + 73);\n  }\n\n  public static void a74(String msg) {\n    System.out.println(\"msg=\" + msg + 74);\n  }\n\n  public static void a75(String msg) {\n    System.out.println(\"msg=\" + msg + 75);\n  }\n\n  public static void a76(String msg) {\n    System.out.println(\"msg=\" + msg + 76);\n  }\n\n  public static void a77(String msg) {\n    System.out.println(\"msg=\" + msg + 77);\n  }\n\n  public static void a78(String msg) {\n    System.out.println(\"msg=\" + msg + 78);\n  }\n\n  public static void a79(String msg) {\n    System.out.println(\"msg=\" + msg + 79);\n  }\n\n  public static void a80(String msg) {\n    System.out.println(\"msg=\" + msg + 80);\n  }\n\n  public static void a81(String msg) {\n    System.out.println(\"msg=\" + msg + 81);\n  }\n\n  public static void a82(String msg) {\n    System.out.println(\"msg=\" + msg + 82);\n  }\n\n  public static void a83(String msg) {\n    System.out.println(\"msg=\" + msg + 83);\n  }\n\n  public static void a84(String msg) {\n    System.out.println(\"msg=\" + msg + 84);\n  }\n\n  public static void a85(String msg) {\n    System.out.println(\"msg=\" + msg + 85);\n  }\n\n  public static void a86(String msg) {\n    System.out.println(\"msg=\" + msg + 86);\n  }\n\n  public static void a87(String msg) {\n    System.out.println(\"msg=\" + msg + 87);\n  }\n\n  public static void a88(String msg) {\n    System.out.println(\"msg=\" + msg + 88);\n  }\n\n  public static void a89(String msg) {\n    System.out.println(\"msg=\" + msg + 89);\n  }\n\n  public static void a90(String msg) {\n    System.out.println(\"msg=\" + msg + 90);\n  }\n\n  public static void a91(String msg) {\n    System.out.println(\"msg=\" + msg + 91);\n  }\n\n  public static void a92(String msg) {\n    System.out.println(\"msg=\" + msg + 92);\n  }\n\n  public static void a93(String msg) {\n    System.out.println(\"msg=\" + msg + 93);\n  }\n\n  public static void a94(String msg) {\n    System.out.println(\"msg=\" + msg + 94);\n  }\n\n  public static void a95(String msg) {\n    System.out.println(\"msg=\" + msg + 95);\n  }\n\n  public static void a96(String msg) {\n    System.out.println(\"msg=\" + msg + 96);\n  }\n\n  public static void a97(String msg) {\n    System.out.println(\"msg=\" + msg + 97);\n  }\n\n  public static void a98(String msg) {\n    System.out.println(\"msg=\" + msg + 98);\n  }\n\n  public static void a99(String msg) {\n    System.out.println(\"msg=\" + msg + 99);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super A9 \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a0 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    iconst_0 \nL20:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL23:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL26:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL29:    return \nL30:    \n        .linenumbertable \n            L0 4 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a1 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    iconst_1 \nL20:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL23:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL26:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL29:    return \nL30:    \n        .linenumbertable \n            L0 5 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a2 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    iconst_2 \nL20:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL23:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL26:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL29:    return \nL30:    \n        .linenumbertable \n            L0 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a3 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    iconst_3 \nL20:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL23:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL26:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL29:    return \nL30:    \n        .linenumbertable \n            L0 7 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a4 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    iconst_4 \nL20:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL23:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL26:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL29:    return \nL30:    \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a5 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    iconst_5 \nL20:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL23:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL26:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL29:    return \nL30:    \n        .linenumbertable \n            L0 9 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a6 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 6 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 10 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a7 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 7 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 11 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a8 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 8 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 12 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a9 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 9 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a10 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 10 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 14 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a11 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 11 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 15 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a12 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 12 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 16 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a13 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 13 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 17 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a14 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 14 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 18 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a15 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 15 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 19 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a16 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 16 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 20 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a17 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 17 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a18 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 18 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 22 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a19 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 19 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a20 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 20 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a21 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 21 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 25 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a22 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 22 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 26 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a23 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 23 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 27 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a24 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 24 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a25 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 25 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 29 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a26 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 26 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a27 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 27 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 31 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a28 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 28 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 32 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a29 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 29 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 33 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a30 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 30 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a31 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 31 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 35 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a32 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 32 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 36 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a33 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 33 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 37 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a34 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 34 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 38 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a35 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 35 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 39 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a36 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 36 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 40 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a37 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 37 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 41 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a38 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 38 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 42 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a39 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 39 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 43 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a40 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 40 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 44 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a41 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 41 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 45 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a42 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 42 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a43 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 43 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 47 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a44 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 44 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 48 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a45 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 45 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 49 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a46 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 46 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 50 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a47 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 47 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 51 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a48 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 48 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 52 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a49 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 49 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 53 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a50 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 50 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 54 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a51 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 51 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 55 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a52 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 52 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 56 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a53 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 53 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 57 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a54 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 54 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 58 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a55 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 55 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 59 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a56 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 56 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 60 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a57 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 57 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 61 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a58 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 58 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 62 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a59 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 59 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 63 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a60 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 60 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 64 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a61 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 61 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 65 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a62 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 62 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 66 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a63 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 63 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 67 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a64 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 64 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 68 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a65 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 65 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 69 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a66 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 66 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 70 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a67 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 67 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 71 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a68 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 68 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 72 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a69 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 69 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 73 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a70 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 70 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 74 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a71 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 71 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 75 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a72 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 72 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 76 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a73 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 73 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 77 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a74 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 74 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 78 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a75 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 75 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 79 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a76 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 76 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 80 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a77 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 77 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 81 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a78 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 78 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 82 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a79 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 79 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 83 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a80 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 80 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 84 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a81 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 81 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 85 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a82 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 82 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 86 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a83 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 83 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 87 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a84 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 84 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 88 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a85 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 85 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 89 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a86 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 86 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 90 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a87 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 87 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 91 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a88 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 88 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 92 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a89 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 89 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 93 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a90 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 90 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 94 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a91 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 91 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 95 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a92 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 92 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 96 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a93 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 93 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 97 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a94 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 94 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 98 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a95 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 95 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 99 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a96 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 96 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 100 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a97 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 97 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 101 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a98 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 98 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 102 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static a99 : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'msg=' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 99 \nL21:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 103 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'A9.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 08:16:05 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class A9_ESTest extends A9_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test000()  throws Throwable  {\n      A9.a69(\"g'&s9qt fL=)\");\n  }\n\n  @Test(timeout = 4000)\n  public void test001()  throws Throwable  {\n      A9.a62(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test002()  throws Throwable  {\n      A9.a76((String) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test003()  throws Throwable  {\n      A9.a83(\"zdD\");\n  }\n\n  @Test(timeout = 4000)\n  public void test004()  throws Throwable  {\n      A9.a48(\"3L-GsX0cE/V4\");\n  }\n\n  @Test(timeout = 4000)\n  public void test005()  throws Throwable  {\n      A9.a90(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test006()  throws Throwable  {\n      A9.a55(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test007()  throws Throwable  {\n      A9.a21(\";V2jpAbHdej&a&\");\n  }\n\n  @Test(timeout = 4000)\n  public void test008()  throws Throwable  {\n      A9.a4((String) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test009()  throws Throwable  {\n      A9.a14(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test010()  throws Throwable  {\n      A9.a97(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test011()  throws Throwable  {\n      A9.a63(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test012()  throws Throwable  {\n      A9.a68(\"EUBbeUDgh%1J=V\");\n  }\n\n  @Test(timeout = 4000)\n  public void test013()  throws Throwable  {\n      A9.a54(\";V2jpAbHdej&a&\");\n  }\n\n  @Test(timeout = 4000)\n  public void test014()  throws Throwable  {\n      A9.a82((String) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test015()  throws Throwable  {\n      A9.a35((String) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test016()  throws Throwable  {\n      A9.a34(\"msg=\");\n  }\n\n  @Test(timeout = 4000)\n  public void test017()  throws Throwable  {\n      A9.a15(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test018()  throws Throwable  {\n      A9.a91(\"C.r92oTmB@TB:uW\");\n  }\n\n  @Test(timeout = 4000)\n  public void test019()  throws Throwable  {\n      A9.a96(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test020()  throws Throwable  {\n      A9.a49(\"t'\");\n  }\n\n  @Test(timeout = 4000)\n  public void test021()  throws Throwable  {\n      A9.a20((String) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test022()  throws Throwable  {\n      A9.a77(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test023()  throws Throwable  {\n      A9.a88(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test024()  throws Throwable  {\n      A9.a43(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test025()  throws Throwable  {\n      A9.a12(\"5\");\n  }\n\n  @Test(timeout = 4000)\n  public void test026()  throws Throwable  {\n      A9.a81(\"EUBbeUDgh%1J=V\");\n  }\n\n  @Test(timeout = 4000)\n  public void test027()  throws Throwable  {\n      A9.a50(\"zdD\");\n  }\n\n  @Test(timeout = 4000)\n  public void test028()  throws Throwable  {\n      A9.a40(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test029()  throws Throwable  {\n      A9.a9(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test030()  throws Throwable  {\n      A9.a78(\"-'<rW;IP\");\n  }\n\n  @Test(timeout = 4000)\n  public void test031()  throws Throwable  {\n      A9.a71((String) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test032()  throws Throwable  {\n      A9.a33(\"4eo$QB,0~\");\n  }\n\n  @Test(timeout = 4000)\n  public void test033()  throws Throwable  {\n      A9.a61(\"[fWdUcmk?_c\");\n  }\n\n  @Test(timeout = 4000)\n  public void test034()  throws Throwable  {\n      A9.a99((String) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test035()  throws Throwable  {\n      A9.a70(\"2$q]0)/\");\n  }\n\n  @Test(timeout = 4000)\n  public void test036()  throws Throwable  {\n      A9.a51(\"3L-GsX0cE/V4\");\n  }\n\n  @Test(timeout = 4000)\n  public void test037()  throws Throwable  {\n      A9.a23(\"WQ\");\n  }\n\n  @Test(timeout = 4000)\n  public void test038()  throws Throwable  {\n      A9.a42((String) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test039()  throws Throwable  {\n      A9.a79(\"[fWdUcmk?_c\");\n  }\n\n  @Test(timeout = 4000)\n  public void test040()  throws Throwable  {\n      A9.a22(\".V%FzTWK38}\");\n  }\n\n  @Test(timeout = 4000)\n  public void test041()  throws Throwable  {\n      A9.a41(\"-w_aZ\");\n  }\n\n  @Test(timeout = 4000)\n  public void test042()  throws Throwable  {\n      A9.a98(\"A9\");\n  }\n\n  @Test(timeout = 4000)\n  public void test043()  throws Throwable  {\n      A9.a32(\"msg=\");\n  }\n\n  @Test(timeout = 4000)\n  public void test044()  throws Throwable  {\n      A9.a8(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test045()  throws Throwable  {\n      A9.a89(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test046()  throws Throwable  {\n      A9.a13(\"C.r92oTmB@TB:uW\");\n  }\n\n  @Test(timeout = 4000)\n  public void test047()  throws Throwable  {\n      A9.a60(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test048()  throws Throwable  {\n      A9.a31(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test049()  throws Throwable  {\n      A9.a38(\"l\\\"wDR{6j}~q1h9\");\n  }\n\n  @Test(timeout = 4000)\n  public void test050()  throws Throwable  {\n      A9.a93(\"A9\");\n  }\n\n  @Test(timeout = 4000)\n  public void test051()  throws Throwable  {\n      A9.a24((String) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test052()  throws Throwable  {\n      A9.a10(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test053()  throws Throwable  {\n      A9.a86(\"'[/Z v\");\n  }\n\n  @Test(timeout = 4000)\n  public void test054()  throws Throwable  {\n      A9.a0((String) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test055()  throws Throwable  {\n      A9.a59((String) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test056()  throws Throwable  {\n      A9.a66(\"A9\");\n  }\n\n  @Test(timeout = 4000)\n  public void test057()  throws Throwable  {\n      A9.a45(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test058()  throws Throwable  {\n      A9.a73(\"JL{tdo&M)[KR@{{aIIq\");\n  }\n\n  @Test(timeout = 4000)\n  public void test059()  throws Throwable  {\n      A9.a17((String) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test060()  throws Throwable  {\n      A9.a52(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test061()  throws Throwable  {\n      A9.a7(\";V2jpAbHdej&a&\");\n  }\n\n  @Test(timeout = 4000)\n  public void test062()  throws Throwable  {\n      A9.a80((String) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test063()  throws Throwable  {\n      A9.a6(\"msg=\");\n  }\n\n  @Test(timeout = 4000)\n  public void test064()  throws Throwable  {\n      A9.a11(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test065()  throws Throwable  {\n      A9.a44(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test066()  throws Throwable  {\n      A9.a39((String) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test067()  throws Throwable  {\n      A9.a1(\"SQ\");\n  }\n\n  @Test(timeout = 4000)\n  public void test068()  throws Throwable  {\n      A9 a9_0 = new A9();\n  }\n\n  @Test(timeout = 4000)\n  public void test069()  throws Throwable  {\n      A9.a87(\"!axtV91QW@'`\u007fu`y6uu\");\n  }\n\n  @Test(timeout = 4000)\n  public void test070()  throws Throwable  {\n      A9.a30(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test071()  throws Throwable  {\n      A9.a72(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test072()  throws Throwable  {\n      A9.a53(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test073()  throws Throwable  {\n      A9.a16(\"Cqu#R4o]-+*!LTCh<\");\n  }\n\n  @Test(timeout = 4000)\n  public void test074()  throws Throwable  {\n      A9.a58(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test075()  throws Throwable  {\n      A9.a25(\"n=^V$w2(4v\u007f<wUI6,J]\");\n  }\n\n  @Test(timeout = 4000)\n  public void test076()  throws Throwable  {\n      A9.a19(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test077()  throws Throwable  {\n      A9.a36(\"A9\");\n  }\n\n  @Test(timeout = 4000)\n  public void test078()  throws Throwable  {\n      A9.a95(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test079()  throws Throwable  {\n      A9.a74(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test080()  throws Throwable  {\n      A9.a67(\"t'\");\n  }\n\n  @Test(timeout = 4000)\n  public void test081()  throws Throwable  {\n      A9.a5(\"[\\\"yMf,xPu:~uC\");\n  }\n\n  @Test(timeout = 4000)\n  public void test082()  throws Throwable  {\n      A9.a47(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test083()  throws Throwable  {\n      A9.a85(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test084()  throws Throwable  {\n      A9.a2(\":V#^}#Im)H%*r\");\n  }\n\n  @Test(timeout = 4000)\n  public void test085()  throws Throwable  {\n      A9.a29(\"/QG+-EkB85\");\n  }\n\n  @Test(timeout = 4000)\n  public void test086()  throws Throwable  {\n      A9.a64(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test087()  throws Throwable  {\n      A9.a26((String) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test088()  throws Throwable  {\n      A9.a57(\"A9\");\n  }\n\n  @Test(timeout = 4000)\n  public void test089()  throws Throwable  {\n      A9.a92(\"zdD\");\n  }\n\n  @Test(timeout = 4000)\n  public void test090()  throws Throwable  {\n      A9.a94(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test091()  throws Throwable  {\n      A9.a75(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test092()  throws Throwable  {\n      A9.a37(\"%|Jpd\u007fIR)\");\n  }\n\n  @Test(timeout = 4000)\n  public void test093()  throws Throwable  {\n      A9.a18(\"d)9[uP\");\n  }\n\n  @Test(timeout = 4000)\n  public void test094()  throws Throwable  {\n      A9.a56(\")w[&w\");\n  }\n\n  @Test(timeout = 4000)\n  public void test095()  throws Throwable  {\n      A9.a27(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test096()  throws Throwable  {\n      A9.a3(\"L~N-d<'\");\n  }\n\n  @Test(timeout = 4000)\n  public void test097()  throws Throwable  {\n      A9.a84(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test098()  throws Throwable  {\n      A9.a28(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test099()  throws Throwable  {\n      A9.a46(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test100()  throws Throwable  {\n      A9.a65(\"\");\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 08:16:05 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class A9_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"A9\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmppq3l2gtj\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(A9_ESTest_scaffolding.class.getClassLoader() ,\n      \"A9\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(A9_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"A9\"\n    );\n  }\n}\n", "class_idx": 25}
{"class_name": "CandleData", "java_source": "/*\n * This file is part of Bitsquare.\n *\n * Bitsquare is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or (at\n * your option) any later version.\n *\n * Bitsquare is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public\n * License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Bitsquare. If not, see <http://www.gnu.org/licenses/>.\n */\n\npublic class CandleData {\n  public final long tick; // Is the time tick in the chosen time interval\n  public final long open;\n  public final long close;\n  public final long high;\n  public final long low;\n  public final long average;\n  public final long accumulatedAmount;\n  public final long accumulatedVolume;\n  public final long numTrades;\n  public final boolean isBullish;\n  public final String date;\n\n  public CandleData(\n      long tick,\n      long open,\n      long close,\n      long high,\n      long low,\n      long average,\n      long accumulatedAmount,\n      long accumulatedVolume,\n      long numTrades,\n      boolean isBullish,\n      String date) {\n    this.tick = tick;\n    this.open = open;\n    this.close = close;\n    this.high = high;\n    this.low = low;\n    this.average = average;\n    this.accumulatedAmount = accumulatedAmount;\n    this.accumulatedVolume = accumulatedVolume;\n    this.numTrades = numTrades;\n    this.isBullish = isBullish;\n    this.date = date;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super CandleData \n.super java/lang/Object \n.field public final tick J \n.field public final 'open' J \n.field public final close J \n.field public final high J \n.field public final low J \n.field public final average J \n.field public final accumulatedAmount J \n.field public final accumulatedVolume J \n.field public final numTrades J \n.field public final isBullish Z \n.field public final date Ljava/lang/String; \n\n.method public <init> : (JJJJJJJJJZLjava/lang/String;)V \n    .code stack 3 locals 21 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     lload_1 \nL6:     putfield Field CandleData tick J \nL9:     aload_0 \nL10:    lload_3 \nL11:    putfield Field CandleData 'open' J \nL14:    aload_0 \nL15:    lload 5 \nL17:    putfield Field CandleData close J \nL20:    aload_0 \nL21:    lload 7 \nL23:    putfield Field CandleData high J \nL26:    aload_0 \nL27:    lload 9 \nL29:    putfield Field CandleData low J \nL32:    aload_0 \nL33:    lload 11 \nL35:    putfield Field CandleData average J \nL38:    aload_0 \nL39:    lload 13 \nL41:    putfield Field CandleData accumulatedAmount J \nL44:    aload_0 \nL45:    lload 15 \nL47:    putfield Field CandleData accumulatedVolume J \nL50:    aload_0 \nL51:    lload 17 \nL53:    putfield Field CandleData numTrades J \nL56:    aload_0 \nL57:    iload 19 \nL59:    putfield Field CandleData isBullish Z \nL62:    aload_0 \nL63:    aload 20 \nL65:    putfield Field CandleData date Ljava/lang/String; \nL68:    return \nL69:    \n        .linenumbertable \n            L0 33 \n            L4 34 \n            L9 35 \n            L14 36 \n            L20 37 \n            L26 38 \n            L32 39 \n            L38 40 \n            L44 41 \n            L50 42 \n            L56 43 \n            L62 44 \n            L68 45 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'CandleData.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 17:09:04 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CandleData_ESTest extends CandleData_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      CandleData candleData0 = new CandleData(402L, (-12034L), (-12034L), 252L, 252L, 402L, 252L, (-56615L), 252L, false, \"\");\n      assertEquals(402L, candleData0.average);\n      assertEquals(252L, candleData0.high);\n      assertEquals((-56615L), candleData0.accumulatedVolume);\n      assertEquals((-12034L), candleData0.close);\n      assertEquals(252L, candleData0.low);\n      assertEquals(402L, candleData0.tick);\n      assertEquals(252L, candleData0.accumulatedAmount);\n      assertFalse(candleData0.isBullish);\n      assertEquals(252L, candleData0.numTrades);\n      assertEquals((-12034L), candleData0.open);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 17:09:04 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class CandleData_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CandleData\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpcyg7b24l\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CandleData_ESTest_scaffolding.class.getClassLoader() ,\n      \"CandleData\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CandleData_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CandleData\"\n    );\n  }\n}\n", "class_idx": 26}
{"class_name": "RuleOcurrence", "java_source": "/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n\nimport java.util.LinkedList;\nimport java.util.List;\n\n/**\n * @author wallace\n */\npublic class RuleOcurrence {\n  private int number;\n  private List<String> revisions;\n\n  RuleOcurrence(int number) {\n    this.number = number;\n    revisions = new LinkedList();\n  }\n\n  RuleOcurrence() {\n    this.number = 0;\n    revisions = new LinkedList();\n  }\n\n  public void addRevision(String revison) {\n    revisions.add(revison);\n  }\n\n  public void addRevisionInHead(String revison) {\n    revisions.add(0, revison);\n  }\n\n  public List<String> getRevisions() {\n    return revisions;\n  }\n\n  /**\n   * @return the number\n   */\n  public int getNumber() {\n    return number;\n  }\n\n  /**\n   * @param number the number to set\n   */\n  public void setNumber(int number) {\n    this.number = number;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super RuleOcurrence \n.super java/lang/Object \n.field private number I \n.field private revisions Ljava/util/List; .fieldattributes \n    .signature Ljava/util/List<Ljava/lang/String;>; \n.end fieldattributes \n\n.method <init> : (I)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field RuleOcurrence number I \nL9:     aload_0 \nL10:    new java/util/LinkedList \nL13:    dup \nL14:    invokespecial Method java/util/LinkedList <init> ()V \nL17:    putfield Field RuleOcurrence revisions Ljava/util/List; \nL20:    return \nL21:    \n        .linenumbertable \n            L0 18 \n            L4 19 \n            L9 20 \n            L20 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method <init> : ()V \n    .code stack 3 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iconst_0 \nL6:     putfield Field RuleOcurrence number I \nL9:     aload_0 \nL10:    new java/util/LinkedList \nL13:    dup \nL14:    invokespecial Method java/util/LinkedList <init> ()V \nL17:    putfield Field RuleOcurrence revisions Ljava/util/List; \nL20:    return \nL21:    \n        .linenumbertable \n            L0 23 \n            L4 24 \n            L9 25 \n            L20 26 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public addRevision : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field RuleOcurrence revisions Ljava/util/List; \nL4:     aload_1 \nL5:     invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL10:    pop \nL11:    return \nL12:    \n        .linenumbertable \n            L0 29 \n            L11 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public addRevisionInHead : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     getfield Field RuleOcurrence revisions Ljava/util/List; \nL4:     iconst_0 \nL5:     aload_1 \nL6:     invokeinterface InterfaceMethod java/util/List add (ILjava/lang/Object;)V 3 \nL11:    return \nL12:    \n        .linenumbertable \n            L0 33 \n            L11 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getRevisions : ()Ljava/util/List; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field RuleOcurrence revisions Ljava/util/List; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 37 \n        .end linenumbertable \n    .end code \n    .signature ()Ljava/util/List<Ljava/lang/String;>; \n.end method \n\n.method public getNumber : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field RuleOcurrence number I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 44 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setNumber : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field RuleOcurrence number I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 51 \n            L5 52 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'RuleOcurrence.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 03:38:56 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class RuleOcurrence_ESTest extends RuleOcurrence_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      RuleOcurrence ruleOcurrence0 = new RuleOcurrence();\n      ruleOcurrence0.addRevision(\"\");\n      ruleOcurrence0.addRevisionInHead(\"s*~8*9(\");\n      assertEquals(0, ruleOcurrence0.getNumber());\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      RuleOcurrence ruleOcurrence0 = new RuleOcurrence(1);\n      ruleOcurrence0.addRevision((String) null);\n      ruleOcurrence0.getRevisions();\n      assertEquals(1, ruleOcurrence0.getNumber());\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      RuleOcurrence ruleOcurrence0 = new RuleOcurrence();\n      ruleOcurrence0.setNumber(120781);\n      int int0 = ruleOcurrence0.getNumber();\n      assertEquals(120781, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      RuleOcurrence ruleOcurrence0 = new RuleOcurrence((-49302));\n      int int0 = ruleOcurrence0.getNumber();\n      assertEquals((-49302), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      RuleOcurrence ruleOcurrence0 = new RuleOcurrence();\n      int int0 = ruleOcurrence0.getNumber();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      RuleOcurrence ruleOcurrence0 = new RuleOcurrence(1);\n      ruleOcurrence0.getRevisions();\n      assertEquals(1, ruleOcurrence0.getNumber());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 03:38:56 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class RuleOcurrence_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"RuleOcurrence\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp4i56_3sa\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(RuleOcurrence_ESTest_scaffolding.class.getClassLoader() ,\n      \"RuleOcurrence\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(RuleOcurrence_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"RuleOcurrence\"\n    );\n  }\n}\n", "class_idx": 27}
{"class_name": "Up", "java_source": "/*\n * Hibernate, Relational Persistence for Idiomatic Java\n *\n * License: GNU Lesser General Public License (LGPL), version 2.1 or later.\n * See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.\n */\n\n// $Id: Up.java 4599 2004-09-26 05:18:27Z oneovthafew $\n\nimport java.io.Serializable;\n\n/**\n * @author Gavin King\n */\npublic class Up implements Serializable {\n\n  private String id1;\n  private long id2;\n\n  public String getId1() {\n    return id1;\n  }\n\n  public long getId2() {\n    return id2;\n  }\n\n  public void setId1(String string) {\n    id1 = string;\n  }\n\n  public void setId2(long l) {\n    id2 = l;\n  }\n\n  public boolean equals(Object other) {\n    if (!(other instanceof Up)) return false;\n    Up that = (Up) other;\n    return this.id1.equals(that.id1) && this.id2 == that.id2;\n  }\n\n  public int hashCode() {\n    return id1.hashCode();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Up \n.super java/lang/Object \n.implements java/io/Serializable \n.field private id1 Ljava/lang/String; \n.field private id2 J \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 15 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getId1 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Up id1 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getId2 : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field Up id2 J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 25 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setId1 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Up id1 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 29 \n            L5 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setId2 : (J)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     lload_1 \nL2:     putfield Field Up id2 J \nL5:     return \nL6:     \n        .linenumbertable \n            L0 33 \n            L5 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public equals : (Ljava/lang/Object;)Z \n    .code stack 4 locals 3 \nL0:     aload_1 \nL1:     instanceof Up \nL4:     ifne L9 \nL7:     iconst_0 \nL8:     ireturn \n\n        .stack same \nL9:     aload_1 \nL10:    checkcast Up \nL13:    astore_2 \nL14:    aload_0 \nL15:    getfield Field Up id1 Ljava/lang/String; \nL18:    aload_2 \nL19:    getfield Field Up id1 Ljava/lang/String; \nL22:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL25:    ifeq L44 \nL28:    aload_0 \nL29:    getfield Field Up id2 J \nL32:    aload_2 \nL33:    getfield Field Up id2 J \nL36:    lcmp \nL37:    ifne L44 \nL40:    iconst_1 \nL41:    goto L45 \n\n        .stack append Object Up \nL44:    iconst_0 \n\n        .stack stack_1 Integer \nL45:    ireturn \nL46:    \n        .linenumbertable \n            L0 37 \n            L9 38 \n            L14 39 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public hashCode : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Up id1 Ljava/lang/String; \nL4:     invokevirtual Method java/lang/String hashCode ()I \nL7:     ireturn \nL8:     \n        .linenumbertable \n            L0 42 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Up.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 22:17:37 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Up_ESTest extends Up_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      Up up0 = new Up();\n      up0.setId1(\"7&bY[$GJ&|\");\n      Up up1 = new Up();\n      up1.setId1(\"7&bY[$GJ&|\");\n      up1.setId2(1L);\n      boolean boolean0 = up0.equals(up1);\n      assertEquals(1L, up1.getId2());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      Up up0 = new Up();\n      up0.setId2(1L);\n      long long0 = up0.getId2();\n      assertEquals(1L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      Up up0 = new Up();\n      up0.setId2((-687L));\n      long long0 = up0.getId2();\n      assertEquals((-687L), long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      Up up0 = new Up();\n      up0.setId1(\"{^'<!.$\");\n      String string0 = up0.getId1();\n      assertEquals(\"{^'<!.$\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      Up up0 = new Up();\n      up0.setId1(\"\");\n      String string0 = up0.getId1();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      Up up0 = new Up();\n      up0.setId1(\"{^'<!.$\");\n      Up up1 = new Up();\n      up1.setId2((-32281L));\n      up1.setId1(\"{^'<!.$\");\n      boolean boolean0 = up0.equals(up1);\n      assertEquals((-32281L), up1.getId2());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      Up up0 = new Up();\n      up0.setId1(\"{^'<!.$\");\n      boolean boolean0 = up0.equals(up0);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Up up0 = new Up();\n      Object object0 = new Object();\n      boolean boolean0 = up0.equals(object0);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      Up up0 = new Up();\n      long long0 = up0.getId2();\n      assertEquals(0L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      Up up0 = new Up();\n      up0.setId1(\"{^'<!.$\");\n      Up up1 = new Up();\n      boolean boolean0 = up0.equals(up1);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      Up up0 = new Up();\n      // Undeclared exception!\n      try { \n        up0.hashCode();\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"Up\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Up up0 = new Up();\n      String string0 = up0.getId1();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 22:17:37 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Up_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Up\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpnyuihpei\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Up_ESTest_scaffolding.class.getClassLoader() ,\n      \"Up\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Up_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Up\"\n    );\n  }\n}\n", "class_idx": 28}
{"class_name": "ParameterException", "java_source": "/** */\n\n/**\n * Main exception thrown when the specified parameters on different methods are not correct\n *\n * @author Pako Castillo\n */\npublic class ParameterException extends Exception {\n\n  /** */\n  private static final long serialVersionUID = -6296975746624756926L;\n\n  /**\n   * Constructor passing the exception message to the parent\n   *\n   * @param e\n   */\n  public ParameterException(String e) {\n    super(e);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ParameterException \n.super java/lang/Exception \n.field private static final serialVersionUID J = -6296975746624756926L \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 25 \n            L5 26 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ParameterException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 10:37:05 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ParameterException_ESTest extends ParameterException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ParameterException parameterException0 = new ParameterException(\"\");\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 10:37:05 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ParameterException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ParameterException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpbou71_cr\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ParameterException_ESTest_scaffolding.class.getClassLoader() ,\n      \"ParameterException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ParameterException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ParameterException\"\n    );\n  }\n}\n", "class_idx": 29}
{"class_name": "WishlistPojoRequest", "java_source": "public class WishlistPojoRequest {\n\n  private String marketAreaCode;\n\n  public String getMarketAreaCode() {\n    return marketAreaCode;\n  }\n\n  public void setMarketAreaCode(String marketAreaCode) {\n    this.marketAreaCode = marketAreaCode;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super WishlistPojoRequest \n.super java/lang/Object \n.field private marketAreaCode Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getMarketAreaCode : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field WishlistPojoRequest marketAreaCode Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setMarketAreaCode : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field WishlistPojoRequest marketAreaCode Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 12 \n            L5 13 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'WishlistPojoRequest.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 23:06:21 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class WishlistPojoRequest_ESTest extends WishlistPojoRequest_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      WishlistPojoRequest wishlistPojoRequest0 = new WishlistPojoRequest();\n      wishlistPojoRequest0.setMarketAreaCode(\"lAL]va\");\n      String string0 = wishlistPojoRequest0.getMarketAreaCode();\n      assertEquals(\"lAL]va\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      WishlistPojoRequest wishlistPojoRequest0 = new WishlistPojoRequest();\n      wishlistPojoRequest0.setMarketAreaCode(\"\");\n      String string0 = wishlistPojoRequest0.getMarketAreaCode();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      WishlistPojoRequest wishlistPojoRequest0 = new WishlistPojoRequest();\n      String string0 = wishlistPojoRequest0.getMarketAreaCode();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 23:06:21 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class WishlistPojoRequest_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"WishlistPojoRequest\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpdq7p3wkj\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(WishlistPojoRequest_ESTest_scaffolding.class.getClassLoader() ,\n      \"WishlistPojoRequest\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(WishlistPojoRequest_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"WishlistPojoRequest\"\n    );\n  }\n}\n", "class_idx": 30}
{"class_name": "CoinChangingMinimumCoin", "java_source": "import java.util.HashMap;\nimport java.util.Map;\n\n/**\n * Date 08/12/2013\n *\n * @author Tushar Roy\n *     <p>Given a total and coins of certain denomination with infinite supply, what is the minimum\n *     number of coins it takes to form this total.\n *     <p>Time complexity - O(coins.size * total) Space complexity - O(coins.size * total)\n *     <p>Youtube video - Topdown DP - https://youtu.be/Kf_M7RdHr1M Bottom up DP -\n *     https://youtu.be/Y0ZqKpToTic\n */\npublic class CoinChangingMinimumCoin {\n\n  /**\n   * Top down dynamic programing. Using map to store intermediate results. Returns Integer.MAX_VALUE\n   * if total cannot be formed with given coins\n   */\n  public int minimumCoinTopDown(int total, int coins[], Map<Integer, Integer> map) {\n\n    // if total is 0 then there is nothing to do. return 0.\n    if (total == 0) {\n      return 0;\n    }\n\n    // if map contains the result means we calculated it before. Lets return that value.\n    if (map.containsKey(total)) {\n      return map.get(total);\n    }\n\n    // iterate through all coins and see which one gives best result.\n    int min = Integer.MAX_VALUE;\n    for (int i = 0; i < coins.length; i++) {\n      // if value of coin is greater than total we are looking for just continue.\n      if (coins[i] > total) {\n        continue;\n      }\n      // recurse with total - coins[i] as new total\n      int val = minimumCoinTopDown(total - coins[i], coins, map);\n\n      // if val we get from picking coins[i] as first coin for current total is less\n      // than value found so far make it minimum.\n      if (val < min) {\n        min = val;\n      }\n    }\n\n    // if min is MAX_VAL dont change it. Just result it as is. Otherwise add 1 to it.\n    min = (min == Integer.MAX_VALUE ? min : min + 1);\n\n    // memoize the minimum for current total.\n    map.put(total, min);\n    return min;\n  }\n\n  /**\n   * Bottom up way of solving this problem. Keep input sorted. Otherwise temp[j-arr[i]) + 1 can\n   * become Integer.Max_value + 1 which can be very low negative number Returns Integer.MAX_VALUE -\n   * 1 if solution is not possible.\n   */\n  public int minimumCoinBottomUp(int total, int coins[]) {\n    int T[] = new int[total + 1];\n    int R[] = new int[total + 1];\n    T[0] = 0;\n    for (int i = 1; i <= total; i++) {\n      T[i] = Integer.MAX_VALUE - 1;\n      R[i] = -1;\n    }\n    for (int j = 0; j < coins.length; j++) {\n      for (int i = 1; i <= total; i++) {\n        if (i >= coins[j]) {\n          if (T[i - coins[j]] + 1 < T[i]) {\n            T[i] = 1 + T[i - coins[j]];\n            R[i] = j;\n          }\n        }\n      }\n    }\n    printCoinCombination(R, coins);\n    return T[total];\n  }\n\n  private void printCoinCombination(int R[], int coins[]) {\n    if (R[R.length - 1] == -1) {\n      System.out.print(\"No solution is possible\");\n      return;\n    }\n    int start = R.length - 1;\n    System.out.print(\"Coins used to form total \");\n    while (start != 0) {\n      int j = R[start];\n      System.out.print(coins[j] + \" \");\n      start = start - coins[j];\n    }\n    System.out.print(\"\\n\");\n  }\n\n  public static void main(String args[]) {\n    int total = 13;\n    int coins[] = {7, 3, 2, 6};\n    CoinChangingMinimumCoin cc = new CoinChangingMinimumCoin();\n    Map<Integer, Integer> map = new HashMap<>();\n    int topDownValue = cc.minimumCoinTopDown(total, coins, map);\n    int bottomUpValue = cc.minimumCoinBottomUp(total, coins);\n\n    System.out.print(\n        String.format(\"Bottom up and top down result %s %s\", bottomUpValue, topDownValue));\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super CoinChangingMinimumCoin \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public minimumCoinTopDown : (I[ILjava/util/Map;)I \n    .code stack 4 locals 7 \nL0:     iload_1 \nL1:     ifne L6 \nL4:     iconst_0 \nL5:     ireturn \n\n        .stack same \nL6:     aload_3 \nL7:     iload_1 \nL8:     invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL11:    invokeinterface InterfaceMethod java/util/Map containsKey (Ljava/lang/Object;)Z 2 \nL16:    ifeq L36 \nL19:    aload_3 \nL20:    iload_1 \nL21:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL24:    invokeinterface InterfaceMethod java/util/Map get (Ljava/lang/Object;)Ljava/lang/Object; 2 \nL29:    checkcast java/lang/Integer \nL32:    invokevirtual Method java/lang/Integer intValue ()I \nL35:    ireturn \n\n        .stack same \nL36:    ldc 2147483647 \nL38:    istore 4 \nL40:    iconst_0 \nL41:    istore 5 \n\n        .stack append Integer Integer \nL43:    iload 5 \nL45:    aload_2 \nL46:    arraylength \nL47:    if_icmpge L92 \nL50:    aload_2 \nL51:    iload 5 \nL53:    iaload \nL54:    iload_1 \nL55:    if_icmple L61 \nL58:    goto L86 \n\n        .stack same \nL61:    aload_0 \nL62:    iload_1 \nL63:    aload_2 \nL64:    iload 5 \nL66:    iaload \nL67:    isub \nL68:    aload_2 \nL69:    aload_3 \nL70:    invokevirtual Method CoinChangingMinimumCoin minimumCoinTopDown (I[ILjava/util/Map;)I \nL73:    istore 6 \nL75:    iload 6 \nL77:    iload 4 \nL79:    if_icmpge L86 \nL82:    iload 6 \nL84:    istore 4 \n\n        .stack same \nL86:    iinc 5 1 \nL89:    goto L43 \n\n        .stack chop 1 \nL92:    iload 4 \nL94:    ldc 2147483647 \nL96:    if_icmpne L104 \nL99:    iload 4 \nL101:   goto L108 \n\n        .stack same \nL104:   iload 4 \nL106:   iconst_1 \nL107:   iadd \n\n        .stack stack_1 Integer \nL108:   istore 4 \nL110:   aload_3 \nL111:   iload_1 \nL112:   invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL115:   iload 4 \nL117:   invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL120:   invokeinterface InterfaceMethod java/util/Map put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; 3 \nL125:   pop \nL126:   iload 4 \nL128:   ireturn \nL129:   \n        .linenumbertable \n            L0 30 \n            L4 31 \n            L6 35 \n            L19 36 \n            L36 40 \n            L40 41 \n            L50 43 \n            L58 44 \n            L61 47 \n            L75 51 \n            L82 52 \n            L86 41 \n            L92 57 \n            L110 60 \n            L126 61 \n        .end linenumbertable \n    .end code \n    .signature (I[ILjava/util/Map<Ljava/lang/Integer;Ljava/lang/Integer;>;)I \n.end method \n\n.method public minimumCoinBottomUp : (I[I)I \n    .code stack 7 locals 7 \nL0:     iload_1 \nL1:     iconst_1 \nL2:     iadd \nL3:     newarray int \nL5:     astore_3 \nL6:     iload_1 \nL7:     iconst_1 \nL8:     iadd \nL9:     newarray int \nL11:    astore 4 \nL13:    aload_3 \nL14:    iconst_0 \nL15:    iconst_0 \nL16:    iastore \nL17:    iconst_1 \nL18:    istore 5 \n\n        .stack append Object [I Object [I Integer \nL20:    iload 5 \nL22:    iload_1 \nL23:    if_icmpgt L44 \nL26:    aload_3 \nL27:    iload 5 \nL29:    ldc 2147483646 \nL31:    iastore \nL32:    aload 4 \nL34:    iload 5 \nL36:    iconst_m1 \nL37:    iastore \nL38:    iinc 5 1 \nL41:    goto L20 \n\n        .stack chop 1 \nL44:    iconst_0 \nL45:    istore 5 \n\n        .stack append Integer \nL47:    iload 5 \nL49:    aload_2 \nL50:    arraylength \nL51:    if_icmpge L124 \nL54:    iconst_1 \nL55:    istore 6 \n\n        .stack append Integer \nL57:    iload 6 \nL59:    iload_1 \nL60:    if_icmpgt L118 \nL63:    iload 6 \nL65:    aload_2 \nL66:    iload 5 \nL68:    iaload \nL69:    if_icmplt L112 \nL72:    aload_3 \nL73:    iload 6 \nL75:    aload_2 \nL76:    iload 5 \nL78:    iaload \nL79:    isub \nL80:    iaload \nL81:    iconst_1 \nL82:    iadd \nL83:    aload_3 \nL84:    iload 6 \nL86:    iaload \nL87:    if_icmpge L112 \nL90:    aload_3 \nL91:    iload 6 \nL93:    iconst_1 \nL94:    aload_3 \nL95:    iload 6 \nL97:    aload_2 \nL98:    iload 5 \nL100:   iaload \nL101:   isub \nL102:   iaload \nL103:   iadd \nL104:   iastore \nL105:   aload 4 \nL107:   iload 6 \nL109:   iload 5 \nL111:   iastore \n\n        .stack same \nL112:   iinc 6 1 \nL115:   goto L57 \n\n        .stack chop 1 \nL118:   iinc 5 1 \nL121:   goto L47 \n\n        .stack chop 1 \nL124:   aload_0 \nL125:   aload 4 \nL127:   aload_2 \nL128:   invokespecial Method CoinChangingMinimumCoin printCoinCombination ([I[I)V \nL131:   aload_3 \nL132:   iload_1 \nL133:   iaload \nL134:   ireturn \nL135:   \n        .linenumbertable \n            L0 71 \n            L6 72 \n            L13 73 \n            L17 74 \n            L26 75 \n            L32 76 \n            L38 74 \n            L44 78 \n            L54 79 \n            L63 80 \n            L72 81 \n            L90 82 \n            L105 83 \n            L112 79 \n            L118 78 \n            L124 88 \n            L131 89 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private printCoinCombination : ([I[I)V \n    .code stack 4 locals 5 \nL0:     aload_1 \nL1:     aload_1 \nL2:     arraylength \nL3:     iconst_1 \nL4:     isub \nL5:     iaload \nL6:     iconst_m1 \nL7:     if_icmpne L19 \nL10:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL13:    ldc 'No solution is possible' \nL15:    invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \nL18:    return \n\n        .stack same \nL19:    aload_1 \nL20:    arraylength \nL21:    iconst_1 \nL22:    isub \nL23:    istore_3 \nL24:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL27:    ldc 'Coins used to form total ' \nL29:    invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \n\n        .stack append Integer \nL32:    iload_3 \nL33:    ifeq L79 \nL36:    aload_1 \nL37:    iload_3 \nL38:    iaload \nL39:    istore 4 \nL41:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL44:    new java/lang/StringBuilder \nL47:    dup \nL48:    invokespecial Method java/lang/StringBuilder <init> ()V \nL51:    aload_2 \nL52:    iload 4 \nL54:    iaload \nL55:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL58:    ldc ' ' \nL60:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL63:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL66:    invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \nL69:    iload_3 \nL70:    aload_2 \nL71:    iload 4 \nL73:    iaload \nL74:    isub \nL75:    istore_3 \nL76:    goto L32 \n\n        .stack same \nL79:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL82:    ldc '\\n' \nL84:    invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \nL87:    return \nL88:    \n        .linenumbertable \n            L0 93 \n            L10 94 \n            L18 95 \n            L19 97 \n            L24 98 \n            L32 99 \n            L36 100 \n            L41 101 \n            L69 102 \n            L76 103 \n            L79 104 \n            L87 105 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 6 locals 7 \nL0:     bipush 13 \nL2:     istore_1 \nL3:     iconst_4 \nL4:     newarray int \nL6:     dup \nL7:     iconst_0 \nL8:     bipush 7 \nL10:    iastore \nL11:    dup \nL12:    iconst_1 \nL13:    iconst_3 \nL14:    iastore \nL15:    dup \nL16:    iconst_2 \nL17:    iconst_2 \nL18:    iastore \nL19:    dup \nL20:    iconst_3 \nL21:    bipush 6 \nL23:    iastore \nL24:    astore_2 \nL25:    new CoinChangingMinimumCoin \nL28:    dup \nL29:    invokespecial Method CoinChangingMinimumCoin <init> ()V \nL32:    astore_3 \nL33:    new java/util/HashMap \nL36:    dup \nL37:    invokespecial Method java/util/HashMap <init> ()V \nL40:    astore 4 \nL42:    aload_3 \nL43:    iload_1 \nL44:    aload_2 \nL45:    aload 4 \nL47:    invokevirtual Method CoinChangingMinimumCoin minimumCoinTopDown (I[ILjava/util/Map;)I \nL50:    istore 5 \nL52:    aload_3 \nL53:    iload_1 \nL54:    aload_2 \nL55:    invokevirtual Method CoinChangingMinimumCoin minimumCoinBottomUp (I[I)I \nL58:    istore 6 \nL60:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL63:    ldc 'Bottom up and top down result %s %s' \nL65:    iconst_2 \nL66:    anewarray java/lang/Object \nL69:    dup \nL70:    iconst_0 \nL71:    iload 6 \nL73:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL76:    aastore \nL77:    dup \nL78:    iconst_1 \nL79:    iload 5 \nL81:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL84:    aastore \nL85:    invokestatic Method java/lang/String format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; \nL88:    invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \nL91:    return \nL92:    \n        .linenumbertable \n            L0 108 \n            L3 109 \n            L25 110 \n            L33 111 \n            L42 112 \n            L52 113 \n            L60 115 \n            L91 117 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'CoinChangingMinimumCoin.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 10:42:33 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.shaded.org.mockito.Mockito.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.util.HashMap;\nimport java.util.function.BiConsumer;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.ViolatedAssumptionAnswer;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CoinChangingMinimumCoin_ESTest extends CoinChangingMinimumCoin_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      CoinChangingMinimumCoin coinChangingMinimumCoin0 = new CoinChangingMinimumCoin();\n      int[] intArray0 = new int[6];\n      intArray0[0] = 70330;\n      intArray0[1] = 70330;\n      intArray0[2] = 70330;\n      intArray0[3] = 70330;\n      intArray0[4] = 70330;\n      intArray0[5] = 8060;\n      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();\n      coinChangingMinimumCoin0.minimumCoinTopDown(70330, intArray0, hashMap0);\n      String[] stringArray0 = new String[6];\n      stringArray0[0] = \"THKQVL@pRx<jcl9pBqb\";\n      stringArray0[1] = \",LJ?o\";\n      stringArray0[2] = \"0*cQ!k)1\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \"CoinChangingMinimumCoin\";\n      stringArray0[5] = \"6iRZ#.\";\n      CoinChangingMinimumCoin.main(stringArray0);\n      CoinChangingMinimumCoin.main(stringArray0);\n      coinChangingMinimumCoin0.minimumCoinTopDown((-1), intArray0, hashMap0);\n      // Undeclared exception!\n      coinChangingMinimumCoin0.minimumCoinBottomUp(70330, intArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      String[] stringArray0 = new String[4];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"Bottom up and top down result %s %s\";\n      stringArray0[2] = \"h%9+w@f2?Y\";\n      stringArray0[3] = \"\";\n      CoinChangingMinimumCoin.main(stringArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      String[] stringArray0 = new String[0];\n      CoinChangingMinimumCoin.main(stringArray0);\n      CoinChangingMinimumCoin coinChangingMinimumCoin0 = new CoinChangingMinimumCoin();\n      int int0 = (-12841);\n      int[] intArray0 = new int[8];\n      intArray0[0] = (-12841);\n      intArray0[1] = (-12841);\n      intArray0[2] = (-12841);\n      intArray0[3] = (-57242);\n      intArray0[4] = (-12841);\n      intArray0[5] = (-12841);\n      intArray0[6] = (-12841);\n      intArray0[7] = (-12841);\n      // Undeclared exception!\n      try { \n        coinChangingMinimumCoin0.minimumCoinBottomUp((-12841), intArray0);\n        fail(\"Expecting exception: NegativeArraySizeException\");\n      \n      } catch(NegativeArraySizeException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"CoinChangingMinimumCoin\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      CoinChangingMinimumCoin coinChangingMinimumCoin0 = new CoinChangingMinimumCoin();\n      int int0 = 1;\n      int[] intArray0 = new int[6];\n      intArray0[0] = 1;\n      intArray0[1] = 1;\n      coinChangingMinimumCoin0.minimumCoinBottomUp(1, intArray0);\n      intArray0[2] = 1;\n      intArray0[3] = 1;\n      intArray0[4] = 1;\n      intArray0[5] = 1;\n      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();\n      Integer integer0 = new Integer((-6826));\n      hashMap0.remove((Object) integer0, (Object) coinChangingMinimumCoin0);\n      coinChangingMinimumCoin0.minimumCoinTopDown(1, intArray0, hashMap0);\n      // Undeclared exception!\n      try { \n        coinChangingMinimumCoin0.minimumCoinBottomUp(0, (int[]) null);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      String[] stringArray0 = new String[9];\n      stringArray0[0] = \";o\\\"um#A~B:gFo]9\";\n      stringArray0[1] = \"8pVjhcmB=Yt|\\\"59,\";\n      stringArray0[2] = \"2?}>2 Mh\";\n      stringArray0[3] = \"No solution is possible\";\n      stringArray0[4] = \"\";\n      stringArray0[5] = \"\";\n      stringArray0[6] = \"\";\n      stringArray0[7] = \"'diz &jg\";\n      stringArray0[8] = \"\";\n      CoinChangingMinimumCoin.main(stringArray0);\n      CoinChangingMinimumCoin.main(stringArray0);\n      CoinChangingMinimumCoin coinChangingMinimumCoin0 = new CoinChangingMinimumCoin();\n      int[] intArray0 = new int[6];\n      intArray0[0] = 1;\n      intArray0[1] = 1;\n      intArray0[2] = 1;\n      intArray0[3] = 1;\n      intArray0[4] = 1;\n      intArray0[5] = 1;\n      coinChangingMinimumCoin0.minimumCoinBottomUp(1, intArray0);\n      int int0 = coinChangingMinimumCoin0.minimumCoinBottomUp(1, intArray0);\n      assertEquals(1, int0);\n      \n      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();\n      int int1 = coinChangingMinimumCoin0.minimumCoinTopDown(0, intArray0, hashMap0);\n      assertEquals(0, int1);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      String[] stringArray0 = new String[9];\n      stringArray0[0] = \"Bottom up and top down result %s %s\";\n      stringArray0[1] = \")x[V-EfhSIe\";\n      stringArray0[2] = \"x_\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \"\";\n      stringArray0[5] = \"\";\n      stringArray0[6] = \"\";\n      stringArray0[7] = \"\";\n      stringArray0[8] = \"\";\n      CoinChangingMinimumCoin.main(stringArray0);\n      assertEquals(9, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      CoinChangingMinimumCoin coinChangingMinimumCoin0 = new CoinChangingMinimumCoin();\n      int int0 = 18439;\n      int[] intArray0 = new int[0];\n      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();\n      coinChangingMinimumCoin0.minimumCoinTopDown(18439, intArray0, hashMap0);\n      HashMap<Integer, Integer> hashMap1 = new HashMap<Integer, Integer>();\n      Integer integer0 = new Integer(18439);\n      BiConsumer<Object, Object> biConsumer0 = (BiConsumer<Object, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());\n      hashMap1.forEach(biConsumer0);\n      Integer integer1 = new Integer(0);\n      try { \n        Integer.parseUnsignedInt(\"Y\\\"yI?5\", 18439);\n        fail(\"Expecting exception: NumberFormatException\");\n      \n      } catch(NumberFormatException e) {\n         //\n         // radix 18439 greater than Character.MAX_RADIX\n         //\n         verifyException(\"java.lang.Long\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      String[] stringArray0 = new String[5];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"8j=ArQk'TclO+>>eY]h\";\n      stringArray0[3] = \"&: .!,iOprY *\";\n      stringArray0[4] = \"\";\n      CoinChangingMinimumCoin.main(stringArray0);\n      CoinChangingMinimumCoin.main(stringArray0);\n      assertEquals(5, stringArray0.length);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 10:42:33 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\nimport static org.evosuite.shaded.org.mockito.Mockito.*;\n@EvoSuiteClassExclude\npublic class CoinChangingMinimumCoin_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CoinChangingMinimumCoin\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpe0libo0_\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CoinChangingMinimumCoin_ESTest_scaffolding.class.getClassLoader() ,\n      \"CoinChangingMinimumCoin\"\n    );\n  } \n  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { \n    mock(Class.forName(\"java.util.function.BiConsumer\", false, CoinChangingMinimumCoin_ESTest_scaffolding.class.getClassLoader()));\n  }\n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CoinChangingMinimumCoin_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CoinChangingMinimumCoin\"\n    );\n  }\n}\n", "class_idx": 31}
{"class_name": "Main", "java_source": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n  public static Scanner scanner = new Scanner(System.in);\n\n  public static void main(String[] args) {\n\n    int[] newArray = getIntegers(5);\n    printArray(newArray);\n    int[] sortedArray = sortIntegers(newArray);\n    System.out.println(\"\\nSorted array:\");\n    printArray(sortedArray);\n  }\n\n  public static int[] getIntegers(int number) {\n    System.out.println(\"Enter \" + number + \" integer values:\\r\");\n    int[] values = new int[number];\n\n    for (int i = 0; i < values.length; i++) {\n      values[i] = scanner.nextInt();\n    }\n\n    return values;\n  }\n\n  public static void printArray(int[] array) {\n    for (int i = 0; i < array.length; i++) {\n      System.out.println(\"Element \" + i + \", value is \" + array[i]);\n    }\n  }\n\n  public static int[] sortIntegers(int[] array) {\n    //        int[] sortedArray = new int[array.length];\n    //        for (int i = 0; i < array.length; i++) {\n    //            sortedArray[i] = array[i];\n    //        }\n\n    int[] sortedArray = Arrays.copyOf(array, array.length);\n\n    boolean flag = true;\n    int temp;\n\n    while (flag) {\n      flag = false;\n      for (int i = 0; i < sortedArray.length - 1; i++) {\n        if (sortedArray[i] < sortedArray[i + 1]) {\n          temp = sortedArray[i];\n          sortedArray[i] = sortedArray[i + 1];\n          sortedArray[i + 1] = temp;\n          flag = true;\n        }\n      }\n    }\n\n    return sortedArray;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Main \n.super java/lang/Object \n.field public static scanner Ljava/util/Scanner; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 2 locals 3 \nL0:     iconst_5 \nL1:     invokestatic Method Main getIntegers (I)[I \nL4:     astore_1 \nL5:     aload_1 \nL6:     invokestatic Method Main printArray ([I)V \nL9:     aload_1 \nL10:    invokestatic Method Main sortIntegers ([I)[I \nL13:    astore_2 \nL14:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL17:    ldc '\\nSorted array:' \nL19:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL22:    aload_2 \nL23:    invokestatic Method Main printArray ([I)V \nL26:    return \nL27:    \n        .linenumbertable \n            L0 12 \n            L5 13 \n            L9 14 \n            L14 15 \n            L22 16 \n            L26 17 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static getIntegers : (I)[I \n    .code stack 3 locals 3 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'Enter ' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    iload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL19:    ldc ' integer values:\\r' \nL21:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL30:    iload_0 \nL31:    newarray int \nL33:    astore_1 \nL34:    iconst_0 \nL35:    istore_2 \n\n        .stack append Object [I Integer \nL36:    iload_2 \nL37:    aload_1 \nL38:    arraylength \nL39:    if_icmpge L57 \nL42:    aload_1 \nL43:    iload_2 \nL44:    getstatic Field Main scanner Ljava/util/Scanner; \nL47:    invokevirtual Method java/util/Scanner nextInt ()I \nL50:    iastore \nL51:    iinc 2 1 \nL54:    goto L36 \n\n        .stack chop 1 \nL57:    aload_1 \nL58:    areturn \nL59:    \n        .linenumbertable \n            L0 20 \n            L30 21 \n            L34 23 \n            L42 24 \n            L51 23 \n            L57 27 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static printArray : ([I)V \n    .code stack 4 locals 2 \nL0:     iconst_0 \nL1:     istore_1 \n\n        .stack append Integer \nL2:     iload_1 \nL3:     aload_0 \nL4:     arraylength \nL5:     if_icmpge L50 \nL8:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL11:    new java/lang/StringBuilder \nL14:    dup \nL15:    invokespecial Method java/lang/StringBuilder <init> ()V \nL18:    ldc 'Element ' \nL20:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL23:    iload_1 \nL24:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL27:    ldc ', value is ' \nL29:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL32:    aload_0 \nL33:    iload_1 \nL34:    iaload \nL35:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL38:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL41:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL44:    iinc 1 1 \nL47:    goto L2 \n\n        .stack chop 1 \nL50:    return \nL51:    \n        .linenumbertable \n            L0 31 \n            L8 32 \n            L44 31 \n            L50 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static sortIntegers : ([I)[I \n    .code stack 5 locals 5 \nL0:     aload_0 \nL1:     aload_0 \nL2:     arraylength \nL3:     invokestatic Method java/util/Arrays copyOf ([II)[I \nL6:     astore_1 \nL7:     iconst_1 \nL8:     istore_2 \n\n        .stack append Object [I Integer \nL9:     iload_2 \nL10:    ifeq L73 \nL13:    iconst_0 \nL14:    istore_2 \nL15:    iconst_0 \nL16:    istore 4 \n\n        .stack append Top Integer \nL18:    iload 4 \nL20:    aload_1 \nL21:    arraylength \nL22:    iconst_1 \nL23:    isub \nL24:    if_icmpge L70 \nL27:    aload_1 \nL28:    iload 4 \nL30:    iaload \nL31:    aload_1 \nL32:    iload 4 \nL34:    iconst_1 \nL35:    iadd \nL36:    iaload \nL37:    if_icmpge L64 \nL40:    aload_1 \nL41:    iload 4 \nL43:    iaload \nL44:    istore_3 \nL45:    aload_1 \nL46:    iload 4 \nL48:    aload_1 \nL49:    iload 4 \nL51:    iconst_1 \nL52:    iadd \nL53:    iaload \nL54:    iastore \nL55:    aload_1 \nL56:    iload 4 \nL58:    iconst_1 \nL59:    iadd \nL60:    iload_3 \nL61:    iastore \nL62:    iconst_1 \nL63:    istore_2 \n\n        .stack same \nL64:    iinc 4 1 \nL67:    goto L18 \n\n        .stack chop 2 \nL70:    goto L9 \n\n        .stack same \nL73:    aload_1 \nL74:    areturn \nL75:    \n        .linenumbertable \n            L0 42 \n            L7 44 \n            L9 47 \n            L13 48 \n            L15 49 \n            L27 50 \n            L40 51 \n            L45 52 \n            L55 53 \n            L62 54 \n            L64 49 \n            L73 59 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 3 locals 0 \nL0:     new java/util/Scanner \nL3:     dup \nL4:     getstatic Field java/lang/System in Ljava/io/InputStream; \nL7:     invokespecial Method java/util/Scanner <init> (Ljava/io/InputStream;)V \nL10:    putstatic Field Main scanner Ljava/util/Scanner; \nL13:    return \nL14:    \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Main.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 15:59:20 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.util.NoSuchElementException;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Main_ESTest extends Main_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      int[] intArray0 = new int[2];\n      intArray0[0] = (-12078);\n      intArray0[1] = (-50448);\n      Main.printArray(intArray0);\n      Main.sortIntegers(intArray0);\n      Main.printArray(intArray0);\n      assertArrayEquals(new int[] {(-12078), (-50448)}, intArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      int[] intArray0 = new int[4];\n      intArray0[0] = 0;\n      intArray0[1] = 0;\n      intArray0[2] = 5843;\n      intArray0[3] = 1;\n      Main.printArray(intArray0);\n      int[] intArray1 = Main.getIntegers(0);\n      Main.printArray(intArray0);\n      Main.sortIntegers(intArray1);\n      Main.getIntegers(0);\n      int[] intArray2 = Main.sortIntegers(intArray0);\n      assertArrayEquals(new int[] {5843, 1, 0, 0}, intArray2);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      int[] intArray0 = null;\n      // Undeclared exception!\n      try { \n        Main.sortIntegers((int[]) null);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      String[] stringArray0 = new String[7];\n      stringArray0[0] = \"8[#*|q6F=RG69tzq|Fj\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \"\";\n      stringArray0[5] = \"\";\n      stringArray0[6] = \"\";\n      // Undeclared exception!\n      try { \n        Main.main(stringArray0);\n        fail(\"Expecting exception: NoSuchElementException\");\n      \n      } catch(NoSuchElementException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"java.util.Scanner\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Main main0 = new Main();\n      // Undeclared exception!\n      try { \n        Main.getIntegers(48094);\n        fail(\"Expecting exception: NoSuchElementException\");\n      \n      } catch(NoSuchElementException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"java.util.Scanner\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      int[] intArray0 = new int[2];\n      int int0 = (-35094);\n      intArray0[0] = (-35094);\n      int int1 = 5;\n      intArray0[1] = 5;\n      Main.sortIntegers(intArray0);\n      int int2 = (-74223);\n      // Undeclared exception!\n      try { \n        Main.getIntegers((-74223));\n        fail(\"Expecting exception: NegativeArraySizeException\");\n      \n      } catch(NegativeArraySizeException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"Main\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      int[] intArray0 = new int[4];\n      int int0 = (-6480);\n      intArray0[0] = (-6480);\n      intArray0[1] = 1;\n      intArray0[2] = (-77326);\n      intArray0[3] = (-19970);\n      int[] intArray1 = Main.sortIntegers(intArray0);\n      Main.printArray(intArray1);\n      Main main0 = new Main();\n      String[] stringArray0 = new String[9];\n      stringArray0[0] = \"h3{~S&SV+Fxy2_0\";\n      stringArray0[1] = \"M<=\\\"<Y\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"BZe:\";\n      stringArray0[4] = \"\";\n      stringArray0[5] = \"\";\n      stringArray0[6] = \"q+{}M4\u007fuYY4=J\";\n      stringArray0[7] = \"Enter \";\n      stringArray0[8] = \"\";\n      // Undeclared exception!\n      try { \n        Main.main(stringArray0);\n        fail(\"Expecting exception: NoSuchElementException\");\n      \n      } catch(NoSuchElementException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"java.util.Scanner\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      int int0 = 0;\n      int[] intArray0 = Main.getIntegers(0);\n      int[] intArray1 = Main.getIntegers(0);\n      Main.printArray(intArray0);\n      Main main0 = new Main();\n      Main.printArray(intArray1);\n      String[] stringArray0 = new String[5];\n      Main.printArray(intArray0);\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"T*!KLcfjzz~\";\n      stringArray0[4] = \"JZSS@~dX};Ok2\";\n      // Undeclared exception!\n      try { \n        Main.main(stringArray0);\n        fail(\"Expecting exception: NoSuchElementException\");\n      \n      } catch(NoSuchElementException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"java.util.Scanner\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      // Undeclared exception!\n      try { \n        Main.sortIntegers((int[]) null);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 15:59:20 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Main_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Main\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n    org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp7wtxp9_v\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Main_ESTest_scaffolding.class.getClassLoader() ,\n      \"Main\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Main_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Main\"\n    );\n  }\n}\n", "class_idx": 32}
{"class_name": "StringList", "java_source": "/*\n * Copyright (C) 2001 - 2015 Marko Salmela, http://fuusio.org\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport java.util.ArrayList;\nimport java.util.StringTokenizer;\n\n/**\n * {@link StringList} extends to {@link ArrayList} to implement a {@link java.util.List} that\n * contains {@link String} instances.\n */\npublic class StringList extends ArrayList<String> {\n\n  private static final String DEFAULT_DELIMITER = \";\";\n\n  public String writeToString() {\n    return writeToString(DEFAULT_DELIMITER);\n  }\n\n  public String writeToString(final String delimiter) {\n    final StringBuilder builder = new StringBuilder();\n\n    for (final String item : this) {\n      if (builder.length() > 0) {\n        builder.append(delimiter);\n      }\n      builder.append(item);\n    }\n    return builder.toString();\n  }\n\n  public void readFromString(final String string) {\n    readFromString(string, DEFAULT_DELIMITER);\n  }\n\n  public void readFromString(final String string, final String delimiter) {\n\n    clear();\n\n    if (string != null) {\n      final String trimmedString = string.trim();\n      final StringTokenizer t = new StringTokenizer(trimmedString, delimiter);\n\n      while (t.hasMoreTokens()) {\n        add(t.nextToken());\n      }\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super StringList \n.super java/util/ArrayList \n.field private static final DEFAULT_DELIMITER Ljava/lang/String; = ';' \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/util/ArrayList <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 25 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public writeToString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     ldc ';' \nL3:     invokevirtual Method StringList writeToString (Ljava/lang/String;)Ljava/lang/String; \nL6:     areturn \nL7:     \n        .linenumbertable \n            L0 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public writeToString : (Ljava/lang/String;)Ljava/lang/String; \n    .code stack 2 locals 5 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     astore_2 \nL8:     aload_0 \nL9:     invokevirtual Method StringList iterator ()Ljava/util/Iterator; \nL12:    astore_3 \n\n        .stack append Object java/lang/StringBuilder Object java/util/Iterator \nL13:    aload_3 \nL14:    invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL19:    ifeq L56 \nL22:    aload_3 \nL23:    invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL28:    checkcast java/lang/String \nL31:    astore 4 \nL33:    aload_2 \nL34:    invokevirtual Method java/lang/StringBuilder length ()I \nL37:    ifle L46 \nL40:    aload_2 \nL41:    aload_1 \nL42:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL45:    pop \n\n        .stack append Object java/lang/String \nL46:    aload_2 \nL47:    aload 4 \nL49:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL52:    pop \nL53:    goto L13 \n\n        .stack chop 2 \nL56:    aload_2 \nL57:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL60:    areturn \nL61:    \n        .linenumbertable \n            L0 34 \n            L8 36 \n            L33 37 \n            L40 38 \n            L46 40 \n            L53 41 \n            L56 42 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public readFromString : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     ldc ';' \nL4:     invokevirtual Method StringList readFromString (Ljava/lang/String;Ljava/lang/String;)V \nL7:     return \nL8:     \n        .linenumbertable \n            L0 46 \n            L7 47 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public readFromString : (Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 4 locals 5 \nL0:     aload_0 \nL1:     invokevirtual Method StringList clear ()V \nL4:     aload_1 \nL5:     ifnull L45 \nL8:     aload_1 \nL9:     invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL12:    astore_3 \nL13:    new java/util/StringTokenizer \nL16:    dup \nL17:    aload_3 \nL18:    aload_2 \nL19:    invokespecial Method java/util/StringTokenizer <init> (Ljava/lang/String;Ljava/lang/String;)V \nL22:    astore 4 \n\n        .stack append Object java/lang/String Object java/util/StringTokenizer \nL24:    aload 4 \nL26:    invokevirtual Method java/util/StringTokenizer hasMoreTokens ()Z \nL29:    ifeq L45 \nL32:    aload_0 \nL33:    aload 4 \nL35:    invokevirtual Method java/util/StringTokenizer nextToken ()Ljava/lang/String; \nL38:    invokevirtual Method StringList add (Ljava/lang/Object;)Z \nL41:    pop \nL42:    goto L24 \n\n        .stack chop 2 \nL45:    return \nL46:    \n        .linenumbertable \n            L0 51 \n            L4 53 \n            L8 54 \n            L13 55 \n            L24 57 \n            L32 58 \n            L45 61 \n        .end linenumbertable \n    .end code \n.end method \n.signature Ljava/util/ArrayList<Ljava/lang/String;>; \n.sourcefile 'StringList.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 09:52:24 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class StringList_ESTest extends StringList_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      StringList stringList0 = new StringList();\n      String string0 = stringList0.writeToString(\"\");\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      StringList stringList0 = new StringList();\n      stringList0.readFromString(\"StringList\", \"zuis&JjgG\");\n      stringList0.writeToString(\"\");\n      assertEquals(4, stringList0.size());\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      StringList stringList0 = new StringList();\n      stringList0.readFromString((String) null, (String) null);\n      assertTrue(stringList0.isEmpty());\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      StringList stringList0 = new StringList();\n      stringList0.readFromString(\"n;y=9GU?)h5Uq.$i5Vo\");\n      stringList0.writeToString();\n      assertFalse(stringList0.isEmpty());\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      StringList stringList0 = new StringList();\n      String string0 = stringList0.writeToString();\n      assertEquals(\"\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 09:52:24 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class StringList_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"StringList\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpri_rpzio\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StringList_ESTest_scaffolding.class.getClassLoader() ,\n      \"StringList\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StringList_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"StringList\"\n    );\n  }\n}\n", "class_idx": 33}
{"class_name": "SOR", "java_source": "public class SOR {\n  public static final double num_flops(int M, int N, int num_iterations) {\n    double Md = (double) M;\n    double Nd = (double) N;\n    double num_iterD = (double) num_iterations;\n\n    return (Md - 1) * (Nd - 1) * num_iterD * 6.0;\n  }\n\n  public static final void execute(double omega, double G[][], int num_iterations) {\n    int M = G.length;\n    int N = G[0].length;\n\n    double omega_over_four = omega * 0.25;\n    double one_minus_omega = 1.0 - omega;\n\n    // update interior points\n    //\n    int Mm1 = M - 1;\n    int Nm1 = N - 1;\n    for (int p = 0; p < num_iterations; p++) {\n      for (int i = 1; i < Mm1; i++) {\n        double[] Gi = G[i];\n        double[] Gim1 = G[i - 1];\n        double[] Gip1 = G[i + 1];\n        for (int j = 1; j < Nm1; j++)\n          Gi[j] =\n              omega_over_four * (Gim1[j] + Gip1[j] + Gi[j - 1] + Gi[j + 1])\n                  + one_minus_omega * Gi[j];\n      }\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super SOR \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static final num_flops : (III)D \n    .code stack 6 locals 9 \nL0:     iload_0 \nL1:     i2d \nL2:     dstore_3 \nL3:     iload_1 \nL4:     i2d \nL5:     dstore 5 \nL7:     iload_2 \nL8:     i2d \nL9:     dstore 7 \nL11:    dload_3 \nL12:    dconst_1 \nL13:    dsub \nL14:    dload 5 \nL16:    dconst_1 \nL17:    dsub \nL18:    dmul \nL19:    dload 7 \nL21:    dmul \nL22:    ldc2_w +6.0 \nL25:    dmul \nL26:    dreturn \nL27:    \n        .linenumbertable \n            L0 7 \n            L3 8 \n            L7 9 \n            L11 11 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static final execute : (D[[DI)V \n    .code stack 9 locals 18 \nL0:     aload_2 \nL1:     arraylength \nL2:     istore 4 \nL4:     aload_2 \nL5:     iconst_0 \nL6:     aaload \nL7:     arraylength \nL8:     istore 5 \nL10:    dload_0 \nL11:    ldc2_w +0.25 \nL14:    dmul \nL15:    dstore 6 \nL17:    dconst_1 \nL18:    dload_0 \nL19:    dsub \nL20:    dstore 8 \nL22:    iload 4 \nL24:    iconst_1 \nL25:    isub \nL26:    istore 10 \nL28:    iload 5 \nL30:    iconst_1 \nL31:    isub \nL32:    istore 11 \nL34:    iconst_0 \nL35:    istore 12 \n\n        .stack full \n            locals Double Object [[D Integer Integer Integer Double Double Integer Integer Integer \n            stack \n        .end stack \nL37:    iload 12 \nL39:    iload_3 \nL40:    if_icmpge L147 \nL43:    iconst_1 \nL44:    istore 13 \n\n        .stack append Integer \nL46:    iload 13 \nL48:    iload 10 \nL50:    if_icmpge L141 \nL53:    aload_2 \nL54:    iload 13 \nL56:    aaload \nL57:    astore 14 \nL59:    aload_2 \nL60:    iload 13 \nL62:    iconst_1 \nL63:    isub \nL64:    aaload \nL65:    astore 15 \nL67:    aload_2 \nL68:    iload 13 \nL70:    iconst_1 \nL71:    iadd \nL72:    aaload \nL73:    astore 16 \nL75:    iconst_1 \nL76:    istore 17 \n\n        .stack full \n            locals Double Object [[D Integer Integer Integer Double Double Integer Integer Integer Integer Object [D Object [D Object [D Integer \n            stack \n        .end stack \nL78:    iload 17 \nL80:    iload 11 \nL82:    if_icmpge L135 \nL85:    aload 14 \nL87:    iload 17 \nL89:    dload 6 \nL91:    aload 15 \nL93:    iload 17 \nL95:    daload \nL96:    aload 16 \nL98:    iload 17 \nL100:   daload \nL101:   dadd \nL102:   aload 14 \nL104:   iload 17 \nL106:   iconst_1 \nL107:   isub \nL108:   daload \nL109:   dadd \nL110:   aload 14 \nL112:   iload 17 \nL114:   iconst_1 \nL115:   iadd \nL116:   daload \nL117:   dadd \nL118:   dmul \nL119:   dload 8 \nL121:   aload 14 \nL123:   iload 17 \nL125:   daload \nL126:   dmul \nL127:   dadd \nL128:   dastore \nL129:   iinc 17 1 \nL132:   goto L78 \n\n        .stack full \n            locals Double Object [[D Integer Integer Integer Double Double Integer Integer Integer Integer \n            stack \n        .end stack \nL135:   iinc 13 1 \nL138:   goto L46 \n\n        .stack chop 1 \nL141:   iinc 12 1 \nL144:   goto L37 \n\n        .stack chop 1 \nL147:   return \nL148:   \n        .linenumbertable \n            L0 17 \n            L4 18 \n            L10 20 \n            L17 21 \n            L22 25 \n            L28 26 \n            L34 27 \n            L43 29 \n            L53 31 \n            L59 32 \n            L67 33 \n            L75 34 \n            L85 35 \n            L129 34 \n            L135 29 \n            L141 27 \n            L147 39 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'SOR.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 01:12:52 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class SOR_ESTest extends SOR_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      double double0 = SOR.num_flops((-28656), (-28656), (-2755));\n      assertEquals((-1.357482691797E13), double0, 1.0E-4);\n      \n      double[][] doubleArray0 = new double[2][6];\n      double[] doubleArray1 = new double[6];\n      doubleArray1[0] = (double) (-28656);\n      doubleArray1[1] = (-1.357482691797E13);\n      doubleArray1[2] = (double) (-2755);\n      doubleArray1[3] = (double) (-2755);\n      doubleArray1[4] = 20145.248074372932;\n      doubleArray1[5] = 6554.190778859598;\n      doubleArray0[0] = doubleArray1;\n      double[] doubleArray2 = new double[1];\n      assertFalse(doubleArray2.equals((Object)doubleArray1));\n      \n      doubleArray2[0] = (double) (-2755);\n      doubleArray0[1] = doubleArray2;\n      SOR.execute(6554.190778859598, doubleArray0, (-9114));\n      assertEquals(2, doubleArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      double[][] doubleArray0 = new double[8][2];\n      double[] doubleArray1 = new double[7];\n      doubleArray1[0] = 12285.3589677;\n      doubleArray1[1] = 12285.3589677;\n      doubleArray1[2] = 12285.3589677;\n      doubleArray1[3] = 12285.3589677;\n      doubleArray1[4] = 12285.3589677;\n      doubleArray1[5] = 57168.69555;\n      doubleArray1[6] = 12285.3589677;\n      doubleArray0[0] = doubleArray1;\n      double[] doubleArray2 = new double[3];\n      assertFalse(doubleArray2.equals((Object)doubleArray1));\n      \n      doubleArray2[0] = 57168.69555;\n      doubleArray2[1] = 12285.3589677;\n      doubleArray2[2] = 0.0;\n      doubleArray0[1] = doubleArray2;\n      double[] doubleArray3 = new double[6];\n      assertFalse(doubleArray3.equals((Object)doubleArray1));\n      assertFalse(doubleArray3.equals((Object)doubleArray2));\n      \n      doubleArray3[0] = 0.0;\n      doubleArray3[1] = 57168.69555;\n      doubleArray3[2] = 0.0;\n      doubleArray3[3] = 12285.3589677;\n      doubleArray3[4] = 57168.69555;\n      doubleArray3[5] = 0.0;\n      doubleArray0[2] = doubleArray3;\n      double[] doubleArray4 = new double[4];\n      assertFalse(doubleArray4.equals((Object)doubleArray2));\n      assertFalse(doubleArray4.equals((Object)doubleArray3));\n      assertFalse(doubleArray4.equals((Object)doubleArray1));\n      \n      doubleArray4[0] = 57168.69555;\n      doubleArray4[1] = 0.0;\n      doubleArray4[2] = 12285.3589677;\n      doubleArray4[3] = 57168.69555;\n      doubleArray0[3] = doubleArray4;\n      double[] doubleArray5 = new double[2];\n      assertFalse(doubleArray5.equals((Object)doubleArray3));\n      assertFalse(doubleArray5.equals((Object)doubleArray4));\n      assertFalse(doubleArray5.equals((Object)doubleArray2));\n      assertFalse(doubleArray5.equals((Object)doubleArray1));\n      \n      doubleArray5[0] = (-21640.313156241813);\n      doubleArray5[1] = 12285.3589677;\n      doubleArray0[4] = doubleArray5;\n      double[] doubleArray6 = new double[8];\n      assertFalse(doubleArray6.equals((Object)doubleArray4));\n      assertFalse(doubleArray6.equals((Object)doubleArray1));\n      assertFalse(doubleArray6.equals((Object)doubleArray3));\n      assertFalse(doubleArray6.equals((Object)doubleArray2));\n      assertFalse(doubleArray6.equals((Object)doubleArray5));\n      \n      doubleArray6[0] = 57168.69555;\n      doubleArray6[1] = 12285.3589677;\n      doubleArray6[2] = (-21640.313156241813);\n      doubleArray6[3] = 0.0;\n      doubleArray6[4] = (-21640.313156241813);\n      doubleArray6[5] = 0.0;\n      doubleArray6[6] = 0.0;\n      doubleArray6[7] = 12285.3589677;\n      doubleArray0[5] = doubleArray6;\n      double[] doubleArray7 = new double[6];\n      assertFalse(doubleArray7.equals((Object)doubleArray1));\n      assertFalse(doubleArray7.equals((Object)doubleArray2));\n      assertFalse(doubleArray7.equals((Object)doubleArray3));\n      assertFalse(doubleArray7.equals((Object)doubleArray5));\n      assertFalse(doubleArray7.equals((Object)doubleArray6));\n      assertFalse(doubleArray7.equals((Object)doubleArray4));\n      \n      doubleArray7[0] = 57168.69555;\n      doubleArray7[1] = 57168.69555;\n      doubleArray7[2] = (-21640.313156241813);\n      doubleArray7[3] = (-21640.313156241813);\n      doubleArray7[4] = (-21640.313156241813);\n      doubleArray7[5] = (-21640.313156241813);\n      doubleArray0[6] = doubleArray7;\n      double[] doubleArray8 = new double[3];\n      assertFalse(doubleArray8.equals((Object)doubleArray2));\n      assertFalse(doubleArray8.equals((Object)doubleArray3));\n      assertFalse(doubleArray8.equals((Object)doubleArray5));\n      assertFalse(doubleArray8.equals((Object)doubleArray7));\n      assertFalse(doubleArray8.equals((Object)doubleArray1));\n      assertFalse(doubleArray8.equals((Object)doubleArray6));\n      assertFalse(doubleArray8.equals((Object)doubleArray4));\n      \n      doubleArray8[0] = 0.0;\n      doubleArray8[1] = (-21640.313156241813);\n      doubleArray8[2] = (-34183.68460284);\n      doubleArray0[7] = doubleArray8;\n      SOR.execute(12285.3589677, doubleArray0, 0);\n      assertEquals(8, doubleArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      double double0 = SOR.num_flops(15385, (-27313), (-27313));\n      assertEquals(6.8861302237728E13, double0, 1.0E-4);\n      \n      double double1 = SOR.num_flops((-27313), 15385, 15385);\n      assertEquals((-3.878853055056E13), double1, 1.0E-4);\n      assertNotEquals(double1, double0, 1.0E-4);\n      \n      double[][] doubleArray0 = new double[1][7];\n      double[] doubleArray1 = new double[4];\n      doubleArray1[0] = 0.0;\n      doubleArray1[1] = (double) 15385;\n      doubleArray1[2] = (double) (-27313);\n      doubleArray1[3] = 6.8861302237728E13;\n      doubleArray0[0] = doubleArray1;\n      SOR.execute(0.0, doubleArray0, (-27313));\n      assertEquals(1, doubleArray0.length);\n      \n      SOR sOR0 = new SOR();\n      assertNotNull(sOR0);\n      \n      double double2 = SOR.num_flops((-1), (-27313), 0);\n      assertEquals(0.0, double2, 1.0E-4);\n      assertNotEquals(double2, double1, 1.0E-4);\n      assertNotEquals(double2, double0, 1.0E-4);\n      \n      double double3 = SOR.num_flops((-1), 0, 15385);\n      assertEquals(184620.0, double3, 1.0E-4);\n      assertNotEquals(double3, double0, 1.0E-4);\n      assertNotEquals(double3, double2, 1.0E-4);\n      assertNotEquals(double3, double1, 1.0E-4);\n      \n      double double4 = SOR.num_flops(0, (-1), (-1));\n      assertEquals((-12.0), double4, 1.0E-4);\n      assertNotEquals(double4, double2, 1.0E-4);\n      assertNotEquals(double4, double3, 1.0E-4);\n      assertNotEquals(double4, double0, 1.0E-4);\n      assertNotEquals(double4, double1, 1.0E-4);\n      \n      double double5 = SOR.num_flops((-27313), 0, (-27313));\n      assertEquals((-4.476163692E9), double5, 1.0E-4);\n      assertNotEquals(double5, double0, 1.0E-4);\n      assertNotEquals(double5, double3, 1.0E-4);\n      assertNotEquals(double5, double1, 1.0E-4);\n      assertNotEquals(double5, double2, 1.0E-4);\n      assertNotEquals(double5, double4, 1.0E-4);\n      \n      double double6 = SOR.num_flops(0, 0, 0);\n      assertEquals(0.0, double6, 1.0E-4);\n      assertNotEquals(double6, double5, 1.0E-4);\n      assertNotEquals(double6, double1, 1.0E-4);\n      assertEquals(double6, double2, 1.0E-4);\n      assertNotEquals(double6, double4, 1.0E-4);\n      assertNotEquals(double6, double0, 1.0E-4);\n      assertNotEquals(double6, double3, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      double double0 = SOR.num_flops(0, 0, 0);\n      assertEquals(0.0, double0, 1.0E-4);\n      \n      double[][] doubleArray0 = new double[1][4];\n      double[] doubleArray1 = new double[5];\n      doubleArray1[0] = 0.0;\n      doubleArray1[1] = 0.0;\n      doubleArray1[2] = (-51928.7734);\n      doubleArray1[3] = 0.0;\n      doubleArray1[4] = (double) 0;\n      doubleArray0[0] = doubleArray1;\n      SOR.execute(1.0, doubleArray0, 0);\n      assertEquals(1, doubleArray0.length);\n      \n      double double1 = SOR.num_flops(4001, (-114383), (-114383));\n      assertEquals(3.14006041728E14, double1, 1.0E-4);\n      assertNotEquals(double1, double0, 1.0E-4);\n      \n      double double2 = SOR.num_flops(4001, 4001, 0);\n      assertEquals(0.0, double2, 1.0E-4);\n      assertNotEquals(double2, double1, 1.0E-4);\n      assertEquals(double2, double0, 1.0E-4);\n      \n      SOR.execute(0, doubleArray0, (-114383));\n      assertEquals(1, doubleArray0.length);\n      \n      double double3 = SOR.num_flops(4001, 0, 0);\n      assertEquals(-0.0, double3, 1.0E-4);\n      assertNotEquals(double3, double1, 1.0E-4);\n      assertEquals(double3, double2, 1.0E-4);\n      assertEquals(double3, double0, 1.0E-4);\n      \n      double double4 = SOR.num_flops((-114383), 4001, (-19413));\n      assertEquals(5.3292878208E13, double4, 1.0E-4);\n      assertNotEquals(double4, double3, 1.0E-4);\n      assertNotEquals(double4, double1, 1.0E-4);\n      assertNotEquals(double4, double2, 1.0E-4);\n      assertNotEquals(double4, double0, 1.0E-4);\n      \n      double double5 = SOR.num_flops(0, (-114383), (-23664));\n      assertEquals((-1.6240697856E10), double5, 1.0E-4);\n      assertNotEquals(double5, double0, 1.0E-4);\n      assertNotEquals(double5, double1, 1.0E-4);\n      assertNotEquals(double5, double2, 1.0E-4);\n      assertNotEquals(double5, double4, 1.0E-4);\n      assertNotEquals(double5, double3, 1.0E-4);\n      \n      SOR.execute((-34508.801977058), doubleArray0, 4001);\n      assertEquals(1, doubleArray0.length);\n      \n      double double6 = SOR.num_flops((-23664), 16778, (-114383));\n      assertEquals(2.7247931988609E14, double6, 1.0E-4);\n      assertNotEquals(double6, double0, 1.0E-4);\n      assertNotEquals(double6, double5, 1.0E-4);\n      assertNotEquals(double6, double4, 1.0E-4);\n      assertNotEquals(double6, double2, 1.0E-4);\n      assertNotEquals(double6, double3, 1.0E-4);\n      assertNotEquals(double6, double1, 1.0E-4);\n      \n      double double7 = SOR.num_flops(4001, 0, 0);\n      assertEquals(-0.0, double7, 1.0E-4);\n      assertNotEquals(double7, double4, 1.0E-4);\n      assertEquals(double7, double3, 1.0E-4);\n      assertNotEquals(double7, double1, 1.0E-4);\n      assertNotEquals(double7, double6, 1.0E-4);\n      assertEquals(double7, double0, 1.0E-4);\n      assertNotEquals(double7, double5, 1.0E-4);\n      assertEquals(double7, double2, 1.0E-4);\n      \n      SOR.execute(3.14006041728E14, doubleArray0, 1);\n      assertEquals(1, doubleArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      SOR.num_flops(0, (-77657), (-1));\n      SOR sOR0 = new SOR();\n      SOR.num_flops((-1), 0, 0);\n      SOR.num_flops(2457, (-1), (-77657));\n      double[][] doubleArray0 = new double[3][3];\n      double[] doubleArray1 = new double[3];\n      doubleArray1[0] = 0.0;\n      doubleArray1[1] = (double) 0;\n      doubleArray1[2] = (double) (-77657);\n      doubleArray0[0] = doubleArray1;\n      double[] doubleArray2 = new double[5];\n      doubleArray2[0] = 2.288707104E9;\n      doubleArray2[1] = (double) (-1);\n      doubleArray2[2] = (-13061.844725668996);\n      doubleArray2[3] = (-465948.0);\n      doubleArray2[4] = 2.288707104E9;\n      doubleArray0[1] = doubleArray2;\n      double[] doubleArray3 = new double[8];\n      doubleArray3[0] = (-465948.0);\n      doubleArray3[1] = (-13061.844725668996);\n      doubleArray3[2] = 22500.0534;\n      doubleArray3[3] = (-465948.0);\n      doubleArray3[4] = (double) 0;\n      doubleArray3[5] = (double) 2457;\n      doubleArray3[6] = (double) (-1);\n      doubleArray3[7] = 2.288707104E9;\n      doubleArray0[2] = doubleArray3;\n      SOR.execute(0.0, doubleArray0, 2457);\n      assertEquals(3, doubleArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      double[][] doubleArrayArray0 = null;\n      int int0 = 0;\n      // Undeclared exception!\n      try { \n        SOR.execute(72655.02861972501, (double[][]) null, 0);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 01:12:52 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class SOR_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"SOR\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpwmjo2wy_\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SOR_ESTest_scaffolding.class.getClassLoader() ,\n      \"SOR\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SOR_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"SOR\"\n    );\n  }\n}\n", "class_idx": 34}
{"class_name": "JsDebug", "java_source": "/*\n * Copyright 2012-2017 JetBrains s.r.o\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npublic final class JsDebug {\n  public static native void log(String text) /*-{\n    $wnd.console.log(text);\n  }-*/;\n\n  private JsDebug() {}\n}\n", "jasm_code": ".version 52 0 \n.class public final super JsDebug \n.super java/lang/Object \n\n.method public static native log : (Ljava/lang/String;)V \n.end method \n\n.method private <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 23 \n            L4 24 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'JsDebug.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 08:40:57 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class JsDebug_ESTest extends JsDebug_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      // Undeclared exception!\n      try { \n        JsDebug.log(\">yHT`|(bZ8\");\n        fail(\"Expecting exception: UnsatisfiedLinkError\");\n      \n      } catch(UnsatisfiedLinkError e) {\n         //\n         // JsDebug.log(Ljava/lang/String;)V\n         //\n         verifyException(\"JsDebug\", e);\n      }\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 08:40:57 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class JsDebug_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"JsDebug\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpq0b50jig\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JsDebug_ESTest_scaffolding.class.getClassLoader() ,\n      \"JsDebug\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JsDebug_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"JsDebug\"\n    );\n  }\n}\n", "class_idx": 35}
{"class_name": "ErrorResponse", "java_source": "public class ErrorResponse {\n\n  public String code;\n  public String message;\n  public String description;\n\n  public static final String INVALID_KEY = \"INVALID_KEY_VALUE\";\n\n  public ErrorResponse() {}\n\n  public ErrorResponse(String code, String message, String description) {\n    this.code = code;\n    this.message = message;\n    this.description = description;\n  }\n\n  public String getCode() {\n    return code;\n  }\n\n  public void setCode(String code) {\n    this.code = code;\n  }\n\n  public String getMessage() {\n    return message;\n  }\n\n  public void setMessage(String message) {\n    this.message = message;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ErrorResponse \n.super java/lang/Object \n.field public code Ljava/lang/String; \n.field public message Ljava/lang/String; \n.field public description Ljava/lang/String; \n.field public static final INVALID_KEY Ljava/lang/String; = 'INVALID_KEY_VALUE' \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 11 \n            L4 12 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field ErrorResponse code Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field ErrorResponse message Ljava/lang/String; \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field ErrorResponse description Ljava/lang/String; \nL19:    return \nL20:    \n        .linenumbertable \n            L0 14 \n            L4 15 \n            L9 16 \n            L14 17 \n            L19 18 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCode : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ErrorResponse code Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCode : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ErrorResponse code Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 25 \n            L5 26 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getMessage : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ErrorResponse message Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 29 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setMessage : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ErrorResponse message Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 33 \n            L5 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getDescription : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ErrorResponse description Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 37 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setDescription : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ErrorResponse description Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 41 \n            L5 42 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ErrorResponse.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 10:57:12 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ErrorResponse_ESTest extends ErrorResponse_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ErrorResponse errorResponse0 = new ErrorResponse();\n      errorResponse0.setMessage(\".`4)B2h!P\");\n      String string0 = errorResponse0.getMessage();\n      assertEquals(\".`4)B2h!P\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      ErrorResponse errorResponse0 = new ErrorResponse(\"ErrorResponse\", \"yevupuR\", \"ErrorResponse\");\n      errorResponse0.setMessage(\"\");\n      String string0 = errorResponse0.getMessage();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      ErrorResponse errorResponse0 = new ErrorResponse();\n      errorResponse0.setDescription(\".`4)B2h!P\");\n      String string0 = errorResponse0.getDescription();\n      assertEquals(\".`4)B2h!P\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      ErrorResponse errorResponse0 = new ErrorResponse(\"ErrorResponse\", \"yevupuR\", \"ErrorResponse\");\n      errorResponse0.description = \"\";\n      String string0 = errorResponse0.getDescription();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      ErrorResponse errorResponse0 = new ErrorResponse();\n      String string0 = errorResponse0.getCode();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      ErrorResponse errorResponse0 = new ErrorResponse();\n      errorResponse0.setCode(\".`4)B2h!P\");\n      String string0 = errorResponse0.getCode();\n      assertEquals(\".`4)B2h!P\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      ErrorResponse errorResponse0 = new ErrorResponse();\n      String string0 = errorResponse0.getMessage();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      ErrorResponse errorResponse0 = new ErrorResponse();\n      String string0 = errorResponse0.getDescription();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      ErrorResponse errorResponse0 = new ErrorResponse(\"\", \"]\\\",yX7#(\", \"X{ ,\");\n      String string0 = errorResponse0.getCode();\n      assertEquals(\"\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 10:57:12 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ErrorResponse_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ErrorResponse\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpnd18gx2m\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ErrorResponse_ESTest_scaffolding.class.getClassLoader() ,\n      \"ErrorResponse\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ErrorResponse_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ErrorResponse\"\n    );\n  }\n}\n", "class_idx": 36}
{"class_name": "DiseaseDescription", "java_source": "import java.io.Serializable;\n\npublic class DiseaseDescription implements Serializable {\n\n  /** */\n  private static final long serialVersionUID = 1L;\n\n  String name;\n  String pathogeny = \"\";\n  String symptom = \"\";\n  String treatment = \"\";\n  String other = \"\";\n\n  public String getName() {\n    return name;\n  }\n\n  public void appendName(String name) {\n    this.name = name;\n  }\n\n  public String getPathogeny() {\n    return pathogeny;\n  }\n\n  public void appendPathogeny(String pathogeny) {\n    this.pathogeny += pathogeny;\n  }\n\n  public String getSymptom() {\n    return symptom;\n  }\n\n  public void appendSymptom(String symptom) {\n    this.symptom += symptom;\n  }\n\n  public String getTreatment() {\n    return treatment;\n  }\n\n  public void appendTreatment(String treatment) {\n    this.treatment += treatment;\n  }\n\n  public String getOther() {\n    return other;\n  }\n\n  public void appendOther(String other) {\n    this.other += other;\n  }\n\n  public DiseaseDescription(String name) {\n    super();\n    this.name = name;\n  }\n\n  @Override\n  public String toString() {\n    return \"{\\n\\tname:\"\n        + name\n        + \"\\n\\tpathogeny:\"\n        + pathogeny\n        + \"\\n\\tsymptom:\"\n        + symptom\n        + \"\\n\\ttreatment:\"\n        + treatment\n        + \"\\n\\tother:\"\n        + other\n        + \"}\\n\\n\";\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super DiseaseDescription \n.super java/lang/Object \n.implements java/io/Serializable \n.field private static final serialVersionUID J = 1L \n.field name Ljava/lang/String; \n.field pathogeny Ljava/lang/String; \n.field symptom Ljava/lang/String; \n.field treatment Ljava/lang/String; \n.field other Ljava/lang/String; \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DiseaseDescription name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 18 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public appendName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DiseaseDescription name Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 21 \n            L5 22 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPathogeny : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DiseaseDescription pathogeny Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public appendPathogeny : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     aload_0 \nL8:     dup_x1 \nL9:     getfield Field DiseaseDescription pathogeny Ljava/lang/String; \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_1 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL22:    putfield Field DiseaseDescription pathogeny Ljava/lang/String; \nL25:    return \nL26:    \n        .linenumbertable \n            L0 27 \n            L25 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSymptom : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DiseaseDescription symptom Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public appendSymptom : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     aload_0 \nL8:     dup_x1 \nL9:     getfield Field DiseaseDescription symptom Ljava/lang/String; \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_1 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL22:    putfield Field DiseaseDescription symptom Ljava/lang/String; \nL25:    return \nL26:    \n        .linenumbertable \n            L0 33 \n            L25 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getTreatment : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DiseaseDescription treatment Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 36 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public appendTreatment : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     aload_0 \nL8:     dup_x1 \nL9:     getfield Field DiseaseDescription treatment Ljava/lang/String; \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_1 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL22:    putfield Field DiseaseDescription treatment Ljava/lang/String; \nL25:    return \nL26:    \n        .linenumbertable \n            L0 39 \n            L25 40 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getOther : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DiseaseDescription other Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 42 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public appendOther : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     aload_0 \nL8:     dup_x1 \nL9:     getfield Field DiseaseDescription other Ljava/lang/String; \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_1 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL22:    putfield Field DiseaseDescription other Ljava/lang/String; \nL25:    return \nL26:    \n        .linenumbertable \n            L0 45 \n            L25 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     ldc '' \nL7:     putfield Field DiseaseDescription pathogeny Ljava/lang/String; \nL10:    aload_0 \nL11:    ldc '' \nL13:    putfield Field DiseaseDescription symptom Ljava/lang/String; \nL16:    aload_0 \nL17:    ldc '' \nL19:    putfield Field DiseaseDescription treatment Ljava/lang/String; \nL22:    aload_0 \nL23:    ldc '' \nL25:    putfield Field DiseaseDescription other Ljava/lang/String; \nL28:    aload_0 \nL29:    aload_1 \nL30:    putfield Field DiseaseDescription name Ljava/lang/String; \nL33:    return \nL34:    \n        .linenumbertable \n            L0 48 \n            L4 13 \n            L10 14 \n            L16 15 \n            L22 16 \n            L28 49 \n            L33 50 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     ldc '{\\n\\tname:' \nL9:     invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL12:    aload_0 \nL13:    getfield Field DiseaseDescription name Ljava/lang/String; \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    ldc '\\n\\tpathogeny:' \nL21:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL24:    aload_0 \nL25:    getfield Field DiseaseDescription pathogeny Ljava/lang/String; \nL28:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL31:    ldc '\\n\\tsymptom:' \nL33:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL36:    aload_0 \nL37:    getfield Field DiseaseDescription symptom Ljava/lang/String; \nL40:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL43:    ldc '\\n\\ttreatment:' \nL45:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL48:    aload_0 \nL49:    getfield Field DiseaseDescription treatment Ljava/lang/String; \nL52:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL55:    ldc '\\n\\tother:' \nL57:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL60:    aload_0 \nL61:    getfield Field DiseaseDescription other Ljava/lang/String; \nL64:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL67:    ldc '}\\n\\n' \nL69:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL72:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL75:    areturn \nL76:    \n        .linenumbertable \n            L0 53 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'DiseaseDescription.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 09:38:01 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class DiseaseDescription_ESTest extends DiseaseDescription_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription(\"\");\n      diseaseDescription0.treatment = null;\n      String string0 = diseaseDescription0.getTreatment();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription(\"y,Q)>OHu\\\".9c~` ?$,}\");\n      diseaseDescription0.appendTreatment(\"y,Q)>OHu\\\".9c~` ?$,}\");\n      String string0 = diseaseDescription0.getTreatment();\n      assertEquals(\"y,Q)>OHu\\\".9c~` ?$,}\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription((String) null);\n      diseaseDescription0.symptom = null;\n      String string0 = diseaseDescription0.getSymptom();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription((String) null);\n      diseaseDescription0.appendSymptom(\"9\");\n      String string0 = diseaseDescription0.getSymptom();\n      assertEquals(\"9\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription(\"OyD\");\n      diseaseDescription0.pathogeny = null;\n      String string0 = diseaseDescription0.getPathogeny();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription(\"y,Q)>OHu\\\".9c~` ?$,}\");\n      diseaseDescription0.appendPathogeny(\"y,Q)>OHu\\\".9c~` ?$,}\");\n      String string0 = diseaseDescription0.getPathogeny();\n      assertEquals(\"y,Q)>OHu\\\".9c~` ?$,}\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription(\"y,Q)>OHu\\\".9c~` ?$,}\");\n      diseaseDescription0.other = \"\";\n      diseaseDescription0.other = null;\n      String string0 = diseaseDescription0.getOther();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription(\"}\\n\\n\");\n      diseaseDescription0.appendOther(\"}\\n\\n\");\n      String string0 = diseaseDescription0.getOther();\n      assertEquals(\"}\\n\\n\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription((String) null);\n      String string0 = diseaseDescription0.getName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription(\"y,Q)>OHu\\\".9c~` ?$,}\");\n      String string0 = diseaseDescription0.getName();\n      assertEquals(\"y,Q)>OHu\\\".9c~` ?$,}\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription(\"\");\n      String string0 = diseaseDescription0.getSymptom();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription(\"\");\n      String string0 = diseaseDescription0.getPathogeny();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription(\"\");\n      String string0 = diseaseDescription0.getOther();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription(\"\");\n      String string0 = diseaseDescription0.toString();\n      assertEquals(\"{\\n\\tname:\\n\\tpathogeny:\\n\\tsymptom:\\n\\ttreatment:\\n\\tother:}\\n\\n\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription(\"\");\n      String string0 = diseaseDescription0.getName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription(\"\");\n      String string0 = diseaseDescription0.getTreatment();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      DiseaseDescription diseaseDescription0 = new DiseaseDescription(\"\");\n      diseaseDescription0.appendName(\"\");\n      assertEquals(\"\", diseaseDescription0.getName());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 09:38:01 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class DiseaseDescription_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"DiseaseDescription\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp7dshyhjv\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DiseaseDescription_ESTest_scaffolding.class.getClassLoader() ,\n      \"DiseaseDescription\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DiseaseDescription_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"DiseaseDescription\"\n    );\n  }\n}\n", "class_idx": 37}
{"class_name": "Seckill", "java_source": "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\nimport java.util.Date;\n\n/**\n * @author jesse\n */\npublic class Seckill {\n\n  private long seckillId;\n  private String name;\n  private int number;\n  private Date startTime;\n  private Date endTime;\n  private Date createTime;\n\n  public long getSeckillId() {\n    return seckillId;\n  }\n\n  public void setSeckillId(long seckillId) {\n    this.seckillId = seckillId;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public int getNumber() {\n    return number;\n  }\n\n  public void setNumber(int number) {\n    this.number = number;\n  }\n\n  public Date getStartTime() {\n    return startTime;\n  }\n\n  public void setStartTime(Date startTime) {\n    this.startTime = startTime;\n  }\n\n  public Date getEndTime() {\n    return endTime;\n  }\n\n  public void setEndTime(Date endTime) {\n    this.endTime = endTime;\n  }\n\n  public Date getCreateTime() {\n    return createTime;\n  }\n\n  public void setCreateTime(Date createTime) {\n    this.createTime = createTime;\n  }\n\n  @Override\n  public String toString() {\n    return \"Seckill{\"\n        + \"seckillId=\"\n        + seckillId\n        + \", name=\"\n        + name\n        + \", number=\"\n        + number\n        + \", startTime=\"\n        + startTime\n        + \", endTime=\"\n        + endTime\n        + \", createTime=\"\n        + createTime\n        + '}';\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Seckill \n.super java/lang/Object \n.field private seckillId J \n.field private name Ljava/lang/String; \n.field private number I \n.field private startTime Ljava/util/Date; \n.field private endTime Ljava/util/Date; \n.field private createTime Ljava/util/Date; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 14 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSeckillId : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field Seckill seckillId J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setSeckillId : (J)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     lload_1 \nL2:     putfield Field Seckill seckillId J \nL5:     return \nL6:     \n        .linenumbertable \n            L0 28 \n            L5 29 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Seckill name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 32 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Seckill name Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 36 \n            L5 37 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getNumber : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Seckill number I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 40 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setNumber : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field Seckill number I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 44 \n            L5 45 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getStartTime : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Seckill startTime Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 48 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setStartTime : (Ljava/util/Date;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Seckill startTime Ljava/util/Date; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 52 \n            L5 53 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getEndTime : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Seckill endTime Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 56 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setEndTime : (Ljava/util/Date;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Seckill endTime Ljava/util/Date; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 60 \n            L5 61 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCreateTime : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Seckill createTime Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 64 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCreateTime : (Ljava/util/Date;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Seckill createTime Ljava/util/Date; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 68 \n            L5 69 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 3 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     ldc 'Seckill{seckillId=' \nL9:     invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL12:    aload_0 \nL13:    getfield Field Seckill seckillId J \nL16:    invokevirtual Method java/lang/StringBuilder append (J)Ljava/lang/StringBuilder; \nL19:    ldc ', name=' \nL21:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL24:    aload_0 \nL25:    getfield Field Seckill name Ljava/lang/String; \nL28:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL31:    ldc ', number=' \nL33:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL36:    aload_0 \nL37:    getfield Field Seckill number I \nL40:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL43:    ldc ', startTime=' \nL45:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL48:    aload_0 \nL49:    getfield Field Seckill startTime Ljava/util/Date; \nL52:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/Object;)Ljava/lang/StringBuilder; \nL55:    ldc ', endTime=' \nL57:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL60:    aload_0 \nL61:    getfield Field Seckill endTime Ljava/util/Date; \nL64:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/Object;)Ljava/lang/StringBuilder; \nL67:    ldc ', createTime=' \nL69:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL72:    aload_0 \nL73:    getfield Field Seckill createTime Ljava/util/Date; \nL76:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/Object;)Ljava/lang/StringBuilder; \nL79:    bipush 125 \nL81:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL84:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL87:    areturn \nL88:    \n        .linenumbertable \n            L0 73 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Seckill.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 04:44:19 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.time.Instant;\nimport java.util.Date;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.time.MockInstant;\nimport org.evosuite.runtime.mock.java.util.MockDate;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Seckill_ESTest extends Seckill_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      Seckill seckill0 = new Seckill();\n      MockDate mockDate0 = new MockDate((-46867), (-46867), 0);\n      seckill0.setStartTime(mockDate0);\n      Date date0 = seckill0.getStartTime();\n      assertEquals(\"Fri May 31 00:00:00 GMT 48874\", date0.toString());\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      Seckill seckill0 = new Seckill();\n      seckill0.setSeckillId(9542L);\n      long long0 = seckill0.getSeckillId();\n      assertEquals(9542L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      Seckill seckill0 = new Seckill();\n      seckill0.setSeckillId((-16977L));\n      long long0 = seckill0.getSeckillId();\n      assertEquals((-16977L), long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      Seckill seckill0 = new Seckill();\n      seckill0.setNumber(24241);\n      int int0 = seckill0.getNumber();\n      assertEquals(24241, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      Seckill seckill0 = new Seckill();\n      seckill0.setNumber((-80004));\n      int int0 = seckill0.getNumber();\n      assertEquals((-80004), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      Seckill seckill0 = new Seckill();\n      seckill0.setName(\"\");\n      String string0 = seckill0.getName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      Seckill seckill0 = new Seckill();\n      Instant instant0 = MockInstant.ofEpochSecond((-1L));\n      Date date0 = Date.from(instant0);\n      seckill0.setEndTime(date0);\n      Date date1 = seckill0.getEndTime();\n      assertSame(date1, date0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Seckill seckill0 = new Seckill();\n      MockDate mockDate0 = new MockDate((-4510), (-4510), (-4510));\n      seckill0.setCreateTime(mockDate0);\n      Date date0 = seckill0.getCreateTime();\n      assertSame(date0, mockDate0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      Seckill seckill0 = new Seckill();\n      Date date0 = seckill0.getStartTime();\n      assertNull(date0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      Seckill seckill0 = new Seckill();\n      seckill0.setName(\"5L\");\n      String string0 = seckill0.getName();\n      assertEquals(\"5L\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      Seckill seckill0 = new Seckill();\n      String string0 = seckill0.getName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Seckill seckill0 = new Seckill();\n      long long0 = seckill0.getSeckillId();\n      assertEquals(0L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      Seckill seckill0 = new Seckill();\n      String string0 = seckill0.toString();\n      assertEquals(\"Seckill{seckillId=0, name=null, number=0, startTime=null, endTime=null, createTime=null}\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      Seckill seckill0 = new Seckill();\n      Date date0 = seckill0.getEndTime();\n      assertNull(date0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      Seckill seckill0 = new Seckill();\n      int int0 = seckill0.getNumber();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      Seckill seckill0 = new Seckill();\n      Date date0 = seckill0.getCreateTime();\n      assertNull(date0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 04:44:19 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Seckill_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Seckill\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpruv2uywv\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Seckill_ESTest_scaffolding.class.getClassLoader() ,\n      \"Seckill\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Seckill_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Seckill\"\n    );\n  }\n}\n", "class_idx": 38}
{"class_name": "DateTimestampRemover", "java_source": "import java.util.Calendar;\nimport java.util.Date;\n\npublic class DateTimestampRemover {\n\n  public static Date removeTimestamp(Date date) {\n\n    Calendar calendar = Calendar.getInstance();\n    calendar.setTime(date);\n    calendar.set(Calendar.HOUR_OF_DAY, 0);\n    calendar.set(Calendar.MINUTE, 0);\n    calendar.set(Calendar.SECOND, 0);\n    calendar.set(Calendar.MILLISECOND, 0);\n\n    Date dateWithoutTimestamp = calendar.getTime();\n\n    return dateWithoutTimestamp;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super DateTimestampRemover \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static removeTimestamp : (Ljava/util/Date;)Ljava/util/Date; \n    .code stack 3 locals 3 \nL0:     invokestatic Method java/util/Calendar getInstance ()Ljava/util/Calendar; \nL3:     astore_1 \nL4:     aload_1 \nL5:     aload_0 \nL6:     invokevirtual Method java/util/Calendar setTime (Ljava/util/Date;)V \nL9:     aload_1 \nL10:    bipush 11 \nL12:    iconst_0 \nL13:    invokevirtual Method java/util/Calendar set (II)V \nL16:    aload_1 \nL17:    bipush 12 \nL19:    iconst_0 \nL20:    invokevirtual Method java/util/Calendar set (II)V \nL23:    aload_1 \nL24:    bipush 13 \nL26:    iconst_0 \nL27:    invokevirtual Method java/util/Calendar set (II)V \nL30:    aload_1 \nL31:    bipush 14 \nL33:    iconst_0 \nL34:    invokevirtual Method java/util/Calendar set (II)V \nL37:    aload_1 \nL38:    invokevirtual Method java/util/Calendar getTime ()Ljava/util/Date; \nL41:    astore_2 \nL42:    aload_2 \nL43:    areturn \nL44:    \n        .linenumbertable \n            L0 10 \n            L4 11 \n            L9 12 \n            L16 13 \n            L23 14 \n            L30 15 \n            L37 17 \n            L42 19 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'DateTimestampRemover.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 06:36:39 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.Date;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.util.MockDate;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class DateTimestampRemover_ESTest extends DateTimestampRemover_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      DateTimestampRemover dateTimestampRemover0 = new DateTimestampRemover();\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      MockDate mockDate0 = new MockDate();\n      Date date0 = DateTimestampRemover.removeTimestamp(mockDate0);\n      assertEquals(\"Fri Feb 14 20:21:21 GMT 2014\", date0.toString());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 06:36:39 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class DateTimestampRemover_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"DateTimestampRemover\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpknr00sbp\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DateTimestampRemover_ESTest_scaffolding.class.getClassLoader() ,\n      \"DateTimestampRemover\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DateTimestampRemover_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"DateTimestampRemover\"\n    );\n  }\n}\n", "class_idx": 39}
{"class_name": "SearchType", "java_source": "public class SearchType {\n  public static final int nearbySearch = 1;\n  public static final int regionSearch = 2;\n  public static final int personalSearch = 3;\n  public static final int detailSearch = 4;\n}\n", "jasm_code": ".version 52 0 \n.class public super SearchType \n.super java/lang/Object \n.field public static final nearbySearch I = 1 \n.field public static final regionSearch I = 2 \n.field public static final personalSearch I = 3 \n.field public static final detailSearch I = 4 \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'SearchType.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 15:10:45 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class SearchType_ESTest extends SearchType_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      SearchType searchType0 = new SearchType();\n      assertEquals(1, SearchType.nearbySearch);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 15:10:45 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class SearchType_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"SearchType\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpswdit7rc\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SearchType_ESTest_scaffolding.class.getClassLoader() ,\n      \"SearchType\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SearchType_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"SearchType\"\n    );\n  }\n}\n", "class_idx": 40}
{"class_name": "GitWebType", "java_source": "// Copyright (C) 2009 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** Class to store information about different gitweb types. */\npublic class GitWebType {\n  /**\n   * Get a GitWebType based on the given name.\n   *\n   * @param name Name to look for.\n   * @return GitWebType from the given name, else null if not found.\n   */\n  public static GitWebType fromName(final String name) {\n    final GitWebType type;\n\n    if (name == null || name.isEmpty() || name.equalsIgnoreCase(\"gitweb\")) {\n      type = new GitWebType();\n      type.setLinkName(\"gitweb\");\n      type.setProject(\"?p=${project}.git;a=summary\");\n      type.setRevision(\"?p=${project}.git;a=commit;h=${commit}\");\n      type.setBranch(\"?p=${project}.git;a=shortlog;h=${branch}\");\n      type.setFileHistory(\"?p=${project}.git;a=history;hb=${branch};f=${file}\");\n\n    } else if (name.equalsIgnoreCase(\"cgit\")) {\n      type = new GitWebType();\n      type.setLinkName(\"cgit\");\n      type.setProject(\"${project}/summary\");\n      type.setRevision(\"${project}/commit/?id=${commit}\");\n      type.setBranch(\"${project}/log/?h=${branch}\");\n      type.setFileHistory(\"${project}/log/${file}?h=${branch}\");\n\n    } else if (name.equalsIgnoreCase(\"custom\")) {\n      type = new GitWebType();\n      // The custom name is not defined, let's keep the old style of using GitWeb\n      type.setLinkName(\"gitweb\");\n\n    } else if (name.equalsIgnoreCase(\"disabled\")) {\n      type = null;\n\n    } else {\n      type = null;\n    }\n\n    return type;\n  }\n\n  /** name of the type. */\n  private String name;\n\n  /** String for revision view url. */\n  private String revision;\n\n  /** ParamertizedString for project view url. */\n  private String project;\n\n  /** ParamertizedString for branch view url. */\n  private String branch;\n\n  /** ParamertizedString for file history view url. */\n  private String fileHistory;\n\n  /** Character to substitute the standard path separator '/' in branch and project names */\n  private char pathSeparator = '/';\n\n  /** Private default constructor for gson. */\n  protected GitWebType() {}\n\n  /**\n   * Get the String for branch view.\n   *\n   * @return The String for branch view\n   */\n  public String getBranch() {\n    return branch;\n  }\n\n  /**\n   * Get the String for link-name of the type.\n   *\n   * @return The String for link-name of the type\n   */\n  public String getLinkName() {\n    return name;\n  }\n\n  /**\n   * Get the String for project view.\n   *\n   * @return The String for project view\n   */\n  public String getProject() {\n    return project;\n  }\n\n  /**\n   * Get the String for revision view.\n   *\n   * @return The String for revision view\n   */\n  public String getRevision() {\n    return revision;\n  }\n\n  /**\n   * Get the String for file history view.\n   *\n   * @return The String for file history view\n   */\n  public String getFileHistory() {\n    return fileHistory;\n  }\n\n  /**\n   * Set the pattern for branch view.\n   *\n   * @param pattern The pattern for branch view\n   */\n  public void setBranch(final String pattern) {\n    if (pattern != null && !pattern.isEmpty()) {\n      branch = pattern;\n    }\n  }\n\n  /**\n   * Set the pattern for link-name type.\n   *\n   * @param pattern The pattern for link-name type\n   */\n  public void setLinkName(final String name) {\n    if (name != null && !name.isEmpty()) {\n      this.name = name;\n    }\n  }\n\n  /**\n   * Set the pattern for project view.\n   *\n   * @param pattern The pattern for project view\n   */\n  public void setProject(final String pattern) {\n    if (pattern != null && !pattern.isEmpty()) {\n      project = pattern;\n    }\n  }\n\n  /**\n   * Set the pattern for revision view.\n   *\n   * @param pattern The pattern for revision view\n   */\n  public void setRevision(final String pattern) {\n    if (pattern != null && !pattern.isEmpty()) {\n      revision = pattern;\n    }\n  }\n\n  /**\n   * Set the pattern for file history view.\n   *\n   * @param pattern The pattern for file history view\n   */\n  public void setFileHistory(final String pattern) {\n    if (pattern != null && !pattern.isEmpty()) {\n      fileHistory = pattern;\n    }\n  }\n\n  /**\n   * Replace the standard path separator ('/') in a branch name or project name with a custom path\n   * separator configured by the property gitweb.pathSeparator.\n   *\n   * @param urlSegment The branch or project to replace the path separator in\n   * @return the urlSegment with the standard path separator replaced by the custom path separator\n   */\n  public String replacePathSeparator(String urlSegment) {\n    if ('/' != pathSeparator) {\n      return urlSegment.replace('/', pathSeparator);\n    }\n    return urlSegment;\n  }\n\n  /**\n   * Set the custom path separator\n   *\n   * @param separator The custom path separator\n   */\n  public void setPathSeparator(char separator) {\n    this.pathSeparator = separator;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super GitWebType \n.super java/lang/Object \n.field private name Ljava/lang/String; \n.field private revision Ljava/lang/String; \n.field private project Ljava/lang/String; \n.field private branch Ljava/lang/String; \n.field private fileHistory Ljava/lang/String; \n.field private pathSeparator C \n\n.method public static fromName : (Ljava/lang/String;)LGitWebType; \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     ifnull L20 \nL4:     aload_0 \nL5:     invokevirtual Method java/lang/String isEmpty ()Z \nL8:     ifne L20 \nL11:    aload_0 \nL12:    ldc 'gitweb' \nL14:    invokevirtual Method java/lang/String equalsIgnoreCase (Ljava/lang/String;)Z \nL17:    ifeq L61 \n\n        .stack same \nL20:    new GitWebType \nL23:    dup \nL24:    invokespecial Method GitWebType <init> ()V \nL27:    astore_1 \nL28:    aload_1 \nL29:    ldc 'gitweb' \nL31:    invokevirtual Method GitWebType setLinkName (Ljava/lang/String;)V \nL34:    aload_1 \nL35:    ldc '?p=${project}.git;a=summary' \nL37:    invokevirtual Method GitWebType setProject (Ljava/lang/String;)V \nL40:    aload_1 \nL41:    ldc '?p=${project}.git;a=commit;h=${commit}' \nL43:    invokevirtual Method GitWebType setRevision (Ljava/lang/String;)V \nL46:    aload_1 \nL47:    ldc '?p=${project}.git;a=shortlog;h=${branch}' \nL49:    invokevirtual Method GitWebType setBranch (Ljava/lang/String;)V \nL52:    aload_1 \nL53:    ldc '?p=${project}.git;a=history;hb=${branch};f=${file}' \nL55:    invokevirtual Method GitWebType setFileHistory (Ljava/lang/String;)V \nL58:    goto L153 \n\n        .stack same \nL61:    aload_0 \nL62:    ldc 'cgit' \nL64:    invokevirtual Method java/lang/String equalsIgnoreCase (Ljava/lang/String;)Z \nL67:    ifeq L111 \nL70:    new GitWebType \nL73:    dup \nL74:    invokespecial Method GitWebType <init> ()V \nL77:    astore_1 \nL78:    aload_1 \nL79:    ldc 'cgit' \nL81:    invokevirtual Method GitWebType setLinkName (Ljava/lang/String;)V \nL84:    aload_1 \nL85:    ldc '${project}/summary' \nL87:    invokevirtual Method GitWebType setProject (Ljava/lang/String;)V \nL90:    aload_1 \nL91:    ldc '${project}/commit/?id=${commit}' \nL93:    invokevirtual Method GitWebType setRevision (Ljava/lang/String;)V \nL96:    aload_1 \nL97:    ldc '${project}/log/?h=${branch}' \nL99:    invokevirtual Method GitWebType setBranch (Ljava/lang/String;)V \nL102:   aload_1 \nL103:   ldc '${project}/log/${file}?h=${branch}' \nL105:   invokevirtual Method GitWebType setFileHistory (Ljava/lang/String;)V \nL108:   goto L153 \n\n        .stack same \nL111:   aload_0 \nL112:   ldc 'custom' \nL114:   invokevirtual Method java/lang/String equalsIgnoreCase (Ljava/lang/String;)Z \nL117:   ifeq L137 \nL120:   new GitWebType \nL123:   dup \nL124:   invokespecial Method GitWebType <init> ()V \nL127:   astore_1 \nL128:   aload_1 \nL129:   ldc 'gitweb' \nL131:   invokevirtual Method GitWebType setLinkName (Ljava/lang/String;)V \nL134:   goto L153 \n\n        .stack same \nL137:   aload_0 \nL138:   ldc 'disabled' \nL140:   invokevirtual Method java/lang/String equalsIgnoreCase (Ljava/lang/String;)Z \nL143:   ifeq L151 \nL146:   aconst_null \nL147:   astore_1 \nL148:   goto L153 \n\n        .stack same \nL151:   aconst_null \nL152:   astore_1 \n\n        .stack append Object GitWebType \nL153:   aload_1 \nL154:   areturn \nL155:   \n        .linenumbertable \n            L0 28 \n            L20 29 \n            L28 30 \n            L34 31 \n            L40 32 \n            L46 33 \n            L52 34 \n            L61 36 \n            L70 37 \n            L78 38 \n            L84 39 \n            L90 40 \n            L96 41 \n            L102 42 \n            L111 44 \n            L120 45 \n            L128 47 \n            L137 49 \n            L146 50 \n            L151 53 \n            L153 56 \n        .end linenumbertable \n    .end code \n.end method \n\n.method protected <init> : ()V \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     bipush 47 \nL7:     putfield Field GitWebType pathSeparator C \nL10:    return \nL11:    \n        .linenumbertable \n            L0 79 \n            L4 76 \n            L10 80 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getBranch : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GitWebType branch Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 88 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getLinkName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GitWebType name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 97 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProject : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GitWebType project Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 106 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getRevision : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GitWebType revision Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 115 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFileHistory : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GitWebType fileHistory Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 124 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setBranch : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_1 \nL1:     ifnull L16 \nL4:     aload_1 \nL5:     invokevirtual Method java/lang/String isEmpty ()Z \nL8:     ifne L16 \nL11:    aload_0 \nL12:    aload_1 \nL13:    putfield Field GitWebType branch Ljava/lang/String; \n\n        .stack same \nL16:    return \nL17:    \n        .linenumbertable \n            L0 133 \n            L11 134 \n            L16 136 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setLinkName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_1 \nL1:     ifnull L16 \nL4:     aload_1 \nL5:     invokevirtual Method java/lang/String isEmpty ()Z \nL8:     ifne L16 \nL11:    aload_0 \nL12:    aload_1 \nL13:    putfield Field GitWebType name Ljava/lang/String; \n\n        .stack same \nL16:    return \nL17:    \n        .linenumbertable \n            L0 144 \n            L11 145 \n            L16 147 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProject : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_1 \nL1:     ifnull L16 \nL4:     aload_1 \nL5:     invokevirtual Method java/lang/String isEmpty ()Z \nL8:     ifne L16 \nL11:    aload_0 \nL12:    aload_1 \nL13:    putfield Field GitWebType project Ljava/lang/String; \n\n        .stack same \nL16:    return \nL17:    \n        .linenumbertable \n            L0 155 \n            L11 156 \n            L16 158 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRevision : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_1 \nL1:     ifnull L16 \nL4:     aload_1 \nL5:     invokevirtual Method java/lang/String isEmpty ()Z \nL8:     ifne L16 \nL11:    aload_0 \nL12:    aload_1 \nL13:    putfield Field GitWebType revision Ljava/lang/String; \n\n        .stack same \nL16:    return \nL17:    \n        .linenumbertable \n            L0 166 \n            L11 167 \n            L16 169 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setFileHistory : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_1 \nL1:     ifnull L16 \nL4:     aload_1 \nL5:     invokevirtual Method java/lang/String isEmpty ()Z \nL8:     ifne L16 \nL11:    aload_0 \nL12:    aload_1 \nL13:    putfield Field GitWebType fileHistory Ljava/lang/String; \n\n        .stack same \nL16:    return \nL17:    \n        .linenumbertable \n            L0 177 \n            L11 178 \n            L16 180 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public replacePathSeparator : (Ljava/lang/String;)Ljava/lang/String; \n    .code stack 3 locals 2 \nL0:     bipush 47 \nL2:     aload_0 \nL3:     getfield Field GitWebType pathSeparator C \nL6:     if_icmpeq L20 \nL9:     aload_1 \nL10:    bipush 47 \nL12:    aload_0 \nL13:    getfield Field GitWebType pathSeparator C \nL16:    invokevirtual Method java/lang/String replace (CC)Ljava/lang/String; \nL19:    areturn \n\n        .stack same \nL20:    aload_1 \nL21:    areturn \nL22:    \n        .linenumbertable \n            L0 191 \n            L9 192 \n            L20 194 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPathSeparator : (C)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field GitWebType pathSeparator C \nL5:     return \nL6:     \n        .linenumbertable \n            L0 202 \n            L5 203 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'GitWebType.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 07:08:58 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class GitWebType_ESTest extends GitWebType_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      GitWebType gitWebType0 = GitWebType.fromName(\"\");\n      gitWebType0.setPathSeparator('&');\n      String string0 = gitWebType0.replacePathSeparator(\"b]aUa\");\n      assertEquals(\"b]aUa\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      String string0 = gitWebType0.replacePathSeparator((String) null);\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      GitWebType gitWebType0 = GitWebType.fromName(\"\");\n      String string0 = gitWebType0.getFileHistory();\n      assertEquals(\"?p=${project}.git;a=history;hb=${branch};f=${file}\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      gitWebType0.setFileHistory(\"#SS1:h;ISpht|aA\");\n      assertEquals(\"#SS1:h;ISpht|aA\", gitWebType0.getFileHistory());\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      gitWebType0.setRevision(\"n!\\\"kc``|!\");\n      String string0 = gitWebType0.getRevision();\n      assertEquals(\"n!\\\"kc``|!\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      gitWebType0.setProject(\"8dfr3st(zos&z\");\n      String string0 = gitWebType0.getProject();\n      assertEquals(\"8dfr3st(zos&z\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      gitWebType0.setLinkName(\"4\");\n      String string0 = gitWebType0.getLinkName();\n      assertEquals(\"4\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      gitWebType0.setBranch(\"n!\\\"kc``|!\");\n      String string0 = gitWebType0.getBranch();\n      assertEquals(\"n!\\\"kc``|!\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      gitWebType0.setPathSeparator('e');\n      String string0 = gitWebType0.replacePathSeparator(\"?p=${project}.git;a=shortlog;h=${branch}\");\n      assertEquals(\"?p=${project}.git;a=shortlog;h=${branch}\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      GitWebType gitWebType0 = GitWebType.fromName(\"\");\n      String string0 = gitWebType0.replacePathSeparator(\"\");\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      gitWebType0.setFileHistory(\"\");\n      assertNull(gitWebType0.getLinkName());\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      gitWebType0.setFileHistory((String) null);\n      assertNull(gitWebType0.getRevision());\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      gitWebType0.setRevision(\"\");\n      assertNull(gitWebType0.getBranch());\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      gitWebType0.setRevision((String) null);\n      assertNull(gitWebType0.getRevision());\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      gitWebType0.setProject(\"\");\n      assertNull(gitWebType0.getFileHistory());\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      gitWebType0.setProject((String) null);\n      assertNull(gitWebType0.getRevision());\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      gitWebType0.setLinkName(\"\");\n      assertNull(gitWebType0.getRevision());\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      gitWebType0.setBranch((String) null);\n      assertNull(gitWebType0.getRevision());\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      GitWebType gitWebType0 = GitWebType.fromName(\"disabled\");\n      assertNull(gitWebType0);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      GitWebType gitWebType0 = GitWebType.fromName(\"custom\");\n      assertEquals(\"gitweb\", gitWebType0.getLinkName());\n      assertNotNull(gitWebType0);\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      GitWebType gitWebType0 = GitWebType.fromName(\"cgit\");\n      assertNotNull(gitWebType0);\n      assertEquals(\"${project}/commit/?id=${commit}\", gitWebType0.getRevision());\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      GitWebType gitWebType0 = GitWebType.fromName(\"gitweb\");\n      assertEquals(\"?p=${project}.git;a=shortlog;h=${branch}\", gitWebType0.getBranch());\n  }\n\n  @Test(timeout = 4000)\n  public void test22()  throws Throwable  {\n      GitWebType gitWebType0 = GitWebType.fromName(\"\");\n      assertNotNull(gitWebType0);\n      \n      gitWebType0.setBranch(\"\");\n      assertEquals(\"?p=${project}.git;a=shortlog;h=${branch}\", gitWebType0.getBranch());\n  }\n\n  @Test(timeout = 4000)\n  public void test23()  throws Throwable  {\n      GitWebType gitWebType0 = GitWebType.fromName(\"#SS1:h;ISpht|aA\");\n      assertNull(gitWebType0);\n  }\n\n  @Test(timeout = 4000)\n  public void test24()  throws Throwable  {\n      GitWebType gitWebType0 = GitWebType.fromName((String) null);\n      gitWebType0.setLinkName((String) null);\n      assertEquals(\"?p=${project}.git;a=shortlog;h=${branch}\", gitWebType0.getBranch());\n  }\n\n  @Test(timeout = 4000)\n  public void test25()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      String string0 = gitWebType0.getRevision();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test26()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      String string0 = gitWebType0.getFileHistory();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test27()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      String string0 = gitWebType0.getBranch();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test28()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      String string0 = gitWebType0.getLinkName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test29()  throws Throwable  {\n      GitWebType gitWebType0 = new GitWebType();\n      String string0 = gitWebType0.getProject();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 07:08:58 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class GitWebType_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"GitWebType\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmptvo_71j4\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(GitWebType_ESTest_scaffolding.class.getClassLoader() ,\n      \"GitWebType\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(GitWebType_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"GitWebType\"\n    );\n  }\n}\n", "class_idx": 41}
{"class_name": "Concepts", "java_source": "public class Concepts {\n\n  public static final String MODULE = \"900000000000443000\";\n}\n", "jasm_code": ".version 52 0 \n.class public super Concepts \n.super java/lang/Object \n.field public static final MODULE Ljava/lang/String; = '900000000000443000' \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Concepts.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 14:22:39 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Concepts_ESTest extends Concepts_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Concepts concepts0 = new Concepts();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 14:22:39 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Concepts_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Concepts\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpva61a1oh\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Concepts_ESTest_scaffolding.class.getClassLoader() ,\n      \"Concepts\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Concepts_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Concepts\"\n    );\n  }\n}\n", "class_idx": 42}
{"class_name": "State", "java_source": "/*\nCraftbook\nCopyright (C) 2010 Lymia <lymiahugs@gmail.com>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\npublic class State {\n  public boolean[] input;\n  public byte[] presistantStorage;\n}\n", "jasm_code": ".version 52 0 \n.class public super State \n.super java/lang/Object \n.field public input [Z \n.field public presistantStorage [B \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'State.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 07:27:10 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class State_ESTest extends State_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      State state0 = new State();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 07:27:10 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class State_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"State\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpjx10op8e\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(State_ESTest_scaffolding.class.getClassLoader() ,\n      \"State\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(State_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"State\"\n    );\n  }\n}\n", "class_idx": 43}
{"class_name": "StaticAgentConfiguration", "java_source": "/* Code Pulse: a real-time code coverage tool, for more information, see <http://code-pulse.com/>\n *\n * Copyright (C) 2014-2017 Code Dx, Inc. <https://codedx.com/>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport java.util.Properties;\n\n/**\n * Static configuration for Agent.\n *\n * @author RobertF\n */\npublic class StaticAgentConfiguration {\n  public static int DefaultConnectTimeout = 30;\n\n  /**\n   * Parses an options string, expected to be in the form <code>host:port;key=value;key2=value2;...\n   * </code> or <code>host:port;logfile</code> (provided for backward compatibility).\n   *\n   * <p>Recognized configuration keys are log (for the agent log file) and connectTimeout (to\n   * control the timeout when attempting to connect to HQ).\n   *\n   * @param options\n   * @return A new configuration instance on success. <code>null</code> on failure.\n   */\n  public static StaticAgentConfiguration parseOptionString(String options) {\n    String[] optionParts = options.split(\";\");\n    Properties props = new Properties();\n\n    String hqEndpoint = optionParts[0];\n    String[] hqEndpointParts = hqEndpoint.split(\":\");\n    if (hqEndpointParts.length < 2) return null;\n\n    String hqHost = hqEndpointParts[0];\n    int hqPort;\n    try {\n      hqPort = Integer.parseInt(hqEndpointParts[1]);\n    } catch (NumberFormatException e) {\n      return null;\n    }\n\n    if (optionParts.length == 2 && !optionParts[1].contains(\"=\")) {\n      // \"legacy\" mode, second value is just the filename\n      props.setProperty(\"log\", optionParts[1]);\n    } else {\n      // key/value pairs\n      for (int i = 1; i < optionParts.length; i++) {\n        String[] kvp = optionParts[i].split(\"=\", 2);\n        if (kvp.length == 2) props.setProperty(kvp[0], kvp[1]);\n      }\n    }\n\n    String logFilename = props.getProperty(\"log\");\n    int connectTimeout;\n    try {\n      connectTimeout =\n          Integer.parseInt(\n              props.getProperty(\"connectTimeout\", String.valueOf(DefaultConnectTimeout)));\n    } catch (NumberFormatException e) {\n      return null;\n    }\n\n    int projectId;\n    try {\n      projectId = Integer.parseInt(props.getProperty(\"projectId\", String.valueOf(0)));\n    } catch (NumberFormatException e) {\n      return null;\n    }\n\n    return new StaticAgentConfiguration(hqHost, hqPort, logFilename, connectTimeout, projectId);\n  }\n\n  private final int hqPort;\n  private final String hqHost;\n  private final String logFilename;\n  private final int connectTimeout;\n  private final int projectId;\n\n  public StaticAgentConfiguration(String hqHost, int hqPort, String logFilename) {\n    this(hqHost, hqPort, logFilename, DefaultConnectTimeout, 0);\n  }\n\n  public StaticAgentConfiguration(\n      String hqHost, int hqPort, String logFilename, int connectTimeout, int projectId) {\n    this.hqHost = hqHost;\n    this.hqPort = hqPort;\n    this.logFilename = logFilename;\n    this.connectTimeout = connectTimeout;\n    this.projectId = projectId;\n  }\n\n  public String toOptionString() {\n    Properties props = new Properties();\n    if (logFilename != null) props.setProperty(\"log\", logFilename);\n    props.setProperty(\"connectTimeout\", String.valueOf(connectTimeout));\n\n    StringBuilder sb = new StringBuilder();\n    sb.append(hqHost);\n    sb.append(':');\n    sb.append(hqPort);\n\n    for (String key : props.stringPropertyNames()) {\n      sb.append(';');\n      sb.append(key);\n      sb.append('=');\n      sb.append(props.getProperty(key));\n    }\n\n    return sb.toString();\n  }\n\n  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"StaticConfiguration(\");\n    sb.append(\"logFilename=\").append(logFilename);\n    sb.append(\" )\");\n    return sb.toString();\n  }\n\n  public String getHqHost() {\n    return hqHost;\n  }\n\n  public int getHqPort() {\n    return hqPort;\n  }\n\n  public String getLogFilename() {\n    return logFilename;\n  }\n\n  public int getConnectTimeout() {\n    return connectTimeout;\n  }\n\n  public int getProjectId() {\n    return projectId;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super StaticAgentConfiguration \n.super java/lang/Object \n.field public static DefaultConnectTimeout I \n.field private final hqPort I \n.field private final hqHost Ljava/lang/String; \n.field private final logFilename Ljava/lang/String; \n.field private final connectTimeout I \n.field private final projectId I \n\n.method public static parseOptionString : (Ljava/lang/String;)LStaticAgentConfiguration; \n    .code stack 7 locals 11 \nL0:     aload_0 \nL1:     ldc ';' \nL3:     invokevirtual Method java/lang/String split (Ljava/lang/String;)[Ljava/lang/String; \nL6:     astore_1 \nL7:     new java/util/Properties \nL10:    dup \nL11:    invokespecial Method java/util/Properties <init> ()V \nL14:    astore_2 \nL15:    aload_1 \nL16:    iconst_0 \nL17:    aaload \nL18:    astore_3 \nL19:    aload_3 \nL20:    ldc ':' \nL22:    invokevirtual Method java/lang/String split (Ljava/lang/String;)[Ljava/lang/String; \nL25:    astore 4 \nL27:    aload 4 \nL29:    arraylength \nL30:    iconst_2 \nL31:    if_icmpge L36 \nL34:    aconst_null \nL35:    areturn \n\n        .stack full \n            locals Object java/lang/String Object [Ljava/lang/String; Object java/util/Properties Object java/lang/String Object [Ljava/lang/String; \n            stack \n        .end stack \nL36:    aload 4 \nL38:    iconst_0 \nL39:    aaload \nL40:    astore 5 \n        .catch java/lang/NumberFormatException from L42 to L51 using L54 \nL42:    aload 4 \nL44:    iconst_1 \nL45:    aaload \nL46:    invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;)I \nL49:    istore 6 \nL51:    goto L58 \n\n        .stack full \n            locals Object java/lang/String Object [Ljava/lang/String; Object java/util/Properties Object java/lang/String Object [Ljava/lang/String; Object java/lang/String \n            stack Object java/lang/NumberFormatException \n        .end stack \nL54:    astore 7 \nL56:    aconst_null \nL57:    areturn \n\n        .stack append Integer \nL58:    aload_1 \nL59:    arraylength \nL60:    iconst_2 \nL61:    if_icmpne L88 \nL64:    aload_1 \nL65:    iconst_1 \nL66:    aaload \nL67:    ldc '=' \nL69:    invokevirtual Method java/lang/String contains (Ljava/lang/CharSequence;)Z \nL72:    ifne L88 \nL75:    aload_2 \nL76:    ldc 'log' \nL78:    aload_1 \nL79:    iconst_1 \nL80:    aaload \nL81:    invokevirtual Method java/util/Properties setProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; \nL84:    pop \nL85:    goto L136 \n\n        .stack same \nL88:    iconst_1 \nL89:    istore 7 \n\n        .stack append Integer \nL91:    iload 7 \nL93:    aload_1 \nL94:    arraylength \nL95:    if_icmpge L136 \nL98:    aload_1 \nL99:    iload 7 \nL101:   aaload \nL102:   ldc '=' \nL104:   iconst_2 \nL105:   invokevirtual Method java/lang/String split (Ljava/lang/String;I)[Ljava/lang/String; \nL108:   astore 8 \nL110:   aload 8 \nL112:   arraylength \nL113:   iconst_2 \nL114:   if_icmpne L130 \nL117:   aload_2 \nL118:   aload 8 \nL120:   iconst_0 \nL121:   aaload \nL122:   aload 8 \nL124:   iconst_1 \nL125:   aaload \nL126:   invokevirtual Method java/util/Properties setProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; \nL129:   pop \n\n        .stack same \nL130:   iinc 7 1 \nL133:   goto L91 \n\n        .stack chop 1 \nL136:   aload_2 \nL137:   ldc 'log' \nL139:   invokevirtual Method java/util/Properties getProperty (Ljava/lang/String;)Ljava/lang/String; \nL142:   astore 7 \n        .catch java/lang/NumberFormatException from L144 to L161 using L164 \nL144:   aload_2 \nL145:   ldc 'connectTimeout' \nL147:   getstatic Field StaticAgentConfiguration DefaultConnectTimeout I \nL150:   invokestatic Method java/lang/String valueOf (I)Ljava/lang/String; \nL153:   invokevirtual Method java/util/Properties getProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; \nL156:   invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;)I \nL159:   istore 8 \nL161:   goto L168 \n\n        .stack full \n            locals Object java/lang/String Object [Ljava/lang/String; Object java/util/Properties Object java/lang/String Object [Ljava/lang/String; Object java/lang/String Integer Object java/lang/String \n            stack Object java/lang/NumberFormatException \n        .end stack \nL164:   astore 9 \nL166:   aconst_null \nL167:   areturn \n        .catch java/lang/NumberFormatException from L168 to L183 using L186 \n\n        .stack append Integer \nL168:   aload_2 \nL169:   ldc 'projectId' \nL171:   iconst_0 \nL172:   invokestatic Method java/lang/String valueOf (I)Ljava/lang/String; \nL175:   invokevirtual Method java/util/Properties getProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; \nL178:   invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;)I \nL181:   istore 9 \nL183:   goto L190 \n\n        .stack stack_1 Object java/lang/NumberFormatException \nL186:   astore 10 \nL188:   aconst_null \nL189:   areturn \n\n        .stack append Integer \nL190:   new StaticAgentConfiguration \nL193:   dup \nL194:   aload 5 \nL196:   iload 6 \nL198:   aload 7 \nL200:   iload 8 \nL202:   iload 9 \nL204:   invokespecial Method StaticAgentConfiguration <init> (Ljava/lang/String;ILjava/lang/String;II)V \nL207:   areturn \nL208:   \n        .linenumbertable \n            L0 45 \n            L7 46 \n            L15 48 \n            L19 49 \n            L27 50 \n            L34 51 \n            L36 53 \n            L42 57 \n            L51 62 \n            L54 59 \n            L56 61 \n            L58 64 \n            L75 67 \n            L88 72 \n            L98 74 \n            L110 75 \n            L117 76 \n            L130 72 \n            L136 80 \n            L144 84 \n            L150 85 \n            L153 84 \n            L161 90 \n            L164 87 \n            L166 89 \n            L168 95 \n            L183 100 \n            L186 97 \n            L188 99 \n            L190 102 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;ILjava/lang/String;)V \n    .code stack 6 locals 4 \nL0:     aload_0 \nL1:     aload_1 \nL2:     iload_2 \nL3:     aload_3 \nL4:     getstatic Field StaticAgentConfiguration DefaultConnectTimeout I \nL7:     iconst_0 \nL8:     invokespecial Method StaticAgentConfiguration <init> (Ljava/lang/String;ILjava/lang/String;II)V \nL11:    return \nL12:    \n        .linenumbertable \n            L0 113 \n            L11 114 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;ILjava/lang/String;II)V \n    .code stack 2 locals 6 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field StaticAgentConfiguration hqHost Ljava/lang/String; \nL9:     aload_0 \nL10:    iload_2 \nL11:    putfield Field StaticAgentConfiguration hqPort I \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field StaticAgentConfiguration logFilename Ljava/lang/String; \nL19:    aload_0 \nL20:    iload 4 \nL22:    putfield Field StaticAgentConfiguration connectTimeout I \nL25:    aload_0 \nL26:    iload 5 \nL28:    putfield Field StaticAgentConfiguration projectId I \nL31:    return \nL32:    \n        .linenumbertable \n            L0 118 \n            L4 119 \n            L9 120 \n            L14 121 \n            L19 122 \n            L25 123 \n            L31 124 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toOptionString : ()Ljava/lang/String; \n    .code stack 3 locals 5 \nL0:     new java/util/Properties \nL3:     dup \nL4:     invokespecial Method java/util/Properties <init> ()V \nL7:     astore_1 \nL8:     aload_0 \nL9:     getfield Field StaticAgentConfiguration logFilename Ljava/lang/String; \nL12:    ifnull L26 \nL15:    aload_1 \nL16:    ldc 'log' \nL18:    aload_0 \nL19:    getfield Field StaticAgentConfiguration logFilename Ljava/lang/String; \nL22:    invokevirtual Method java/util/Properties setProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; \nL25:    pop \n\n        .stack append Object java/util/Properties \nL26:    aload_1 \nL27:    ldc 'connectTimeout' \nL29:    aload_0 \nL30:    getfield Field StaticAgentConfiguration connectTimeout I \nL33:    invokestatic Method java/lang/String valueOf (I)Ljava/lang/String; \nL36:    invokevirtual Method java/util/Properties setProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; \nL39:    pop \nL40:    new java/lang/StringBuilder \nL43:    dup \nL44:    invokespecial Method java/lang/StringBuilder <init> ()V \nL47:    astore_2 \nL48:    aload_2 \nL49:    aload_0 \nL50:    getfield Field StaticAgentConfiguration hqHost Ljava/lang/String; \nL53:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL56:    pop \nL57:    aload_2 \nL58:    bipush 58 \nL60:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL63:    pop \nL64:    aload_2 \nL65:    aload_0 \nL66:    getfield Field StaticAgentConfiguration hqPort I \nL69:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL72:    pop \nL73:    aload_1 \nL74:    invokevirtual Method java/util/Properties stringPropertyNames ()Ljava/util/Set; \nL77:    invokeinterface InterfaceMethod java/util/Set iterator ()Ljava/util/Iterator; 1 \nL82:    astore_3 \n\n        .stack append Object java/lang/StringBuilder Object java/util/Iterator \nL83:    aload_3 \nL84:    invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL89:    ifeq L138 \nL92:    aload_3 \nL93:    invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL98:    checkcast java/lang/String \nL101:   astore 4 \nL103:   aload_2 \nL104:   bipush 59 \nL106:   invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL109:   pop \nL110:   aload_2 \nL111:   aload 4 \nL113:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL116:   pop \nL117:   aload_2 \nL118:   bipush 61 \nL120:   invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL123:   pop \nL124:   aload_2 \nL125:   aload_1 \nL126:   aload 4 \nL128:   invokevirtual Method java/util/Properties getProperty (Ljava/lang/String;)Ljava/lang/String; \nL131:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL134:   pop \nL135:   goto L83 \n\n        .stack chop 1 \nL138:   aload_2 \nL139:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL142:   areturn \nL143:   \n        .linenumbertable \n            L0 128 \n            L8 129 \n            L15 130 \n            L26 131 \n            L40 133 \n            L48 134 \n            L57 135 \n            L64 136 \n            L73 138 \n            L103 140 \n            L110 141 \n            L117 142 \n            L124 143 \n            L135 144 \n            L138 146 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 3 locals 2 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     ldc 'StaticConfiguration(' \nL6:     invokespecial Method java/lang/StringBuilder <init> (Ljava/lang/String;)V \nL9:     astore_1 \nL10:    aload_1 \nL11:    ldc 'logFilename=' \nL13:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL16:    aload_0 \nL17:    getfield Field StaticAgentConfiguration logFilename Ljava/lang/String; \nL20:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL23:    pop \nL24:    aload_1 \nL25:    ldc ' )' \nL27:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL30:    pop \nL31:    aload_1 \nL32:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL35:    areturn \nL36:    \n        .linenumbertable \n            L0 152 \n            L10 153 \n            L24 154 \n            L31 155 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getHqHost : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field StaticAgentConfiguration hqHost Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 160 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getHqPort : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field StaticAgentConfiguration hqPort I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 165 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getLogFilename : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field StaticAgentConfiguration logFilename Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 170 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getConnectTimeout : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field StaticAgentConfiguration connectTimeout I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 175 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProjectId : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field StaticAgentConfiguration projectId I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 178 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 1 locals 0 \nL0:     bipush 30 \nL2:     putstatic Field StaticAgentConfiguration DefaultConnectTimeout I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 29 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'StaticAgentConfiguration.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 19:33:54 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class StaticAgentConfiguration_ESTest extends StaticAgentConfiguration_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration(\"\", (-45085), (String) null, (-45085), (-45085));\n      StaticAgentConfiguration.parseOptionString(\"\");\n      StaticAgentConfiguration.parseOptionString(\":-45085;connectTimeout=-45085\");\n      staticAgentConfiguration0.getLogFilename();\n      // Undeclared exception!\n      try { \n        StaticAgentConfiguration.parseOptionString((String) null);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"StaticAgentConfiguration\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = StaticAgentConfiguration.parseOptionString(\"pjq]:Fb8YwIjf2`o\");\n      assertNull(staticAgentConfiguration0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration(\"Ai0%*&ozJe9\", (-7), (String) null, (-7), 0);\n      int int0 = staticAgentConfiguration0.getProjectId();\n      assertEquals((-7), staticAgentConfiguration0.getHqPort());\n      assertEquals(0, int0);\n      assertEquals((-7), staticAgentConfiguration0.getConnectTimeout());\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration((String) null, 0, \":\", 12006, 12006);\n      int int0 = staticAgentConfiguration0.getProjectId();\n      assertEquals(0, staticAgentConfiguration0.getHqPort());\n      assertEquals(12006, int0);\n      assertEquals(12006, staticAgentConfiguration0.getConnectTimeout());\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration((String) null, 0, \":\", 12000, (-36039));\n      staticAgentConfiguration0.getLogFilename();\n      assertEquals(0, staticAgentConfiguration0.getHqPort());\n      assertEquals(12000, staticAgentConfiguration0.getConnectTimeout());\n      assertEquals((-36039), staticAgentConfiguration0.getProjectId());\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration(\"\", 15681, \"\");\n      staticAgentConfiguration0.getLogFilename();\n      assertEquals(15681, staticAgentConfiguration0.getHqPort());\n      assertEquals(0, staticAgentConfiguration0.getProjectId());\n      assertEquals(30, staticAgentConfiguration0.getConnectTimeout());\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration(\"Ai0%*&ozJe9\", 0, (String) null, 0, 0);\n      int int0 = staticAgentConfiguration0.getHqPort();\n      assertEquals(0, int0);\n      assertEquals(0, staticAgentConfiguration0.getConnectTimeout());\n      assertEquals(0, staticAgentConfiguration0.getProjectId());\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration(\"\", (-21757), \"]rC2r}WYEv\");\n      int int0 = staticAgentConfiguration0.getHqPort();\n      assertEquals((-21757), int0);\n      assertEquals(30, staticAgentConfiguration0.getConnectTimeout());\n      assertEquals(0, staticAgentConfiguration0.getProjectId());\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration(\"6N&ho\", 74003, \"6N&ho\");\n      staticAgentConfiguration0.getHqHost();\n      assertEquals(74003, staticAgentConfiguration0.getHqPort());\n      assertEquals(0, staticAgentConfiguration0.getProjectId());\n      assertEquals(30, staticAgentConfiguration0.getConnectTimeout());\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration(\"\", 16688, \"\");\n      staticAgentConfiguration0.getHqHost();\n      assertEquals(30, staticAgentConfiguration0.getConnectTimeout());\n      assertEquals(16688, staticAgentConfiguration0.getHqPort());\n      assertEquals(0, staticAgentConfiguration0.getProjectId());\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration(\"Ai0%*&ozJe9\", 0, (String) null, 0, 0);\n      int int0 = staticAgentConfiguration0.getConnectTimeout();\n      assertEquals(0, staticAgentConfiguration0.getHqPort());\n      assertEquals(0, staticAgentConfiguration0.getProjectId());\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration(\"Ai0%*&ozJe9\", (-7), (String) null, (-7), 0);\n      int int0 = staticAgentConfiguration0.getConnectTimeout();\n      assertEquals((-7), staticAgentConfiguration0.getHqPort());\n      assertEquals(0, staticAgentConfiguration0.getProjectId());\n      assertEquals((-7), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration((String) null, 0, \":\", 12000, (-36039));\n      String string0 = staticAgentConfiguration0.toOptionString();\n      assertEquals((-36039), staticAgentConfiguration0.getProjectId());\n      assertEquals(\"null:0;log=:;connectTimeout=12000\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration(\"\", (-45085), (String) null, (-45085), (-45085));\n      String string0 = staticAgentConfiguration0.toOptionString();\n      assertEquals(\":-45085;connectTimeout=-45085\", string0);\n      assertEquals((-45085), staticAgentConfiguration0.getProjectId());\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = StaticAgentConfiguration.parseOptionString(\"null:0;log=:;connectTimeout=12000\");\n      assertEquals(12000, staticAgentConfiguration0.getConnectTimeout());\n      assertNotNull(staticAgentConfiguration0);\n      assertEquals(0, staticAgentConfiguration0.getHqPort());\n      assertEquals(0, staticAgentConfiguration0.getProjectId());\n      assertEquals(\"null\", staticAgentConfiguration0.getHqHost());\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = StaticAgentConfiguration.parseOptionString(\":-45085;connectTimeout=-45085\");\n      assertEquals((-45085), staticAgentConfiguration0.getHqPort());\n      assertEquals((-45085), staticAgentConfiguration0.getConnectTimeout());\n      assertNotNull(staticAgentConfiguration0);\n      assertEquals(\"\", staticAgentConfiguration0.getHqHost());\n      assertEquals(0, staticAgentConfiguration0.getProjectId());\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration(\"\", (-45085), (String) null, (-45085), (-45085));\n      String string0 = staticAgentConfiguration0.toString();\n      assertEquals(\"StaticConfiguration(logFilename=null )\", string0);\n      \n      StaticAgentConfiguration.parseOptionString(\"\");\n      String string1 = staticAgentConfiguration0.toOptionString();\n      assertEquals(\":-45085;connectTimeout=-45085\", string1);\n      \n      StaticAgentConfiguration staticAgentConfiguration1 = StaticAgentConfiguration.parseOptionString(\":-45085;connectTimeout=-45085\");\n      assertNotNull(staticAgentConfiguration1);\n      assertEquals(\"\", staticAgentConfiguration1.getHqHost());\n      assertEquals((-45085), staticAgentConfiguration1.getConnectTimeout());\n      \n      staticAgentConfiguration0.getLogFilename();\n      assertEquals((-45085), staticAgentConfiguration0.getProjectId());\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration(\"w`@VW\", 1, \",Uq[l/\", 61, 1);\n      int int0 = staticAgentConfiguration0.getHqPort();\n      assertEquals(61, staticAgentConfiguration0.getConnectTimeout());\n      assertEquals(1, int0);\n      assertEquals(1, staticAgentConfiguration0.getProjectId());\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration((String) null, 0, \":\", 12000, (-36039));\n      int int0 = staticAgentConfiguration0.getProjectId();\n      assertEquals((-36039), int0);\n      assertEquals(0, staticAgentConfiguration0.getHqPort());\n      assertEquals(12000, staticAgentConfiguration0.getConnectTimeout());\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration((String) null, 0, \":\", 12000, (-36039));\n      int int0 = staticAgentConfiguration0.getConnectTimeout();\n      assertEquals(0, staticAgentConfiguration0.getHqPort());\n      assertEquals(12000, int0);\n      assertEquals((-36039), staticAgentConfiguration0.getProjectId());\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      StaticAgentConfiguration staticAgentConfiguration0 = new StaticAgentConfiguration((String) null, 0, \":\", 12000, (-36039));\n      staticAgentConfiguration0.getHqHost();\n      assertEquals(0, staticAgentConfiguration0.getHqPort());\n      assertEquals((-36039), staticAgentConfiguration0.getProjectId());\n      assertEquals(12000, staticAgentConfiguration0.getConnectTimeout());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 19:33:54 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class StaticAgentConfiguration_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"StaticAgentConfiguration\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmppmua1w3f\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StaticAgentConfiguration_ESTest_scaffolding.class.getClassLoader() ,\n      \"StaticAgentConfiguration\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StaticAgentConfiguration_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"StaticAgentConfiguration\"\n    );\n  }\n}\n", "class_idx": 44}
{"class_name": "ReflectionUtil", "java_source": "/*******************************************************************************\n * Copyright (c) 2006-2010 eBay Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *******************************************************************************/\n\nimport java.lang.reflect.Constructor;\n\n/** The Class ReflectionUtil. */\npublic class ReflectionUtil {\n  private ReflectionUtil() {\n    // no instances\n  }\n\n  /**\n   * Load class.\n   *\n   * @param <T> the generic type\n   * @param className the class name\n   * @param targetType the target type\n   * @param cl the cl\n   * @return the class\n   * @throws Exception the exception\n   */\n  public static <T> Class<T> loadClass(String className, Class<T> targetType, ClassLoader cl)\n      throws Exception {\n    return loadClass(className, targetType, false, cl);\n  }\n\n  /**\n   * Load class.\n   *\n   * @param <T> the generic type\n   * @param className the class name\n   * @param targetType the target type\n   * @param ignoreMissingClass the ignore missing class\n   * @param cl the cl\n   * @return the class\n   * @throws Exception the exception\n   */\n  public static <T> Class<T> loadClass(\n      String className, Class<T> targetType, boolean ignoreMissingClass, ClassLoader cl)\n      throws Exception {\n    String targetTypeName;\n    if (targetType != null) {\n      targetTypeName = targetType.getName();\n    } else {\n      targetTypeName = \"(unspecified assignment type)\";\n    }\n\n    Class clazz;\n    try {\n      clazz = Class.forName(className, true, cl);\n    } catch (NoClassDefFoundError err) {\n      throw new Exception(err);\n      // throw new Exception(SystemErrorTypes.SVC_FACTORY_INST_NOT_FOUND,\n      //\t\tnew Object[] {targetTypeName, className}, err);\n    } catch (ClassNotFoundException e) {\n      if (ignoreMissingClass) {\n        return null;\n      }\n      throw new Exception(e);\n      //\t\t\tthrow new ServiceException(SystemErrorTypes.SVC_FACTORY_INST_NOT_FOUND,\n      //\t\t\t\tnew Object[] {targetTypeName, className}, e);\n    }\n\n    if (targetType != null && !targetType.isAssignableFrom(clazz)) {\n      throw new Exception(\n          \"instance cannot cast - targetTypeName: \" + targetTypeName + \", className: \" + className);\n      //\t\t\tthrow new ServiceException(SystemErrorTypes.SVC_FACTORY_INST_CANNOT_CAST,\n      //\t\t\t\tnew Object[] {targetTypeName, className});\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    Class<T> result = clazz;\n\n    return result;\n  }\n\n  /**\n   * Creates the instance.\n   *\n   * @param <T> the generic type\n   * @param className the class name\n   * @param targetType the target type\n   * @param cl the cl\n   * @return the t\n   * @throws Exception the exception\n   */\n  public static <T> T createInstance(String className, Class<T> targetType, ClassLoader cl)\n      throws Exception {\n    return createInstance(className, targetType, cl, null, null);\n  }\n\n  /**\n   * Creates the instance.\n   *\n   * @param <T> the generic type\n   * @param className the class name\n   * @param targetType the target type\n   * @param cl the cl\n   * @param paramTypes the param types\n   * @param params the params\n   * @return the t\n   * @throws Exception the exception\n   */\n  public static <T> T createInstance(\n      String className, Class<T> targetType, ClassLoader cl, Class[] paramTypes, Object[] params)\n      throws Exception {\n    Class<T> clazz = loadClass(className, targetType, cl);\n\n    return createInstance(clazz, paramTypes, params);\n  }\n\n  /**\n   * Creates the instance.\n   *\n   * @param <T> the generic type\n   * @param clazz the clazz\n   * @return the t\n   * @throws Exception the exception\n   */\n  public static <T> T createInstance(Class<T> clazz) throws Exception {\n    return createInstance(clazz, null, null);\n  }\n\n  /**\n   * Creates the instance.\n   *\n   * @param <T> the generic type\n   * @param clazz the clazz\n   * @param paramTypes the param types\n   * @param params the params\n   * @return the t\n   * @throws Exception the exception\n   */\n  public static <T> T createInstance(Class<T> clazz, Class[] paramTypes, Object[] params)\n      throws Exception {\n    Object result;\n    try {\n      if (paramTypes != null) {\n        Constructor con = clazz.getConstructor(paramTypes);\n        result = con.newInstance(params);\n      } else {\n        result = clazz.newInstance();\n      }\n    } catch (IllegalAccessException e) {\n      throw new Exception(e);\n      //\t\t\tthrow new ServiceException(SystemErrorTypes.SVC_FACTORY_INST_ILLEGAL_ACCESS,\n      //\t\t\t\tnew Object[] {clazz.getName()}, e);\n    } catch (Exception e) {\n      throw new Exception(e);\n      //\t\t\tthrow new ServiceException(SystemErrorTypes.SVC_FACTORY_INST_EXCEPTION,\n      //\t\t\t\tnew Object[] {clazz.getName()}, e);\n    }\n\n    // type cast cannot be done, but we've checked isAssignableFrom\n    @SuppressWarnings(\"unchecked\")\n    T result2 = (T) result;\n\n    return result2;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ReflectionUtil \n.super java/lang/Object \n\n.method private <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 17 \n            L4 19 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static loadClass : (Ljava/lang/String;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class; \n    .code stack 4 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     iconst_0 \nL3:     aload_2 \nL4:     invokestatic Method ReflectionUtil loadClass (Ljava/lang/String;Ljava/lang/Class;ZLjava/lang/ClassLoader;)Ljava/lang/Class; \nL7:     areturn \nL8:     \n        .linenumbertable \n            L0 34 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/Exception \n    .signature '<T:Ljava/lang/Object;>(Ljava/lang/String;Ljava/lang/Class<TT;>;Ljava/lang/ClassLoader;)Ljava/lang/Class<TT;>;' \n.end method \n\n.method public static loadClass : (Ljava/lang/String;Ljava/lang/Class;ZLjava/lang/ClassLoader;)Ljava/lang/Class; \n    .code stack 4 locals 7 \nL0:     aload_1 \nL1:     ifnull L13 \nL4:     aload_1 \nL5:     invokevirtual Method java/lang/Class getName ()Ljava/lang/String; \nL8:     astore 4 \nL10:    goto L17 \n\n        .stack same \nL13:    ldc '(unspecified assignment type)' \nL15:    astore 4 \n        .catch java/lang/NoClassDefFoundError from L17 to L25 using L28 \n        .catch java/lang/ClassNotFoundException from L17 to L25 using L40 \n\n        .stack append Object java/lang/String \nL17:    aload_0 \nL18:    iconst_1 \nL19:    aload_3 \nL20:    invokestatic Method java/lang/Class forName (Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class; \nL23:    astore 5 \nL25:    goto L58 \n\n        .stack stack_1 Object java/lang/NoClassDefFoundError \nL28:    astore 6 \nL30:    new java/lang/Exception \nL33:    dup \nL34:    aload 6 \nL36:    invokespecial Method java/lang/Exception <init> (Ljava/lang/Throwable;)V \nL39:    athrow \n\n        .stack stack_1 Object java/lang/ClassNotFoundException \nL40:    astore 6 \nL42:    iload_2 \nL43:    ifeq L48 \nL46:    aconst_null \nL47:    areturn \n\n        .stack append Top Object java/lang/ClassNotFoundException \nL48:    new java/lang/Exception \nL51:    dup \nL52:    aload 6 \nL54:    invokespecial Method java/lang/Exception <init> (Ljava/lang/Throwable;)V \nL57:    athrow \n\n        .stack full \n            locals Object java/lang/String Object java/lang/Class Integer Object java/lang/ClassLoader Object java/lang/String Object java/lang/Class \n            stack \n        .end stack \nL58:    aload_1 \nL59:    ifnull L108 \nL62:    aload_1 \nL63:    aload 5 \nL65:    invokevirtual Method java/lang/Class isAssignableFrom (Ljava/lang/Class;)Z \nL68:    ifne L108 \nL71:    new java/lang/Exception \nL74:    dup \nL75:    new java/lang/StringBuilder \nL78:    dup \nL79:    invokespecial Method java/lang/StringBuilder <init> ()V \nL82:    ldc 'instance cannot cast - targetTypeName: ' \nL84:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL87:    aload 4 \nL89:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL92:    ldc ', className: ' \nL94:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL97:    aload_0 \nL98:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL101:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL104:   invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL107:   athrow \n\n        .stack same \nL108:   aload 5 \nL110:   astore 6 \nL112:   aload 6 \nL114:   areturn \nL115:   \n        .linenumbertable \n            L0 53 \n            L4 54 \n            L13 56 \n            L17 61 \n            L25 73 \n            L28 62 \n            L30 63 \n            L40 66 \n            L42 67 \n            L46 68 \n            L48 70 \n            L58 75 \n            L71 76 \n            L108 83 \n            L112 85 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/Exception \n    .signature '<T:Ljava/lang/Object;>(Ljava/lang/String;Ljava/lang/Class<TT;>;ZLjava/lang/ClassLoader;)Ljava/lang/Class<TT;>;' \n.end method \n\n.method public static createInstance : (Ljava/lang/String;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Object; \n    .code stack 5 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     aload_2 \nL3:     aconst_null \nL4:     aconst_null \nL5:     invokestatic Method ReflectionUtil createInstance (Ljava/lang/String;Ljava/lang/Class;Ljava/lang/ClassLoader;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object; \nL8:     areturn \nL9:     \n        .linenumbertable \n            L0 101 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/Exception \n    .signature '<T:Ljava/lang/Object;>(Ljava/lang/String;Ljava/lang/Class<TT;>;Ljava/lang/ClassLoader;)TT;' \n.end method \n\n.method public static createInstance : (Ljava/lang/String;Ljava/lang/Class;Ljava/lang/ClassLoader;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object; \n    .code stack 3 locals 6 \nL0:     aload_0 \nL1:     aload_1 \nL2:     aload_2 \nL3:     invokestatic Method ReflectionUtil loadClass (Ljava/lang/String;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class; \nL6:     astore 5 \nL8:     aload 5 \nL10:    aload_3 \nL11:    aload 4 \nL13:    invokestatic Method ReflectionUtil createInstance (Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object; \nL16:    areturn \nL17:    \n        .linenumbertable \n            L0 120 \n            L8 122 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/Exception \n    .signature '<T:Ljava/lang/Object;>(Ljava/lang/String;Ljava/lang/Class<TT;>;Ljava/lang/ClassLoader;[Ljava/lang/Class;[Ljava/lang/Object;)TT;' \n.end method \n\n.method public static createInstance : (Ljava/lang/Class;)Ljava/lang/Object; \n    .code stack 3 locals 1 \nL0:     aload_0 \nL1:     aconst_null \nL2:     aconst_null \nL3:     invokestatic Method ReflectionUtil createInstance (Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object; \nL6:     areturn \nL7:     \n        .linenumbertable \n            L0 136 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/Exception \n    .signature '<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;)TT;' \n.end method \n\n.method public static createInstance : (Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object; \n    .code stack 3 locals 5 \n        .catch java/lang/IllegalAccessException from L0 to L26 using L29 \n        .catch java/lang/Exception from L0 to L26 using L41 \nL0:     aload_1 \nL1:     ifnull L21 \nL4:     aload_0 \nL5:     aload_1 \nL6:     invokevirtual Method java/lang/Class getConstructor ([Ljava/lang/Class;)Ljava/lang/reflect/Constructor; \nL9:     astore 4 \nL11:    aload 4 \nL13:    aload_2 \nL14:    invokevirtual Method java/lang/reflect/Constructor newInstance ([Ljava/lang/Object;)Ljava/lang/Object; \nL17:    astore_3 \nL18:    goto L26 \n\n        .stack same \nL21:    aload_0 \nL22:    invokevirtual Method java/lang/Class newInstance ()Ljava/lang/Object; \nL25:    astore_3 \n\n        .stack append Object java/lang/Object \nL26:    goto L53 \n\n        .stack full \n            locals Object java/lang/Class Object [Ljava/lang/Class; Object [Ljava/lang/Object; \n            stack Object java/lang/IllegalAccessException \n        .end stack \nL29:    astore 4 \nL31:    new java/lang/Exception \nL34:    dup \nL35:    aload 4 \nL37:    invokespecial Method java/lang/Exception <init> (Ljava/lang/Throwable;)V \nL40:    athrow \n\n        .stack stack_1 Object java/lang/Exception \nL41:    astore 4 \nL43:    new java/lang/Exception \nL46:    dup \nL47:    aload 4 \nL49:    invokespecial Method java/lang/Exception <init> (Ljava/lang/Throwable;)V \nL52:    athrow \n\n        .stack append Object java/lang/Object \nL53:    aload_3 \nL54:    astore 4 \nL56:    aload 4 \nL58:    areturn \nL59:    \n        .linenumbertable \n            L0 154 \n            L4 155 \n            L11 156 \n            L18 157 \n            L21 158 \n            L26 168 \n            L29 160 \n            L31 161 \n            L41 164 \n            L43 165 \n            L53 172 \n            L56 174 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/Exception \n    .signature '<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;[Ljava/lang/Class;[Ljava/lang/Object;)TT;' \n.end method \n.sourcefile 'ReflectionUtil.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 20:06:26 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.lang.reflect.Array;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ReflectionUtil_ESTest extends ReflectionUtil_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Class<String> class0 = String.class;\n      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 4);\n      try { \n        ReflectionUtil.createInstance(\"ReflectionUtil\", class0, classLoader0, (Class[]) classArray0, (Object[]) classArray0);\n        fail(\"Expecting exception: Exception\");\n      \n      } catch(Exception e) {\n         //\n         // instance cannot cast - targetTypeName: java.lang.String, className: ReflectionUtil\n         //\n         verifyException(\"ReflectionUtil\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 1);\n      try { \n        ReflectionUtil.createInstance((String) null, (Class<String>) null, classLoader0, (Class[]) classArray0, (Object[]) classArray0);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Class<Object> class0 = Object.class;\n      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 0);\n      Object object0 = ReflectionUtil.createInstance(class0, (Class[]) classArray0, (Object[]) classArray0);\n      assertNotNull(object0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Class<Object> class0 = Object.class;\n      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n      Class<Object> class1 = ReflectionUtil.loadClass(\"ReflectionUtil\", class0, classLoader0);\n      try { \n        ReflectionUtil.createInstance(\"ReflectionUtil\", class1, classLoader0);\n        fail(\"Expecting exception: Exception\");\n      \n      } catch(Exception e) {\n         //\n         // java.lang.IllegalAccessException: Class ReflectionUtil can not access a member of class ReflectionUtil with modifiers \\\"private\\\"\n         //\n         verifyException(\"ReflectionUtil\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Class<Object> class0 = Object.class;\n      Object object0 = ReflectionUtil.createInstance(class0, (Class[]) null, (Object[]) null);\n      assertNotNull(object0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 9);\n      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n      try { \n        ReflectionUtil.loadClass(\"\", classArray0[1], false, classLoader0);\n        fail(\"Expecting exception: Exception\");\n      \n      } catch(Exception e) {\n         //\n         // java.lang.ClassNotFoundException: \n         //\n         verifyException(\"ReflectionUtil\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      Class<Object> class0 = Object.class;\n      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 5);\n      try { \n        ReflectionUtil.createInstance(class0, (Class[]) classArray0, (Object[]) classArray0);\n        fail(\"Expecting exception: Exception\");\n      \n      } catch(Exception e) {\n         //\n         // java.lang.NoSuchMethodException: java.lang.Object.<init>(null, null, null, null, null)\n         //\n         verifyException(\"ReflectionUtil\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      Class<Object> class0 = Object.class;\n      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n      ReflectionUtil.loadClass(\"ReflectionUtil\", class0, false, classLoader0);\n      Class<String> class1 = String.class;\n      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 8);\n      try { \n        ReflectionUtil.createInstance(\" X2|#=ZMZxp}R\u007f\", class1, classLoader0, (Class[]) classArray0, (Object[]) classArray0);\n        fail(\"Expecting exception: Exception\");\n      \n      } catch(Exception e) {\n         //\n         // java.lang.ClassNotFoundException:  X2|#=ZMZxp}R\u007f\n         //\n         verifyException(\"ReflectionUtil\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      Class<Integer> class0 = Integer.class;\n      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n      Class<Integer> class1 = ReflectionUtil.loadClass(\"E(54 iAsxi'5c'h1}\", class0, true, classLoader0);\n      assertNull(class1);\n  }\n\n  @Test(timeout = 4000)\n  public void test9()  throws Throwable  {\n      Class<Object> class0 = Object.class;\n      Object object0 = ReflectionUtil.createInstance(class0);\n      assertNotNull(object0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 20:06:26 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ReflectionUtil_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ReflectionUtil\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpbct02zy6\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ReflectionUtil_ESTest_scaffolding.class.getClassLoader() ,\n      \"ReflectionUtil\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ReflectionUtil_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ReflectionUtil\"\n    );\n  }\n}\n", "class_idx": 45}
{"class_name": "OptionalsFromEmptyStreams", "java_source": "// streams/OptionalsFromEmptyStreams.java\n// (c)2017 MindView LLC: see Copyright.txt\n// We make no guarantees that this code is fit for any purpose.\n// Visit http://OnJava8.com for more book information.\nimport java.util.*;\nimport java.util.stream.*;\n\nclass OptionalsFromEmptyStreams {\n  public static void main(String[] args) {\n    System.out.println(Stream.<String>empty().findFirst());\n    System.out.println(Stream.<String>empty().findAny());\n    System.out.println(Stream.<String>empty().max(String.CASE_INSENSITIVE_ORDER));\n    System.out.println(Stream.<String>empty().min(String.CASE_INSENSITIVE_ORDER));\n    System.out.println(Stream.<String>empty().reduce((s1, s2) -> s1 + s2));\n    System.out.println(IntStream.empty().average());\n  }\n}\n/* Output:\nOptional.empty\nOptional.empty\nOptional.empty\nOptional.empty\nOptional.empty\nOptionalDouble.empty\n*/\n", "jasm_code": ".version 52 0 \n.class super OptionalsFromEmptyStreams \n.super java/lang/Object \n\n.method <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     invokestatic InterfaceMethod java/util/stream/Stream empty ()Ljava/util/stream/Stream; \nL6:     invokeinterface InterfaceMethod java/util/stream/Stream findFirst ()Ljava/util/Optional; 1 \nL11:    invokevirtual Method java/io/PrintStream println (Ljava/lang/Object;)V \nL14:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL17:    invokestatic InterfaceMethod java/util/stream/Stream empty ()Ljava/util/stream/Stream; \nL20:    invokeinterface InterfaceMethod java/util/stream/Stream findAny ()Ljava/util/Optional; 1 \nL25:    invokevirtual Method java/io/PrintStream println (Ljava/lang/Object;)V \nL28:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL31:    invokestatic InterfaceMethod java/util/stream/Stream empty ()Ljava/util/stream/Stream; \nL34:    getstatic Field java/lang/String CASE_INSENSITIVE_ORDER Ljava/util/Comparator; \nL37:    invokeinterface InterfaceMethod java/util/stream/Stream max (Ljava/util/Comparator;)Ljava/util/Optional; 2 \nL42:    invokevirtual Method java/io/PrintStream println (Ljava/lang/Object;)V \nL45:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL48:    invokestatic InterfaceMethod java/util/stream/Stream empty ()Ljava/util/stream/Stream; \nL51:    getstatic Field java/lang/String CASE_INSENSITIVE_ORDER Ljava/util/Comparator; \nL54:    invokeinterface InterfaceMethod java/util/stream/Stream min (Ljava/util/Comparator;)Ljava/util/Optional; 2 \nL59:    invokevirtual Method java/io/PrintStream println (Ljava/lang/Object;)V \nL62:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL65:    invokestatic InterfaceMethod java/util/stream/Stream empty ()Ljava/util/stream/Stream; \nL68:    invokedynamic [id10] \nL73:    invokeinterface InterfaceMethod java/util/stream/Stream reduce (Ljava/util/function/BinaryOperator;)Ljava/util/Optional; 2 \nL78:    invokevirtual Method java/io/PrintStream println (Ljava/lang/Object;)V \nL81:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL84:    invokestatic InterfaceMethod java/util/stream/IntStream empty ()Ljava/util/stream/IntStream; \nL87:    invokeinterface InterfaceMethod java/util/stream/IntStream average ()Ljava/util/OptionalDouble; 1 \nL92:    invokevirtual Method java/io/PrintStream println (Ljava/lang/Object;)V \nL95:    return \nL96:    \n        .linenumbertable \n            L0 10 \n            L6 11 \n            L11 10 \n            L14 12 \n            L20 13 \n            L25 12 \n            L28 14 \n            L37 15 \n            L42 14 \n            L45 16 \n            L54 17 \n            L59 16 \n            L62 18 \n            L73 19 \n            L78 18 \n            L81 20 \n            L87 21 \n            L92 20 \n            L95 22 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private static synthetic lambda$main$0 : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; \n    .code stack 2 locals 2 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     aload_0 \nL8:     invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL11:    aload_1 \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL18:    areturn \nL19:    \n        .linenumbertable \n            L0 19 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'OptionalsFromEmptyStreams.java' \n.innerclasses \n    java/lang/invoke/MethodHandles$Lookup java/lang/invoke/MethodHandles Lookup public static final \n.end innerclasses \n.const [id10] = InvokeDynamic invokeStatic Method java/lang/invoke/LambdaMetafactory metafactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite; MethodType (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; MethodHandle invokeStatic Method OptionalsFromEmptyStreams lambda$main$0 (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; MethodType (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; : apply ()Ljava/util/function/BinaryOperator; \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 16:29:48 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class OptionalsFromEmptyStreams_ESTest extends OptionalsFromEmptyStreams_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String[] stringArray0 = new String[3];\n      OptionalsFromEmptyStreams.main(stringArray0);\n      assertEquals(3, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      OptionalsFromEmptyStreams optionalsFromEmptyStreams0 = new OptionalsFromEmptyStreams();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 16:29:48 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class OptionalsFromEmptyStreams_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"OptionalsFromEmptyStreams\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpqplpx9b2\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(OptionalsFromEmptyStreams_ESTest_scaffolding.class.getClassLoader() ,\n      \"OptionalsFromEmptyStreams\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(OptionalsFromEmptyStreams_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"OptionalsFromEmptyStreams\"\n    );\n  }\n}\n", "class_idx": 46}
{"class_name": "ExeptionConstants", "java_source": "/**\n * Copyright (c) 2010-2020 Contributors to the openHAB project\n *\n * <p>See the NOTICE file(s) distributed with this work for additional information.\n *\n * <p>This program and the accompanying materials are made available under the terms of the Eclipse\n * Public License 2.0 which is available at http://www.eclipse.org/legal/epl-2.0\n *\n * <p>SPDX-License-Identifier: EPL-2.0\n */\n\n/**\n * The {@link ExeptionConstants} contains the {@link SimpleRequestBuilder} exception strings.\n *\n * @author Michael Ochel - initial contributer\n * @author Matthias Siegele - initial contributer\n */\npublic class ExeptionConstants {\n  public static final String NO_CLASS_ADDED = \"No class added! Please add a class first!\";\n  public static final String CLASS_ALREADY_ADDED =\n      \"A class is already added! You can only add one class!\";\n  public static final String FUNCTION_ALLREADY_ADDED =\n      \"A function is already added! You can only add one function!\";\n  public static final String NO_FUNCTION = \"No function added! Please add a function!\";\n}\n", "jasm_code": ".version 52 0 \n.class public super ExeptionConstants \n.super java/lang/Object \n.field public static final NO_CLASS_ADDED Ljava/lang/String; = 'No class added! Please add a class first!' \n.field public static final CLASS_ALREADY_ADDED Ljava/lang/String; = 'A class is already added! You can only add one class!' \n.field public static final FUNCTION_ALLREADY_ADDED Ljava/lang/String; = 'A function is already added! You can only add one function!' \n.field public static final NO_FUNCTION Ljava/lang/String; = 'No function added! Please add a function!' \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ExeptionConstants.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 22:45:19 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ExeptionConstants_ESTest extends ExeptionConstants_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ExeptionConstants exeptionConstants0 = new ExeptionConstants();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 22:45:19 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ExeptionConstants_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ExeptionConstants\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpzr2odhkw\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ExeptionConstants_ESTest_scaffolding.class.getClassLoader() ,\n      \"ExeptionConstants\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ExeptionConstants_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ExeptionConstants\"\n    );\n  }\n}\n", "class_idx": 47}
{"class_name": "GlobalMutex", "java_source": "/*\n * Copyright (c) 2008-2017, Hazelcast, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport java.io.Closeable;\n\n/**\n * This is used in Java 6 only. It implements the {@link Closeable} to have a consistent usage with\n * fine grained mutexes provided by {@link com.hazelcast.util.ContextMutexFactory}\n */\npublic final class GlobalMutex implements Closeable {\n\n  @Override\n  public void close() {}\n}\n", "jasm_code": ".version 52 0 \n.class public final super GlobalMutex \n.super java/lang/Object \n.implements java/io/Closeable \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 25 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public close : ()V \n    .code stack 0 locals 1 \nL0:     return \nL1:     \n        .linenumbertable \n            L0 29 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'GlobalMutex.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 07:09:29 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class GlobalMutex_ESTest extends GlobalMutex_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      GlobalMutex globalMutex0 = new GlobalMutex();\n      globalMutex0.close();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 07:09:29 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class GlobalMutex_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"GlobalMutex\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpuiyq_klo\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(GlobalMutex_ESTest_scaffolding.class.getClassLoader() ,\n      \"GlobalMutex\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(GlobalMutex_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"GlobalMutex\"\n    );\n  }\n}\n", "class_idx": 48}
{"class_name": "DateTimeParseException", "java_source": "/**\n * Exception thrown when a date/time string cannot be parsed\n *\n * @author Steve Jones\n */\npublic class DateTimeParseException extends Exception {\n\n  /** The serial version UID */\n  private static final long serialVersionUID = 4894503384132198690L;\n\n  /**\n   * Simple constructor\n   *\n   * @param message The error message\n   */\n  public DateTimeParseException(String message) {\n    super(message);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super DateTimeParseException \n.super java/lang/Exception \n.field private static final serialVersionUID J = 4894503384132198690L \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 23 \n            L5 24 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'DateTimeParseException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 20:51:01 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class DateTimeParseException_ESTest extends DateTimeParseException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      DateTimeParseException dateTimeParseException0 = new DateTimeParseException(\"\");\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 20:51:01 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class DateTimeParseException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"DateTimeParseException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp3hb075sp\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DateTimeParseException_ESTest_scaffolding.class.getClassLoader() ,\n      \"DateTimeParseException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DateTimeParseException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"DateTimeParseException\"\n    );\n  }\n}\n", "class_idx": 49}
{"class_name": "UpdateAction", "java_source": "public class UpdateAction {\n\n  protected int priority;\n}\n", "jasm_code": ".version 52 0 \n.class public super UpdateAction \n.super java/lang/Object \n.field protected priority I \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'UpdateAction.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 20:58:13 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class UpdateAction_ESTest extends UpdateAction_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      UpdateAction updateAction0 = new UpdateAction();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 20:58:13 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class UpdateAction_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"UpdateAction\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpuophhn2k\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(UpdateAction_ESTest_scaffolding.class.getClassLoader() ,\n      \"UpdateAction\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(UpdateAction_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"UpdateAction\"\n    );\n  }\n}\n", "class_idx": 50}
{"class_name": "ArrayToStringPositiveCases", "java_source": "/*\n * Copyright 2012 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @author adgar@google.com (Mike Edgar)\n */\npublic class ArrayToStringPositiveCases {\n\n  public void intArray() {\n    int[] a = {1, 2, 3};\n\n    // BUG: Suggestion includes \"Arrays.toString(a)\"\n    if (a.toString().isEmpty()) {\n      System.out.println(\"int array string is empty!\");\n    } else {\n      System.out.println(\"int array string is nonempty!\");\n    }\n  }\n\n  public void objectArray() {\n    Object[] a = new Object[3];\n\n    // BUG: Suggestion includes \"Arrays.toString(a)\"\n    if (a.toString().isEmpty()) {\n      System.out.println(\"object array string is empty!\");\n    } else {\n      System.out.println(\"object array string is nonempty!\");\n    }\n  }\n\n  public void firstMethodCall() {\n    String s = \"hello\";\n\n    // BUG: Suggestion includes \"Arrays.toString(s.toCharArray())\"\n    if (s.toCharArray().toString().isEmpty()) {\n      System.out.println(\"char array string is empty!\");\n    } else {\n      System.out.println(\"char array string is nonempty!\");\n    }\n  }\n\n  public void secondMethodCall() {\n    char[] a = new char[3];\n\n    // BUG: Suggestion includes \"Arrays.toString(a)\"\n    if (a.toString().isEmpty()) {\n      System.out.println(\"array string is empty!\");\n    } else {\n      System.out.println(\"array string is nonempty!\");\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ArrayToStringPositiveCases \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public intArray : ()V \n    .code stack 4 locals 2 \nL0:     iconst_3 \nL1:     newarray int \nL3:     dup \nL4:     iconst_0 \nL5:     iconst_1 \nL6:     iastore \nL7:     dup \nL8:     iconst_1 \nL9:     iconst_2 \nL10:    iastore \nL11:    dup \nL12:    iconst_2 \nL13:    iconst_3 \nL14:    iastore \nL15:    astore_1 \nL16:    aload_1 \nL17:    invokevirtual Method java/lang/Object toString ()Ljava/lang/String; \nL20:    invokevirtual Method java/lang/String isEmpty ()Z \nL23:    ifeq L37 \nL26:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL29:    ldc 'int array string is empty!' \nL31:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL34:    goto L45 \n\n        .stack append Object [I \nL37:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL40:    ldc 'int array string is nonempty!' \nL42:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \n\n        .stack same \nL45:    return \nL46:    \n        .linenumbertable \n            L0 26 \n            L16 29 \n            L26 30 \n            L37 32 \n            L45 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public objectArray : ()V \n    .code stack 2 locals 2 \nL0:     iconst_3 \nL1:     anewarray java/lang/Object \nL4:     astore_1 \nL5:     aload_1 \nL6:     invokevirtual Method java/lang/Object toString ()Ljava/lang/String; \nL9:     invokevirtual Method java/lang/String isEmpty ()Z \nL12:    ifeq L26 \nL15:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL18:    ldc 'object array string is empty!' \nL20:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL23:    goto L34 \n\n        .stack append Object [Ljava/lang/Object; \nL26:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL29:    ldc 'object array string is nonempty!' \nL31:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \n\n        .stack same \nL34:    return \nL35:    \n        .linenumbertable \n            L0 37 \n            L5 40 \n            L15 41 \n            L26 43 \n            L34 45 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public firstMethodCall : ()V \n    .code stack 2 locals 2 \nL0:     ldc 'hello' \nL2:     astore_1 \nL3:     aload_1 \nL4:     invokevirtual Method java/lang/String toCharArray ()[C \nL7:     invokevirtual Method java/lang/Object toString ()Ljava/lang/String; \nL10:    invokevirtual Method java/lang/String isEmpty ()Z \nL13:    ifeq L27 \nL16:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL19:    ldc 'char array string is empty!' \nL21:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL24:    goto L35 \n\n        .stack append Object java/lang/String \nL27:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL30:    ldc 'char array string is nonempty!' \nL32:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \n\n        .stack same \nL35:    return \nL36:    \n        .linenumbertable \n            L0 48 \n            L3 51 \n            L16 52 \n            L27 54 \n            L35 56 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public secondMethodCall : ()V \n    .code stack 2 locals 2 \nL0:     iconst_3 \nL1:     newarray char \nL3:     astore_1 \nL4:     aload_1 \nL5:     invokevirtual Method java/lang/Object toString ()Ljava/lang/String; \nL8:     invokevirtual Method java/lang/String isEmpty ()Z \nL11:    ifeq L25 \nL14:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL17:    ldc 'array string is empty!' \nL19:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL22:    goto L33 \n\n        .stack append Object [C \nL25:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL28:    ldc 'array string is nonempty!' \nL30:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \n\n        .stack same \nL33:    return \nL34:    \n        .linenumbertable \n            L0 59 \n            L4 62 \n            L14 63 \n            L25 65 \n            L33 67 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ArrayToStringPositiveCases.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 13:04:53 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ArrayToStringPositiveCases_ESTest extends ArrayToStringPositiveCases_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ArrayToStringPositiveCases arrayToStringPositiveCases0 = new ArrayToStringPositiveCases();\n      arrayToStringPositiveCases0.secondMethodCall();\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      ArrayToStringPositiveCases arrayToStringPositiveCases0 = new ArrayToStringPositiveCases();\n      arrayToStringPositiveCases0.firstMethodCall();\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      ArrayToStringPositiveCases arrayToStringPositiveCases0 = new ArrayToStringPositiveCases();\n      arrayToStringPositiveCases0.objectArray();\n      arrayToStringPositiveCases0.intArray();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 13:04:53 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ArrayToStringPositiveCases_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ArrayToStringPositiveCases\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp2ownmq40\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayToStringPositiveCases_ESTest_scaffolding.class.getClassLoader() ,\n      \"ArrayToStringPositiveCases\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayToStringPositiveCases_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ArrayToStringPositiveCases\"\n    );\n  }\n}\n", "class_idx": 51}
{"class_name": "Writer", "java_source": "import java.io.*;\n\npublic class Writer {\n\n  // We will use a PrintWriter to write character strings to a file.\n  private PrintWriter outToFile = null;\n  // We will read from standard input as usual.\n  private BufferedReader userInput = null;\n\n  // Constructor\n  public Writer() {\n    try {\n      // Instantiate the PrintWriter, passing in the filename. The second argument\n      // to the FileWriter constructor expresses our wish to append new data to\n      // the file rather than overwriting the contents of the file.\n      outToFile = new PrintWriter(new FileWriter(\"myfile\", true));\n      userInput = new BufferedReader(new InputStreamReader(System.in));\n\n      // Prompt the user to enter text.\n      System.out.print(\"Enter a line of text :/> \");\n\n      // Read the text...\n      String lineOfText = userInput.readLine();\n\n      // ...and write it to the file.\n      outToFile.println(lineOfText);\n\n      // If you don't close the output stream, you should at least call the 'flush()'\n      // method to ensure that all data in the buffer is written to the destination\n      // before the process exits.\n      outToFile.close();\n\n    } catch (IOException ioe) {\n      System.out.println(\"Problem with IO: \" + ioe.getMessage());\n    }\n  }\n\n  public static void main(String args[]) {\n    // Instantiate the main class as ususal.\n    new Writer();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Writer \n.super java/lang/Object \n.field private outToFile Ljava/io/PrintWriter; \n.field private userInput Ljava/io/BufferedReader; \n\n.method public <init> : ()V \n    .code stack 7 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aconst_null \nL6:     putfield Field Writer outToFile Ljava/io/PrintWriter; \nL9:     aload_0 \nL10:    aconst_null \nL11:    putfield Field Writer userInput Ljava/io/BufferedReader; \n        .catch java/io/IOException from L14 to L87 using L90 \nL14:    aload_0 \nL15:    new java/io/PrintWriter \nL18:    dup \nL19:    new java/io/FileWriter \nL22:    dup \nL23:    ldc 'myfile' \nL25:    iconst_1 \nL26:    invokespecial Method java/io/FileWriter <init> (Ljava/lang/String;Z)V \nL29:    invokespecial Method java/io/PrintWriter <init> (Ljava/io/Writer;)V \nL32:    putfield Field Writer outToFile Ljava/io/PrintWriter; \nL35:    aload_0 \nL36:    new java/io/BufferedReader \nL39:    dup \nL40:    new java/io/InputStreamReader \nL43:    dup \nL44:    getstatic Field java/lang/System in Ljava/io/InputStream; \nL47:    invokespecial Method java/io/InputStreamReader <init> (Ljava/io/InputStream;)V \nL50:    invokespecial Method java/io/BufferedReader <init> (Ljava/io/Reader;)V \nL53:    putfield Field Writer userInput Ljava/io/BufferedReader; \nL56:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL59:    ldc 'Enter a line of text :/> ' \nL61:    invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \nL64:    aload_0 \nL65:    getfield Field Writer userInput Ljava/io/BufferedReader; \nL68:    invokevirtual Method java/io/BufferedReader readLine ()Ljava/lang/String; \nL71:    astore_1 \nL72:    aload_0 \nL73:    getfield Field Writer outToFile Ljava/io/PrintWriter; \nL76:    aload_1 \nL77:    invokevirtual Method java/io/PrintWriter println (Ljava/lang/String;)V \nL80:    aload_0 \nL81:    getfield Field Writer outToFile Ljava/io/PrintWriter; \nL84:    invokevirtual Method java/io/PrintWriter close ()V \nL87:    goto L119 \n\n        .stack full \n            locals Object Writer \n            stack Object java/io/IOException \n        .end stack \nL90:    astore_1 \nL91:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL94:    new java/lang/StringBuilder \nL97:    dup \nL98:    invokespecial Method java/lang/StringBuilder <init> ()V \nL101:   ldc 'Problem with IO: ' \nL103:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL106:   aload_1 \nL107:   invokevirtual Method java/io/IOException getMessage ()Ljava/lang/String; \nL110:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL113:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL116:   invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \n\n        .stack same \nL119:   return \nL120:   \n        .linenumbertable \n            L0 11 \n            L4 6 \n            L9 8 \n            L14 16 \n            L35 17 \n            L56 20 \n            L64 23 \n            L72 26 \n            L80 31 \n            L87 35 \n            L90 33 \n            L91 34 \n            L119 36 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 2 locals 1 \nL0:     new Writer \nL3:     dup \nL4:     invokespecial Method Writer <init> ()V \nL7:     pop \nL8:     return \nL9:     \n        .linenumbertable \n            L0 40 \n            L8 41 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Writer.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 06:16:24 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Writer_ESTest extends Writer_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Writer writer0 = new Writer();\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      String[] stringArray0 = new String[3];\n      Writer.main(stringArray0);\n      Writer.main(stringArray0);\n      assertEquals(3, stringArray0.length);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 06:16:24 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Writer_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Writer\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n    org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp1ycgcqg8\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Writer_ESTest_scaffolding.class.getClassLoader() ,\n      \"Writer\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Writer_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Writer\"\n    );\n  }\n}\n", "class_idx": 52}
{"class_name": "PacketRejectedException", "java_source": "/**\n * $RCSfile$ $Revision: 1565 $ $Date: 2005-06-28 19:46:49 -0300 (Tue, 28 Jun 2005) $\n *\n * <p>Copyright (C) 2004-2008 Jive Software. All rights reserved.\n *\n * <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of the License at\n *\n * <p>http://www.apache.org/licenses/LICENSE-2.0\n *\n * <p>Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport java.io.PrintStream;\nimport java.io.PrintWriter;\n\n/**\n * Thrown by a PacketInterceptor when a packet is prevented from being processed. If the packet was\n * received then it will not be processed and a not_allowed error will be sent back to the sender of\n * the packet. If the packet was going to be sent then the sending will be aborted.\n *\n * @see PacketInterceptor\n * @author Gaston Dombiak\n */\npublic class PacketRejectedException extends Exception {\n  private static final long serialVersionUID = 1L;\n\n  private Throwable nestedThrowable = null;\n\n  /**\n   * Text to include in a message that will be sent to the sender of the packet that got rejected.\n   * If no text is specified then no message will be sent to the user.\n   */\n  private String rejectionMessage;\n\n  public PacketRejectedException() {\n    super();\n  }\n\n  public PacketRejectedException(String msg) {\n    super(msg);\n  }\n\n  public PacketRejectedException(Throwable nestedThrowable) {\n    this.nestedThrowable = nestedThrowable;\n  }\n\n  public PacketRejectedException(String msg, Throwable nestedThrowable) {\n    super(msg);\n    this.nestedThrowable = nestedThrowable;\n  }\n\n  @Override\n  public void printStackTrace() {\n    super.printStackTrace();\n    if (nestedThrowable != null) {\n      nestedThrowable.printStackTrace();\n    }\n  }\n\n  @Override\n  public void printStackTrace(PrintStream ps) {\n    super.printStackTrace(ps);\n    if (nestedThrowable != null) {\n      nestedThrowable.printStackTrace(ps);\n    }\n  }\n\n  @Override\n  public void printStackTrace(PrintWriter pw) {\n    super.printStackTrace(pw);\n    if (nestedThrowable != null) {\n      nestedThrowable.printStackTrace(pw);\n    }\n  }\n\n  /**\n   * Retuns the text to include in a message that will be sent to the sender of the packet that got\n   * rejected or <tt>null</tt> if none was defined. If no text was specified then no message will be\n   * sent to the sender of the rejected packet.\n   *\n   * @return the text to include in a message that will be sent to the sender of the packet that got\n   *     rejected or <tt>null</tt> if none was defined.\n   */\n  public String getRejectionMessage() {\n    return rejectionMessage;\n  }\n\n  /**\n   * Sets the text to include in a message that will be sent to the sender of the packet that got\n   * rejected or <tt>null</tt> if no message will be sent to the sender of the rejected packet. Bt\n   * default, no message will be sent.\n   *\n   * @param rejectionMessage the text to include in the notification message for the rejection.\n   */\n  public void setRejectionMessage(String rejectionMessage) {\n    this.rejectionMessage = rejectionMessage;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super PacketRejectedException \n.super java/lang/Exception \n.field private static final serialVersionUID J = 1L \n.field private nestedThrowable Ljava/lang/Throwable; \n.field private rejectionMessage Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Exception <init> ()V \nL4:     aload_0 \nL5:     aconst_null \nL6:     putfield Field PacketRejectedException nestedThrowable Ljava/lang/Throwable; \nL9:     return \nL10:    \n        .linenumbertable \n            L0 46 \n            L4 37 \n            L9 47 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL5:     aload_0 \nL6:     aconst_null \nL7:     putfield Field PacketRejectedException nestedThrowable Ljava/lang/Throwable; \nL10:    return \nL11:    \n        .linenumbertable \n            L0 50 \n            L5 37 \n            L10 51 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/Throwable;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Exception <init> ()V \nL4:     aload_0 \nL5:     aconst_null \nL6:     putfield Field PacketRejectedException nestedThrowable Ljava/lang/Throwable; \nL9:     aload_0 \nL10:    aload_1 \nL11:    putfield Field PacketRejectedException nestedThrowable Ljava/lang/Throwable; \nL14:    return \nL15:    \n        .linenumbertable \n            L0 53 \n            L4 37 \n            L9 54 \n            L14 55 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/Throwable;)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL5:     aload_0 \nL6:     aconst_null \nL7:     putfield Field PacketRejectedException nestedThrowable Ljava/lang/Throwable; \nL10:    aload_0 \nL11:    aload_2 \nL12:    putfield Field PacketRejectedException nestedThrowable Ljava/lang/Throwable; \nL15:    return \nL16:    \n        .linenumbertable \n            L0 58 \n            L5 37 \n            L10 59 \n            L15 60 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public printStackTrace : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Exception printStackTrace ()V \nL4:     aload_0 \nL5:     getfield Field PacketRejectedException nestedThrowable Ljava/lang/Throwable; \nL8:     ifnull L18 \nL11:    aload_0 \nL12:    getfield Field PacketRejectedException nestedThrowable Ljava/lang/Throwable; \nL15:    invokevirtual Method java/lang/Throwable printStackTrace ()V \n\n        .stack same \nL18:    return \nL19:    \n        .linenumbertable \n            L0 64 \n            L4 65 \n            L11 66 \n            L18 68 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public printStackTrace : (Ljava/io/PrintStream;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception printStackTrace (Ljava/io/PrintStream;)V \nL5:     aload_0 \nL6:     getfield Field PacketRejectedException nestedThrowable Ljava/lang/Throwable; \nL9:     ifnull L20 \nL12:    aload_0 \nL13:    getfield Field PacketRejectedException nestedThrowable Ljava/lang/Throwable; \nL16:    aload_1 \nL17:    invokevirtual Method java/lang/Throwable printStackTrace (Ljava/io/PrintStream;)V \n\n        .stack same \nL20:    return \nL21:    \n        .linenumbertable \n            L0 72 \n            L5 73 \n            L12 74 \n            L20 76 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public printStackTrace : (Ljava/io/PrintWriter;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception printStackTrace (Ljava/io/PrintWriter;)V \nL5:     aload_0 \nL6:     getfield Field PacketRejectedException nestedThrowable Ljava/lang/Throwable; \nL9:     ifnull L20 \nL12:    aload_0 \nL13:    getfield Field PacketRejectedException nestedThrowable Ljava/lang/Throwable; \nL16:    aload_1 \nL17:    invokevirtual Method java/lang/Throwable printStackTrace (Ljava/io/PrintWriter;)V \n\n        .stack same \nL20:    return \nL21:    \n        .linenumbertable \n            L0 80 \n            L5 81 \n            L12 82 \n            L20 84 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getRejectionMessage : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field PacketRejectedException rejectionMessage Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 95 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRejectionMessage : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field PacketRejectedException rejectionMessage Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 106 \n            L5 107 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'PacketRejectedException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 00:50:48 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.io.PrintStream;\nimport java.io.PrintWriter;\nimport java.net.URI;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.io.MockFile;\nimport org.evosuite.runtime.mock.java.io.MockPrintStream;\nimport org.evosuite.runtime.mock.java.io.MockPrintWriter;\nimport org.evosuite.runtime.mock.java.lang.MockThrowable;\nimport org.evosuite.runtime.mock.java.net.MockURI;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class PacketRejectedException_ESTest extends PacketRejectedException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      PacketRejectedException packetRejectedException0 = new PacketRejectedException(\"Ot^e\");\n      packetRejectedException0.setRejectionMessage(\"[ac@),l/=O_{\");\n      String string0 = packetRejectedException0.getRejectionMessage();\n      assertEquals(\"[ac@),l/=O_{\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      MockThrowable mockThrowable0 = new MockThrowable(\"\");\n      PacketRejectedException packetRejectedException0 = new PacketRejectedException(mockThrowable0);\n      packetRejectedException0.setRejectionMessage(\"\");\n      String string0 = packetRejectedException0.getRejectionMessage();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      MockThrowable mockThrowable0 = new MockThrowable(\"\");\n      PacketRejectedException packetRejectedException0 = new PacketRejectedException(\"\", mockThrowable0);\n      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(\"B5p`5P2/9\");\n      packetRejectedException0.printStackTrace((PrintWriter) mockPrintWriter0);\n      assertNull(packetRejectedException0.getRejectionMessage());\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      PacketRejectedException packetRejectedException0 = new PacketRejectedException();\n      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(\"q!4Cu%N#83{g]=4z&\");\n      packetRejectedException0.printStackTrace((PrintWriter) mockPrintWriter0);\n      assertNull(packetRejectedException0.getRejectionMessage());\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      MockThrowable mockThrowable0 = new MockThrowable(\"\");\n      PacketRejectedException packetRejectedException0 = new PacketRejectedException(\"\", mockThrowable0);\n      URI uRI0 = MockURI.aFileURI;\n      MockFile mockFile0 = new MockFile(uRI0);\n      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n      packetRejectedException0.printStackTrace((PrintStream) mockPrintStream0);\n      //  // Unstable assertion: assertEquals(379L, mockFile0.length());\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      PacketRejectedException packetRejectedException0 = new PacketRejectedException();\n      MockPrintStream mockPrintStream0 = new MockPrintStream(\"q!4Cu%N#83{g]=4z&\");\n      packetRejectedException0.printStackTrace((PrintStream) mockPrintStream0);\n      assertNull(packetRejectedException0.getRejectionMessage());\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      MockThrowable mockThrowable0 = new MockThrowable(\"\");\n      PacketRejectedException packetRejectedException0 = new PacketRejectedException(\"\", mockThrowable0);\n      packetRejectedException0.printStackTrace();\n      assertNull(packetRejectedException0.getRejectionMessage());\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      MockThrowable mockThrowable0 = new MockThrowable(\"\");\n      PacketRejectedException packetRejectedException0 = new PacketRejectedException(\"\", mockThrowable0);\n      String string0 = packetRejectedException0.getRejectionMessage();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      PacketRejectedException packetRejectedException0 = new PacketRejectedException();\n      packetRejectedException0.printStackTrace();\n      assertNull(packetRejectedException0.getRejectionMessage());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 00:50:48 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class PacketRejectedException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"PacketRejectedException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpgrxkvt89\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(PacketRejectedException_ESTest_scaffolding.class.getClassLoader() ,\n      \"PacketRejectedException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(PacketRejectedException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"PacketRejectedException\"\n    );\n  }\n}\n", "class_idx": 53}
{"class_name": "test", "java_source": "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\nimport java.util.LinkedList;\nimport java.util.List;\n\n/**\n * @author JuanManuel\n */\npublic class test {\n\n  /**\n   * @param args the command line arguments\n   */\n  public static void main(String[] args) {\n    // Singleton uno= new Singleton(); //no es posible hacer esto pues el constructor es privado\n    /*  Singleton dos = Singleton.getInstance();\n    dos.setValor(8);\n    Singleton tres = Singleton.getInstance();\n    System.out.println(tres.getValor());\n    dos.setValor(tres.getValor()*2);\n     System.out.println(dos.toString());\n      System.out.println(tres.toString());\n    */\n    List numeros = new LinkedList();\n    numeros.add(1);\n    numeros.add(3);\n    numeros.add(2);\n    numeros.add(8);\n\n    while (numeros.listIterator().hasNext()) {\n      System.out.println(numeros.listIterator().next());\n      numeros.remove(numeros.listIterator().next());\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super test \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 16 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     new java/util/LinkedList \nL3:     dup \nL4:     invokespecial Method java/util/LinkedList <init> ()V \nL7:     astore_1 \nL8:     aload_1 \nL9:     iconst_1 \nL10:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL13:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL18:    pop \nL19:    aload_1 \nL20:    iconst_3 \nL21:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL24:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL29:    pop \nL30:    aload_1 \nL31:    iconst_2 \nL32:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL35:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL40:    pop \nL41:    aload_1 \nL42:    bipush 8 \nL44:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL47:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL52:    pop \n\n        .stack append Object java/util/List \nL53:    aload_1 \nL54:    invokeinterface InterfaceMethod java/util/List listIterator ()Ljava/util/ListIterator; 1 \nL59:    invokeinterface InterfaceMethod java/util/ListIterator hasNext ()Z 1 \nL64:    ifeq L105 \nL67:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL70:    aload_1 \nL71:    invokeinterface InterfaceMethod java/util/List listIterator ()Ljava/util/ListIterator; 1 \nL76:    invokeinterface InterfaceMethod java/util/ListIterator next ()Ljava/lang/Object; 1 \nL81:    invokevirtual Method java/io/PrintStream println (Ljava/lang/Object;)V \nL84:    aload_1 \nL85:    aload_1 \nL86:    invokeinterface InterfaceMethod java/util/List listIterator ()Ljava/util/ListIterator; 1 \nL91:    invokeinterface InterfaceMethod java/util/ListIterator next ()Ljava/lang/Object; 1 \nL96:    invokeinterface InterfaceMethod java/util/List remove (Ljava/lang/Object;)Z 2 \nL101:   pop \nL102:   goto L53 \n\n        .stack same \nL105:   return \nL106:   \n        .linenumbertable \n            L0 31 \n            L8 32 \n            L19 33 \n            L30 34 \n            L41 35 \n            L53 37 \n            L67 38 \n            L84 39 \n            L105 42 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'test.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 19:58:45 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class test_ESTest extends test_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String[] stringArray0 = new String[0];\n      test.main(stringArray0);\n      assertEquals(0, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      test test0 = new test();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 19:58:45 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class test_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"test\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmptmcvwoxh\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(test_ESTest_scaffolding.class.getClassLoader() ,\n      \"test\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(test_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"test\"\n    );\n  }\n}\n", "class_idx": 54}
{"class_name": "PasswordGroup", "java_source": "public class PasswordGroup {\n  private String groupName;\n\n  public String getGroupName() {\n    return groupName;\n  }\n\n  public void setGroupName(String groupName) {\n    this.groupName = groupName;\n  }\n\n  @Override\n  public String toString() {\n    return \"PasswordGroup [groupName=\" + groupName + \"]\";\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super PasswordGroup \n.super java/lang/Object \n.field private groupName Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getGroupName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field PasswordGroup groupName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 7 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setGroupName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field PasswordGroup groupName Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 11 \n            L5 12 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     ldc 'PasswordGroup [groupName=' \nL9:     invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL12:    aload_0 \nL13:    getfield Field PasswordGroup groupName Ljava/lang/String; \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    ldc ']' \nL21:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    areturn \nL28:    \n        .linenumbertable \n            L0 16 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'PasswordGroup.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 14:12:41 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class PasswordGroup_ESTest extends PasswordGroup_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      PasswordGroup passwordGroup0 = new PasswordGroup();\n      passwordGroup0.setGroupName(\"\");\n      String string0 = passwordGroup0.getGroupName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      PasswordGroup passwordGroup0 = new PasswordGroup();\n      passwordGroup0.setGroupName(\"%@\");\n      String string0 = passwordGroup0.getGroupName();\n      assertEquals(\"%@\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      PasswordGroup passwordGroup0 = new PasswordGroup();\n      String string0 = passwordGroup0.getGroupName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      PasswordGroup passwordGroup0 = new PasswordGroup();\n      String string0 = passwordGroup0.toString();\n      assertEquals(\"PasswordGroup [groupName=null]\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 14:12:41 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class PasswordGroup_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"PasswordGroup\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpi_13dqpd\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(PasswordGroup_ESTest_scaffolding.class.getClassLoader() ,\n      \"PasswordGroup\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(PasswordGroup_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"PasswordGroup\"\n    );\n  }\n}\n", "class_idx": 55}
{"class_name": "ItemIds", "java_source": "public class ItemIds {\n  public static final int THUNDER_WAND = 25000;\n  public static final int SOULLESS_CRYSTAL = 25001;\n  public static final int SOUL_CRYSTAL = 25002;\n  public static final int POWERED_SOUL_CRYSTAL = 25003;\n  public static final int RADIANT_SOUL_CRYSTAL = 25004;\n}\n", "jasm_code": ".version 52 0 \n.class public super ItemIds \n.super java/lang/Object \n.field public static final THUNDER_WAND I = 25000 \n.field public static final SOULLESS_CRYSTAL I = 25001 \n.field public static final SOUL_CRYSTAL I = 25002 \n.field public static final POWERED_SOUL_CRYSTAL I = 25003 \n.field public static final RADIANT_SOUL_CRYSTAL I = 25004 \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ItemIds.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 04:04:41 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ItemIds_ESTest extends ItemIds_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ItemIds itemIds0 = new ItemIds();\n      assertEquals(25003, ItemIds.POWERED_SOUL_CRYSTAL);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 04:04:41 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ItemIds_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ItemIds\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpxs_2ipsx\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ItemIds_ESTest_scaffolding.class.getClassLoader() ,\n      \"ItemIds\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ItemIds_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ItemIds\"\n    );\n  }\n}\n", "class_idx": 56}
{"class_name": "VersionInfo", "java_source": "/**\n * Copyright (C) 2018 Ryszard Wi\u015bniewski <brut.alll@gmail.com> Copyright (C) 2018 Connor Tumbleson\n * <connor.tumbleson@gmail.com>\n *\n * <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of the License at\n *\n * <p>http://www.apache.org/licenses/LICENSE-2.0\n *\n * <p>Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\npublic class VersionInfo {\n  public String versionCode;\n  public String versionName;\n}\n", "jasm_code": ".version 52 0 \n.class public super VersionInfo \n.super java/lang/Object \n.field public versionCode Ljava/lang/String; \n.field public versionName Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 19 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'VersionInfo.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 05:40:38 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class VersionInfo_ESTest extends VersionInfo_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      VersionInfo versionInfo0 = new VersionInfo();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 05:40:38 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class VersionInfo_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"VersionInfo\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpqc3pe1ie\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(VersionInfo_ESTest_scaffolding.class.getClassLoader() ,\n      \"VersionInfo\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(VersionInfo_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"VersionInfo\"\n    );\n  }\n}\n", "class_idx": 57}
{"class_name": "Exp", "java_source": "public abstract class Exp {}\n", "jasm_code": ".version 52 0 \n.class public super abstract Exp \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Exp.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 06:19:55 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Exp_ESTest extends Exp_ESTest_scaffolding {\n  @Test\n  public void notGeneratedAnyTest() {\n    // EvoSuite did not generate any tests\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 06:19:55 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Exp_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Exp\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    /*No java.lang.System property to set*/\n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Exp_ESTest_scaffolding.class.getClassLoader() ,\n      \"Exp\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Exp_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Exp\"\n    );\n  }\n}\n", "class_idx": 58}
{"class_name": "btSliderFlags", "java_source": "/* ----------------------------------------------------------------------------\n * This file was automatically generated by SWIG (http://www.swig.org).\n * Version 3.0.10\n *\n * Do not make changes to this file unless you know what you are doing--modify\n * the SWIG interface file instead.\n * ----------------------------------------------------------------------------- */\n\npublic final class btSliderFlags {\n  public static final int BT_SLIDER_FLAGS_CFM_DIRLIN = (1 << 0);\n  public static final int BT_SLIDER_FLAGS_ERP_DIRLIN = (1 << 1);\n  public static final int BT_SLIDER_FLAGS_CFM_DIRANG = (1 << 2);\n  public static final int BT_SLIDER_FLAGS_ERP_DIRANG = (1 << 3);\n  public static final int BT_SLIDER_FLAGS_CFM_ORTLIN = (1 << 4);\n  public static final int BT_SLIDER_FLAGS_ERP_ORTLIN = (1 << 5);\n  public static final int BT_SLIDER_FLAGS_CFM_ORTANG = (1 << 6);\n  public static final int BT_SLIDER_FLAGS_ERP_ORTANG = (1 << 7);\n  public static final int BT_SLIDER_FLAGS_CFM_LIMLIN = (1 << 8);\n  public static final int BT_SLIDER_FLAGS_ERP_LIMLIN = (1 << 9);\n  public static final int BT_SLIDER_FLAGS_CFM_LIMANG = (1 << 10);\n  public static final int BT_SLIDER_FLAGS_ERP_LIMANG = (1 << 11);\n}\n", "jasm_code": ".version 52 0 \n.class public final super btSliderFlags \n.super java/lang/Object \n.field public static final BT_SLIDER_FLAGS_CFM_DIRLIN I = 1 \n.field public static final BT_SLIDER_FLAGS_ERP_DIRLIN I = 2 \n.field public static final BT_SLIDER_FLAGS_CFM_DIRANG I = 4 \n.field public static final BT_SLIDER_FLAGS_ERP_DIRANG I = 8 \n.field public static final BT_SLIDER_FLAGS_CFM_ORTLIN I = 16 \n.field public static final BT_SLIDER_FLAGS_ERP_ORTLIN I = 32 \n.field public static final BT_SLIDER_FLAGS_CFM_ORTANG I = 64 \n.field public static final BT_SLIDER_FLAGS_ERP_ORTANG I = 128 \n.field public static final BT_SLIDER_FLAGS_CFM_LIMLIN I = 256 \n.field public static final BT_SLIDER_FLAGS_ERP_LIMLIN I = 512 \n.field public static final BT_SLIDER_FLAGS_CFM_LIMANG I = 1024 \n.field public static final BT_SLIDER_FLAGS_ERP_LIMANG I = 2048 \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 11 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'btSliderFlags.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 04:01:21 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class btSliderFlags_ESTest extends btSliderFlags_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      btSliderFlags btSliderFlags0 = new btSliderFlags();\n      assertEquals(16, btSliderFlags.BT_SLIDER_FLAGS_CFM_ORTLIN);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 04:01:21 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class btSliderFlags_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"btSliderFlags\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpr8q3noxm\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(btSliderFlags_ESTest_scaffolding.class.getClassLoader() ,\n      \"btSliderFlags\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(btSliderFlags_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"btSliderFlags\"\n    );\n  }\n}\n", "class_idx": 59}
{"class_name": "User", "java_source": "import java.io.Serializable;\n\n/**\n * @author thiago\n */\npublic class User implements Serializable { // NOPMD - let's keep it simple\n\n  /** Class version, since this is a shared object. */\n  private static final long serialVersionUID = 2L;\n\n  /** Login/username. */\n  public String username;\n\n  /** Domain/instance. */\n  public String domain;\n\n  /** Generic placeholder to be replaced. */\n  public String credential;\n\n  /** User's fullname. Shall be replaced with something better. */\n  public String fullname;\n}\n", "jasm_code": ".version 52 0 \n.class public super User \n.super java/lang/Object \n.implements java/io/Serializable \n.field private static final serialVersionUID J = 2L \n.field public username Ljava/lang/String; \n.field public domain Ljava/lang/String; \n.field public credential Ljava/lang/String; \n.field public fullname Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 9 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'User.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 10:23:04 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class User_ESTest extends User_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      User user0 = new User();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 10:23:04 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class User_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"User\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp2bvjj4rd\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(User_ESTest_scaffolding.class.getClassLoader() ,\n      \"User\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(User_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"User\"\n    );\n  }\n}\n", "class_idx": 60}
{"class_name": "CommonWriter", "java_source": "import java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class CommonWriter {\n  public void writeStrings(String path, List<String> source) throws IOException {\n    File file = new File(path);\n\n    if (!file.exists()) file.createNewFile();\n\n    FileWriter fw = new FileWriter(file.getAbsoluteFile());\n    BufferedWriter bw = new BufferedWriter(fw);\n\n    for (String line : source) {\n      bw.write(line);\n      bw.newLine();\n    }\n\n    bw.close();\n    fw.close();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super CommonWriter \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 9 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public writeStrings : (Ljava/lang/String;Ljava/util/List;)V \n    .code stack 3 locals 8 \nL0:     new java/io/File \nL3:     dup \nL4:     aload_1 \nL5:     invokespecial Method java/io/File <init> (Ljava/lang/String;)V \nL8:     astore_3 \nL9:     aload_3 \nL10:    invokevirtual Method java/io/File exists ()Z \nL13:    ifne L21 \nL16:    aload_3 \nL17:    invokevirtual Method java/io/File createNewFile ()Z \nL20:    pop \n\n        .stack append Object java/io/File \nL21:    new java/io/FileWriter \nL24:    dup \nL25:    aload_3 \nL26:    invokevirtual Method java/io/File getAbsoluteFile ()Ljava/io/File; \nL29:    invokespecial Method java/io/FileWriter <init> (Ljava/io/File;)V \nL32:    astore 4 \nL34:    new java/io/BufferedWriter \nL37:    dup \nL38:    aload 4 \nL40:    invokespecial Method java/io/BufferedWriter <init> (Ljava/io/Writer;)V \nL43:    astore 5 \nL45:    aload_2 \nL46:    invokeinterface InterfaceMethod java/util/List iterator ()Ljava/util/Iterator; 1 \nL51:    astore 6 \n\n        .stack append Object java/io/FileWriter Object java/io/BufferedWriter Object java/util/Iterator \nL53:    aload 6 \nL55:    invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL60:    ifeq L90 \nL63:    aload 6 \nL65:    invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL70:    checkcast java/lang/String \nL73:    astore 7 \nL75:    aload 5 \nL77:    aload 7 \nL79:    invokevirtual Method java/io/BufferedWriter write (Ljava/lang/String;)V \nL82:    aload 5 \nL84:    invokevirtual Method java/io/BufferedWriter newLine ()V \nL87:    goto L53 \n\n        .stack chop 1 \nL90:    aload 5 \nL92:    invokevirtual Method java/io/BufferedWriter close ()V \nL95:    aload 4 \nL97:    invokevirtual Method java/io/FileWriter close ()V \nL100:   return \nL101:   \n        .linenumbertable \n            L0 11 \n            L9 13 \n            L21 15 \n            L34 16 \n            L45 18 \n            L75 19 \n            L82 20 \n            L87 21 \n            L90 23 \n            L95 24 \n            L100 25 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/IOException \n    .signature (Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;)V \n.end method \n.sourcefile 'CommonWriter.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 17:24:14 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.LinkedList;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CommonWriter_ESTest extends CommonWriter_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      CommonWriter commonWriter0 = new CommonWriter();\n      LinkedList<String> linkedList0 = new LinkedList<String>();\n      linkedList0.add(\"\");\n      commonWriter0.writeStrings(\"\u007fA\", linkedList0);\n      assertEquals(1, linkedList0.size());\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      CommonWriter commonWriter0 = new CommonWriter();\n      LinkedList<String> linkedList0 = new LinkedList<String>();\n      commonWriter0.writeStrings(\"\u007fA\", linkedList0);\n      commonWriter0.writeStrings(\"\u007fA\", linkedList0);\n      assertEquals(0, linkedList0.size());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 17:24:14 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class CommonWriter_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CommonWriter\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpd46bv0j1\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CommonWriter_ESTest_scaffolding.class.getClassLoader() ,\n      \"CommonWriter\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CommonWriter_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CommonWriter\"\n    );\n  }\n}\n", "class_idx": 61}
{"class_name": "InsufficientFundsException", "java_source": "/**\n * Copyright (c) 2015-2018, CJ Hare All rights reserved.\n *\n * <p>Redistribution and use in source and binary forms, with or without modification, are permitted\n * provided that the following conditions are met:\n *\n * <p>* Redistributions of source code must retain the above copyright notice, this list of\n * conditions and the following disclaimer.\n *\n * <p>* Redistributions in binary form must reproduce the above copyright notice, this list of\n * conditions and the following disclaimer in the documentation and/or other materials provided with\n * the distribution.\n *\n * <p>* Neither the name of [project] nor the names of its contributors may be used to endorse or\n * promote products derived from this software without specific prior written permission.\n *\n * <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * When there is not enough money available.\n *\n * @author CJ Hare\n */\npublic class InsufficientFundsException extends Exception {\n\n  private static final long serialVersionUID = 1L;\n\n  public InsufficientFundsException(final String message) {\n\n    super(message);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super InsufficientFundsException \n.super java/lang/Exception \n.field private static final serialVersionUID J = 1L \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 39 \n            L5 40 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'InsufficientFundsException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 07:02:55 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class InsufficientFundsException_ESTest extends InsufficientFundsException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      InsufficientFundsException insufficientFundsException0 = new InsufficientFundsException(\"\");\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 07:02:55 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class InsufficientFundsException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"InsufficientFundsException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp7ecrw5du\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(InsufficientFundsException_ESTest_scaffolding.class.getClassLoader() ,\n      \"InsufficientFundsException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(InsufficientFundsException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"InsufficientFundsException\"\n    );\n  }\n}\n", "class_idx": 62}
{"class_name": "Solution035", "java_source": "// there cannot be 2,4,5,6,8,0 because when ending on one of them it will be composite\n// make all combination with digits 1,3,7,9 of up to 6 numbers\n// and test each rotation for primality\n\npublic class Solution035 {\n  static String digits = \"1379\";\n  static int n = 0;\n\n  public static void main(String[] args) {\n    for (int i = 2; i <= 6; i++) {\n      combi(digits, i);\n    }\n\n    System.out.println(n + 4);\n  }\n\n  static void combi(String s, int digits) {\n    combi(\"\", s, digits);\n  }\n\n  static void combi(String prefix, String s, int digits) {\n    int N = prefix.length();\n    if (N == digits) {\n      if (testAllPerm(prefix)) {\n        n++;\n      }\n    } else {\n      for (int i = 0; i < s.length(); i++) combi(prefix + s.charAt(i), s, digits);\n    }\n  }\n\n  static boolean testAllPerm(String s) {\n    for (int i = 1; i <= s.length(); i++) {\n      s = s.charAt(s.length() - 1) + s.substring(0, s.length() - 1);\n      if (!isPrime(s)) return false;\n    }\n    return true;\n  }\n\n  static boolean isPrime(String n) {\n\n    int i = 2;\n    do {\n      if (Integer.valueOf(n) % i == 0) return false;\n      i++;\n    } while (i * i <= Integer.valueOf(n));\n\n    return true;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Solution035 \n.super java/lang/Object \n.field static digits Ljava/lang/String; \n.field static n I \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     iconst_2 \nL1:     istore_1 \n\n        .stack append Integer \nL2:     iload_1 \nL3:     bipush 6 \nL5:     if_icmpgt L21 \nL8:     getstatic Field Solution035 digits Ljava/lang/String; \nL11:    iload_1 \nL12:    invokestatic Method Solution035 combi (Ljava/lang/String;I)V \nL15:    iinc 1 1 \nL18:    goto L2 \n\n        .stack chop 1 \nL21:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL24:    getstatic Field Solution035 n I \nL27:    iconst_4 \nL28:    iadd \nL29:    invokevirtual Method java/io/PrintStream println (I)V \nL32:    return \nL33:    \n        .linenumbertable \n            L0 10 \n            L8 11 \n            L15 10 \n            L21 14 \n            L32 15 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static combi : (Ljava/lang/String;I)V \n    .code stack 3 locals 2 \nL0:     ldc '' \nL2:     aload_0 \nL3:     iload_1 \nL4:     invokestatic Method Solution035 combi (Ljava/lang/String;Ljava/lang/String;I)V \nL7:     return \nL8:     \n        .linenumbertable \n            L0 18 \n            L7 19 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static combi : (Ljava/lang/String;Ljava/lang/String;I)V \n    .code stack 3 locals 5 \nL0:     aload_0 \nL1:     invokevirtual Method java/lang/String length ()I \nL4:     istore_3 \nL5:     iload_3 \nL6:     iload_2 \nL7:     if_icmpne L28 \nL10:    aload_0 \nL11:    invokestatic Method Solution035 testAllPerm (Ljava/lang/String;)Z \nL14:    ifeq L74 \nL17:    getstatic Field Solution035 n I \nL20:    iconst_1 \nL21:    iadd \nL22:    putstatic Field Solution035 n I \nL25:    goto L74 \n\n        .stack append Integer \nL28:    iconst_0 \nL29:    istore 4 \n\n        .stack append Integer \nL31:    iload 4 \nL33:    aload_1 \nL34:    invokevirtual Method java/lang/String length ()I \nL37:    if_icmpge L74 \nL40:    new java/lang/StringBuilder \nL43:    dup \nL44:    invokespecial Method java/lang/StringBuilder <init> ()V \nL47:    aload_0 \nL48:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL51:    aload_1 \nL52:    iload 4 \nL54:    invokevirtual Method java/lang/String charAt (I)C \nL57:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL60:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL63:    aload_1 \nL64:    iload_2 \nL65:    invokestatic Method Solution035 combi (Ljava/lang/String;Ljava/lang/String;I)V \nL68:    iinc 4 1 \nL71:    goto L31 \n\n        .stack chop 1 \nL74:    return \nL75:    \n        .linenumbertable \n            L0 22 \n            L5 23 \n            L10 24 \n            L17 25 \n            L28 28 \n            L40 29 \n            L68 28 \n            L74 32 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static testAllPerm : (Ljava/lang/String;)Z \n    .code stack 5 locals 2 \nL0:     iconst_1 \nL1:     istore_1 \n\n        .stack append Integer \nL2:     iload_1 \nL3:     aload_0 \nL4:     invokevirtual Method java/lang/String length ()I \nL7:     if_icmpgt L63 \nL10:    new java/lang/StringBuilder \nL13:    dup \nL14:    invokespecial Method java/lang/StringBuilder <init> ()V \nL17:    aload_0 \nL18:    aload_0 \nL19:    invokevirtual Method java/lang/String length ()I \nL22:    iconst_1 \nL23:    isub \nL24:    invokevirtual Method java/lang/String charAt (I)C \nL27:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL30:    aload_0 \nL31:    iconst_0 \nL32:    aload_0 \nL33:    invokevirtual Method java/lang/String length ()I \nL36:    iconst_1 \nL37:    isub \nL38:    invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL41:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL44:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL47:    astore_0 \nL48:    aload_0 \nL49:    invokestatic Method Solution035 isPrime (Ljava/lang/String;)Z \nL52:    ifne L57 \nL55:    iconst_0 \nL56:    ireturn \n\n        .stack same \nL57:    iinc 1 1 \nL60:    goto L2 \n\n        .stack chop 1 \nL63:    iconst_1 \nL64:    ireturn \nL65:    \n        .linenumbertable \n            L0 35 \n            L10 36 \n            L48 37 \n            L55 38 \n            L57 35 \n            L63 40 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static isPrime : (Ljava/lang/String;)Z \n    .code stack 2 locals 2 \nL0:     iconst_2 \nL1:     istore_1 \n\n        .stack append Integer \nL2:     aload_0 \nL3:     invokestatic Method java/lang/Integer valueOf (Ljava/lang/String;)Ljava/lang/Integer; \nL6:     invokevirtual Method java/lang/Integer intValue ()I \nL9:     iload_1 \nL10:    irem \nL11:    ifne L16 \nL14:    iconst_0 \nL15:    ireturn \n\n        .stack same \nL16:    iinc 1 1 \nL19:    iload_1 \nL20:    iload_1 \nL21:    imul \nL22:    aload_0 \nL23:    invokestatic Method java/lang/Integer valueOf (Ljava/lang/String;)Ljava/lang/Integer; \nL26:    invokevirtual Method java/lang/Integer intValue ()I \nL29:    if_icmple L2 \nL32:    iconst_1 \nL33:    ireturn \nL34:    \n        .linenumbertable \n            L0 45 \n            L2 47 \n            L14 48 \n            L16 49 \n            L19 50 \n            L32 52 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 1 locals 0 \nL0:     ldc '1379' \nL2:     putstatic Field Solution035 digits Ljava/lang/String; \nL5:     iconst_0 \nL6:     putstatic Field Solution035 n I \nL9:     return \nL10:    \n        .linenumbertable \n            L0 6 \n            L5 7 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Solution035.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 05:01:52 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Solution035_ESTest extends Solution035_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String string0 = \";IMbN-;C\";\n      // Undeclared exception!\n      try { \n        Solution035.isPrime(\";IMbN-;C\");\n        fail(\"Expecting exception: NumberFormatException\");\n      \n      } catch(NumberFormatException e) {\n         //\n         // For input string: \\\";IMbN-;C\\\"\n         //\n         verifyException(\"java.lang.NumberFormatException\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      String string0 = \"\";\n      boolean boolean0 = Solution035.testAllPerm(\"\");\n      assertTrue(boolean0);\n      \n      boolean boolean1 = Solution035.testAllPerm(\"\");\n      assertTrue(boolean1 == boolean0);\n      assertTrue(boolean1);\n      \n      String string1 = \"2(,7|@j}PxyG@uK\";\n      // Undeclared exception!\n      try { \n        Solution035.testAllPerm(\"2(,7|@j}PxyG@uK\");\n        fail(\"Expecting exception: NumberFormatException\");\n      \n      } catch(NumberFormatException e) {\n         //\n         // For input string: \\\"K2(,7|@j}PxyG@u\\\"\n         //\n         verifyException(\"java.lang.NumberFormatException\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Solution035 solution035_0 = new Solution035();\n      String[] stringArray0 = new String[7];\n      stringArray0[0] = \"JPS6tV9\";\n      stringArray0[1] = \"/{3^H1Yl#@$<yEVE]Kc\";\n      stringArray0[2] = \"1379\";\n      stringArray0[3] = \"Solution035\";\n      stringArray0[4] = \"mR%8Oj_\";\n      stringArray0[5] = \"\";\n      stringArray0[6] = \"S;gRD+aw\";\n      // Undeclared exception!\n      Solution035.main(stringArray0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 05:01:52 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Solution035_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Solution035\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp4tv1_w47\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Solution035_ESTest_scaffolding.class.getClassLoader() ,\n      \"Solution035\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Solution035_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Solution035\"\n    );\n  }\n}\n", "class_idx": 63}
{"class_name": "FileFormat", "java_source": "/*\n * Copyright (c) 2014, salesforce.com, inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are permitted provided\n * that the following conditions are met:\n *\n *    Redistributions of source code must retain the above copyright notice, this list of conditions and the\n *    following disclaimer.\n *\n *    Redistributions in binary form must reproduce the above copyright notice, this list of conditions and\n *    the following disclaimer in the documentation and/or other materials provided with the distribution.\n *\n *    Neither the name of salesforce.com, inc. nor the names of its contributors may be used to endorse or\n *    promote products derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\npublic class FileFormat {\n  private String charsetName = \"UTF-8\";\n  private String fieldsDelimitedBy = \",\";\n  private char fieldsEnclosedBy = '\"';\n  private String linesTerminatedBy = \"\\n\";\n  private int numberOfLinesToIgnore = 1; // BY DEFAULT THERE IS A HEADER LINE IN CSV\n\n  public String getCharsetName() {\n    return charsetName;\n  }\n\n  public void setCharsetName(String charsetName) {\n    this.charsetName = charsetName;\n  }\n\n  public String getFieldsDelimitedBy() {\n    return fieldsDelimitedBy;\n  }\n\n  public void setFieldsDelimitedBy(String fieldsDelimitedBy) {\n    if (fieldsDelimitedBy != null && !fieldsDelimitedBy.isEmpty())\n      this.fieldsDelimitedBy = fieldsDelimitedBy;\n  }\n\n  public char getFieldsEnclosedBy() {\n    return fieldsEnclosedBy;\n  }\n\n  public void setFieldsEnclosedBy(char fieldsEnclosedBy) {\n    this.fieldsEnclosedBy = fieldsEnclosedBy;\n  }\n\n  public String getLinesTerminatedBy() {\n    return linesTerminatedBy;\n  }\n\n  public void setLinesTerminatedBy(String linesTerminatedBy) {\n    this.linesTerminatedBy = linesTerminatedBy;\n  }\n\n  public int getNumberOfLinesToIgnore() {\n    return numberOfLinesToIgnore;\n  }\n\n  public void setNumberOfLinesToIgnore(int numberOfLinesToIgnore) {\n    this.numberOfLinesToIgnore = numberOfLinesToIgnore;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super FileFormat \n.super java/lang/Object \n.field private charsetName Ljava/lang/String; \n.field private fieldsDelimitedBy Ljava/lang/String; \n.field private fieldsEnclosedBy C \n.field private linesTerminatedBy Ljava/lang/String; \n.field private numberOfLinesToIgnore I \n\n.method public <init> : ()V \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     ldc 'UTF-8' \nL7:     putfield Field FileFormat charsetName Ljava/lang/String; \nL10:    aload_0 \nL11:    ldc ',' \nL13:    putfield Field FileFormat fieldsDelimitedBy Ljava/lang/String; \nL16:    aload_0 \nL17:    bipush 34 \nL19:    putfield Field FileFormat fieldsEnclosedBy C \nL22:    aload_0 \nL23:    ldc '\\n' \nL25:    putfield Field FileFormat linesTerminatedBy Ljava/lang/String; \nL28:    aload_0 \nL29:    iconst_1 \nL30:    putfield Field FileFormat numberOfLinesToIgnore I \nL33:    return \nL34:    \n        .linenumbertable \n            L0 28 \n            L4 29 \n            L10 30 \n            L16 31 \n            L22 32 \n            L28 33 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCharsetName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field FileFormat charsetName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 36 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCharsetName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field FileFormat charsetName Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 39 \n            L5 40 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFieldsDelimitedBy : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field FileFormat fieldsDelimitedBy Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 42 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setFieldsDelimitedBy : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_1 \nL1:     ifnull L16 \nL4:     aload_1 \nL5:     invokevirtual Method java/lang/String isEmpty ()Z \nL8:     ifne L16 \nL11:    aload_0 \nL12:    aload_1 \nL13:    putfield Field FileFormat fieldsDelimitedBy Ljava/lang/String; \n\n        .stack same \nL16:    return \nL17:    \n        .linenumbertable \n            L0 45 \n            L11 46 \n            L16 47 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFieldsEnclosedBy : ()C \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field FileFormat fieldsEnclosedBy C \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 49 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setFieldsEnclosedBy : (C)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field FileFormat fieldsEnclosedBy C \nL5:     return \nL6:     \n        .linenumbertable \n            L0 52 \n            L5 53 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getLinesTerminatedBy : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field FileFormat linesTerminatedBy Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 55 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setLinesTerminatedBy : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field FileFormat linesTerminatedBy Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 58 \n            L5 59 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getNumberOfLinesToIgnore : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field FileFormat numberOfLinesToIgnore I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 61 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setNumberOfLinesToIgnore : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field FileFormat numberOfLinesToIgnore I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 64 \n            L5 65 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'FileFormat.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 06:16:54 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class FileFormat_ESTest extends FileFormat_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      FileFormat fileFormat0 = new FileFormat();\n      assertEquals(1, fileFormat0.getNumberOfLinesToIgnore());\n      \n      fileFormat0.setNumberOfLinesToIgnore(0);\n      int int0 = fileFormat0.getNumberOfLinesToIgnore();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      FileFormat fileFormat0 = new FileFormat();\n      fileFormat0.setNumberOfLinesToIgnore((-61526));\n      int int0 = fileFormat0.getNumberOfLinesToIgnore();\n      assertEquals((-61526), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      FileFormat fileFormat0 = new FileFormat();\n      assertEquals(\"\\n\", fileFormat0.getLinesTerminatedBy());\n      \n      fileFormat0.setLinesTerminatedBy((String) null);\n      fileFormat0.getLinesTerminatedBy();\n      assertEquals('\\\"', fileFormat0.getFieldsEnclosedBy());\n      assertEquals(\",\", fileFormat0.getFieldsDelimitedBy());\n      assertEquals(1, fileFormat0.getNumberOfLinesToIgnore());\n      assertEquals(\"UTF-8\", fileFormat0.getCharsetName());\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      FileFormat fileFormat0 = new FileFormat();\n      fileFormat0.setFieldsEnclosedBy('8');\n      char char0 = fileFormat0.getFieldsEnclosedBy();\n      assertEquals('8', char0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      FileFormat fileFormat0 = new FileFormat();\n      assertEquals(\"UTF-8\", fileFormat0.getCharsetName());\n      \n      fileFormat0.setCharsetName((String) null);\n      fileFormat0.getCharsetName();\n      assertEquals(1, fileFormat0.getNumberOfLinesToIgnore());\n      assertEquals(\",\", fileFormat0.getFieldsDelimitedBy());\n      assertEquals('\\\"', fileFormat0.getFieldsEnclosedBy());\n      assertEquals(\"\\n\", fileFormat0.getLinesTerminatedBy());\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      FileFormat fileFormat0 = new FileFormat();\n      fileFormat0.setFieldsDelimitedBy(\"\\n\");\n      assertEquals(\"\\n\", fileFormat0.getFieldsDelimitedBy());\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      FileFormat fileFormat0 = new FileFormat();\n      fileFormat0.setFieldsDelimitedBy(\"\");\n      assertEquals('\\\"', fileFormat0.getFieldsEnclosedBy());\n      assertEquals(\"\\n\", fileFormat0.getLinesTerminatedBy());\n      assertEquals(1, fileFormat0.getNumberOfLinesToIgnore());\n      assertEquals(\",\", fileFormat0.getFieldsDelimitedBy());\n      assertEquals(\"UTF-8\", fileFormat0.getCharsetName());\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      FileFormat fileFormat0 = new FileFormat();\n      fileFormat0.setFieldsDelimitedBy((String) null);\n      assertEquals(\"UTF-8\", fileFormat0.getCharsetName());\n      assertEquals(\",\", fileFormat0.getFieldsDelimitedBy());\n      assertEquals('\\\"', fileFormat0.getFieldsEnclosedBy());\n      assertEquals(\"\\n\", fileFormat0.getLinesTerminatedBy());\n      assertEquals(1, fileFormat0.getNumberOfLinesToIgnore());\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      FileFormat fileFormat0 = new FileFormat();\n      fileFormat0.setFieldsEnclosedBy('C');\n      char char0 = fileFormat0.getFieldsEnclosedBy();\n      assertEquals('C', char0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      FileFormat fileFormat0 = new FileFormat();\n      String string0 = fileFormat0.getCharsetName();\n      assertEquals(\"UTF-8\", string0);\n      assertEquals(\",\", fileFormat0.getFieldsDelimitedBy());\n      assertEquals(1, fileFormat0.getNumberOfLinesToIgnore());\n      assertEquals(\"\\n\", fileFormat0.getLinesTerminatedBy());\n      assertEquals('\\\"', fileFormat0.getFieldsEnclosedBy());\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      FileFormat fileFormat0 = new FileFormat();\n      assertEquals(\"\\n\", fileFormat0.getLinesTerminatedBy());\n      \n      fileFormat0.setLinesTerminatedBy(\"\");\n      fileFormat0.getLinesTerminatedBy();\n      assertEquals('\\\"', fileFormat0.getFieldsEnclosedBy());\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      FileFormat fileFormat0 = new FileFormat();\n      char char0 = fileFormat0.getFieldsEnclosedBy();\n      assertEquals(1, fileFormat0.getNumberOfLinesToIgnore());\n      assertEquals(\",\", fileFormat0.getFieldsDelimitedBy());\n      assertEquals(\"UTF-8\", fileFormat0.getCharsetName());\n      assertEquals(\"\\n\", fileFormat0.getLinesTerminatedBy());\n      assertEquals('\\\"', char0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      FileFormat fileFormat0 = new FileFormat();\n      String string0 = fileFormat0.getLinesTerminatedBy();\n      assertEquals(\"\\n\", string0);\n      assertEquals(\"UTF-8\", fileFormat0.getCharsetName());\n      assertEquals('\\\"', fileFormat0.getFieldsEnclosedBy());\n      assertEquals(1, fileFormat0.getNumberOfLinesToIgnore());\n      assertEquals(\",\", fileFormat0.getFieldsDelimitedBy());\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      FileFormat fileFormat0 = new FileFormat();\n      int int0 = fileFormat0.getNumberOfLinesToIgnore();\n      assertEquals('\\\"', fileFormat0.getFieldsEnclosedBy());\n      assertEquals(\"\\n\", fileFormat0.getLinesTerminatedBy());\n      assertEquals(\",\", fileFormat0.getFieldsDelimitedBy());\n      assertEquals(\"UTF-8\", fileFormat0.getCharsetName());\n      assertEquals(1, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      FileFormat fileFormat0 = new FileFormat();\n      assertEquals(\"UTF-8\", fileFormat0.getCharsetName());\n      \n      fileFormat0.setCharsetName(\"\");\n      fileFormat0.getCharsetName();\n      assertEquals('\\\"', fileFormat0.getFieldsEnclosedBy());\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      FileFormat fileFormat0 = new FileFormat();\n      String string0 = fileFormat0.getFieldsDelimitedBy();\n      assertEquals(\",\", string0);\n      assertEquals(\"UTF-8\", fileFormat0.getCharsetName());\n      assertEquals('\\\"', fileFormat0.getFieldsEnclosedBy());\n      assertEquals(\"\\n\", fileFormat0.getLinesTerminatedBy());\n      assertEquals(1, fileFormat0.getNumberOfLinesToIgnore());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 06:16:54 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class FileFormat_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"FileFormat\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmptsfpur6h\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FileFormat_ESTest_scaffolding.class.getClassLoader() ,\n      \"FileFormat\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FileFormat_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"FileFormat\"\n    );\n  }\n}\n", "class_idx": 64}
{"class_name": "ConsoleLogger", "java_source": "import java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.logging.ConsoleHandler;\nimport java.util.logging.Formatter;\nimport java.util.logging.Level;\nimport java.util.logging.LogRecord;\nimport java.util.logging.Logger;\n\n/**\n * A Formatter which is used for the {@link Logger} instances to log data to the console.\n *\n * @author Johnnei\n */\npublic class ConsoleLogger extends Formatter {\n\n  /**\n   * Creates a logger based on the name.<br>\n   * The logger will only output if the logged message is at least the given minLevel.<br>\n   * As second request of the same logger will NOT update the minLevel\n   *\n   * @param name The name of the logger\n   * @param minLevel The minimum level to log\n   * @return A logger (possibly re-used) with the given name\n   */\n  public static Logger createLogger(String name, Level minLevel) {\n    Logger logger = Logger.getLogger(name);\n\n    if (logger.getHandlers().length == 0) {\n      // This logger has no handlers/formatters, Create the handler\n      logger.setUseParentHandlers(false);\n      logger.setLevel(minLevel);\n      ConsoleHandler consoleHandler = new ConsoleHandler();\n      consoleHandler.setFormatter(new ConsoleLogger());\n      consoleHandler.setLevel(minLevel);\n      logger.addHandler(consoleHandler);\n    }\n    return logger;\n  }\n\n  /** Defines the format of the console output */\n  @Override\n  public String format(LogRecord record) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(generateDateTimeStamp());\n    sb.append(\" [\");\n    sb.append(record.getLevel());\n    sb.append(\"] [\");\n    sb.append(record.getLoggerName());\n    sb.append(\"] \");\n    sb.append(record.getMessage());\n    sb.append(System.lineSeparator());\n\n    if (record.getThrown() != null) {\n      sb.append(\"Stacktrace:\" + System.lineSeparator());\n      for (StackTraceElement stackTrace : record.getThrown().getStackTrace()) {\n        sb.append(stackTrace.toString());\n        sb.append(System.lineSeparator());\n      }\n    }\n\n    return sb.toString();\n  }\n\n  /**\n   * Generates a datetime-stamp based on the current time\n   *\n   * @return\n   */\n  private String generateDateTimeStamp() {\n    SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");\n    Date resultdate = new Date(System.currentTimeMillis());\n    return dateFormat.format(resultdate);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ConsoleLogger \n.super java/util/logging/Formatter \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/util/logging/Formatter <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 17 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static createLogger : (Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Logger; \n    .code stack 3 locals 4 \nL0:     aload_0 \nL1:     invokestatic Method java/util/logging/Logger getLogger (Ljava/lang/String;)Ljava/util/logging/Logger; \nL4:     astore_2 \nL5:     aload_2 \nL6:     invokevirtual Method java/util/logging/Logger getHandlers ()[Ljava/util/logging/Handler; \nL9:     arraylength \nL10:    ifne L52 \nL13:    aload_2 \nL14:    iconst_0 \nL15:    invokevirtual Method java/util/logging/Logger setUseParentHandlers (Z)V \nL18:    aload_2 \nL19:    aload_1 \nL20:    invokevirtual Method java/util/logging/Logger setLevel (Ljava/util/logging/Level;)V \nL23:    new java/util/logging/ConsoleHandler \nL26:    dup \nL27:    invokespecial Method java/util/logging/ConsoleHandler <init> ()V \nL30:    astore_3 \nL31:    aload_3 \nL32:    new ConsoleLogger \nL35:    dup \nL36:    invokespecial Method ConsoleLogger <init> ()V \nL39:    invokevirtual Method java/util/logging/ConsoleHandler setFormatter (Ljava/util/logging/Formatter;)V \nL42:    aload_3 \nL43:    aload_1 \nL44:    invokevirtual Method java/util/logging/ConsoleHandler setLevel (Ljava/util/logging/Level;)V \nL47:    aload_2 \nL48:    aload_3 \nL49:    invokevirtual Method java/util/logging/Logger addHandler (Ljava/util/logging/Handler;)V \n\n        .stack append Object java/util/logging/Logger \nL52:    aload_2 \nL53:    areturn \nL54:    \n        .linenumbertable \n            L0 28 \n            L5 30 \n            L13 32 \n            L18 33 \n            L23 34 \n            L31 35 \n            L42 36 \n            L47 37 \n            L52 39 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public format : (Ljava/util/logging/LogRecord;)Ljava/lang/String; \n    .code stack 3 locals 7 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     astore_2 \nL8:     aload_2 \nL9:     aload_0 \nL10:    invokespecial Method ConsoleLogger generateDateTimeStamp ()Ljava/lang/String; \nL13:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL16:    pop \nL17:    aload_2 \nL18:    ldc ' [' \nL20:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL23:    pop \nL24:    aload_2 \nL25:    aload_1 \nL26:    invokevirtual Method java/util/logging/LogRecord getLevel ()Ljava/util/logging/Level; \nL29:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/Object;)Ljava/lang/StringBuilder; \nL32:    pop \nL33:    aload_2 \nL34:    ldc '] [' \nL36:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL39:    pop \nL40:    aload_2 \nL41:    aload_1 \nL42:    invokevirtual Method java/util/logging/LogRecord getLoggerName ()Ljava/lang/String; \nL45:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL48:    pop \nL49:    aload_2 \nL50:    ldc '] ' \nL52:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL55:    pop \nL56:    aload_2 \nL57:    aload_1 \nL58:    invokevirtual Method java/util/logging/LogRecord getMessage ()Ljava/lang/String; \nL61:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL64:    pop \nL65:    aload_2 \nL66:    invokestatic Method java/lang/System lineSeparator ()Ljava/lang/String; \nL69:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL72:    pop \nL73:    aload_1 \nL74:    invokevirtual Method java/util/logging/LogRecord getThrown ()Ljava/lang/Throwable; \nL77:    ifnull L158 \nL80:    aload_2 \nL81:    new java/lang/StringBuilder \nL84:    dup \nL85:    invokespecial Method java/lang/StringBuilder <init> ()V \nL88:    ldc 'Stacktrace:' \nL90:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL93:    invokestatic Method java/lang/System lineSeparator ()Ljava/lang/String; \nL96:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL99:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL102:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL105:   pop \nL106:   aload_1 \nL107:   invokevirtual Method java/util/logging/LogRecord getThrown ()Ljava/lang/Throwable; \nL110:   invokevirtual Method java/lang/Throwable getStackTrace ()[Ljava/lang/StackTraceElement; \nL113:   astore_3 \nL114:   aload_3 \nL115:   arraylength \nL116:   istore 4 \nL118:   iconst_0 \nL119:   istore 5 \n\n        .stack full \n            locals Object ConsoleLogger Object java/util/logging/LogRecord Object java/lang/StringBuilder Object [Ljava/lang/StackTraceElement; Integer Integer \n            stack \n        .end stack \nL121:   iload 5 \nL123:   iload 4 \nL125:   if_icmpge L158 \nL128:   aload_3 \nL129:   iload 5 \nL131:   aaload \nL132:   astore 6 \nL134:   aload_2 \nL135:   aload 6 \nL137:   invokevirtual Method java/lang/StackTraceElement toString ()Ljava/lang/String; \nL140:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL143:   pop \nL144:   aload_2 \nL145:   invokestatic Method java/lang/System lineSeparator ()Ljava/lang/String; \nL148:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL151:   pop \nL152:   iinc 5 1 \nL155:   goto L121 \n\n        .stack chop 3 \nL158:   aload_2 \nL159:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL162:   areturn \nL163:   \n        .linenumbertable \n            L0 47 \n            L8 48 \n            L17 49 \n            L24 50 \n            L33 51 \n            L40 52 \n            L49 53 \n            L56 54 \n            L65 55 \n            L73 57 \n            L80 58 \n            L106 59 \n            L134 60 \n            L144 61 \n            L152 59 \n            L158 65 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private generateDateTimeStamp : ()Ljava/lang/String; \n    .code stack 4 locals 3 \nL0:     new java/text/SimpleDateFormat \nL3:     dup \nL4:     ldc 'dd-MM-yyyy HH:mm:ss' \nL6:     invokespecial Method java/text/SimpleDateFormat <init> (Ljava/lang/String;)V \nL9:     astore_1 \nL10:    new java/util/Date \nL13:    dup \nL14:    invokestatic Method java/lang/System currentTimeMillis ()J \nL17:    invokespecial Method java/util/Date <init> (J)V \nL20:    astore_2 \nL21:    aload_1 \nL22:    aload_2 \nL23:    invokevirtual Method java/text/SimpleDateFormat format (Ljava/util/Date;)Ljava/lang/String; \nL26:    areturn \nL27:    \n        .linenumbertable \n            L0 73 \n            L10 74 \n            L21 75 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ConsoleLogger.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 15:54:13 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.io.PrintStream;\nimport java.util.Locale;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.io.MockPrintStream;\nimport org.evosuite.runtime.mock.java.lang.MockException;\nimport org.evosuite.runtime.mock.java.lang.MockThrowable;\nimport org.evosuite.runtime.mock.java.util.logging.MockLogRecord;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ConsoleLogger_ESTest extends ConsoleLogger_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Level level0 = Level.OFF;\n      ConsoleLogger consoleLogger0 = new ConsoleLogger();\n      MockLogRecord mockLogRecord0 = new MockLogRecord(level0, \"\");\n      MockException mockException0 = new MockException();\n      MockThrowable mockThrowable0 = new MockThrowable(mockException0);\n      mockLogRecord0.setThrown(mockThrowable0);\n      consoleLogger0.format(mockLogRecord0);\n      consoleLogger0.format(mockLogRecord0);\n      Logger logger0 = ConsoleLogger.createLogger(\"14-02-2014 20:21:21 [OFF] [null] \\nStacktrace:\\nsun.reflect.GeneratedConstructorAccessor44.newInstance(Unknown Source)\\n<evosuite>.<evosuite>(<evosuite>)\\n<evosuite>.<evosuite>(<evosuite>)\\n\", level0);\n      assertEquals(\"14-02-2014 20:21:21 [OFF] [null] \\nStacktrace:\\nsun.reflect.GeneratedConstructorAccessor44.newInstance(Unknown Source)\\n<evosuite>.<evosuite>(<evosuite>)\\n<evosuite>.<evosuite>(<evosuite>)\\n\", logger0.getName());\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Level level0 = Level.OFF;\n      Logger logger0 = ConsoleLogger.createLogger(\"l\\\"SUSc=}ajkJcG\", level0);\n      level0.getLocalizedName();\n      ConsoleLogger consoleLogger0 = new ConsoleLogger();\n      MockLogRecord mockLogRecord0 = new MockLogRecord(level0, \"\");\n      mockLogRecord0.setSourceClassName(\"OFF\");\n      mockLogRecord0.setLevel(level0);\n      MockException mockException0 = new MockException();\n      mockException0.getCause();\n      ConsoleLogger.createLogger(\"\", level0);\n      MockPrintStream mockPrintStream0 = new MockPrintStream(\"OFF\");\n      Locale locale0 = Locale.KOREA;\n      Object[] objectArray0 = new Object[7];\n      objectArray0[0] = (Object) logger0;\n      Object object0 = new Object();\n      objectArray0[1] = object0;\n      objectArray0[2] = (Object) level0;\n      objectArray0[3] = (Object) consoleLogger0;\n      objectArray0[4] = (Object) \"l\\\"SUSc=}ajkJcG\";\n      Object object1 = new Object();\n      objectArray0[5] = object1;\n      objectArray0[6] = (Object) mockPrintStream0;\n      PrintStream printStream0 = mockPrintStream0.format(locale0, \"l\\\"SUSc=}ajkJcG\", objectArray0);\n      mockException0.printStackTrace(printStream0);\n      MockThrowable mockThrowable0 = new MockThrowable(mockException0);\n      mockLogRecord0.setThrown(mockThrowable0);\n      consoleLogger0.format(mockLogRecord0);\n      consoleLogger0.format(mockLogRecord0);\n      ConsoleLogger.createLogger(\"\", level0);\n      ConsoleLogger.createLogger(\"14-02-2014 20:21:21 [OFF] [null] \\nStacktrace:\\nsun.reflect.GeneratedConstructorAccessor44.newInstance(Unknown Source)\\n<evosuite>.<evosuite>(<evosuite>)\\n<evosuite>.<evosuite>(<evosuite>)\\n\", level0);\n      ConsoleLogger.createLogger(\"\", level0);\n      ConsoleLogger.createLogger(\"\", level0);\n      consoleLogger0.format(mockLogRecord0);\n      consoleLogger0.format(mockLogRecord0);\n      ConsoleLogger.createLogger(\"n(|Mybu\\u0006~:0 yzQ\", level0);\n      consoleLogger0.format(mockLogRecord0);\n      consoleLogger0.format(mockLogRecord0);\n      ConsoleLogger.createLogger(\"14-02-2014 20:21:21 [OFF] [null] \\nStacktrace:\\nsun.reflect.GeneratedConstructorAccessor44.newInstance(Unknown Source)\\n<evosuite>.<evosuite>(<evosuite>)\\n<evosuite>.<evosuite>(<evosuite>)\\n\", level0);\n      consoleLogger0.format(mockLogRecord0);\n      consoleLogger0.format(mockLogRecord0);\n      String string0 = consoleLogger0.format(mockLogRecord0);\n      //  // Unstable assertion: assertEquals(\"14-02-2014 20:21:21 [OFF] [null] \\nStacktrace:\\nsun.reflect.GeneratedConstructorAccessor44.newInstance(Unknown Source)\\n<evosuite>.<evosuite>(<evosuite>)\\n<evosuite>.<evosuite>(<evosuite>)\\n\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      ConsoleLogger consoleLogger0 = new ConsoleLogger();\n      Level level0 = Level.OFF;\n      MockLogRecord mockLogRecord0 = new MockLogRecord(level0, \"\");\n      String string0 = consoleLogger0.format(mockLogRecord0);\n      assertEquals(\"14-02-2014 20:21:21 [OFF] [null] \\n\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 15:54:13 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ConsoleLogger_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ConsoleLogger\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpawvospag\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ConsoleLogger_ESTest_scaffolding.class.getClassLoader() ,\n      \"ConsoleLogger\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ConsoleLogger_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ConsoleLogger\"\n    );\n  }\n}\n", "class_idx": 65}
{"class_name": "DictoryFormBean", "java_source": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport java.util.Date;\n\npublic class DictoryFormBean {\n  private int blocked;\n  private String code;\n  private String desc;\n  private String ext1;\n  private Long ext10;\n  private Double ext11;\n  private Double ext12;\n  private Double ext13;\n  private Double ext14;\n  private Double ext15;\n  private String ext2;\n  private String ext3;\n  private String ext4;\n  private Date ext5;\n  private Date ext6;\n  private String ext7;\n  private String ext8;\n  private Long ext9;\n  private String name;\n  private long nodeId;\n  private int sort;\n  private String value;\n\n  public DictoryFormBean() {}\n\n  public int getBlocked() {\n    return blocked;\n  }\n\n  public String getCode() {\n    return code;\n  }\n\n  public String getDesc() {\n    return desc;\n  }\n\n  public String getExt1() {\n    return ext1;\n  }\n\n  public Long getExt10() {\n    return ext10;\n  }\n\n  public Double getExt11() {\n    return ext11;\n  }\n\n  public Double getExt12() {\n    return ext12;\n  }\n\n  public Double getExt13() {\n    return ext13;\n  }\n\n  public Double getExt14() {\n    return ext14;\n  }\n\n  public Double getExt15() {\n    return ext15;\n  }\n\n  public String getExt2() {\n    return ext2;\n  }\n\n  public String getExt3() {\n    return ext3;\n  }\n\n  public String getExt4() {\n    return ext4;\n  }\n\n  public Date getExt5() {\n    return ext5;\n  }\n\n  public Date getExt6() {\n    return ext6;\n  }\n\n  public String getExt7() {\n    return ext7;\n  }\n\n  public String getExt8() {\n    return ext8;\n  }\n\n  public Long getExt9() {\n    return ext9;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public long getNodeId() {\n    return nodeId;\n  }\n\n  public int getSort() {\n    return sort;\n  }\n\n  public String getValue() {\n    return value;\n  }\n\n  public void setBlocked(int blocked) {\n    this.blocked = blocked;\n  }\n\n  public void setCode(String code) {\n    this.code = code;\n  }\n\n  public void setDesc(String desc) {\n    this.desc = desc;\n  }\n\n  public void setExt1(String ext1) {\n    this.ext1 = ext1;\n  }\n\n  public void setExt10(Long ext10) {\n    this.ext10 = ext10;\n  }\n\n  public void setExt11(Double ext11) {\n    this.ext11 = ext11;\n  }\n\n  public void setExt12(Double ext12) {\n    this.ext12 = ext12;\n  }\n\n  public void setExt13(Double ext13) {\n    this.ext13 = ext13;\n  }\n\n  public void setExt14(Double ext14) {\n    this.ext14 = ext14;\n  }\n\n  public void setExt15(Double ext15) {\n    this.ext15 = ext15;\n  }\n\n  public void setExt2(String ext2) {\n    this.ext2 = ext2;\n  }\n\n  public void setExt3(String ext3) {\n    this.ext3 = ext3;\n  }\n\n  public void setExt4(String ext4) {\n    this.ext4 = ext4;\n  }\n\n  public void setExt5(Date ext5) {\n    this.ext5 = ext5;\n  }\n\n  public void setExt6(Date ext6) {\n    this.ext6 = ext6;\n  }\n\n  public void setExt7(String ext7) {\n    this.ext7 = ext7;\n  }\n\n  public void setExt8(String ext8) {\n    this.ext8 = ext8;\n  }\n\n  public void setExt9(Long ext9) {\n    this.ext9 = ext9;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public void setNodeId(long nodeId) {\n    this.nodeId = nodeId;\n  }\n\n  public void setSort(int sort) {\n    this.sort = sort;\n  }\n\n  public void setValue(String value) {\n    this.value = value;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super DictoryFormBean \n.super java/lang/Object \n.field private blocked I \n.field private code Ljava/lang/String; \n.field private desc Ljava/lang/String; \n.field private ext1 Ljava/lang/String; \n.field private ext10 Ljava/lang/Long; \n.field private ext11 Ljava/lang/Double; \n.field private ext12 Ljava/lang/Double; \n.field private ext13 Ljava/lang/Double; \n.field private ext14 Ljava/lang/Double; \n.field private ext15 Ljava/lang/Double; \n.field private ext2 Ljava/lang/String; \n.field private ext3 Ljava/lang/String; \n.field private ext4 Ljava/lang/String; \n.field private ext5 Ljava/util/Date; \n.field private ext6 Ljava/util/Date; \n.field private ext7 Ljava/lang/String; \n.field private ext8 Ljava/lang/String; \n.field private ext9 Ljava/lang/Long; \n.field private name Ljava/lang/String; \n.field private nodeId J \n.field private sort I \n.field private value Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 47 \n            L4 49 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getBlocked : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean blocked I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 52 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCode : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean code Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 56 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getDesc : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean desc Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 60 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExt1 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean ext1 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 64 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExt10 : ()Ljava/lang/Long; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean ext10 Ljava/lang/Long; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 68 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExt11 : ()Ljava/lang/Double; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean ext11 Ljava/lang/Double; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 72 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExt12 : ()Ljava/lang/Double; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean ext12 Ljava/lang/Double; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 76 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExt13 : ()Ljava/lang/Double; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean ext13 Ljava/lang/Double; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 80 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExt14 : ()Ljava/lang/Double; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean ext14 Ljava/lang/Double; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 84 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExt15 : ()Ljava/lang/Double; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean ext15 Ljava/lang/Double; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 88 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExt2 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean ext2 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 92 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExt3 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean ext3 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 96 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExt4 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean ext4 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 100 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExt5 : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean ext5 Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 104 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExt6 : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean ext6 Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 108 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExt7 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean ext7 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 112 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExt8 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean ext8 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 116 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExt9 : ()Ljava/lang/Long; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean ext9 Ljava/lang/Long; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 120 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 124 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getNodeId : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean nodeId J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 128 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSort : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean sort I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 132 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getValue : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DictoryFormBean value Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 136 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setBlocked : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field DictoryFormBean blocked I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 140 \n            L5 141 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCode : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean code Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 144 \n            L5 145 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setDesc : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean desc Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 148 \n            L5 149 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExt1 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean ext1 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 152 \n            L5 153 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExt10 : (Ljava/lang/Long;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean ext10 Ljava/lang/Long; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 156 \n            L5 157 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExt11 : (Ljava/lang/Double;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean ext11 Ljava/lang/Double; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 160 \n            L5 161 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExt12 : (Ljava/lang/Double;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean ext12 Ljava/lang/Double; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 164 \n            L5 165 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExt13 : (Ljava/lang/Double;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean ext13 Ljava/lang/Double; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 168 \n            L5 169 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExt14 : (Ljava/lang/Double;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean ext14 Ljava/lang/Double; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 172 \n            L5 173 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExt15 : (Ljava/lang/Double;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean ext15 Ljava/lang/Double; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 176 \n            L5 177 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExt2 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean ext2 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 180 \n            L5 181 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExt3 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean ext3 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 184 \n            L5 185 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExt4 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean ext4 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 188 \n            L5 189 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExt5 : (Ljava/util/Date;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean ext5 Ljava/util/Date; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 192 \n            L5 193 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExt6 : (Ljava/util/Date;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean ext6 Ljava/util/Date; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 196 \n            L5 197 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExt7 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean ext7 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 200 \n            L5 201 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExt8 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean ext8 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 204 \n            L5 205 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExt9 : (Ljava/lang/Long;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean ext9 Ljava/lang/Long; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 208 \n            L5 209 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean name Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 212 \n            L5 213 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setNodeId : (J)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     lload_1 \nL2:     putfield Field DictoryFormBean nodeId J \nL5:     return \nL6:     \n        .linenumbertable \n            L0 216 \n            L5 217 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setSort : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field DictoryFormBean sort I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 220 \n            L5 221 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setValue : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DictoryFormBean value Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 224 \n            L5 225 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'DictoryFormBean.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 01:57:54 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.Date;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.util.MockDate;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class DictoryFormBean_ESTest extends DictoryFormBean_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setValue(\"DictoryFormBean\");\n      String string0 = dictoryFormBean0.getValue();\n      assertEquals(\"DictoryFormBean\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setValue(\"\");\n      String string0 = dictoryFormBean0.getValue();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setSort(84457);\n      int int0 = dictoryFormBean0.getSort();\n      assertEquals(84457, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setSort((-59732));\n      int int0 = dictoryFormBean0.getSort();\n      assertEquals((-59732), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setNodeId(53158L);\n      long long0 = dictoryFormBean0.getNodeId();\n      assertEquals(53158L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setNodeId((-1L));\n      long long0 = dictoryFormBean0.getNodeId();\n      assertEquals((-1L), long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setName(\"xwNx]z< nG!!D\");\n      String string0 = dictoryFormBean0.getName();\n      assertEquals(\"xwNx]z< nG!!D\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setName(\"\");\n      String string0 = dictoryFormBean0.getName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Long long0 = new Long((-119886L));\n      dictoryFormBean0.setExt9(long0);\n      Long long1 = dictoryFormBean0.getExt9();\n      assertEquals((-119886L), (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Long long0 = new Long(0L);\n      dictoryFormBean0.setExt9(long0);\n      Long long1 = dictoryFormBean0.getExt9();\n      assertEquals(0L, (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Long long0 = new Long(39073L);\n      dictoryFormBean0.setExt9(long0);\n      Long long1 = dictoryFormBean0.getExt9();\n      assertEquals(39073L, (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setExt8(\":~x}\u007f\");\n      String string0 = dictoryFormBean0.getExt8();\n      assertEquals(\":~x}\u007f\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setExt8(\"\");\n      String string0 = dictoryFormBean0.getExt8();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setExt7(\"~i0\");\n      String string0 = dictoryFormBean0.getExt7();\n      assertEquals(\"~i0\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setExt7(\"\");\n      String string0 = dictoryFormBean0.getExt7();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      MockDate mockDate0 = new MockDate(0L);\n      dictoryFormBean0.setExt6(mockDate0);\n      Date date0 = dictoryFormBean0.getExt6();\n      assertSame(date0, mockDate0);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      MockDate mockDate0 = new MockDate(0L);\n      dictoryFormBean0.setExt5(mockDate0);\n      Date date0 = dictoryFormBean0.getExt5();\n      assertEquals(\"Thu Jan 01 00:00:00 GMT 1970\", date0.toString());\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setExt4(\"$4Ws\");\n      String string0 = dictoryFormBean0.getExt4();\n      assertEquals(\"$4Ws\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setExt4(\"\");\n      String string0 = dictoryFormBean0.getExt4();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setExt3(\":~x}\u007f\");\n      String string0 = dictoryFormBean0.getExt3();\n      assertEquals(\":~x}\u007f\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setExt2(\"W_nQI\");\n      String string0 = dictoryFormBean0.getExt2();\n      assertEquals(\"W_nQI\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setExt2(\"\");\n      String string0 = dictoryFormBean0.getExt2();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test22()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = new Double((-1.0));\n      dictoryFormBean0.setExt15(double0);\n      Double double1 = dictoryFormBean0.getExt15();\n      assertEquals((-1.0), (double)double1, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test23()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = new Double(0.0);\n      dictoryFormBean0.setExt15(double0);\n      Double double1 = dictoryFormBean0.getExt15();\n      assertEquals(0.0, (double)double1, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test24()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = new Double(29216.5);\n      dictoryFormBean0.setExt15(double0);\n      Double double1 = dictoryFormBean0.getExt15();\n      assertEquals(29216.5, (double)double1, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test25()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = new Double(5672.42145959301);\n      dictoryFormBean0.setExt14(double0);\n      Double double1 = dictoryFormBean0.getExt14();\n      assertEquals(5672.42145959301, (double)double1, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test26()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = new Double((-78719.06813321036));\n      dictoryFormBean0.setExt14(double0);\n      Double double1 = dictoryFormBean0.getExt14();\n      assertEquals((-78719.06813321036), (double)double1, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test27()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = new Double(0.0);\n      dictoryFormBean0.setExt13(double0);\n      Double double1 = dictoryFormBean0.getExt13();\n      assertEquals(0.0, (double)double1, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test28()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = new Double((-54206L));\n      dictoryFormBean0.setExt13(double0);\n      Double double1 = dictoryFormBean0.getExt13();\n      assertEquals((-54206.0), (double)double1, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test29()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = new Double(39073L);\n      dictoryFormBean0.setExt13(double0);\n      Double double1 = dictoryFormBean0.getExt13();\n      assertEquals(39073.0, (double)double1, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test30()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = new Double(29694.1404556);\n      dictoryFormBean0.setExt12(double0);\n      Double double1 = dictoryFormBean0.getExt12();\n      assertEquals(29694.1404556, (double)double1, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test31()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = new Double(0.0);\n      dictoryFormBean0.setExt12(double0);\n      Double double1 = dictoryFormBean0.getExt12();\n      assertEquals(0.0, (double)double1, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test32()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = new Double((-15598.5845));\n      dictoryFormBean0.setExt12(double0);\n      Double double1 = dictoryFormBean0.getExt12();\n      assertEquals((-15598.5845), (double)double1, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test33()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = new Double(54008.56346);\n      dictoryFormBean0.setExt11(double0);\n      Double double1 = dictoryFormBean0.getExt11();\n      assertEquals(54008.56346, (double)double1, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test34()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = new Double(0.0);\n      dictoryFormBean0.setExt11(double0);\n      Double double1 = dictoryFormBean0.getExt11();\n      assertEquals(0.0, (double)double1, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test35()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = new Double((-26774.8244396));\n      dictoryFormBean0.setExt11(double0);\n      Double double1 = dictoryFormBean0.getExt11();\n      assertEquals((-26774.8244396), (double)double1, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test36()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Long long0 = new Long(0L);\n      dictoryFormBean0.setExt10(long0);\n      Long long1 = dictoryFormBean0.getExt10();\n      assertEquals(0L, (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test37()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Long long0 = new Long(23823L);\n      dictoryFormBean0.setExt10(long0);\n      Long long1 = dictoryFormBean0.getExt10();\n      assertEquals(23823L, (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test38()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Long long0 = new Long((-1));\n      dictoryFormBean0.setExt10(long0);\n      Long long1 = dictoryFormBean0.getExt10();\n      assertEquals((-1L), (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test39()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setExt1(\"o8?VD7!PL\u007f&KkG\");\n      String string0 = dictoryFormBean0.getExt1();\n      assertEquals(\"o8?VD7!PL\u007f&KkG\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test40()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setExt1(\"\");\n      String string0 = dictoryFormBean0.getExt1();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test41()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setDesc(\"Pj~\\\"%g9ZU;d((%N7\");\n      String string0 = dictoryFormBean0.getDesc();\n      assertEquals(\"Pj~\\\"%g9ZU;d((%N7\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test42()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setDesc(\"\");\n      String string0 = dictoryFormBean0.getDesc();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test43()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setCode(\"1E;1CIHW$Hb#98=Cl\");\n      String string0 = dictoryFormBean0.getCode();\n      assertEquals(\"1E;1CIHW$Hb#98=Cl\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test44()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setCode(\"\");\n      String string0 = dictoryFormBean0.getCode();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test45()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setBlocked(1);\n      int int0 = dictoryFormBean0.getBlocked();\n      assertEquals(1, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test46()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setBlocked((-16944));\n      int int0 = dictoryFormBean0.getBlocked();\n      assertEquals((-16944), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test47()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      int int0 = dictoryFormBean0.getSort();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test48()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Date date0 = dictoryFormBean0.getExt6();\n      assertNull(date0);\n  }\n\n  @Test(timeout = 4000)\n  public void test49()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      dictoryFormBean0.setExt3(\"\");\n      String string0 = dictoryFormBean0.getExt3();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test50()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = dictoryFormBean0.getExt15();\n      assertNull(double0);\n  }\n\n  @Test(timeout = 4000)\n  public void test51()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      int int0 = dictoryFormBean0.getBlocked();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test52()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      String string0 = dictoryFormBean0.getDesc();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test53()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      String string0 = dictoryFormBean0.getExt4();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test54()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      String string0 = dictoryFormBean0.getExt1();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test55()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = dictoryFormBean0.getExt12();\n      assertNull(double0);\n  }\n\n  @Test(timeout = 4000)\n  public void test56()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = new Double((-55821.934175777));\n      dictoryFormBean0.setExt11(double0);\n      Double double1 = dictoryFormBean0.getExt11();\n      assertEquals((-55821.934175777), (double)double1, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test57()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = dictoryFormBean0.getExt13();\n      assertNull(double0);\n  }\n\n  @Test(timeout = 4000)\n  public void test58()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      String string0 = dictoryFormBean0.getExt7();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test59()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      String string0 = dictoryFormBean0.getExt2();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test60()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      long long0 = dictoryFormBean0.getNodeId();\n      assertEquals(0L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test61()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = dictoryFormBean0.getExt11();\n      assertNull(double0);\n  }\n\n  @Test(timeout = 4000)\n  public void test62()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Long long0 = dictoryFormBean0.getExt10();\n      assertNull(long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test63()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = new Double(0);\n      dictoryFormBean0.setExt14(double0);\n      Double double1 = dictoryFormBean0.getExt14();\n      assertEquals(0.0, (double)double1, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test64()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Long long0 = dictoryFormBean0.getExt9();\n      assertNull(long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test65()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Date date0 = dictoryFormBean0.getExt5();\n      assertNull(date0);\n  }\n\n  @Test(timeout = 4000)\n  public void test66()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      String string0 = dictoryFormBean0.getName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test67()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      String string0 = dictoryFormBean0.getExt8();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test68()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      String string0 = dictoryFormBean0.getExt3();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test69()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Long long0 = new Long((-85202L));\n      dictoryFormBean0.setExt9(long0);\n      Long long1 = dictoryFormBean0.getExt9();\n      assertEquals((-85202L), (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test70()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      String string0 = dictoryFormBean0.getValue();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test71()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      String string0 = dictoryFormBean0.getCode();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test72()  throws Throwable  {\n      DictoryFormBean dictoryFormBean0 = new DictoryFormBean();\n      Double double0 = dictoryFormBean0.getExt14();\n      assertNull(double0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 01:57:54 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class DictoryFormBean_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"DictoryFormBean\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp7rj7f0uv\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DictoryFormBean_ESTest_scaffolding.class.getClassLoader() ,\n      \"DictoryFormBean\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DictoryFormBean_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"DictoryFormBean\"\n    );\n  }\n}\n", "class_idx": 66}
{"class_name": "Kalenteri10a", "java_source": "import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class Kalenteri10a {\n  // tyylikk\u00e4in toteutus olisi laittaa targetit robottiolion sis\u00e4\u00e4n:\n  /*\n  public Robot() {\n      targetBin\n      targetRobot\n  }\n  t\u00e4ll\u00f6in kohteisiin p\u00e4\u00e4see feedChipill\u00e4 suoraan k\u00e4siksi, eik\u00e4 robotteja tarvitse laittaa argumenttiin\n  aluksi olisi viel\u00e4 j\u00e4rjestett\u00e4v\u00e4 kohteet pienimm\u00e4st\u00e4 numerosta alkaen, jotta ne p\u00e4\u00e4st\u00e4\u00e4n luomaan asiallisesti\n  samalla robotteja tulee vain tarvittu m\u00e4\u00e4r\u00e4\n   */\n\n  public static void main(String[] args) {\n    int[] interestingValues = new int[2];\n    interestingValues[0] = 17; // low\n    interestingValues[1] = 61; // high\n    // write your code here\n    List<String> file = new ArrayList<String>();\n\n    try (BufferedReader br = new BufferedReader(new FileReader(\"cal10.txt\"))) {\n      String line = null;\n      while ((line = br.readLine()) != null) {\n        file.add(line);\n      }\n      br.close();\n      file.toArray(new String[file.size()]);\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n\n    Robot[] robots = new Robot[300];\n    OutputBin[] opBins = new OutputBin[300];\n    for (int i = 0; i < 300; i++) {\n      opBins[i] = new OutputBin(i);\n      robots[i] = new Robot(i);\n    }\n\n    List<String> temp1 = new ArrayList<String>(); // values bottom, instructions first\n    List<String> temp2 = new ArrayList<String>();\n    for (String input : file) {\n      if (input.substring(0, 2).equals(\"va\")) {\n        temp1.add(input);\n      } else {\n        // instructions\n        temp2.add(input);\n      }\n    }\n    for (String input : temp1) {\n      temp2.add(input);\n    }\n\n    for (String input : temp2) {\n      System.out.println(input);\n      if (input.substring(0, 2).equals(\"va\")) {\n        // command is value x\n        // match numbers, 0: value , 1: robot number\n        int[] numbers = getNumbers(input);\n        // assign chip\n        robots[numbers[1]].feedChip(numbers[0], robots, interestingValues);\n      } else {\n        // input: \"bot 2 gives low to bot 1 and high to bot 0\";\n        // or 0: giverBot, 1: bin1, 2: pos1, 3: bin2, 4: pos2\n        // 4 digits before number are either bot or put\n        int[] numbers = getNumbers(input);\n        // check if taker is a bot or bin\n        String binbot1 = input.substring(numbers[4] - 4, numbers[4]);\n        String binbot2 = input.substring(numbers[4] - 4, numbers[4]);\n        boolean targets[] = new boolean[2];\n        if (binbot1.equals(\"bot \")) {\n          targets[0] = true;\n        } else {\n          targets[0] = false;\n        }\n        if (binbot2.equals(\"bot \")) {\n          targets[1] = true;\n        } else {\n          // give them to output bin\n          // opBins[numbers[3]].dump(higher);\n          targets[1] = false;\n        }\n        robots[numbers[0]].takeInstructions(numbers, targets);\n        // robots[numbers[0]].removeChips();\n      }\n    }\n  }\n\n  public static int[] getNumbers(String input) {\n    // input: \"bot 1 gives low to output 1 and high to bot 0\";\n    Pattern p = Pattern.compile(\"-?\\\\d+\");\n    Matcher m = p.matcher(input);\n    boolean found = false;\n    boolean foundAgain = false;\n    int[] rectangle = new int[5];\n    // r3 firstbin/bot, r5 second bin/bot\n    while (m.find()) {\n      if (!found) {\n        rectangle[0] = Integer.parseInt(m.group());\n        found = true;\n      } else if (!foundAgain) {\n        rectangle[1] = Integer.parseInt(m.group());\n        // find position of number\n        rectangle[2] = m.start();\n        foundAgain = true;\n      } else {\n        rectangle[3] = Integer.parseInt(m.group());\n        rectangle[4] = m.start();\n      }\n    }\n    return rectangle;\n  }\n}\n\nclass Robot {\n  private int[] chip = new int[2];\n  private int number;\n  private int[] lowTarget = new int[2];\n  private int[] highTarget = new int[2];\n  // if target[0] = 1 then target is another bot, if target[0] = 2 target is outputbin\n  // target[1] stores bin/bot target number\n  // chips are 0 if empty\n  public Robot(int n) {\n    this.number = n;\n    this.chip[0] = 0;\n    this.chip[1] = 0;\n    this.lowTarget[0] = 0;\n    this.lowTarget[1] = 0;\n    this.highTarget[0] = 0;\n    this.highTarget[1] = 0;\n  }\n\n  public int[] getTargets() {\n    int[] retval = new int[4];\n    retval[0] = this.lowTarget[0]; // 1: bot, 2: bin\n    retval[1] = this.lowTarget[1]; // target number\n    retval[2] = this.highTarget[0];\n    retval[3] = this.highTarget[1];\n    return retval;\n  }\n\n  private void interestingChips(int[] iv, int chip1, int chip2) {\n    int lower;\n    int higher;\n    if (chip1 < chip2) {\n      lower = chip1;\n      higher = chip2;\n    } else {\n      lower = chip2;\n      higher = chip1;\n    }\n    if (lower == iv[0] && higher == iv[1]) {\n      System.out.println(\"Bot \" + this.getNumber() + \" did the interesting deal\");\n      System.exit(0);\n    }\n  }\n\n  public int getNumber() {\n    return number;\n  }\n\n  public boolean moveAllowed() {\n    if (this.chip[0] != 0 && this.chip[1] != 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public boolean feedChip(int value, Robot[] robots, int[] interestingValues) {\n    // returns true if full\n    // put chip into a empty slot\n    int[] values = this.getChipValues();\n    if (values[0] == 0) {\n      this.chip[0] = value;\n      return false;\n    }\n    if (values[1] == 0) {\n      interestingChips(interestingValues, this.chip[0], value);\n      this.chip[1] = value;\n      // recursive loop\n      // sort chip values\n      int lowChip = 0;\n      int highChip = 0;\n      if (this.chip[0] < this.chip[1]) {\n        lowChip = this.chip[0];\n        highChip = this.chip[1];\n      } else {\n        lowChip = this.chip[1];\n        highChip = this.chip[0];\n      }\n      if (lowTarget[0] == 1) {\n        robots[lowTarget[1]].feedChip(lowChip, robots, interestingValues);\n      }\n      if (highTarget[0] == 1) {\n        robots[highTarget[1]].feedChip(highChip, robots, interestingValues);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  public void takeInstructions(int[] targets, boolean[] targetIsBot) {\n    // or 0: giverBot, 1: bin1, 2: pos1, 3: bin2, 4: pos2\n    // boolean 0: lowTarget, 1: highTarget\n    this.lowTarget[1] = targets[1];\n    this.highTarget[1] = targets[3];\n    if (targetIsBot[0]) {\n      this.lowTarget[0] = 1;\n    } else {\n      this.lowTarget[0] = 2;\n    }\n    if (targetIsBot[1]) {\n      this.highTarget[0] = 1;\n    } else {\n      this.highTarget[0] = 2;\n    }\n  }\n\n  public int[] getChipValues() {\n    return this.chip;\n  }\n\n  public void removeChips() {\n    this.chip[0] = 0;\n    this.chip[1] = 0;\n  }\n}\n\nclass OutputBin {\n  private List<Integer> bin = new ArrayList<Integer>();\n  private int number;\n\n  public OutputBin(int n) {\n    this.number = n;\n  }\n\n  public void dump(int chip) {\n    bin.add(chip);\n  }\n\n  public int getNumber() {\n    return number;\n  }\n\n  public void printBin() {\n    System.out.print(\"Bin \" + this.getNumber() + \" contains: \");\n    for (int i : this.bin) {\n      System.out.print(i + \" \");\n    }\n    System.out.println(\"\");\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Kalenteri10a \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 11 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 5 locals 13 \nL0:     iconst_2 \nL1:     newarray int \nL3:     astore_1 \nL4:     aload_1 \nL5:     iconst_0 \nL6:     bipush 17 \nL8:     iastore \nL9:     aload_1 \nL10:    iconst_1 \nL11:    bipush 61 \nL13:    iastore \nL14:    new java/util/ArrayList \nL17:    dup \nL18:    invokespecial Method java/util/ArrayList <init> ()V \nL21:    astore_2 \nL22:    new java/io/BufferedReader \nL25:    dup \nL26:    new java/io/FileReader \nL29:    dup \nL30:    ldc 'cal10.txt' \nL32:    invokespecial Method java/io/FileReader <init> (Ljava/lang/String;)V \nL35:    invokespecial Method java/io/BufferedReader <init> (Ljava/io/Reader;)V \nL38:    astore_3 \nL39:    aconst_null \nL40:    astore 4 \nL42:    aconst_null \nL43:    astore 5 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object [I Object java/util/List Object java/io/BufferedReader Object java/lang/Throwable Object java/lang/String \n            stack \n        .end stack \nL45:    aload_3 \nL46:    invokevirtual Method java/io/BufferedReader readLine ()Ljava/lang/String; \nL49:    dup \nL50:    astore 5 \nL52:    ifnull L67 \nL55:    aload_2 \nL56:    aload 5 \nL58:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL63:    pop \nL64:    goto L45 \n\n        .stack same \nL67:    aload_3 \nL68:    invokevirtual Method java/io/BufferedReader close ()V \nL71:    aload_2 \nL72:    aload_2 \nL73:    invokeinterface InterfaceMethod java/util/List size ()I 1 \nL78:    anewarray java/lang/String \nL81:    invokeinterface InterfaceMethod java/util/List toArray ([Ljava/lang/Object;)[Ljava/lang/Object; 2 \nL86:    pop \nL87:    aload_3 \nL88:    ifnull L168 \nL91:    aload 4 \nL93:    ifnull L115 \n        .catch java/lang/Throwable from L96 to L100 using L103 \n        .catch java/lang/Throwable from L42 to L87 using L122 \n        .catch [0] from L42 to L87 using L131 \nL96:    aload_3 \nL97:    invokevirtual Method java/io/BufferedReader close ()V \nL100:   goto L168 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object [I Object java/util/List Object java/io/BufferedReader Object java/lang/Throwable \n            stack Object java/lang/Throwable \n        .end stack \nL103:   astore 5 \nL105:   aload 4 \nL107:   aload 5 \nL109:   invokevirtual Method java/lang/Throwable addSuppressed (Ljava/lang/Throwable;)V \nL112:   goto L168 \n\n        .stack same \nL115:   aload_3 \nL116:   invokevirtual Method java/io/BufferedReader close ()V \nL119:   goto L168 \n\n        .stack stack_1 Object java/lang/Throwable \nL122:   astore 5 \nL124:   aload 5 \nL126:   astore 4 \nL128:   aload 5 \nL130:   athrow \n\n        .stack stack_1 Object java/lang/Throwable \nL131:   astore 6 \nL133:   aload_3 \nL134:   ifnull L165 \nL137:   aload 4 \nL139:   ifnull L161 \n        .catch java/lang/Throwable from L142 to L146 using L149 \n        .catch [0] from L122 to L133 using L131 \n        .catch java/io/IOException from L22 to L168 using L171 \nL142:   aload_3 \nL143:   invokevirtual Method java/io/BufferedReader close ()V \nL146:   goto L165 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object [I Object java/util/List Object java/io/BufferedReader Object java/lang/Throwable Top Object java/lang/Throwable \n            stack Object java/lang/Throwable \n        .end stack \nL149:   astore 7 \nL151:   aload 4 \nL153:   aload 7 \nL155:   invokevirtual Method java/lang/Throwable addSuppressed (Ljava/lang/Throwable;)V \nL158:   goto L165 \n\n        .stack same \nL161:   aload_3 \nL162:   invokevirtual Method java/io/BufferedReader close ()V \n\n        .stack same \nL165:   aload 6 \nL167:   athrow \n\n        .stack full \n            locals Object [Ljava/lang/String; Object [I Object java/util/List \n            stack \n        .end stack \nL168:   goto L176 \n\n        .stack stack_1 Object java/io/IOException \nL171:   astore_3 \nL172:   aload_3 \nL173:   invokevirtual Method java/io/IOException printStackTrace ()V \n\n        .stack same \nL176:   sipush 300 \nL179:   anewarray Robot \nL182:   astore_3 \nL183:   sipush 300 \nL186:   anewarray OutputBin \nL189:   astore 4 \nL191:   iconst_0 \nL192:   istore 5 \n\n        .stack append Object [LRobot; Object [LOutputBin; Integer \nL194:   iload 5 \nL196:   sipush 300 \nL199:   if_icmpge L235 \nL202:   aload 4 \nL204:   iload 5 \nL206:   new OutputBin \nL209:   dup \nL210:   iload 5 \nL212:   invokespecial Method OutputBin <init> (I)V \nL215:   aastore \nL216:   aload_3 \nL217:   iload 5 \nL219:   new Robot \nL222:   dup \nL223:   iload 5 \nL225:   invokespecial Method Robot <init> (I)V \nL228:   aastore \nL229:   iinc 5 1 \nL232:   goto L194 \n\n        .stack chop 1 \nL235:   new java/util/ArrayList \nL238:   dup \nL239:   invokespecial Method java/util/ArrayList <init> ()V \nL242:   astore 5 \nL244:   new java/util/ArrayList \nL247:   dup \nL248:   invokespecial Method java/util/ArrayList <init> ()V \nL251:   astore 6 \nL253:   aload_2 \nL254:   invokeinterface InterfaceMethod java/util/List iterator ()Ljava/util/Iterator; 1 \nL259:   astore 7 \n\n        .stack append Object java/util/List Object java/util/List Object java/util/Iterator \nL261:   aload 7 \nL263:   invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL268:   ifeq L324 \nL271:   aload 7 \nL273:   invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL278:   checkcast java/lang/String \nL281:   astore 8 \nL283:   aload 8 \nL285:   iconst_0 \nL286:   iconst_2 \nL287:   invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL290:   ldc 'va' \nL292:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL295:   ifeq L311 \nL298:   aload 5 \nL300:   aload 8 \nL302:   invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL307:   pop \nL308:   goto L321 \n\n        .stack append Object java/lang/String \nL311:   aload 6 \nL313:   aload 8 \nL315:   invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL320:   pop \n\n        .stack chop 1 \nL321:   goto L261 \n\n        .stack chop 1 \nL324:   aload 5 \nL326:   invokeinterface InterfaceMethod java/util/List iterator ()Ljava/util/Iterator; 1 \nL331:   astore 7 \n\n        .stack append Object java/util/Iterator \nL333:   aload 7 \nL335:   invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL340:   ifeq L368 \nL343:   aload 7 \nL345:   invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL350:   checkcast java/lang/String \nL353:   astore 8 \nL355:   aload 6 \nL357:   aload 8 \nL359:   invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL364:   pop \nL365:   goto L333 \n\n        .stack chop 1 \nL368:   aload 6 \nL370:   invokeinterface InterfaceMethod java/util/List iterator ()Ljava/util/Iterator; 1 \nL375:   astore 7 \n\n        .stack append Object java/util/Iterator \nL377:   aload 7 \nL379:   invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL384:   ifeq L556 \nL387:   aload 7 \nL389:   invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL394:   checkcast java/lang/String \nL397:   astore 8 \nL399:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL402:   aload 8 \nL404:   invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL407:   aload 8 \nL409:   iconst_0 \nL410:   iconst_2 \nL411:   invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL414:   ldc 'va' \nL416:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL419:   ifeq L448 \nL422:   aload 8 \nL424:   invokestatic Method Kalenteri10a getNumbers (Ljava/lang/String;)[I \nL427:   astore 9 \nL429:   aload_3 \nL430:   aload 9 \nL432:   iconst_1 \nL433:   iaload \nL434:   aaload \nL435:   aload 9 \nL437:   iconst_0 \nL438:   iaload \nL439:   aload_3 \nL440:   aload_1 \nL441:   invokevirtual Method Robot feedChip (I[LRobot;[I)Z \nL444:   pop \nL445:   goto L553 \n\n        .stack append Object java/lang/String \nL448:   aload 8 \nL450:   invokestatic Method Kalenteri10a getNumbers (Ljava/lang/String;)[I \nL453:   astore 9 \nL455:   aload 8 \nL457:   aload 9 \nL459:   iconst_4 \nL460:   iaload \nL461:   iconst_4 \nL462:   isub \nL463:   aload 9 \nL465:   iconst_4 \nL466:   iaload \nL467:   invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL470:   astore 10 \nL472:   aload 8 \nL474:   aload 9 \nL476:   iconst_4 \nL477:   iaload \nL478:   iconst_4 \nL479:   isub \nL480:   aload 9 \nL482:   iconst_4 \nL483:   iaload \nL484:   invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL487:   astore 11 \nL489:   iconst_2 \nL490:   newarray boolean \nL492:   astore 12 \nL494:   aload 10 \nL496:   ldc 'bot ' \nL498:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL501:   ifeq L512 \nL504:   aload 12 \nL506:   iconst_0 \nL507:   iconst_1 \nL508:   bastore \nL509:   goto L517 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object [I Object java/util/List Object [LRobot; Object [LOutputBin; Object java/util/List Object java/util/List Object java/util/Iterator Object java/lang/String Object [I Object java/lang/String Object java/lang/String Object [Z \n            stack \n        .end stack \nL512:   aload 12 \nL514:   iconst_0 \nL515:   iconst_0 \nL516:   bastore \n\n        .stack same \nL517:   aload 11 \nL519:   ldc 'bot ' \nL521:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL524:   ifeq L535 \nL527:   aload 12 \nL529:   iconst_1 \nL530:   iconst_1 \nL531:   bastore \nL532:   goto L540 \n\n        .stack same \nL535:   aload 12 \nL537:   iconst_1 \nL538:   iconst_0 \nL539:   bastore \n\n        .stack same \nL540:   aload_3 \nL541:   aload 9 \nL543:   iconst_0 \nL544:   iaload \nL545:   aaload \nL546:   aload 9 \nL548:   aload 12 \nL550:   invokevirtual Method Robot takeInstructions ([I[Z)V \n\n        .stack full \n            locals Object [Ljava/lang/String; Object [I Object java/util/List Object [LRobot; Object [LOutputBin; Object java/util/List Object java/util/List Object java/util/Iterator \n            stack \n        .end stack \nL553:   goto L377 \n\n        .stack chop 1 \nL556:   return \nL557:   \n        .linenumbertable \n            L0 24 \n            L4 25 \n            L9 26 \n            L14 28 \n            L22 30 \n            L42 31 \n            L45 32 \n            L55 33 \n            L67 35 \n            L71 36 \n            L87 37 \n            L122 30 \n            L131 37 \n            L168 39 \n            L171 37 \n            L172 38 \n            L176 41 \n            L183 42 \n            L191 43 \n            L202 44 \n            L216 45 \n            L229 43 \n            L235 48 \n            L244 49 \n            L253 50 \n            L283 51 \n            L298 52 \n            L311 55 \n            L321 57 \n            L324 58 \n            L355 59 \n            L365 60 \n            L368 62 \n            L399 63 \n            L407 64 \n            L422 67 \n            L429 69 \n            L445 70 \n            L448 74 \n            L455 76 \n            L472 77 \n            L489 78 \n            L494 79 \n            L504 80 \n            L512 82 \n            L517 84 \n            L527 85 \n            L535 89 \n            L540 91 \n            L553 94 \n            L556 95 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static getNumbers : (Ljava/lang/String;)[I \n    .code stack 3 locals 6 \nL0:     ldc '-?\\\\d+' \nL2:     invokestatic Method java/util/regex/Pattern compile (Ljava/lang/String;)Ljava/util/regex/Pattern; \nL5:     astore_1 \nL6:     aload_1 \nL7:     aload_0 \nL8:     invokevirtual Method java/util/regex/Pattern matcher (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher; \nL11:    astore_2 \nL12:    iconst_0 \nL13:    istore_3 \nL14:    iconst_0 \nL15:    istore 4 \nL17:    iconst_5 \nL18:    newarray int \nL20:    astore 5 \n\n        .stack full \n            locals Object java/lang/String Object java/util/regex/Pattern Object java/util/regex/Matcher Integer Integer Object [I \n            stack \n        .end stack \nL22:    aload_2 \nL23:    invokevirtual Method java/util/regex/Matcher find ()Z \nL26:    ifeq L101 \nL29:    iload_3 \nL30:    ifne L49 \nL33:    aload 5 \nL35:    iconst_0 \nL36:    aload_2 \nL37:    invokevirtual Method java/util/regex/Matcher group ()Ljava/lang/String; \nL40:    invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;)I \nL43:    iastore \nL44:    iconst_1 \nL45:    istore_3 \nL46:    goto L22 \n\n        .stack same \nL49:    iload 4 \nL51:    ifne L79 \nL54:    aload 5 \nL56:    iconst_1 \nL57:    aload_2 \nL58:    invokevirtual Method java/util/regex/Matcher group ()Ljava/lang/String; \nL61:    invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;)I \nL64:    iastore \nL65:    aload 5 \nL67:    iconst_2 \nL68:    aload_2 \nL69:    invokevirtual Method java/util/regex/Matcher start ()I \nL72:    iastore \nL73:    iconst_1 \nL74:    istore 4 \nL76:    goto L22 \n\n        .stack same \nL79:    aload 5 \nL81:    iconst_3 \nL82:    aload_2 \nL83:    invokevirtual Method java/util/regex/Matcher group ()Ljava/lang/String; \nL86:    invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;)I \nL89:    iastore \nL90:    aload 5 \nL92:    iconst_4 \nL93:    aload_2 \nL94:    invokevirtual Method java/util/regex/Matcher start ()I \nL97:    iastore \nL98:    goto L22 \n\n        .stack same \nL101:   aload 5 \nL103:   areturn \nL104:   \n        .linenumbertable \n            L0 99 \n            L6 100 \n            L12 101 \n            L14 102 \n            L17 103 \n            L22 105 \n            L29 106 \n            L33 107 \n            L44 108 \n            L49 109 \n            L54 110 \n            L65 112 \n            L73 113 \n            L79 115 \n            L90 116 \n            L101 119 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Kalenteri10a.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 21:30:20 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.testdata.EvoSuiteFile;\nimport org.evosuite.runtime.testdata.FileSystemHandling;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Kalenteri10a_ESTest extends Kalenteri10a_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Kalenteri10a.getNumbers(\"K4E4JoU$|7IuwCFx>2\");\n      Kalenteri10a.getNumbers(\"\");\n      String[] stringArray0 = new String[6];\n      // Undeclared exception!\n      try { \n        Kalenteri10a.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Robot\n         //\n         verifyException(\"Kalenteri10a\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      int[] intArray0 = Kalenteri10a.getNumbers(\"\");\n      assertEquals(5, intArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(\"cal10.txt\");\n      FileSystemHandling.appendStringToFile(evoSuiteFile0, \"Y\u007f\\\"X1hh\");\n      String[] stringArray0 = new String[7];\n      // Undeclared exception!\n      try { \n        Kalenteri10a.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // Robot\n         //\n         verifyException(\"Kalenteri10a\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      int[] intArray0 = Kalenteri10a.getNumbers(\"8a6(\u007fGH0i\");\n      assertArrayEquals(new int[] {8, 6, 2, 0, 7}, intArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Kalenteri10a kalenteri10a0 = new Kalenteri10a();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 21:30:20 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Kalenteri10a_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Kalenteri10a\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp5g9qgf_r\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Kalenteri10a_ESTest_scaffolding.class.getClassLoader() ,\n      \"Kalenteri10a\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Kalenteri10a_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Kalenteri10a\"\n    );\n  }\n}\n", "class_idx": 67}
{"class_name": "Point", "java_source": "public class Point {\n\n  private int x;\n\n  private int y;\n\n  public Point(int x, int y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  public int getX() {\n    return x;\n  }\n\n  public void setX(int x) {\n    this.x = x;\n  }\n\n  public int getY() {\n    return y;\n  }\n\n  public void setY(int y) {\n    this.y = y;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Point \n.super java/lang/Object \n.field private x I \n.field private y I \n\n.method public <init> : (II)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field Point x I \nL9:     aload_0 \nL10:    iload_2 \nL11:    putfield Field Point y I \nL14:    return \nL15:    \n        .linenumbertable \n            L0 9 \n            L4 10 \n            L9 11 \n            L14 12 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getX : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Point x I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 15 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setX : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field Point x I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 19 \n            L5 20 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getY : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Point y I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setY : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field Point y I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 27 \n            L5 28 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Point.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 01:18:29 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Point_ESTest extends Point_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Point point0 = new Point(5371, 5371);\n      int int0 = point0.getY();\n      assertEquals(5371, int0);\n      assertEquals(5371, point0.getX());\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Point point0 = new Point((-5499), (-5499));\n      int int0 = point0.getY();\n      assertEquals((-5499), point0.getX());\n      assertEquals((-5499), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Point point0 = new Point(5371, 5371);\n      int int0 = point0.getX();\n      assertEquals(5371, point0.getY());\n      assertEquals(5371, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Point point0 = new Point(1, 60155);\n      point0.setX((-127141));\n      int int0 = point0.getX();\n      assertEquals((-127141), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Point point0 = new Point(0, 0);\n      int int0 = point0.getX();\n      assertEquals(0, int0);\n      assertEquals(0, point0.getY());\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Point point0 = new Point(0, 0);\n      point0.setY(0);\n      assertEquals(0, point0.getX());\n      assertEquals(0, point0.getY());\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      Point point0 = new Point(0, 0);\n      int int0 = point0.getY();\n      assertEquals(0, int0);\n      assertEquals(0, point0.getX());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 01:18:29 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Point_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Point\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp4gebv71m\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Point_ESTest_scaffolding.class.getClassLoader() ,\n      \"Point\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Point_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Point\"\n    );\n  }\n}\n", "class_idx": 68}
{"class_name": "Piece", "java_source": "import java.awt.Graphics;\n\n/**\n * Copyright (c) 2015 Ben Alderfer See the file license.txt for copying permission.\n *\n * <p>Ben Alderfer The Piece class\n */\npublic class Piece {\n  private int xPos, yPos, width, height;\n  public static final int SCROLL_SPEED = 6;\n\n  /** Default constructor */\n  public Piece() {\n    xPos = 100;\n    yPos = 150;\n    width = 10;\n    height = 10;\n  }\n\n  /**\n   * Constructs a Piece with position\n   *\n   * @param x the x coordinate\n   * @param y the y coordinate\n   */\n  public Piece(int x, int y) {\n    xPos = x;\n    yPos = y;\n    width = 10;\n    height = 10;\n  }\n\n  /**\n   * Constructs a Piece with position and dimensions\n   *\n   * @param x the x coordinate\n   * @param y the y coordinate\n   * @param wdt the width\n   * @param ht the height\n   */\n  public Piece(int x, int y, int wdt, int ht) {\n    xPos = x;\n    yPos = y;\n    width = wdt;\n    height = ht;\n  }\n\n  /**\n   * Sets the x coordinate\n   *\n   * @param x the x coordinate\n   */\n  public void setX(int x) {\n    xPos = x;\n  }\n\n  /**\n   * Sets the y coordinate\n   *\n   * @param y the y coordinate\n   */\n  public void setY(int y) {\n    yPos = y;\n  }\n\n  /**\n   * Sets the position\n   *\n   * @param x the x coordinate\n   * @param y the y coordinate\n   */\n  public void setPos(int x, int y) {\n    xPos = x;\n    yPos = y;\n  }\n\n  /**\n   * Sets the width\n   *\n   * @param wdt the width\n   */\n  public void setWidth(int wdt) {\n    width = wdt;\n  }\n\n  /**\n   * Sets the height\n   *\n   * @param hgt the height\n   */\n  public void setHeight(int hgt) {\n    height = hgt;\n  }\n\n  /**\n   * Returns the x coordinate\n   *\n   * @return the x coordinate\n   */\n  public int getX() {\n    return xPos;\n  }\n\n  /**\n   * Returns the y coordinate\n   *\n   * @return the y coordinate\n   */\n  public int getY() {\n    return yPos;\n  }\n\n  /**\n   * Returns the width\n   *\n   * @return the width\n   */\n  public int getWidth() {\n    return width;\n  }\n\n  /**\n   * Returns the height\n   *\n   * @return the height\n   */\n  public int getHeight() {\n    return height;\n  }\n\n  /**\n   * Draws a rectangle with the current color\n   *\n   * @param window the graphics object\n   */\n  public void draw(Graphics window) {\n    window.fillRect(getX(), getY(), getWidth(), getHeight());\n  }\n\n  /**\n   * Checks if the obj is not null, of the same class, and has the same position, dimensions, and\n   * color\n   *\n   * @param obj the object to compare\n   * @return true if they are equal, false otherwise\n   */\n  public boolean equals(Object obj) {\n    if (obj == null) return false;\n\n    if (getClass() != obj.getClass()) return false;\n\n    Piece other = (Piece) obj;\n\n    if (other.getX() == xPos\n        && other.getY() == yPos\n        && other.getWidth() == width\n        && other.getHeight() == height) return true;\n    else return false;\n  }\n\n  /** Shifts the object to make motion */\n  public void scroll() {\n    setX(getX() - SCROLL_SPEED);\n  }\n\n  /**\n   * Checks if a Piece is already there\n   *\n   * @param other the object to check if it's already there\n   * @return true if other is there, false otherwise\n   */\n  public boolean pieceIsThere(Piece other) {\n    return getX() < other.getX() + other.getWidth()\n        && // check x's\n        getX() + getWidth() > other.getX()\n        && getY() < other.getY() + other.getHeight()\n        && // check y's\n        getY() + getHeight() > other.getY();\n  }\n\n  /**\n   * Checks if the Piece hit the left side of other\n   *\n   * @param other the object to check\n   * @return true if hit, false otherwise\n   */\n  public boolean didCollideLeft(Piece other) {\n    return getX() + getWidth() < other.getX() - 3\n        && // check x's\n        getX() + getWidth() >= other.getX() + other.getWidth()\n        && getY() < other.getY() + other.getHeight()\n        && // check y's\n        getY() + getHeight() > other.getY();\n  }\n\n  /**\n   * Checks if the Piece hit the left side of other\n   *\n   * @param other the object to check\n   * @param speed the speed of the Piece\n   * @return true if hit, false otherwise\n   */\n  public boolean didCollideLeft(Piece other, int speed) {\n    return getX() + getWidth() >= other.getX() - Math.abs(speed)\n        && // check x's\n        getX() + getWidth() < other.getX() + other.getWidth()\n        && getY() < other.getY() + other.getHeight()\n        && // check y's\n        getY() + getHeight() > other.getY();\n  }\n\n  /**\n   * Checks if the Piece hit the right side of other\n   *\n   * @param other the object to check\n   * @return true if hit, false otherwise\n   */\n  public boolean didCollideRight(Piece other) {\n    return getX() <= other.getX() + other.getWidth() + 3\n        && // check x's\n        getX() > other.getX() + other.getWidth()\n        && getY() < other.getY() + other.getHeight()\n        && // check y's\n        getY() + getHeight() > other.getY();\n  }\n\n  /**\n   * Checks if the Piece hit the right side of other\n   *\n   * @param other the object to check\n   * @param speed the speed of the Piece\n   * @return true if hit, false otherwise\n   */\n  public boolean didCollideRight(Piece other, int speed) {\n    return getX() <= other.getX() + other.getWidth() + Math.abs(speed)\n        && // check x's\n        getX() > other.getX()\n        && getY() < other.getY() + other.getHeight()\n        && // check y's\n        getY() + getHeight() > other.getY();\n  }\n\n  /**\n   * Checks if the Piece hit the top of other\n   *\n   * @param other the object to check\n   * @return true if hit, false otherwise\n   */\n  public boolean didCollideTop(Piece other) {\n    return getX() < other.getX() + other.getWidth()\n        && // check x's\n        getX() + getWidth() > other.getX()\n        && getY() + getHeight() >= other.getY() - 3\n        && // check y's\n        getY() + getHeight() <= other.getY();\n  }\n\n  /**\n   * Checks if the Piece hit the bottom of other\n   *\n   * @param other the object to check\n   * @return true if hit, false otherwise\n   */\n  public boolean didCollideBottom(Piece other) {\n    return getX() < other.getX() + other.getWidth()\n        && // check x's\n        getX() + getWidth() > other.getX()\n        && getY() <= other.getY() + other.getHeight() + 3\n        && // check y's\n        getY() >= other.getY() + other.getHeight();\n  }\n\n  /**\n   * Checks if the Piece is above other\n   *\n   * @param other the piece to see if it is below the current Piece\n   * @return true if current Piece is above other, false otherwise\n   */\n  public boolean isAbove(Piece other) {\n    return getX() + getWidth() >= other.getX()\n        && getX() <= other.getX() + other.getWidth()\n        && getY() + getHeight() <= other.getY();\n  }\n\n  /**\n   * Returns the object's attributes\n   *\n   * @return the object's attributes\n   */\n  public String toString() {\n    return xPos + \" \" + yPos + \" \" + width + \" \" + height;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Piece \n.super java/lang/Object \n.field private xPos I \n.field private yPos I \n.field private width I \n.field private height I \n.field public static final SCROLL_SPEED I = 6 \n\n.method public <init> : ()V \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     bipush 100 \nL7:     putfield Field Piece xPos I \nL10:    aload_0 \nL11:    sipush 150 \nL14:    putfield Field Piece yPos I \nL17:    aload_0 \nL18:    bipush 10 \nL20:    putfield Field Piece width I \nL23:    aload_0 \nL24:    bipush 10 \nL26:    putfield Field Piece height I \nL29:    return \nL30:    \n        .linenumbertable \n            L0 19 \n            L4 20 \n            L10 21 \n            L17 22 \n            L23 23 \n            L29 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (II)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field Piece xPos I \nL9:     aload_0 \nL10:    iload_2 \nL11:    putfield Field Piece yPos I \nL14:    aload_0 \nL15:    bipush 10 \nL17:    putfield Field Piece width I \nL20:    aload_0 \nL21:    bipush 10 \nL23:    putfield Field Piece height I \nL26:    return \nL27:    \n        .linenumbertable \n            L0 32 \n            L4 33 \n            L9 34 \n            L14 35 \n            L20 36 \n            L26 37 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (IIII)V \n    .code stack 2 locals 5 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field Piece xPos I \nL9:     aload_0 \nL10:    iload_2 \nL11:    putfield Field Piece yPos I \nL14:    aload_0 \nL15:    iload_3 \nL16:    putfield Field Piece width I \nL19:    aload_0 \nL20:    iload 4 \nL22:    putfield Field Piece height I \nL25:    return \nL26:    \n        .linenumbertable \n            L0 47 \n            L4 48 \n            L9 49 \n            L14 50 \n            L19 51 \n            L25 52 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setX : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field Piece xPos I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 59 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setY : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field Piece yPos I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 66 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPos : (II)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field Piece xPos I \nL5:     aload_0 \nL6:     iload_2 \nL7:     putfield Field Piece yPos I \nL10:    return \nL11:    \n        .linenumbertable \n            L0 75 \n            L5 76 \n            L10 77 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setWidth : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field Piece width I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 84 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setHeight : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field Piece height I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 91 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getX : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Piece xPos I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 98 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getY : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Piece yPos I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 105 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getWidth : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Piece width I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 112 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getHeight : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Piece height I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 119 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public draw : (Ljava/awt/Graphics;)V \n    .code stack 5 locals 2 \nL0:     aload_1 \nL1:     aload_0 \nL2:     invokevirtual Method Piece getX ()I \nL5:     aload_0 \nL6:     invokevirtual Method Piece getY ()I \nL9:     aload_0 \nL10:    invokevirtual Method Piece getWidth ()I \nL13:    aload_0 \nL14:    invokevirtual Method Piece getHeight ()I \nL17:    invokevirtual Method java/awt/Graphics fillRect (IIII)V \nL20:    return \nL21:    \n        .linenumbertable \n            L0 126 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public equals : (Ljava/lang/Object;)Z \n    .code stack 2 locals 3 \nL0:     aload_1 \nL1:     ifnonnull L6 \nL4:     iconst_0 \nL5:     ireturn \n\n        .stack same \nL6:     aload_0 \nL7:     invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL10:    aload_1 \nL11:    invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL14:    if_acmpeq L19 \nL17:    iconst_0 \nL18:    ireturn \n\n        .stack same \nL19:    aload_1 \nL20:    checkcast Piece \nL23:    astore_2 \nL24:    aload_2 \nL25:    invokevirtual Method Piece getX ()I \nL28:    aload_0 \nL29:    getfield Field Piece xPos I \nL32:    if_icmpne L70 \nL35:    aload_2 \nL36:    invokevirtual Method Piece getY ()I \nL39:    aload_0 \nL40:    getfield Field Piece yPos I \nL43:    if_icmpne L70 \nL46:    aload_2 \nL47:    invokevirtual Method Piece getWidth ()I \nL50:    aload_0 \nL51:    getfield Field Piece width I \nL54:    if_icmpne L70 \nL57:    aload_2 \nL58:    invokevirtual Method Piece getHeight ()I \nL61:    aload_0 \nL62:    getfield Field Piece height I \nL65:    if_icmpne L70 \nL68:    iconst_1 \nL69:    ireturn \n\n        .stack append Object Piece \nL70:    iconst_0 \nL71:    ireturn \nL72:    \n        .linenumbertable \n            L0 136 \n            L4 137 \n            L6 139 \n            L17 140 \n            L19 142 \n            L24 144 \n            L36 145 \n            L47 146 \n            L58 147 \n            L68 148 \n            L70 150 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public scroll : ()V \n    .code stack 3 locals 1 \nL0:     aload_0 \nL1:     aload_0 \nL2:     invokevirtual Method Piece getX ()I \nL5:     bipush 6 \nL7:     isub \nL8:     invokevirtual Method Piece setX (I)V \nL11:    return \nL12:    \n        .linenumbertable \n            L0 157 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public pieceIsThere : (LPiece;)Z \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     invokevirtual Method Piece getX ()I \nL4:     aload_1 \nL5:     invokevirtual Method Piece getX ()I \nL8:     aload_1 \nL9:     invokevirtual Method Piece getWidth ()I \nL12:    iadd \nL13:    if_icmpge L68 \nL16:    aload_0 \nL17:    invokevirtual Method Piece getX ()I \nL20:    aload_0 \nL21:    invokevirtual Method Piece getWidth ()I \nL24:    iadd \nL25:    aload_1 \nL26:    invokevirtual Method Piece getX ()I \nL29:    if_icmple L68 \nL32:    aload_0 \nL33:    invokevirtual Method Piece getY ()I \nL36:    aload_1 \nL37:    invokevirtual Method Piece getY ()I \nL40:    aload_1 \nL41:    invokevirtual Method Piece getHeight ()I \nL44:    iadd \nL45:    if_icmpge L68 \nL48:    aload_0 \nL49:    invokevirtual Method Piece getY ()I \nL52:    aload_0 \nL53:    invokevirtual Method Piece getHeight ()I \nL56:    iadd \nL57:    aload_1 \nL58:    invokevirtual Method Piece getY ()I \nL61:    if_icmple L68 \nL64:    iconst_1 \nL65:    goto L69 \n\n        .stack same_extended \nL68:    iconst_0 \n\n        .stack stack_1 Integer \nL69:    ireturn \nL70:    \n        .linenumbertable \n            L0 166 \n            L17 167 \n            L33 168 \n            L49 169 \n            L69 166 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public didCollideLeft : (LPiece;)Z \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     invokevirtual Method Piece getX ()I \nL4:     aload_0 \nL5:     invokevirtual Method Piece getWidth ()I \nL8:     iadd \nL9:     aload_1 \nL10:    invokevirtual Method Piece getX ()I \nL13:    iconst_3 \nL14:    isub \nL15:    if_icmpge L75 \nL18:    aload_0 \nL19:    invokevirtual Method Piece getX ()I \nL22:    aload_0 \nL23:    invokevirtual Method Piece getWidth ()I \nL26:    iadd \nL27:    aload_1 \nL28:    invokevirtual Method Piece getX ()I \nL31:    aload_1 \nL32:    invokevirtual Method Piece getWidth ()I \nL35:    iadd \nL36:    if_icmplt L75 \nL39:    aload_0 \nL40:    invokevirtual Method Piece getY ()I \nL43:    aload_1 \nL44:    invokevirtual Method Piece getY ()I \nL47:    aload_1 \nL48:    invokevirtual Method Piece getHeight ()I \nL51:    iadd \nL52:    if_icmpge L75 \nL55:    aload_0 \nL56:    invokevirtual Method Piece getY ()I \nL59:    aload_0 \nL60:    invokevirtual Method Piece getHeight ()I \nL63:    iadd \nL64:    aload_1 \nL65:    invokevirtual Method Piece getY ()I \nL68:    if_icmple L75 \nL71:    iconst_1 \nL72:    goto L76 \n\n        .stack same_extended \nL75:    iconst_0 \n\n        .stack stack_1 Integer \nL76:    ireturn \nL77:    \n        .linenumbertable \n            L0 179 \n            L19 180 \n            L40 181 \n            L56 182 \n            L76 179 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public didCollideLeft : (LPiece;I)Z \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     invokevirtual Method Piece getX ()I \nL4:     aload_0 \nL5:     invokevirtual Method Piece getWidth ()I \nL8:     iadd \nL9:     aload_1 \nL10:    invokevirtual Method Piece getX ()I \nL13:    iload_2 \nL14:    invokestatic Method java/lang/Math abs (I)I \nL17:    isub \nL18:    if_icmplt L78 \nL21:    aload_0 \nL22:    invokevirtual Method Piece getX ()I \nL25:    aload_0 \nL26:    invokevirtual Method Piece getWidth ()I \nL29:    iadd \nL30:    aload_1 \nL31:    invokevirtual Method Piece getX ()I \nL34:    aload_1 \nL35:    invokevirtual Method Piece getWidth ()I \nL38:    iadd \nL39:    if_icmpge L78 \nL42:    aload_0 \nL43:    invokevirtual Method Piece getY ()I \nL46:    aload_1 \nL47:    invokevirtual Method Piece getY ()I \nL50:    aload_1 \nL51:    invokevirtual Method Piece getHeight ()I \nL54:    iadd \nL55:    if_icmpge L78 \nL58:    aload_0 \nL59:    invokevirtual Method Piece getY ()I \nL62:    aload_0 \nL63:    invokevirtual Method Piece getHeight ()I \nL66:    iadd \nL67:    aload_1 \nL68:    invokevirtual Method Piece getY ()I \nL71:    if_icmple L78 \nL74:    iconst_1 \nL75:    goto L79 \n\n        .stack same_extended \nL78:    iconst_0 \n\n        .stack stack_1 Integer \nL79:    ireturn \nL80:    \n        .linenumbertable \n            L0 193 \n            L22 194 \n            L43 195 \n            L59 196 \n            L79 193 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public didCollideRight : (LPiece;)Z \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     invokevirtual Method Piece getX ()I \nL4:     aload_1 \nL5:     invokevirtual Method Piece getX ()I \nL8:     aload_1 \nL9:     invokevirtual Method Piece getWidth ()I \nL12:    iadd \nL13:    iconst_3 \nL14:    iadd \nL15:    if_icmpgt L70 \nL18:    aload_0 \nL19:    invokevirtual Method Piece getX ()I \nL22:    aload_1 \nL23:    invokevirtual Method Piece getX ()I \nL26:    aload_1 \nL27:    invokevirtual Method Piece getWidth ()I \nL30:    iadd \nL31:    if_icmple L70 \nL34:    aload_0 \nL35:    invokevirtual Method Piece getY ()I \nL38:    aload_1 \nL39:    invokevirtual Method Piece getY ()I \nL42:    aload_1 \nL43:    invokevirtual Method Piece getHeight ()I \nL46:    iadd \nL47:    if_icmpge L70 \nL50:    aload_0 \nL51:    invokevirtual Method Piece getY ()I \nL54:    aload_0 \nL55:    invokevirtual Method Piece getHeight ()I \nL58:    iadd \nL59:    aload_1 \nL60:    invokevirtual Method Piece getY ()I \nL63:    if_icmple L70 \nL66:    iconst_1 \nL67:    goto L71 \n\n        .stack same_extended \nL70:    iconst_0 \n\n        .stack stack_1 Integer \nL71:    ireturn \nL72:    \n        .linenumbertable \n            L0 206 \n            L19 207 \n            L35 208 \n            L51 209 \n            L71 206 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public didCollideRight : (LPiece;I)Z \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     invokevirtual Method Piece getX ()I \nL4:     aload_1 \nL5:     invokevirtual Method Piece getX ()I \nL8:     aload_1 \nL9:     invokevirtual Method Piece getWidth ()I \nL12:    iadd \nL13:    iload_2 \nL14:    invokestatic Method java/lang/Math abs (I)I \nL17:    iadd \nL18:    if_icmpgt L68 \nL21:    aload_0 \nL22:    invokevirtual Method Piece getX ()I \nL25:    aload_1 \nL26:    invokevirtual Method Piece getX ()I \nL29:    if_icmple L68 \nL32:    aload_0 \nL33:    invokevirtual Method Piece getY ()I \nL36:    aload_1 \nL37:    invokevirtual Method Piece getY ()I \nL40:    aload_1 \nL41:    invokevirtual Method Piece getHeight ()I \nL44:    iadd \nL45:    if_icmpge L68 \nL48:    aload_0 \nL49:    invokevirtual Method Piece getY ()I \nL52:    aload_0 \nL53:    invokevirtual Method Piece getHeight ()I \nL56:    iadd \nL57:    aload_1 \nL58:    invokevirtual Method Piece getY ()I \nL61:    if_icmple L68 \nL64:    iconst_1 \nL65:    goto L69 \n\n        .stack same_extended \nL68:    iconst_0 \n\n        .stack stack_1 Integer \nL69:    ireturn \nL70:    \n        .linenumbertable \n            L0 220 \n            L22 221 \n            L33 222 \n            L49 223 \n            L69 220 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public didCollideTop : (LPiece;)Z \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     invokevirtual Method Piece getX ()I \nL4:     aload_1 \nL5:     invokevirtual Method Piece getX ()I \nL8:     aload_1 \nL9:     invokevirtual Method Piece getWidth ()I \nL12:    iadd \nL13:    if_icmpge L70 \nL16:    aload_0 \nL17:    invokevirtual Method Piece getX ()I \nL20:    aload_0 \nL21:    invokevirtual Method Piece getWidth ()I \nL24:    iadd \nL25:    aload_1 \nL26:    invokevirtual Method Piece getX ()I \nL29:    if_icmple L70 \nL32:    aload_0 \nL33:    invokevirtual Method Piece getY ()I \nL36:    aload_0 \nL37:    invokevirtual Method Piece getHeight ()I \nL40:    iadd \nL41:    aload_1 \nL42:    invokevirtual Method Piece getY ()I \nL45:    iconst_3 \nL46:    isub \nL47:    if_icmplt L70 \nL50:    aload_0 \nL51:    invokevirtual Method Piece getY ()I \nL54:    aload_0 \nL55:    invokevirtual Method Piece getHeight ()I \nL58:    iadd \nL59:    aload_1 \nL60:    invokevirtual Method Piece getY ()I \nL63:    if_icmpgt L70 \nL66:    iconst_1 \nL67:    goto L71 \n\n        .stack same_extended \nL70:    iconst_0 \n\n        .stack stack_1 Integer \nL71:    ireturn \nL72:    \n        .linenumbertable \n            L0 233 \n            L17 234 \n            L33 235 \n            L51 236 \n            L71 233 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public didCollideBottom : (LPiece;)Z \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     invokevirtual Method Piece getX ()I \nL4:     aload_1 \nL5:     invokevirtual Method Piece getX ()I \nL8:     aload_1 \nL9:     invokevirtual Method Piece getWidth ()I \nL12:    iadd \nL13:    if_icmpge L70 \nL16:    aload_0 \nL17:    invokevirtual Method Piece getX ()I \nL20:    aload_0 \nL21:    invokevirtual Method Piece getWidth ()I \nL24:    iadd \nL25:    aload_1 \nL26:    invokevirtual Method Piece getX ()I \nL29:    if_icmple L70 \nL32:    aload_0 \nL33:    invokevirtual Method Piece getY ()I \nL36:    aload_1 \nL37:    invokevirtual Method Piece getY ()I \nL40:    aload_1 \nL41:    invokevirtual Method Piece getHeight ()I \nL44:    iadd \nL45:    iconst_3 \nL46:    iadd \nL47:    if_icmpgt L70 \nL50:    aload_0 \nL51:    invokevirtual Method Piece getY ()I \nL54:    aload_1 \nL55:    invokevirtual Method Piece getY ()I \nL58:    aload_1 \nL59:    invokevirtual Method Piece getHeight ()I \nL62:    iadd \nL63:    if_icmplt L70 \nL66:    iconst_1 \nL67:    goto L71 \n\n        .stack same_extended \nL70:    iconst_0 \n\n        .stack stack_1 Integer \nL71:    ireturn \nL72:    \n        .linenumbertable \n            L0 246 \n            L17 247 \n            L33 248 \n            L51 249 \n            L71 246 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public isAbove : (LPiece;)Z \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     invokevirtual Method Piece getX ()I \nL4:     aload_0 \nL5:     invokevirtual Method Piece getWidth ()I \nL8:     iadd \nL9:     aload_1 \nL10:    invokevirtual Method Piece getX ()I \nL13:    if_icmplt L52 \nL16:    aload_0 \nL17:    invokevirtual Method Piece getX ()I \nL20:    aload_1 \nL21:    invokevirtual Method Piece getX ()I \nL24:    aload_1 \nL25:    invokevirtual Method Piece getWidth ()I \nL28:    iadd \nL29:    if_icmpgt L52 \nL32:    aload_0 \nL33:    invokevirtual Method Piece getY ()I \nL36:    aload_0 \nL37:    invokevirtual Method Piece getHeight ()I \nL40:    iadd \nL41:    aload_1 \nL42:    invokevirtual Method Piece getY ()I \nL45:    if_icmpgt L52 \nL48:    iconst_1 \nL49:    goto L53 \n\n        .stack same \nL52:    iconst_0 \n\n        .stack stack_1 Integer \nL53:    ireturn \nL54:    \n        .linenumbertable \n            L0 259 \n            L17 260 \n            L33 261 \n            L53 259 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     aload_0 \nL8:     getfield Field Piece xPos I \nL11:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL14:    ldc ' ' \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    aload_0 \nL20:    getfield Field Piece yPos I \nL23:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL26:    ldc ' ' \nL28:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL31:    aload_0 \nL32:    getfield Field Piece width I \nL35:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL38:    ldc ' ' \nL40:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL43:    aload_0 \nL44:    getfield Field Piece height I \nL47:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL50:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL53:    areturn \nL54:    \n        .linenumbertable \n            L0 269 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Piece.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 21:19:11 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport javax.swing.DebugGraphics;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Piece_ESTest extends Piece_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      Piece piece0 = new Piece();\n      Piece piece1 = new Piece(6, (-1));\n      piece0.setX(6);\n      piece0.setY((-9557));\n      boolean boolean0 = piece0.isAbove(piece1);\n      assertEquals(6, piece0.getX());\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      Piece piece0 = new Piece();\n      assertEquals(10, piece0.getWidth());\n      \n      piece0.setWidth(0);\n      boolean boolean0 = piece0.isAbove(piece0);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      Piece piece0 = new Piece(0, 6, 150, 39691);\n      Piece piece1 = new Piece(150, 1);\n      boolean boolean0 = piece0.didCollideTop(piece1);\n      assertEquals(0, piece0.getX());\n      assertEquals(150, piece0.getWidth());\n      assertEquals(150, piece1.getX());\n      assertEquals(6, piece0.getY());\n      assertEquals(1, piece1.getY());\n      assertEquals(10, piece1.getHeight());\n      assertEquals(39691, piece0.getHeight());\n      assertFalse(boolean0);\n      assertEquals(10, piece1.getWidth());\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      Piece piece0 = new Piece();\n      piece0.setPos(3, 0);\n      Piece piece1 = new Piece(0, 6, 3, 6);\n      boolean boolean0 = piece0.didCollideTop(piece1);\n      assertEquals(3, piece0.getX());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      Piece piece0 = new Piece(0, 0);\n      Piece piece1 = new Piece(9790, 5457);\n      boolean boolean0 = piece0.didCollideRight(piece1, 19911);\n      assertFalse(boolean0);\n      assertEquals(10, piece1.getWidth());\n      assertEquals(5457, piece1.getY());\n      assertEquals(10, piece1.getHeight());\n      assertEquals(9790, piece1.getX());\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      Piece piece0 = new Piece(0, 0);\n      assertEquals(10, piece0.getWidth());\n      \n      piece0.setWidth(0);\n      boolean boolean0 = piece0.didCollideRight(piece0, 0);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      Piece piece0 = new Piece(1, 0);\n      piece0.setHeight((-6274));\n      Piece piece1 = new Piece(6, 1);\n      boolean boolean0 = piece0.didCollideLeft(piece1, 6);\n      assertEquals((-6274), piece0.getHeight());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Piece piece0 = new Piece();\n      Piece piece1 = new Piece();\n      piece0.setPos(0, 28865);\n      boolean boolean0 = piece1.didCollideLeft(piece0, 6);\n      assertEquals(28865, piece0.getY());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      Piece piece0 = new Piece(0, 0);\n      piece0.setWidth(0);\n      Piece piece1 = new Piece(52274, 52274);\n      piece1.setX(0);\n      boolean boolean0 = piece0.pieceIsThere(piece1);\n      assertEquals(0, piece1.getX());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      Piece piece0 = new Piece(1, 0);\n      assertEquals(10, piece0.getWidth());\n      \n      piece0.setWidth(0);\n      boolean boolean0 = piece0.pieceIsThere(piece0);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      Piece piece0 = new Piece();\n      Piece piece1 = new Piece(6, (-1));\n      piece0.setX(6);\n      piece0.scroll();\n      piece1.scroll();\n      piece0.setY((-9557));\n      boolean boolean0 = piece0.equals(piece1);\n      assertEquals((-9557), piece0.getY());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Piece piece0 = new Piece(57516, 57516, 1, 10323);\n      piece0.setPos((-16349), (-16349));\n      Piece piece1 = new Piece();\n      boolean boolean0 = piece0.equals(piece1);\n      assertEquals((-16349), piece0.getX());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      Piece piece0 = new Piece();\n      int int0 = piece0.getY();\n      assertEquals(100, piece0.getX());\n      assertEquals(10, piece0.getHeight());\n      assertEquals(150, int0);\n      assertEquals(10, piece0.getWidth());\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      Piece piece0 = new Piece(0, (-3886));\n      int int0 = piece0.getY();\n      assertEquals((-3886), int0);\n      assertEquals(10, piece0.getWidth());\n      assertEquals(0, piece0.getX());\n      assertEquals(10, piece0.getHeight());\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      Piece piece0 = new Piece((-11479), (-11479));\n      piece0.setX(0);\n      int int0 = piece0.getX();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      Piece piece0 = new Piece();\n      piece0.setPos((-8387), 6);\n      int int0 = piece0.getX();\n      assertEquals(6, piece0.getY());\n      assertEquals((-8387), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      Piece piece0 = new Piece(1, 0);\n      assertEquals(10, piece0.getWidth());\n      \n      piece0.setWidth(0);\n      int int0 = piece0.getWidth();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      Piece piece0 = new Piece(150, 150, 0, 0);\n      int int0 = piece0.getHeight();\n      assertEquals(150, piece0.getX());\n      assertEquals(150, piece0.getY());\n      assertEquals(0, piece0.getWidth());\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      Piece piece0 = new Piece((-11479), (-11479));\n      piece0.setHeight((-11479));\n      int int0 = piece0.getHeight();\n      assertEquals((-11479), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      Piece piece0 = new Piece((-11479), (-11479));\n      int int0 = piece0.getHeight();\n      assertEquals(10, int0);\n      assertEquals(10, piece0.getWidth());\n      assertEquals((-11479), piece0.getY());\n      assertEquals((-11479), piece0.getX());\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      Piece piece0 = new Piece(1, 0);\n      int int0 = piece0.getWidth();\n      assertEquals(0, piece0.getY());\n      assertEquals(10, int0);\n      assertEquals(1, piece0.getX());\n      assertEquals(10, piece0.getHeight());\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      Piece piece0 = new Piece(1, 0);\n      int int0 = piece0.getY();\n      assertEquals(1, piece0.getX());\n      assertEquals(0, int0);\n      assertEquals(10, piece0.getWidth());\n      assertEquals(10, piece0.getHeight());\n  }\n\n  @Test(timeout = 4000)\n  public void test22()  throws Throwable  {\n      Piece piece0 = new Piece();\n      int int0 = piece0.getX();\n      assertEquals(150, piece0.getY());\n      assertEquals(10, piece0.getWidth());\n      assertEquals(10, piece0.getHeight());\n      assertEquals(100, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test23()  throws Throwable  {\n      Piece piece0 = new Piece();\n      assertEquals(10, piece0.getHeight());\n      \n      piece0.setHeight(0);\n      boolean boolean0 = piece0.isAbove(piece0);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test24()  throws Throwable  {\n      Piece piece0 = new Piece();\n      Piece piece1 = new Piece();\n      piece0.setPos(0, 28865);\n      boolean boolean0 = piece1.isAbove(piece0);\n      assertEquals(28865, piece0.getY());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test25()  throws Throwable  {\n      Piece piece0 = new Piece((-11479), (-11479));\n      Piece piece1 = new Piece((-11479), (-11479), (-11479), (-11479));\n      piece1.setX(0);\n      boolean boolean0 = piece0.isAbove(piece1);\n      assertEquals(0, piece1.getX());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test26()  throws Throwable  {\n      Piece piece0 = new Piece();\n      piece0.setWidth(18898);\n      Piece piece1 = new Piece(18898, (-60610), 6, (-60610));\n      boolean boolean0 = piece0.didCollideBottom(piece1);\n      assertEquals(18898, piece0.getWidth());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test27()  throws Throwable  {\n      Piece piece0 = new Piece((-8573), (-8573), (-8573), (-8573));\n      Piece piece1 = new Piece(6, 53048);\n      boolean boolean0 = piece0.didCollideBottom(piece1);\n      assertEquals((-8573), piece0.getX());\n      assertEquals(10, piece1.getWidth());\n      assertEquals(6, piece1.getX());\n      assertFalse(boolean0);\n      assertEquals((-8573), piece0.getY());\n      assertEquals((-8573), piece0.getWidth());\n      assertEquals((-8573), piece0.getHeight());\n      assertEquals(53048, piece1.getY());\n      assertEquals(10, piece1.getHeight());\n  }\n\n  @Test(timeout = 4000)\n  public void test28()  throws Throwable  {\n      Piece piece0 = new Piece();\n      boolean boolean0 = piece0.didCollideBottom(piece0);\n      assertEquals(10, piece0.getWidth());\n      assertEquals(100, piece0.getX());\n      assertEquals(150, piece0.getY());\n      assertEquals(10, piece0.getHeight());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test29()  throws Throwable  {\n      Piece piece0 = new Piece((-11479), (-11479));\n      Piece piece1 = new Piece((-11479), (-11479), (-11479), (-11479));\n      piece1.setX(0);\n      boolean boolean0 = piece1.didCollideBottom(piece0);\n      assertEquals(0, piece1.getX());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test30()  throws Throwable  {\n      Piece piece0 = new Piece();\n      Piece piece1 = new Piece(0, 7985, 7427, 0);\n      boolean boolean0 = piece0.didCollideTop(piece1);\n      assertEquals(7985, piece1.getY());\n      assertEquals(150, piece0.getY());\n      assertFalse(boolean0);\n      assertEquals(0, piece1.getX());\n      assertEquals(100, piece0.getX());\n      assertEquals(7427, piece1.getWidth());\n      assertEquals(10, piece0.getHeight());\n      assertEquals(10, piece0.getWidth());\n      assertEquals(0, piece1.getHeight());\n  }\n\n  @Test(timeout = 4000)\n  public void test31()  throws Throwable  {\n      Piece piece0 = new Piece((-11479), (-11479));\n      piece0.scroll();\n      Piece piece1 = new Piece((-11479), (-11479), (-11479), (-11479));\n      piece1.setX(0);\n      boolean boolean0 = piece0.didCollideTop(piece1);\n      assertEquals(0, piece1.getX());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test32()  throws Throwable  {\n      Piece piece0 = new Piece();\n      boolean boolean0 = piece0.didCollideTop(piece0);\n      assertEquals(10, piece0.getWidth());\n      assertFalse(boolean0);\n      assertEquals(10, piece0.getHeight());\n      assertEquals(100, piece0.getX());\n      assertEquals(150, piece0.getY());\n  }\n\n  @Test(timeout = 4000)\n  public void test33()  throws Throwable  {\n      Piece piece0 = new Piece(6, (-28579));\n      Piece piece1 = new Piece((-2411), 12161);\n      boolean boolean0 = piece0.didCollideTop(piece1);\n      assertEquals(10, piece1.getWidth());\n      assertEquals(10, piece1.getHeight());\n      assertEquals(12161, piece1.getY());\n      assertEquals((-2411), piece1.getX());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test34()  throws Throwable  {\n      Piece piece0 = new Piece();\n      Piece piece1 = new Piece(6, (-1));\n      piece1.setY(6);\n      piece0.setPos(0, 6);\n      piece0.setHeight(0);\n      boolean boolean0 = piece1.didCollideRight(piece0, (-7107));\n      assertEquals(6, piece1.getY());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test35()  throws Throwable  {\n      Piece piece0 = new Piece();\n      Piece piece1 = new Piece(6, (-1));\n      piece0.setX(6);\n      piece0.scroll();\n      boolean boolean0 = piece1.didCollideRight(piece0, (-7107));\n      assertEquals(0, piece0.getX());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test36()  throws Throwable  {\n      Piece piece0 = new Piece(20885, 0);\n      Piece piece1 = new Piece();\n      boolean boolean0 = piece0.didCollideRight(piece1, 0);\n      assertEquals(150, piece1.getY());\n      assertFalse(boolean0);\n      assertEquals(10, piece1.getWidth());\n      assertEquals(20885, piece0.getX());\n      assertEquals(0, piece0.getY());\n      assertEquals(10, piece0.getWidth());\n      assertEquals(10, piece1.getHeight());\n      assertEquals(100, piece1.getX());\n      assertEquals(10, piece0.getHeight());\n  }\n\n  @Test(timeout = 4000)\n  public void test37()  throws Throwable  {\n      Piece piece0 = new Piece(0, 0);\n      boolean boolean0 = piece0.didCollideRight(piece0);\n      assertFalse(boolean0);\n      assertEquals(0, piece0.getY());\n      assertEquals(0, piece0.getX());\n      assertEquals(10, piece0.getHeight());\n      assertEquals(10, piece0.getWidth());\n  }\n\n  @Test(timeout = 4000)\n  public void test38()  throws Throwable  {\n      Piece piece0 = new Piece(2142, 2142, 2142, 57851);\n      Piece piece1 = new Piece();\n      boolean boolean0 = piece0.didCollideRight(piece1);\n      assertEquals(10, piece1.getWidth());\n      assertEquals(10, piece1.getHeight());\n      assertEquals(2142, piece0.getY());\n      assertEquals(2142, piece0.getX());\n      assertEquals(2142, piece0.getWidth());\n      assertEquals(150, piece1.getY());\n      assertEquals(100, piece1.getX());\n      assertFalse(boolean0);\n      assertEquals(57851, piece0.getHeight());\n  }\n\n  @Test(timeout = 4000)\n  public void test39()  throws Throwable  {\n      Piece piece0 = new Piece(150, 0, 7409, 7409);\n      Piece piece1 = new Piece(0, 7409, 83825, 150);\n      boolean boolean0 = piece0.didCollideLeft(piece1, 7409);\n      assertEquals(83825, piece1.getWidth());\n      assertFalse(boolean0);\n      assertEquals(7409, piece1.getY());\n      assertEquals(150, piece0.getX());\n      assertEquals(150, piece1.getHeight());\n  }\n\n  @Test(timeout = 4000)\n  public void test40()  throws Throwable  {\n      Piece piece0 = new Piece(65240, 65240);\n      piece0.scroll();\n      Piece piece1 = new Piece(65240, 15340);\n      boolean boolean0 = piece0.didCollideLeft(piece1, (-83478));\n      assertEquals(65234, piece0.getX());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test41()  throws Throwable  {\n      Piece piece0 = new Piece();\n      Piece piece1 = new Piece(6, (-1));\n      piece1.setX(0);\n      piece0.setPos(0, 6);\n      piece0.scroll();\n      boolean boolean0 = piece0.didCollideLeft(piece1, 0);\n      assertEquals(0, piece1.getX());\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test42()  throws Throwable  {\n      Piece piece0 = new Piece();\n      boolean boolean0 = piece0.didCollideLeft(piece0, 0);\n      assertEquals(150, piece0.getY());\n      assertEquals(10, piece0.getWidth());\n      assertEquals(100, piece0.getX());\n      assertEquals(10, piece0.getHeight());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test43()  throws Throwable  {\n      Piece piece0 = new Piece(0, 0, 0, 49127);\n      Piece piece1 = new Piece(49127, 0, 0, 0);\n      boolean boolean0 = piece0.didCollideLeft(piece1, 11234);\n      assertEquals(0, piece1.getWidth());\n      assertEquals(49127, piece0.getHeight());\n      assertEquals(49127, piece1.getX());\n      assertEquals(0, piece1.getY());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test44()  throws Throwable  {\n      Piece piece0 = new Piece();\n      piece0.setX(6);\n      Piece piece1 = new Piece();\n      boolean boolean0 = piece0.didCollideLeft(piece1);\n      assertEquals(6, piece0.getX());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test45()  throws Throwable  {\n      Piece piece0 = new Piece();\n      boolean boolean0 = piece0.didCollideLeft(piece0);\n      assertEquals(150, piece0.getY());\n      assertEquals(100, piece0.getX());\n      assertFalse(boolean0);\n      assertEquals(10, piece0.getHeight());\n      assertEquals(10, piece0.getWidth());\n  }\n\n  @Test(timeout = 4000)\n  public void test46()  throws Throwable  {\n      Piece piece0 = new Piece(33101, 33101, 150, (-1));\n      Piece piece1 = new Piece();\n      piece0.setX((-1));\n      boolean boolean0 = piece1.pieceIsThere(piece0);\n      assertEquals((-1), piece0.getX());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test47()  throws Throwable  {\n      Piece piece0 = new Piece();\n      Piece piece1 = new Piece(6, (-1));\n      piece0.setX(6);\n      boolean boolean0 = piece0.pieceIsThere(piece1);\n      assertEquals(6, piece0.getX());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test48()  throws Throwable  {\n      Piece piece0 = new Piece(6, 6);\n      Piece piece1 = new Piece(70792, 16928);\n      boolean boolean0 = piece0.pieceIsThere(piece1);\n      assertEquals(16928, piece1.getY());\n      assertEquals(70792, piece1.getX());\n      assertEquals(10, piece1.getHeight());\n      assertEquals(10, piece1.getWidth());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test49()  throws Throwable  {\n      Piece piece0 = new Piece(0, 0);\n      Piece piece1 = new Piece(9790, 5457);\n      boolean boolean0 = piece1.pieceIsThere(piece0);\n      assertFalse(boolean0);\n      assertEquals(10, piece1.getWidth());\n      assertEquals(9790, piece1.getX());\n      assertEquals(5457, piece1.getY());\n      assertEquals(10, piece1.getHeight());\n  }\n\n  @Test(timeout = 4000)\n  public void test50()  throws Throwable  {\n      Piece piece0 = new Piece();\n      Piece piece1 = new Piece(6, (-1));\n      piece0.setX(6);\n      piece0.scroll();\n      piece0.scroll();\n      piece1.setPos(0, 6);\n      piece1.scroll();\n      boolean boolean0 = piece0.equals(piece1);\n      assertEquals((-6), piece1.getX());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test51()  throws Throwable  {\n      Piece piece0 = new Piece(57516, 57516, 1, 10323);\n      Piece piece1 = new Piece();\n      boolean boolean0 = piece0.equals(piece1);\n      assertEquals(150, piece1.getY());\n      assertFalse(boolean0);\n      assertEquals(57516, piece0.getY());\n      assertEquals(10, piece1.getWidth());\n      assertEquals(10323, piece0.getHeight());\n      assertEquals(10, piece1.getHeight());\n      assertEquals(1, piece0.getWidth());\n      assertEquals(57516, piece0.getX());\n      assertEquals(100, piece1.getX());\n  }\n\n  @Test(timeout = 4000)\n  public void test52()  throws Throwable  {\n      Piece piece0 = new Piece(6, (-1), (-1), (-50906));\n      Object object0 = new Object();\n      boolean boolean0 = piece0.equals(object0);\n      assertEquals(6, piece0.getX());\n      assertEquals((-50906), piece0.getHeight());\n      assertFalse(boolean0);\n      assertEquals((-1), piece0.getWidth());\n      assertEquals((-1), piece0.getY());\n  }\n\n  @Test(timeout = 4000)\n  public void test53()  throws Throwable  {\n      Piece piece0 = new Piece();\n      boolean boolean0 = piece0.equals(piece0);\n      assertEquals(100, piece0.getX());\n      assertEquals(10, piece0.getHeight());\n      assertEquals(150, piece0.getY());\n      assertTrue(boolean0);\n      assertEquals(10, piece0.getWidth());\n  }\n\n  @Test(timeout = 4000)\n  public void test54()  throws Throwable  {\n      Piece piece0 = new Piece(57516, 57516, 1, 10323);\n      piece0.setWidth((-43064));\n      int int0 = piece0.getWidth();\n      assertEquals((-43064), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test55()  throws Throwable  {\n      Piece piece0 = new Piece();\n      String string0 = piece0.toString();\n      assertEquals(\"100 150 10 10\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test56()  throws Throwable  {\n      Piece piece0 = new Piece(23722, (-1), (-1), 11807);\n      DebugGraphics debugGraphics0 = new DebugGraphics();\n      // Undeclared exception!\n      try { \n        piece0.draw(debugGraphics0);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"javax.swing.DebugGraphics\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test57()  throws Throwable  {\n      Piece piece0 = new Piece();\n      boolean boolean0 = piece0.pieceIsThere(piece0);\n      assertEquals(100, piece0.getX());\n      assertEquals(150, piece0.getY());\n      assertEquals(10, piece0.getWidth());\n      assertTrue(boolean0);\n      assertEquals(10, piece0.getHeight());\n  }\n\n  @Test(timeout = 4000)\n  public void test58()  throws Throwable  {\n      Piece piece0 = new Piece();\n      assertEquals(10, piece0.getHeight());\n      \n      piece0.setHeight(0);\n      boolean boolean0 = piece0.didCollideTop(piece0);\n      assertTrue(boolean0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 21:19:11 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Piece_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Piece\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpvcmpvhts\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Piece_ESTest_scaffolding.class.getClassLoader() ,\n      \"Piece\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Piece_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Piece\"\n    );\n  }\n}\n", "class_idx": 69}
{"class_name": "Info", "java_source": "/**\n * Class Info contains some information.\n *\n * @author v.ivanov\n * @version 1\n * @since 16.12.2018\n */\npublic class Info {\n\n  /** Field key. */\n  private int key;\n\n  /**\n   * Class Info constructor.\n   *\n   * @param key value\n   */\n  public Info(int key) {\n    this.key = key;\n  }\n\n  /**\n   * Getter key.\n   *\n   * @return key value\n   */\n  public int getKey() {\n    return key;\n  }\n\n  /**\n   * Setter key.\n   *\n   * @param key value\n   */\n  public void setKey(int key) {\n    this.key = key;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Info \n.super java/lang/Object \n.field private key I \n\n.method public <init> : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field Info key I \nL9:     return \nL10:    \n        .linenumbertable \n            L0 18 \n            L4 19 \n            L9 20 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getKey : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Info key I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 27 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setKey : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field Info key I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 35 \n            L5 36 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Info.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 07:13:48 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Info_ESTest extends Info_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Info info0 = new Info((-393));\n      info0.setKey(0);\n      int int0 = info0.getKey();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Info info0 = new Info(1);\n      int int0 = info0.getKey();\n      assertEquals(1, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Info info0 = new Info((-393));\n      int int0 = info0.getKey();\n      assertEquals((-393), int0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 07:13:48 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Info_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Info\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpkte12p6m\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Info_ESTest_scaffolding.class.getClassLoader() ,\n      \"Info\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Info_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Info\"\n    );\n  }\n}\n", "class_idx": 70}
{"class_name": "OnFootballTeamCLickedEvent", "java_source": "public class OnFootballTeamCLickedEvent {\n  public final String teamName;\n\n  public OnFootballTeamCLickedEvent(String teamName) {\n    this.teamName = teamName;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super OnFootballTeamCLickedEvent \n.super java/lang/Object \n.field public final teamName Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field OnFootballTeamCLickedEvent teamName Ljava/lang/String; \nL9:     return \nL10:    \n        .linenumbertable \n            L0 7 \n            L4 8 \n            L9 9 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'OnFootballTeamCLickedEvent.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 16:00:42 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class OnFootballTeamCLickedEvent_ESTest extends OnFootballTeamCLickedEvent_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      OnFootballTeamCLickedEvent onFootballTeamCLickedEvent0 = new OnFootballTeamCLickedEvent(\"2c\u007f[(t$\");\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 16:00:42 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class OnFootballTeamCLickedEvent_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"OnFootballTeamCLickedEvent\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpd2z7ii36\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(OnFootballTeamCLickedEvent_ESTest_scaffolding.class.getClassLoader() ,\n      \"OnFootballTeamCLickedEvent\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(OnFootballTeamCLickedEvent_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"OnFootballTeamCLickedEvent\"\n    );\n  }\n}\n", "class_idx": 71}
{"class_name": "CharacterUtil", "java_source": "/** \ubb38\uc790 \ucc98\ub9ac \uc720\ud2f8 */\npublic class CharacterUtil {\n\n  /** \ucd08\uc131 */\n  private static char[] HANGUL_1ST =\n      new char[] {\n        '\u3131', '\u3132', '\u3134', '\u3137', '\u3138', '\u3139', '\u3141', '\u3142', '\u3143', '\u3145', '\u3146', '\u3147', '\u3148', '\u3149', '\u314a', '\u314b', '\u314c', '\u314d',\n        '\u314e'\n      };\n\n  /** \uc911\uc131 */\n  private static char[] HANGUL_2ND =\n      new char[] {\n        '\u314f', '\u3150', '\u3151', '\u3152', '\u3153', '\u3154', '\u3155', '\u3156', '\u3157', '\u3158', '\u3159', '\u315a', '\u315b', '\u315c', '\u315d', '\u315e', '\u315f', '\u3160',\n        '\u3161', '\u3162', '\u3163'\n      };\n\n  /** \uc885\uc131 */\n  private static char[] HANGUL_3RD =\n      new char[] {\n        '\\0', '\u3131', '\u3132', '\u3133', '\u3134', '\u3135', '\u3136', '\u3137', '\u3139', '\u313a', '\u313b', '\u313c', '\u313d', '\u313e', '\u313f', '\u3140', '\u3141', '\u3142',\n        '\u3144', '\u3145', '\u3146', '\u3147', '\u3148', '\u314a', '\u314b', '\u314c', '\u314d', '\u314e'\n      };\n\n  /** Full-width \ubb38\uc790\uc758 Console \ucd9c\ub825\ud06c\uae30 */\n  private static int fullwidthCharacterWidth = 2;\n\n  /**\n   * Full-width \ubb38\uc790\uc758 Console \ucd9c\ub825\uacf5\uac04 \ud06c\uae30\ub97c \uc138\ud305\ud55c\ub2e4.\n   *\n   * @param width \ucd9c\ub825\ud560 \ud06c\uae30\n   */\n  public static void setCjkCharacterWidth(int width) {\n    if (width >= 1) fullwidthCharacterWidth = width;\n  }\n\n  /**\n   * Full-width \ubb38\uc790\uc758 Console \ucd9c\ub825\uacf5\uac04 \ud06c\uae30\ub97c \uad6c\ud55c\ub2e4.\n   *\n   * @return Full-width \ubb38\uc790\uc758 \ucd9c\ub825\uacf5\uac04 \ud06c\uae30\n   */\n  public static int getFullwidthCharacterWidth() {\n    return fullwidthCharacterWidth;\n  }\n\n  /**\n   * \ud55c\uae00\ubb38\uc790\uc758 \ucd08\uc131/\uc911\uc131/\uc885\uc131\uc744 \ubd84\ub9ac\ud55c\ub2e4.\n   *\n   * <pre>\n   *\n   * CharacterUtil.disassembleKorean( '\ub871' ); \u2192 [ '\u3139','\u3157','\u3147'] \uc744 \ubc18\ud658\n   * CharacterUtil.disassembleKorean( '\uc218' ); \u2192 ['\u3145','\u315c','\\0' ] \uc744 \ubc18\ud658\n   * CharacterUtil.disassembleKorean( 'H'  ); \u2192 null \uc744 \ubc18\ud658\n   *\n   * </pre>\n   *\n   * @param ch \uac80\uc0ac\ud560 \ubb38\uc790\n   * @return \ucd08\uc131/\uc911\uc131/\uc885\uc131\uc73c\ub85c \ubd84\ub9ac\ub41c \ubc30\uc5f4 (\ubd84\ub9ac\ud560 \uc218 \uc5c6\uc744 \uacbd\uc6b0 null \ubc18\ud658)\n   */\n  public static char[] disassembleKorean(char ch) {\n\n    // \ud55c\uae00\uc758 \uc790\uc74c/\ubaa8\uc74c\uc744 \ubd84\ub9ac\ud560 \uc218 \uc5c6\uc744 \uacbd\uc6b0 null \ubc18\ud658\n    if (ch < 0xAC00 || ch > 0xD79F) return null;\n\n    ch -= 0xAC00;\n\n    int idx3rd = ch % 28;\n    int idx2nd = ((ch - idx3rd) / 28) % 21;\n    int idx1st = ((ch - idx3rd) / 28) / 21;\n\n    char[] result = new char[3];\n\n    result[0] = HANGUL_1ST[idx1st];\n    result[1] = HANGUL_2ND[idx2nd];\n    result[2] = HANGUL_3RD[idx3rd];\n\n    return result;\n  }\n\n  /**\n   * \ud55c\uae00\ubb38\uc790\uc758 \uc885\uc131\uc744 \uac00\uc9c0\uace0 \uc788\ub294\uc9c0 \uc5ec\ubd80\ub97c \ud655\uc778\ud55c\ub2e4.\n   *\n   * <pre>\n   *\n   * CharacterUtil.hasHangulJongsung( 'H'  ) \u2192 false\n   * CharacterUtil.hasHangulJongsung( '\uc218' ) \u2192 false\n   * CharacterUtil.hasHangulJongsung( '\ub871' ) \u2192 true\n   *\n   * </pre>\n   *\n   * @param ch \uac80\uc0ac\ud560 \ubb38\uc790\n   * @return \ud55c\uae00\ubb38\uc790 \uc885\uc131 \uc18c\uc720\uc5ec\ubd80\n   */\n  public static boolean hasHangulJongsung(char ch) {\n\n    char[] result = disassembleKorean(ch);\n\n    if (result == null) return false;\n\n    return result[2] != '\\0';\n  }\n\n  /**\n   * Font \ud06c\uae30\uac00 Half-width \ub85c \ubd84\ub958\ub418\ub294\uc9c0 \uc5ec\ubd80\ub97c \ud655\uc778\ud55c\ub2e4.\n   *\n   * @param ch \uac80\uc0ac\ud560 \ubb38\uc790\n   * @return Half-width \ubd84\ub958\uc5ec\ubd80\n   * @see <a href=\"http://unicode.org/reports/tr11\">http://unicode.org/reports/tr11</a>\n   * @see <a\n   *     href=\"http://unicode.org/charts/PDF/UFF00.pdf\">http://unicode.org/charts/PDF/UFF00.pdf</a>\n   */\n  public static boolean isHalfWidth(char ch) {\n\n    if (ch < 0x0020) return true; // \ud2b9\uc218\ubb38\uc790\n\n    if (0x0020 <= ch && ch <= 0x007F)\n      return true; // ASCII (Latin characters, symbols, punctuation,numbers)\n\n    // FF61 ~ FF64 : Halfwidth CJK punctuation\n    // FF65 ~ FF9F : Halfwidth Katakanana variants\n    // FFA0 ~ FFDC : Halfwidth Hangul variants\n    if (0xFF61 <= ch && ch <= 0xFFDC) return true;\n\n    // FFE8 ~ FFEE : Halfwidth symbol variants\n    if (0xFFE8 <= ch && ch <= 0xFFEE) return true;\n\n    //\t\tif( 0x0020 <= ch && ch <= 0x007F ) return true;  // ASCII (Latin characters, symbols,\n    // punctuation,numbers)\n    //\t\tif( 0x1100 <= ch && ch <= 0x11FF ) return false; // Hangul Jamo (Korean)\n    //\t\tif( 0x3000 <= ch && ch <= 0x303F ) return false; // CJK punctuation\n    //\t\tif( 0x3040 <= ch && ch <= 0x309F ) return false; // Hiragana (Japanese)\n    //\t\tif( 0x30A0 <= ch && ch <= 0x30FF ) return false; // Katakana (Japanese)\n    //\t\tif( 0x3130 <= ch && ch <= 0x318F ) return false; // Hangul Compatibility (Korean for KS\n    // X1001 compatibility)\n    //\t\tif( 0xAC00 <= ch && ch <= 0xD7AC ) return false; // Hangul Syllables\n    //\t\tif( 0xF900 <= ch && ch <= 0xFaFF ) return false; // CJK Compatibility Ideographs Block\n    //\t\tif( 0xFF00 <= ch && ch <= 0xFFEF ) return false; // Latin characters and half-width Katakana\n    // and Hangul (Half-width and Full-width)\n    // FF01 ~ FF5E : Fullwidth ASCII variants\n    // FF5F ~ FF60 : Fullwidth brackets\n    // FF61 ~ FF64 : Halfwidth CJK punctuation\n    // FF65 ~ FF9F : Halfwidth Katakanana variants\n    // FFA0 ~ FFDC : Halfwidth Hangul variants\n    // FFE8 ~ FFEE : Halfwidth symbol variants\n    //\t\tif( 0x4E00 <= ch && ch <= 0x9FFF ) return false; // CJK unifed ideographs \u2013 Common and\n    // uncommon\n    //\t\tif( 0x3400 <= ch && ch <= 0x4DBF ) return false; // CJK unified ideographs Extension A \u2013\n    // Rare\n    //\t\tif( 0x2000 <= ch && ch <= 0x2FFF ) return false; // CJK unified ideographs Extension B \u2013\n    // Very rare\n\n    return false;\n  }\n\n  /**\n   * \uc720\ud615(half-width or full-width)\uc744 \ubc18\uc601\ud558\uc5ec \ubb38\uc790\uc758 \uae38\uc774\ub97c \uad6c\ud55c\ub2e4.\n   *\n   * @param ch \uac80\uc0ac\ud560 \ubb38\uc790\n   * @return \ubb38\uc790 \uae38\uc774\n   */\n  public static int getLength(char ch) {\n\n    return isHalfWidth(ch) ? 1 : fullwidthCharacterWidth;\n  }\n\n  /**\n   * \ubb38\uc790\uac00 \uc911\uad6d\uc5b4/\uc77c\ubcf8\uc5b4/\ud55c\uad6d\uc5b4\uc778\uc9c0 \uc5ec\ubd80\ub97c \ud655\uc778\ud55c\ub2e4.\n   *\n   * @param ch \uac80\uc0ac\ud560 \ubb38\uc790\uc5f4\n   * @return CJK \uc5ec\ubd80\n   */\n  public static boolean isCJK(char ch) {\n\n    if (0x0020 <= ch && ch <= 0x007F)\n      return false; // ASCII (Latin characters, symbols, punctuation,numbers)\n\n    if (0x1100 <= ch && ch <= 0x11FF) return true; // Hangul Jamo (Korean)\n    if (0x3000 <= ch && ch <= 0x303F) return true; // CJK punctuation\n    if (0x3040 <= ch && ch <= 0x309F) return true; // Hiragana (Japanese)\n    if (0x30A0 <= ch && ch <= 0x30FF) return true; // Katakana (Japanese)\n    if (0x3130 <= ch && ch <= 0x318F)\n      return true; // Hangul Compatibility (Korean for KS X1001 compatibility)\n    if (0xAC00 <= ch && ch <= 0xD7AC) return true; // Hangul Syllables\n    if (0xF900 <= ch && ch <= 0xFaFF) return true; // CJK Compatibility Ideographs Block\n    if (0x4E00 <= ch && ch <= 0x9FFF) return true; // CJK unifed ideographs \u2013 Common and uncommon\n    if (0x3400 <= ch && ch <= 0x4DBF) return true; // CJK unified ideographs Extension A \u2013 Rare\n    if (0x2000 <= ch && ch <= 0x2FFF) return true; // CJK unified ideographs Extension B \u2013 Very rare\n\n    // FF61 ~ FF64 : Halfwidth CJK punctuation\n    // FF65 ~ FF9F : Halfwidth Katakanana variants\n    // FFA0 ~ FFDC : Halfwidth Hangul variants\n    return 0xFF61 <= ch && ch <= 0xFFDC;\n  }\n\n  /**\n   * \ud55c\uae00\ubb38\uc790 \uc5ec\ubd80\ub97c \uad6c\ud55c\ub2e4.\n   *\n   * @param ch \uac80\uc0ac\ud560 \ubb38\uc790\n   * @return \ud55c\uae00 \uc5ec\ubd80\n   */\n  public static boolean isKorean(char ch) {\n\n    if (0x1100 <= ch && ch <= 0x11FF) return true; // Hangul Jamo (Korean)\n    if (0x3130 <= ch && ch <= 0x318F)\n      return true; // Hangul Compatibility (Korean for KS X1001 compatibility)\n    if (0xAC00 <= ch && ch <= 0xD7AC) return true; // Hangul Syllables\n    return 0xFFA0 <= ch && ch <= 0xFFDC;\n  }\n\n  /**\n   * \uc77c\ubcf8\ubb38\uc790 \uc5ec\ubd80\ub97c \uad6c\ud55c\ub2e4.\n   *\n   * @param ch \uac80\uc0ac\ud560 \ubb38\uc790\n   * @return \uc77c\ubcf8\ubb38\uc790 \uc5ec\ubd80\n   */\n  public static boolean isJapanese(char ch) {\n\n    if (0x3040 <= ch && ch <= 0x309F) return true; // Hiragana (Japanese)\n    if (0x30A0 <= ch && ch <= 0x30FF) return true; // Katakana (Japanese)\n    return 0xFF65 <= ch && ch <= 0xFF9F;\n  }\n\n  /**\n   * \uc911\uad6d\ubb38\uc790 \uc5ec\ubd80\ub97c \uad6c\ud55c\ub2e4.\n   *\n   * @param ch \uac80\uc0ac\ud560 \ubb38\uc790\n   * @return \uc911\uad6d\ubb38\uc790 \uc5ec\ubd80\n   */\n  public static boolean isChinese(char ch) {\n\n    if (0x3000 <= ch && ch <= 0x303F) return true; // CJK punctuation\n    if (0xF900 <= ch && ch <= 0xFaFF) return true; // CJK Compatibility Ideographs Block\n    if (0x4E00 <= ch && ch <= 0x9FFF) return true; // CJK unifed ideographs \u2013 Common and uncommon\n    if (0x3400 <= ch && ch <= 0x4DBF) return true; // CJK unified ideographs Extension A \u2013 Rare\n    if (0x2000 <= ch && ch <= 0x2FFF) return true; // CJK unified ideographs Extension B \u2013 Very rare\n\n    // FF61 ~ FF64 : Halfwidth CJK punctuation\n    // FF65 ~ FF9F : Halfwidth Katakanana variants\n    // FFA0 ~ FFDC : Halfwidth Hangul variants\n    if (0xFF61 <= ch && ch <= 0xFFDC) return true;\n\n    if (0x3040 <= ch && ch <= 0x309F) return true; // Hiragana (Japanese)\n    if (0x30A0 <= ch && ch <= 0x30FF) return true; // Katakana (Japanese)\n    return 0xFF65 <= ch && ch <= 0xFF9F;\n  }\n\n  //\tpublic static boolean isCJK2( char ch ) {\n  //\n  //\t\tUnicodeBlock unicodeBlock = Character.UnicodeBlock.of( ch );\n  //\n  //\t\treturn\tunicodeBlock == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS\n  //           || unicodeBlock == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A\n  //\t         || unicodeBlock == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B\n  //\t         || unicodeBlock == Character.UnicodeBlock.CJK_COMPATIBILITY_FORMS\n  //\t         || unicodeBlock == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS\n  //\t         || unicodeBlock == Character.UnicodeBlock.CJK_RADICALS_SUPPLEMENT\n  //\t         || unicodeBlock == Character.UnicodeBlock.CJK_SYMBOLS_AND_PUNCTUATION\n  //\t         || unicodeBlock == Character.UnicodeBlock.HIRAGANA\n  //\t         || unicodeBlock == Character.UnicodeBlock.KATAKANA\n  //\t         || unicodeBlock == Character.UnicodeBlock.HANGUL_COMPATIBILITY_JAMO\n  //\t         || unicodeBlock == Character.UnicodeBlock.HANGUL_JAMO\n  //\t         || unicodeBlock == Character.UnicodeBlock.HANGUL_JAMO_EXTENDED_A\n  //\t         || unicodeBlock == Character.UnicodeBlock.HANGUL_JAMO_EXTENDED_B\n  //\t         || unicodeBlock == Character.UnicodeBlock.HANGUL_SYLLABLES\n  //\t         || unicodeBlock == Character.UnicodeBlock.ENCLOSED_CJK_LETTERS_AND_MONTHS\n  //\t    ;\n  //\n  //\t}\n\n}\n", "jasm_code": ".version 52 0 \n.class public super CharacterUtil \n.super java/lang/Object \n.field private static HANGUL_1ST [C \n.field private static HANGUL_2ND [C \n.field private static HANGUL_3RD [C \n.field private static fullwidthCharacterWidth I \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 7 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static setCjkCharacterWidth : (I)V \n    .code stack 2 locals 1 \nL0:     iload_0 \nL1:     iconst_1 \nL2:     if_icmplt L9 \nL5:     iload_0 \nL6:     putstatic Field CharacterUtil fullwidthCharacterWidth I \n\n        .stack same \nL9:     return \nL10:    \n        .linenumbertable \n            L0 29 \n            L5 30 \n            L9 31 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static getFullwidthCharacterWidth : ()I \n    .code stack 1 locals 0 \nL0:     getstatic Field CharacterUtil fullwidthCharacterWidth I \nL3:     ireturn \nL4:     \n        .linenumbertable \n            L0 39 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static disassembleKorean : (C)[C \n    .code stack 4 locals 5 \nL0:     iload_0 \nL1:     ldc 44032 \nL3:     if_icmplt L12 \nL6:     iload_0 \nL7:     ldc 55199 \nL9:     if_icmple L14 \n\n        .stack same \nL12:    aconst_null \nL13:    areturn \n\n        .stack same \nL14:    iload_0 \nL15:    ldc 44032 \nL17:    isub \nL18:    i2c \nL19:    istore_0 \nL20:    iload_0 \nL21:    bipush 28 \nL23:    irem \nL24:    istore_1 \nL25:    iload_0 \nL26:    iload_1 \nL27:    isub \nL28:    bipush 28 \nL30:    idiv \nL31:    bipush 21 \nL33:    irem \nL34:    istore_2 \nL35:    iload_0 \nL36:    iload_1 \nL37:    isub \nL38:    bipush 28 \nL40:    idiv \nL41:    bipush 21 \nL43:    idiv \nL44:    istore_3 \nL45:    iconst_3 \nL46:    newarray char \nL48:    astore 4 \nL50:    aload 4 \nL52:    iconst_0 \nL53:    getstatic Field CharacterUtil HANGUL_1ST [C \nL56:    iload_3 \nL57:    caload \nL58:    castore \nL59:    aload 4 \nL61:    iconst_1 \nL62:    getstatic Field CharacterUtil HANGUL_2ND [C \nL65:    iload_2 \nL66:    caload \nL67:    castore \nL68:    aload 4 \nL70:    iconst_2 \nL71:    getstatic Field CharacterUtil HANGUL_3RD [C \nL74:    iload_1 \nL75:    caload \nL76:    castore \nL77:    aload 4 \nL79:    areturn \nL80:    \n        .linenumbertable \n            L0 59 \n            L14 61 \n            L20 63 \n            L25 64 \n            L35 65 \n            L45 67 \n            L50 69 \n            L59 70 \n            L68 71 \n            L77 73 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static hasHangulJongsung : (C)Z \n    .code stack 2 locals 2 \nL0:     iload_0 \nL1:     invokestatic Method CharacterUtil disassembleKorean (C)[C \nL4:     astore_1 \nL5:     aload_1 \nL6:     ifnonnull L11 \nL9:     iconst_0 \nL10:    ireturn \n\n        .stack append Object [C \nL11:    aload_1 \nL12:    iconst_2 \nL13:    caload \nL14:    ifeq L21 \nL17:    iconst_1 \nL18:    goto L22 \n\n        .stack same \nL21:    iconst_0 \n\n        .stack stack_1 Integer \nL22:    ireturn \nL23:    \n        .linenumbertable \n            L0 93 \n            L5 95 \n            L11 97 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static isHalfWidth : (C)Z \n    .code stack 2 locals 1 \nL0:     iload_0 \nL1:     bipush 32 \nL3:     if_icmpge L8 \nL6:     iconst_1 \nL7:     ireturn \n\n        .stack same \nL8:     bipush 32 \nL10:    iload_0 \nL11:    if_icmpgt L22 \nL14:    iload_0 \nL15:    bipush 127 \nL17:    if_icmpgt L22 \nL20:    iconst_1 \nL21:    ireturn \n\n        .stack same \nL22:    ldc 65377 \nL24:    iload_0 \nL25:    if_icmpgt L36 \nL28:    iload_0 \nL29:    ldc 65500 \nL31:    if_icmpgt L36 \nL34:    iconst_1 \nL35:    ireturn \n\n        .stack same \nL36:    ldc 65512 \nL38:    iload_0 \nL39:    if_icmpgt L50 \nL42:    iload_0 \nL43:    ldc 65518 \nL45:    if_icmpgt L50 \nL48:    iconst_1 \nL49:    ireturn \n\n        .stack same \nL50:    iconst_0 \nL51:    ireturn \nL52:    \n        .linenumbertable \n            L0 113 \n            L8 115 \n            L22 120 \n            L36 123 \n            L50 144 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static getLength : (C)I \n    .code stack 1 locals 1 \nL0:     iload_0 \nL1:     invokestatic Method CharacterUtil isHalfWidth (C)Z \nL4:     ifeq L11 \nL7:     iconst_1 \nL8:     goto L14 \n\n        .stack same \nL11:    getstatic Field CharacterUtil fullwidthCharacterWidth I \n\n        .stack stack_1 Integer \nL14:    ireturn \nL15:    \n        .linenumbertable \n            L0 156 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static isCJK : (C)Z \n    .code stack 2 locals 1 \nL0:     bipush 32 \nL2:     iload_0 \nL3:     if_icmpgt L14 \nL6:     iload_0 \nL7:     bipush 127 \nL9:     if_icmpgt L14 \nL12:    iconst_0 \nL13:    ireturn \n\n        .stack same \nL14:    sipush 4352 \nL17:    iload_0 \nL18:    if_icmpgt L30 \nL21:    iload_0 \nL22:    sipush 4607 \nL25:    if_icmpgt L30 \nL28:    iconst_1 \nL29:    ireturn \n\n        .stack same \nL30:    sipush 12288 \nL33:    iload_0 \nL34:    if_icmpgt L46 \nL37:    iload_0 \nL38:    sipush 12351 \nL41:    if_icmpgt L46 \nL44:    iconst_1 \nL45:    ireturn \n\n        .stack same \nL46:    sipush 12352 \nL49:    iload_0 \nL50:    if_icmpgt L62 \nL53:    iload_0 \nL54:    sipush 12447 \nL57:    if_icmpgt L62 \nL60:    iconst_1 \nL61:    ireturn \n\n        .stack same \nL62:    sipush 12448 \nL65:    iload_0 \nL66:    if_icmpgt L78 \nL69:    iload_0 \nL70:    sipush 12543 \nL73:    if_icmpgt L78 \nL76:    iconst_1 \nL77:    ireturn \n\n        .stack same \nL78:    sipush 12592 \nL81:    iload_0 \nL82:    if_icmpgt L94 \nL85:    iload_0 \nL86:    sipush 12687 \nL89:    if_icmpgt L94 \nL92:    iconst_1 \nL93:    ireturn \n\n        .stack same \nL94:    ldc 44032 \nL96:    iload_0 \nL97:    if_icmpgt L108 \nL100:   iload_0 \nL101:   ldc 55212 \nL103:   if_icmpgt L108 \nL106:   iconst_1 \nL107:   ireturn \n\n        .stack same \nL108:   ldc 63744 \nL110:   iload_0 \nL111:   if_icmpgt L122 \nL114:   iload_0 \nL115:   ldc 64255 \nL117:   if_icmpgt L122 \nL120:   iconst_1 \nL121:   ireturn \n\n        .stack same \nL122:   sipush 19968 \nL125:   iload_0 \nL126:   if_icmpgt L137 \nL129:   iload_0 \nL130:   ldc 40959 \nL132:   if_icmpgt L137 \nL135:   iconst_1 \nL136:   ireturn \n\n        .stack same \nL137:   sipush 13312 \nL140:   iload_0 \nL141:   if_icmpgt L153 \nL144:   iload_0 \nL145:   sipush 19903 \nL148:   if_icmpgt L153 \nL151:   iconst_1 \nL152:   ireturn \n\n        .stack same \nL153:   sipush 8192 \nL156:   iload_0 \nL157:   if_icmpgt L169 \nL160:   iload_0 \nL161:   sipush 12287 \nL164:   if_icmpgt L169 \nL167:   iconst_1 \nL168:   ireturn \n\n        .stack same \nL169:   ldc 65377 \nL171:   iload_0 \nL172:   if_icmpgt L185 \nL175:   iload_0 \nL176:   ldc 65500 \nL178:   if_icmpgt L185 \nL181:   iconst_1 \nL182:   goto L186 \n\n        .stack same \nL185:   iconst_0 \n\n        .stack stack_1 Integer \nL186:   ireturn \nL187:   \n        .linenumbertable \n            L0 169 \n            L14 171 \n            L30 172 \n            L46 173 \n            L62 174 \n            L78 175 \n            L94 176 \n            L108 177 \n            L122 178 \n            L137 179 \n            L153 180 \n            L169 185 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static isKorean : (C)Z \n    .code stack 2 locals 1 \nL0:     sipush 4352 \nL3:     iload_0 \nL4:     if_icmpgt L16 \nL7:     iload_0 \nL8:     sipush 4607 \nL11:    if_icmpgt L16 \nL14:    iconst_1 \nL15:    ireturn \n\n        .stack same \nL16:    sipush 12592 \nL19:    iload_0 \nL20:    if_icmpgt L32 \nL23:    iload_0 \nL24:    sipush 12687 \nL27:    if_icmpgt L32 \nL30:    iconst_1 \nL31:    ireturn \n\n        .stack same \nL32:    ldc 44032 \nL34:    iload_0 \nL35:    if_icmpgt L46 \nL38:    iload_0 \nL39:    ldc 55212 \nL41:    if_icmpgt L46 \nL44:    iconst_1 \nL45:    ireturn \n\n        .stack same \nL46:    ldc 65440 \nL48:    iload_0 \nL49:    if_icmpgt L62 \nL52:    iload_0 \nL53:    ldc 65500 \nL55:    if_icmpgt L62 \nL58:    iconst_1 \nL59:    goto L63 \n\n        .stack same \nL62:    iconst_0 \n\n        .stack stack_1 Integer \nL63:    ireturn \nL64:    \n        .linenumbertable \n            L0 197 \n            L16 198 \n            L32 199 \n            L46 200 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static isJapanese : (C)Z \n    .code stack 2 locals 1 \nL0:     sipush 12352 \nL3:     iload_0 \nL4:     if_icmpgt L16 \nL7:     iload_0 \nL8:     sipush 12447 \nL11:    if_icmpgt L16 \nL14:    iconst_1 \nL15:    ireturn \n\n        .stack same \nL16:    sipush 12448 \nL19:    iload_0 \nL20:    if_icmpgt L32 \nL23:    iload_0 \nL24:    sipush 12543 \nL27:    if_icmpgt L32 \nL30:    iconst_1 \nL31:    ireturn \n\n        .stack same \nL32:    ldc 65381 \nL34:    iload_0 \nL35:    if_icmpgt L48 \nL38:    iload_0 \nL39:    ldc 65439 \nL41:    if_icmpgt L48 \nL44:    iconst_1 \nL45:    goto L49 \n\n        .stack same \nL48:    iconst_0 \n\n        .stack stack_1 Integer \nL49:    ireturn \nL50:    \n        .linenumbertable \n            L0 212 \n            L16 213 \n            L32 214 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static isChinese : (C)Z \n    .code stack 2 locals 1 \nL0:     sipush 12288 \nL3:     iload_0 \nL4:     if_icmpgt L16 \nL7:     iload_0 \nL8:     sipush 12351 \nL11:    if_icmpgt L16 \nL14:    iconst_1 \nL15:    ireturn \n\n        .stack same \nL16:    ldc 63744 \nL18:    iload_0 \nL19:    if_icmpgt L30 \nL22:    iload_0 \nL23:    ldc 64255 \nL25:    if_icmpgt L30 \nL28:    iconst_1 \nL29:    ireturn \n\n        .stack same \nL30:    sipush 19968 \nL33:    iload_0 \nL34:    if_icmpgt L45 \nL37:    iload_0 \nL38:    ldc 40959 \nL40:    if_icmpgt L45 \nL43:    iconst_1 \nL44:    ireturn \n\n        .stack same \nL45:    sipush 13312 \nL48:    iload_0 \nL49:    if_icmpgt L61 \nL52:    iload_0 \nL53:    sipush 19903 \nL56:    if_icmpgt L61 \nL59:    iconst_1 \nL60:    ireturn \n\n        .stack same \nL61:    sipush 8192 \nL64:    iload_0 \nL65:    if_icmpgt L77 \nL68:    iload_0 \nL69:    sipush 12287 \nL72:    if_icmpgt L77 \nL75:    iconst_1 \nL76:    ireturn \n\n        .stack same \nL77:    ldc 65377 \nL79:    iload_0 \nL80:    if_icmpgt L91 \nL83:    iload_0 \nL84:    ldc 65500 \nL86:    if_icmpgt L91 \nL89:    iconst_1 \nL90:    ireturn \n\n        .stack same \nL91:    sipush 12352 \nL94:    iload_0 \nL95:    if_icmpgt L107 \nL98:    iload_0 \nL99:    sipush 12447 \nL102:   if_icmpgt L107 \nL105:   iconst_1 \nL106:   ireturn \n\n        .stack same \nL107:   sipush 12448 \nL110:   iload_0 \nL111:   if_icmpgt L123 \nL114:   iload_0 \nL115:   sipush 12543 \nL118:   if_icmpgt L123 \nL121:   iconst_1 \nL122:   ireturn \n\n        .stack same \nL123:   ldc 65381 \nL125:   iload_0 \nL126:   if_icmpgt L139 \nL129:   iload_0 \nL130:   ldc 65439 \nL132:   if_icmpgt L139 \nL135:   iconst_1 \nL136:   goto L140 \n\n        .stack same \nL139:   iconst_0 \n\n        .stack stack_1 Integer \nL140:   ireturn \nL141:   \n        .linenumbertable \n            L0 226 \n            L16 227 \n            L30 228 \n            L45 229 \n            L61 230 \n            L77 235 \n            L91 237 \n            L107 238 \n            L123 239 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 4 locals 0 \nL0:     bipush 19 \nL2:     newarray char \nL4:     dup \nL5:     iconst_0 \nL6:     sipush 12593 \nL9:     castore \nL10:    dup \nL11:    iconst_1 \nL12:    sipush 12594 \nL15:    castore \nL16:    dup \nL17:    iconst_2 \nL18:    sipush 12596 \nL21:    castore \nL22:    dup \nL23:    iconst_3 \nL24:    sipush 12599 \nL27:    castore \nL28:    dup \nL29:    iconst_4 \nL30:    sipush 12600 \nL33:    castore \nL34:    dup \nL35:    iconst_5 \nL36:    sipush 12601 \nL39:    castore \nL40:    dup \nL41:    bipush 6 \nL43:    sipush 12609 \nL46:    castore \nL47:    dup \nL48:    bipush 7 \nL50:    sipush 12610 \nL53:    castore \nL54:    dup \nL55:    bipush 8 \nL57:    sipush 12611 \nL60:    castore \nL61:    dup \nL62:    bipush 9 \nL64:    sipush 12613 \nL67:    castore \nL68:    dup \nL69:    bipush 10 \nL71:    sipush 12614 \nL74:    castore \nL75:    dup \nL76:    bipush 11 \nL78:    sipush 12615 \nL81:    castore \nL82:    dup \nL83:    bipush 12 \nL85:    sipush 12616 \nL88:    castore \nL89:    dup \nL90:    bipush 13 \nL92:    sipush 12617 \nL95:    castore \nL96:    dup \nL97:    bipush 14 \nL99:    sipush 12618 \nL102:   castore \nL103:   dup \nL104:   bipush 15 \nL106:   sipush 12619 \nL109:   castore \nL110:   dup \nL111:   bipush 16 \nL113:   sipush 12620 \nL116:   castore \nL117:   dup \nL118:   bipush 17 \nL120:   sipush 12621 \nL123:   castore \nL124:   dup \nL125:   bipush 18 \nL127:   sipush 12622 \nL130:   castore \nL131:   putstatic Field CharacterUtil HANGUL_1ST [C \nL134:   bipush 21 \nL136:   newarray char \nL138:   dup \nL139:   iconst_0 \nL140:   sipush 12623 \nL143:   castore \nL144:   dup \nL145:   iconst_1 \nL146:   sipush 12624 \nL149:   castore \nL150:   dup \nL151:   iconst_2 \nL152:   sipush 12625 \nL155:   castore \nL156:   dup \nL157:   iconst_3 \nL158:   sipush 12626 \nL161:   castore \nL162:   dup \nL163:   iconst_4 \nL164:   sipush 12627 \nL167:   castore \nL168:   dup \nL169:   iconst_5 \nL170:   sipush 12628 \nL173:   castore \nL174:   dup \nL175:   bipush 6 \nL177:   sipush 12629 \nL180:   castore \nL181:   dup \nL182:   bipush 7 \nL184:   sipush 12630 \nL187:   castore \nL188:   dup \nL189:   bipush 8 \nL191:   sipush 12631 \nL194:   castore \nL195:   dup \nL196:   bipush 9 \nL198:   sipush 12632 \nL201:   castore \nL202:   dup \nL203:   bipush 10 \nL205:   sipush 12633 \nL208:   castore \nL209:   dup \nL210:   bipush 11 \nL212:   sipush 12634 \nL215:   castore \nL216:   dup \nL217:   bipush 12 \nL219:   sipush 12635 \nL222:   castore \nL223:   dup \nL224:   bipush 13 \nL226:   sipush 12636 \nL229:   castore \nL230:   dup \nL231:   bipush 14 \nL233:   sipush 12637 \nL236:   castore \nL237:   dup \nL238:   bipush 15 \nL240:   sipush 12638 \nL243:   castore \nL244:   dup \nL245:   bipush 16 \nL247:   sipush 12639 \nL250:   castore \nL251:   dup \nL252:   bipush 17 \nL254:   sipush 12640 \nL257:   castore \nL258:   dup \nL259:   bipush 18 \nL261:   sipush 12641 \nL264:   castore \nL265:   dup \nL266:   bipush 19 \nL268:   sipush 12642 \nL271:   castore \nL272:   dup \nL273:   bipush 20 \nL275:   sipush 12643 \nL278:   castore \nL279:   putstatic Field CharacterUtil HANGUL_2ND [C \nL282:   bipush 28 \nL284:   newarray char \nL286:   dup \nL287:   iconst_0 \nL288:   iconst_0 \nL289:   castore \nL290:   dup \nL291:   iconst_1 \nL292:   sipush 12593 \nL295:   castore \nL296:   dup \nL297:   iconst_2 \nL298:   sipush 12594 \nL301:   castore \nL302:   dup \nL303:   iconst_3 \nL304:   sipush 12595 \nL307:   castore \nL308:   dup \nL309:   iconst_4 \nL310:   sipush 12596 \nL313:   castore \nL314:   dup \nL315:   iconst_5 \nL316:   sipush 12597 \nL319:   castore \nL320:   dup \nL321:   bipush 6 \nL323:   sipush 12598 \nL326:   castore \nL327:   dup \nL328:   bipush 7 \nL330:   sipush 12599 \nL333:   castore \nL334:   dup \nL335:   bipush 8 \nL337:   sipush 12601 \nL340:   castore \nL341:   dup \nL342:   bipush 9 \nL344:   sipush 12602 \nL347:   castore \nL348:   dup \nL349:   bipush 10 \nL351:   sipush 12603 \nL354:   castore \nL355:   dup \nL356:   bipush 11 \nL358:   sipush 12604 \nL361:   castore \nL362:   dup \nL363:   bipush 12 \nL365:   sipush 12605 \nL368:   castore \nL369:   dup \nL370:   bipush 13 \nL372:   sipush 12606 \nL375:   castore \nL376:   dup \nL377:   bipush 14 \nL379:   sipush 12607 \nL382:   castore \nL383:   dup \nL384:   bipush 15 \nL386:   sipush 12608 \nL389:   castore \nL390:   dup \nL391:   bipush 16 \nL393:   sipush 12609 \nL396:   castore \nL397:   dup \nL398:   bipush 17 \nL400:   sipush 12610 \nL403:   castore \nL404:   dup \nL405:   bipush 18 \nL407:   sipush 12612 \nL410:   castore \nL411:   dup \nL412:   bipush 19 \nL414:   sipush 12613 \nL417:   castore \nL418:   dup \nL419:   bipush 20 \nL421:   sipush 12614 \nL424:   castore \nL425:   dup \nL426:   bipush 21 \nL428:   sipush 12615 \nL431:   castore \nL432:   dup \nL433:   bipush 22 \nL435:   sipush 12616 \nL438:   castore \nL439:   dup \nL440:   bipush 23 \nL442:   sipush 12618 \nL445:   castore \nL446:   dup \nL447:   bipush 24 \nL449:   sipush 12619 \nL452:   castore \nL453:   dup \nL454:   bipush 25 \nL456:   sipush 12620 \nL459:   castore \nL460:   dup \nL461:   bipush 26 \nL463:   sipush 12621 \nL466:   castore \nL467:   dup \nL468:   bipush 27 \nL470:   sipush 12622 \nL473:   castore \nL474:   putstatic Field CharacterUtil HANGUL_3RD [C \nL477:   iconst_2 \nL478:   putstatic Field CharacterUtil fullwidthCharacterWidth I \nL481:   return \nL482:   \n        .linenumbertable \n            L0 10 \n            L134 13 \n            L282 16 \n            L477 21 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'CharacterUtil.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 23:05:08 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CharacterUtil_ESTest extends CharacterUtil_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      boolean boolean0 = CharacterUtil.isHalfWidth('\u007f');\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      CharacterUtil.hasHangulJongsung(' ');\n      int int0 = CharacterUtil.getLength('v');\n      CharacterUtil.setCjkCharacterWidth(1);\n      boolean boolean0 = CharacterUtil.isKorean('~');\n      int int1 = CharacterUtil.getFullwidthCharacterWidth();\n      assertTrue(int1 == int0);\n      \n      boolean boolean1 = CharacterUtil.hasHangulJongsung('{');\n      assertFalse(boolean1);\n      \n      boolean boolean2 = CharacterUtil.isChinese('~');\n      assertTrue(boolean2 == boolean0);\n      assertFalse(boolean2);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      boolean boolean0 = CharacterUtil.isHalfWidth(' ');\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      char[] charArray0 = CharacterUtil.disassembleKorean('P');\n      assertNull(charArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      boolean boolean0 = CharacterUtil.isJapanese('~');\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      boolean boolean0 = CharacterUtil.isCJK('2');\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      CharacterUtil.setCjkCharacterWidth(0);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      CharacterUtil characterUtil0 = new CharacterUtil();\n      assertEquals(2, characterUtil0.getFullwidthCharacterWidth());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 23:05:08 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class CharacterUtil_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CharacterUtil\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpmi74ld2m\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CharacterUtil_ESTest_scaffolding.class.getClassLoader() ,\n      \"CharacterUtil\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CharacterUtil_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CharacterUtil\"\n    );\n  }\n}\n", "class_idx": 72}
{"class_name": "ParseRuntimeException", "java_source": "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n * agreements. See the NOTICE file distributed with this work for additional information regarding\n * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n * copy of the License at\n *\n * <p>http://www.apache.org/licenses/LICENSE-2.0\n *\n * <p>Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\npublic class ParseRuntimeException extends RuntimeException {\n\n  public ParseRuntimeException(String message) {\n    super(message);\n  }\n\n  public ParseRuntimeException(String message, Throwable cause) {\n    super(message, cause);\n  }\n\n  public ParseRuntimeException(Throwable cause) {\n    super(cause);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ParseRuntimeException \n.super java/lang/RuntimeException \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 22 \n            L5 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/Throwable;)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     aload_2 \nL3:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;Ljava/lang/Throwable;)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 26 \n            L6 27 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/Throwable;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/Throwable;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 30 \n            L5 31 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ParseRuntimeException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 15:49:35 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.lang.MockThrowable;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ParseRuntimeException_ESTest extends ParseRuntimeException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      MockThrowable mockThrowable0 = new MockThrowable();\n      ParseRuntimeException parseRuntimeException0 = new ParseRuntimeException(mockThrowable0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      ParseRuntimeException parseRuntimeException0 = new ParseRuntimeException(\"ParseRuntimeException\");\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      MockThrowable mockThrowable0 = new MockThrowable();\n      ParseRuntimeException parseRuntimeException0 = new ParseRuntimeException(\"\", mockThrowable0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 15:49:35 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ParseRuntimeException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ParseRuntimeException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp6dds00_v\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ParseRuntimeException_ESTest_scaffolding.class.getClassLoader() ,\n      \"ParseRuntimeException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ParseRuntimeException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ParseRuntimeException\"\n    );\n  }\n}\n", "class_idx": 73}
{"class_name": "DeleteBucketAnalyticsConfigurationResult", "java_source": "/*\n * Copyright 2011-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at:\n *\n *    http://aws.amazon.com/apache2.0\n *\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport java.io.Serializable;\n\n/**\n * Result object to contain the response returned from {@link\n * com.amazonaws.services.s3.AmazonS3Client#deleteBucketAnalyticsConfiguration(DeleteBucketAnalyticsConfigurationRequest)}\n * operation.\n */\npublic class DeleteBucketAnalyticsConfigurationResult implements Serializable {}\n", "jasm_code": ".version 52 0 \n.class public super DeleteBucketAnalyticsConfigurationResult \n.super java/lang/Object \n.implements java/io/Serializable \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 24 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'DeleteBucketAnalyticsConfigurationResult.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 16:48:02 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class DeleteBucketAnalyticsConfigurationResult_ESTest extends DeleteBucketAnalyticsConfigurationResult_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      DeleteBucketAnalyticsConfigurationResult deleteBucketAnalyticsConfigurationResult0 = new DeleteBucketAnalyticsConfigurationResult();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 16:48:02 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class DeleteBucketAnalyticsConfigurationResult_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"DeleteBucketAnalyticsConfigurationResult\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpqan457iv\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DeleteBucketAnalyticsConfigurationResult_ESTest_scaffolding.class.getClassLoader() ,\n      \"DeleteBucketAnalyticsConfigurationResult\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DeleteBucketAnalyticsConfigurationResult_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"DeleteBucketAnalyticsConfigurationResult\"\n    );\n  }\n}\n", "class_idx": 74}
{"class_name": "TestingbotUnauthorizedException", "java_source": "public class TestingbotUnauthorizedException extends RuntimeException {\n  public TestingbotUnauthorizedException() {\n    super(\"This request was not authorized. Please supply TestingBot key and secret\");\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super TestingbotUnauthorizedException \n.super java/lang/RuntimeException \n\n.method public <init> : ()V \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     ldc 'This request was not authorized. Please supply TestingBot key and secret' \nL3:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 5 \n            L6 6 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'TestingbotUnauthorizedException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 03:42:43 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class TestingbotUnauthorizedException_ESTest extends TestingbotUnauthorizedException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      TestingbotUnauthorizedException testingbotUnauthorizedException0 = new TestingbotUnauthorizedException();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 03:42:43 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class TestingbotUnauthorizedException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"TestingbotUnauthorizedException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmptpquwe68\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(TestingbotUnauthorizedException_ESTest_scaffolding.class.getClassLoader() ,\n      \"TestingbotUnauthorizedException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(TestingbotUnauthorizedException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"TestingbotUnauthorizedException\"\n    );\n  }\n}\n", "class_idx": 75}
{"class_name": "CheckC", "java_source": "public class CheckC {}\n", "jasm_code": ".version 52 0 \n.class public super CheckC \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'CheckC.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 20:46:27 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CheckC_ESTest extends CheckC_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      CheckC checkC0 = new CheckC();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 20:46:27 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class CheckC_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CheckC\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp5m9kjxos\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CheckC_ESTest_scaffolding.class.getClassLoader() ,\n      \"CheckC\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CheckC_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CheckC\"\n    );\n  }\n}\n", "class_idx": 76}
{"class_name": "signlink", "java_source": "/*\n * This file is part of the RuneScape client\n * revision 317, which was publicly released\n * on the 13th of June 2005.\n *\n * This file has been refactored in order to\n * restore readability to the codebase for\n * educational purposes, primarility to those\n * with an interest in game development.\n *\n * It may be a criminal offence to run this\n * file. This file is the intellectual property\n * of Jagex Ltd.\n */\n\n/*\n * This file was renamed as part of the 317refactor project.\n */\n\nimport java.applet.Applet;\nimport java.io.DataInputStream;\nimport java.io.DataOutputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.RandomAccessFile;\nimport java.net.InetAddress;\nimport java.net.Socket;\nimport java.net.URL;\n\npublic final class signlink implements Runnable {\n\n  public static final int clientversion = 317;\n\n  public static int uid;\n\n  public static int storeid = 32;\n\n  public static RandomAccessFile cache_dat = null;\n\n  public static final RandomAccessFile[] cache_idx = new RandomAccessFile[5];\n\n  public static boolean sunjava;\n\n  public static final Applet applet = null;\n\n  private static boolean active;\n\n  private static int threadliveid;\n\n  private static InetAddress socketip;\n\n  private static int socketreq;\n\n  private static Socket socket = null;\n\n  private static int threadreqpri = 1;\n\n  private static Runnable threadreq = null;\n\n  private static String dnsreq = null;\n  public static String dns = null;\n  private static String urlreq = null;\n  private static DataInputStream urlstream = null;\n  private static int savelen;\n  private static String savereq = null;\n  private static byte[] savebuf = null;\n  private static boolean midiplay;\n  private static int midipos;\n  public static String midi = null;\n  public static int midiVolume;\n  public static int midiFade;\n  private static boolean waveplay;\n  private static int wavepos;\n  public static int wavevol;\n  public static boolean reporterror = true;\n  public static String errorname = \"\";\n\n  private signlink() {}\n\n  public static synchronized void dnslookup(String s) {\n    dns = s;\n    dnsreq = s;\n  }\n\n  public static String findcachedirORIG() {\n    String as[] = {\n      \"c:/windows/\",\n      \"c:/winnt/\",\n      \"d:/windows/\",\n      \"d:/winnt/\",\n      \"e:/windows/\",\n      \"e:/winnt/\",\n      \"f:/windows/\",\n      \"f:/winnt/\",\n      \"c:/\",\n      \"~/\",\n      \"/tmp/\",\n      \"\",\n      \"c:/rscache\",\n      \"/rscache\"\n    };\n    if (storeid < 32 || storeid > 34) storeid = 32;\n    String s = \".file_store_\" + storeid;\n    for (int i = 0; i < as.length; i++)\n      try {\n        String s1 = as[i];\n        if (s1.length() > 0) {\n          File file = new File(s1);\n          if (!file.exists()) continue;\n        }\n        File file1 = new File(s1 + s);\n        if (file1.exists() || file1.mkdir()) return s1 + s + \"/\";\n      } catch (Exception _ex) {\n      }\n\n    return null;\n  }\n\n  public static synchronized void midisave(byte abyte0[], int i) {\n    if (i > 0x1e8480) return;\n    if (savereq != null) {\n    } else {\n      midipos = (midipos + 1) % 5;\n      savelen = i;\n      savebuf = abyte0;\n      midiplay = true;\n      savereq = \"jingle\" + midipos + \".mid\";\n    }\n  }\n\n  public static synchronized Socket openSocket(int port) throws IOException {\n    for (socketreq = port; socketreq != 0; )\n      try {\n        Thread.sleep(50L);\n      } catch (Exception _ex) {\n      }\n\n    if (socket == null) throw new IOException(\"could not open socket\");\n    else return socket;\n  }\n\n  public static synchronized DataInputStream openurl(String s) throws IOException {\n    for (urlreq = s; urlreq != null; )\n      try {\n        Thread.sleep(50L);\n      } catch (Exception _ex) {\n      }\n\n    if (urlstream == null) throw new IOException(\"could not open: \" + s);\n    else return urlstream;\n  }\n\n  public static void reporterror(String s) {\n    System.out.println(\"Error: \" + s);\n  }\n\n  public static void startpriv(InetAddress inetaddress) {\n    threadliveid = (int) (Math.random() * 99999999D);\n    if (active) {\n      try {\n        Thread.sleep(500L);\n      } catch (Exception _ex) {\n      }\n      active = false;\n    }\n    socketreq = 0;\n    threadreq = null;\n    dnsreq = null;\n    savereq = null;\n    urlreq = null;\n    socketip = inetaddress;\n    Thread thread = new Thread(new signlink());\n    thread.setDaemon(true);\n    thread.start();\n    while (!active)\n      try {\n        Thread.sleep(50L);\n      } catch (Exception _ex) {\n      }\n  }\n\n  public static synchronized void startThread(Runnable runnable, int priority) {\n    threadreqpri = priority;\n    threadreq = runnable;\n  }\n\n  public static synchronized boolean wavereplay() {\n    if (savereq != null) {\n      return false;\n    } else {\n      savebuf = null;\n      waveplay = true;\n      savereq = \"sound\" + wavepos + \".wav\";\n      return true;\n    }\n  }\n\n  public static synchronized boolean wavesave(byte abyte0[], int i) {\n    if (i > 0x1e8480) return false;\n    if (savereq != null) {\n      return false;\n    } else {\n      wavepos = (wavepos + 1) % 5;\n      savelen = i;\n      savebuf = abyte0;\n      waveplay = true;\n      savereq = \"sound\" + wavepos + \".wav\";\n      return true;\n    }\n  }\n\n  private static String findcachedir() {\n    return \"./cache/\";\n  }\n\n  private static int getuid(String s) {\n    try {\n      File file = new File(s + \"uid.dat\");\n      if (!file.exists() || file.length() < 4L) {\n        DataOutputStream dataoutputstream =\n            new DataOutputStream(new FileOutputStream(s + \"uid.dat\"));\n        dataoutputstream.writeInt((int) (Math.random() * 99999999D));\n        dataoutputstream.close();\n      }\n    } catch (Exception _ex) {\n    }\n    try {\n      DataInputStream datainputstream = new DataInputStream(new FileInputStream(s + \"uid.dat\"));\n      int i = datainputstream.readInt();\n      datainputstream.close();\n      return i + 1;\n    } catch (Exception _ex) {\n      return 0;\n    }\n  }\n\n  @Override\n  public void run() {\n    active = true;\n    String s = findcachedir();\n    uid = getuid(s);\n    try {\n      File file = new File(s + \"main_file_cache.dat\");\n      if (file.exists() && file.length() > 0x3200000L) file.delete();\n      cache_dat = new RandomAccessFile(s + \"main_file_cache.dat\", \"rw\");\n      for (int j = 0; j < 5; j++)\n        cache_idx[j] = new RandomAccessFile(s + \"main_file_cache.idx\" + j, \"rw\");\n\n    } catch (Exception exception) {\n      exception.printStackTrace();\n    }\n    for (int i = threadliveid; threadliveid == i; ) {\n      if (socketreq != 0) {\n        try {\n          socket = new Socket(socketip, socketreq);\n        } catch (Exception _ex) {\n          socket = null;\n        }\n        socketreq = 0;\n      } else if (threadreq != null) {\n        Thread thread = new Thread(threadreq);\n        thread.setDaemon(true);\n        thread.start();\n        thread.setPriority(threadreqpri);\n        threadreq = null;\n      } else if (dnsreq != null) {\n        try {\n          dns = InetAddress.getByName(dnsreq).getHostName();\n        } catch (Exception _ex) {\n          dns = \"unknown\";\n        }\n        dnsreq = null;\n      } else if (savereq != null) {\n        if (savebuf != null)\n          try {\n            FileOutputStream fileoutputstream = new FileOutputStream(s + savereq);\n            fileoutputstream.write(savebuf, 0, savelen);\n            fileoutputstream.close();\n          } catch (Exception _ex) {\n          }\n        if (waveplay) {\n          waveplay = false;\n        }\n\n        if (midiplay) {\n          midi = s + savereq;\n          midiplay = false;\n        }\n\n        savereq = null;\n      } else if (urlreq != null) {\n        try {\n          System.out.println(\"urlstream\");\n          urlstream = new DataInputStream((new URL(applet.getCodeBase(), urlreq)).openStream());\n        } catch (Exception _ex) {\n          urlstream = null;\n        }\n        urlreq = null;\n      }\n      try {\n        Thread.sleep(50L);\n      } catch (Exception _ex) {\n      }\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public final super signlink \n.super java/lang/Object \n.implements java/lang/Runnable \n.field public static final clientversion I = 317 \n.field public static uid I \n.field public static storeid I \n.field public static cache_dat Ljava/io/RandomAccessFile; \n.field public static final cache_idx [Ljava/io/RandomAccessFile; \n.field public static sunjava Z \n.field public static final applet Ljava/applet/Applet; \n.field private static active Z \n.field private static threadliveid I \n.field private static socketip Ljava/net/InetAddress; \n.field private static socketreq I \n.field private static socket Ljava/net/Socket; \n.field private static threadreqpri I \n.field private static threadreq Ljava/lang/Runnable; \n.field private static dnsreq Ljava/lang/String; \n.field public static dns Ljava/lang/String; \n.field private static urlreq Ljava/lang/String; \n.field private static urlstream Ljava/io/DataInputStream; \n.field private static savelen I \n.field private static savereq Ljava/lang/String; \n.field private static savebuf [B \n.field private static midiplay Z \n.field private static midipos I \n.field public static midi Ljava/lang/String; \n.field public static midiVolume I \n.field public static midiFade I \n.field private static waveplay Z \n.field private static wavepos I \n.field public static wavevol I \n.field public static reporterror Z \n.field public static errorname Ljava/lang/String; \n\n.method private <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 82 \n            L4 83 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static synchronized dnslookup : (Ljava/lang/String;)V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     putstatic Field signlink dns Ljava/lang/String; \nL4:     aload_0 \nL5:     putstatic Field signlink dnsreq Ljava/lang/String; \nL8:     return \nL9:     \n        .linenumbertable \n            L0 86 \n            L4 87 \n            L8 88 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static findcachedirORIG : ()Ljava/lang/String; \n    .code stack 4 locals 5 \nL0:     bipush 14 \nL2:     anewarray java/lang/String \nL5:     dup \nL6:     iconst_0 \nL7:     ldc 'c:/windows/' \nL9:     aastore \nL10:    dup \nL11:    iconst_1 \nL12:    ldc 'c:/winnt/' \nL14:    aastore \nL15:    dup \nL16:    iconst_2 \nL17:    ldc 'd:/windows/' \nL19:    aastore \nL20:    dup \nL21:    iconst_3 \nL22:    ldc 'd:/winnt/' \nL24:    aastore \nL25:    dup \nL26:    iconst_4 \nL27:    ldc 'e:/windows/' \nL29:    aastore \nL30:    dup \nL31:    iconst_5 \nL32:    ldc 'e:/winnt/' \nL34:    aastore \nL35:    dup \nL36:    bipush 6 \nL38:    ldc 'f:/windows/' \nL40:    aastore \nL41:    dup \nL42:    bipush 7 \nL44:    ldc 'f:/winnt/' \nL46:    aastore \nL47:    dup \nL48:    bipush 8 \nL50:    ldc 'c:/' \nL52:    aastore \nL53:    dup \nL54:    bipush 9 \nL56:    ldc '~/' \nL58:    aastore \nL59:    dup \nL60:    bipush 10 \nL62:    ldc '/tmp/' \nL64:    aastore \nL65:    dup \nL66:    bipush 11 \nL68:    ldc '' \nL70:    aastore \nL71:    dup \nL72:    bipush 12 \nL74:    ldc 'c:/rscache' \nL76:    aastore \nL77:    dup \nL78:    bipush 13 \nL80:    ldc '/rscache' \nL82:    aastore \nL83:    astore_0 \nL84:    getstatic Field signlink storeid I \nL87:    bipush 32 \nL89:    if_icmplt L100 \nL92:    getstatic Field signlink storeid I \nL95:    bipush 34 \nL97:    if_icmple L105 \n\n        .stack append Object [Ljava/lang/String; \nL100:   bipush 32 \nL102:   putstatic Field signlink storeid I \n\n        .stack same \nL105:   new java/lang/StringBuilder \nL108:   dup \nL109:   invokespecial Method java/lang/StringBuilder <init> ()V \nL112:   ldc '.file_store_' \nL114:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL117:   getstatic Field signlink storeid I \nL120:   invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL123:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL126:   astore_1 \nL127:   iconst_0 \nL128:   istore_2 \n\n        .stack append Object java/lang/String Integer \nL129:   iload_2 \nL130:   aload_0 \nL131:   arraylength \nL132:   if_icmpge L244 \n        .catch java/lang/Exception from L135 to L164 using L237 \nL135:   aload_0 \nL136:   iload_2 \nL137:   aaload \nL138:   astore_3 \nL139:   aload_3 \nL140:   invokevirtual Method java/lang/String length ()I \nL143:   ifle L167 \nL146:   new java/io/File \nL149:   dup \nL150:   aload_3 \nL151:   invokespecial Method java/io/File <init> (Ljava/lang/String;)V \nL154:   astore 4 \nL156:   aload 4 \nL158:   invokevirtual Method java/io/File exists ()Z \nL161:   ifne L167 \nL164:   goto L238 \n        .catch java/lang/Exception from L167 to L233 using L237 \n\n        .stack append Object java/lang/String \nL167:   new java/io/File \nL170:   dup \nL171:   new java/lang/StringBuilder \nL174:   dup \nL175:   invokespecial Method java/lang/StringBuilder <init> ()V \nL178:   aload_3 \nL179:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL182:   aload_1 \nL183:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL186:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL189:   invokespecial Method java/io/File <init> (Ljava/lang/String;)V \nL192:   astore 4 \nL194:   aload 4 \nL196:   invokevirtual Method java/io/File exists ()Z \nL199:   ifne L210 \nL202:   aload 4 \nL204:   invokevirtual Method java/io/File mkdir ()Z \nL207:   ifeq L234 \n\n        .stack append Object java/io/File \nL210:   new java/lang/StringBuilder \nL213:   dup \nL214:   invokespecial Method java/lang/StringBuilder <init> ()V \nL217:   aload_3 \nL218:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL221:   aload_1 \nL222:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL225:   ldc '/' \nL227:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL230:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL233:   areturn \n\n        .stack chop 2 \nL234:   goto L238 \n\n        .stack stack_1 Object java/lang/Exception \nL237:   astore_3 \n\n        .stack same \nL238:   iinc 2 1 \nL241:   goto L129 \n\n        .stack chop 1 \nL244:   aconst_null \nL245:   areturn \nL246:   \n        .linenumbertable \n            L0 91 \n            L84 93 \n            L100 94 \n            L105 95 \n            L127 96 \n            L135 98 \n            L139 99 \n            L146 100 \n            L156 101 \n            L164 102 \n            L167 104 \n            L194 105 \n            L210 106 \n            L234 108 \n            L237 107 \n            L238 96 \n            L244 110 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static synchronized midisave : ([BI)V \n    .code stack 2 locals 2 \nL0:     iload_1 \nL1:     ldc 2000000 \nL3:     if_icmple L7 \nL6:     return \n\n        .stack same \nL7:     getstatic Field signlink savereq Ljava/lang/String; \nL10:    ifnull L16 \nL13:    goto L67 \n\n        .stack same \nL16:    getstatic Field signlink midipos I \nL19:    iconst_1 \nL20:    iadd \nL21:    iconst_5 \nL22:    irem \nL23:    putstatic Field signlink midipos I \nL26:    iload_1 \nL27:    putstatic Field signlink savelen I \nL30:    aload_0 \nL31:    putstatic Field signlink savebuf [B \nL34:    iconst_1 \nL35:    putstatic Field signlink midiplay Z \nL38:    new java/lang/StringBuilder \nL41:    dup \nL42:    invokespecial Method java/lang/StringBuilder <init> ()V \nL45:    ldc 'jingle' \nL47:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL50:    getstatic Field signlink midipos I \nL53:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL56:    ldc '.mid' \nL58:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL61:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL64:    putstatic Field signlink savereq Ljava/lang/String; \n\n        .stack same \nL67:    return \nL68:    \n        .linenumbertable \n            L0 115 \n            L6 116 \n            L7 117 \n            L16 119 \n            L26 120 \n            L30 121 \n            L34 122 \n            L38 123 \n            L67 125 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static synchronized openSocket : (I)Ljava/net/Socket; \n    .code stack 3 locals 2 \nL0:     iload_0 \nL1:     putstatic Field signlink socketreq I \n\n        .stack same \nL4:     getstatic Field signlink socketreq I \nL7:     ifeq L23 \n        .catch java/lang/Exception from L10 to L16 using L19 \nL10:    ldc2_w 50L \nL13:    invokestatic Method java/lang/Thread sleep (J)V \nL16:    goto L4 \n\n        .stack stack_1 Object java/lang/Exception \nL19:    astore_1 \nL20:    goto L4 \n\n        .stack same \nL23:    getstatic Field signlink socket Ljava/net/Socket; \nL26:    ifnonnull L39 \nL29:    new java/io/IOException \nL32:    dup \nL33:    ldc 'could not open socket' \nL35:    invokespecial Method java/io/IOException <init> (Ljava/lang/String;)V \nL38:    athrow \n\n        .stack same \nL39:    getstatic Field signlink socket Ljava/net/Socket; \nL42:    areturn \nL43:    \n        .linenumbertable \n            L0 128 \n            L10 130 \n            L16 132 \n            L19 131 \n            L20 132 \n            L23 134 \n            L29 135 \n            L39 137 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/IOException \n.end method \n\n.method public static synchronized openurl : (Ljava/lang/String;)Ljava/io/DataInputStream; \n    .code stack 4 locals 2 \nL0:     aload_0 \nL1:     putstatic Field signlink urlreq Ljava/lang/String; \n\n        .stack same \nL4:     getstatic Field signlink urlreq Ljava/lang/String; \nL7:     ifnull L23 \n        .catch java/lang/Exception from L10 to L16 using L19 \nL10:    ldc2_w 50L \nL13:    invokestatic Method java/lang/Thread sleep (J)V \nL16:    goto L4 \n\n        .stack stack_1 Object java/lang/Exception \nL19:    astore_1 \nL20:    goto L4 \n\n        .stack same \nL23:    getstatic Field signlink urlstream Ljava/io/DataInputStream; \nL26:    ifnonnull L56 \nL29:    new java/io/IOException \nL32:    dup \nL33:    new java/lang/StringBuilder \nL36:    dup \nL37:    invokespecial Method java/lang/StringBuilder <init> ()V \nL40:    ldc 'could not open: ' \nL42:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL45:    aload_0 \nL46:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL49:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL52:    invokespecial Method java/io/IOException <init> (Ljava/lang/String;)V \nL55:    athrow \n\n        .stack same \nL56:    getstatic Field signlink urlstream Ljava/io/DataInputStream; \nL59:    areturn \nL60:    \n        .linenumbertable \n            L0 141 \n            L10 143 \n            L16 145 \n            L19 144 \n            L20 145 \n            L23 147 \n            L29 148 \n            L56 150 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/IOException \n.end method \n\n.method public static reporterror : (Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'Error: ' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL22:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL25:    return \nL26:    \n        .linenumbertable \n            L0 154 \n            L25 155 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static startpriv : (Ljava/net/InetAddress;)V \n    .code stack 4 locals 3 \nL0:     invokestatic Method java/lang/Math random ()D \nL3:     ldc2_w +99999999.0 \nL6:     dmul \nL7:     d2i \nL8:     putstatic Field signlink threadliveid I \nL11:    getstatic Field signlink active Z \nL14:    ifeq L31 \n        .catch java/lang/Exception from L17 to L23 using L26 \nL17:    ldc2_w 500L \nL20:    invokestatic Method java/lang/Thread sleep (J)V \nL23:    goto L27 \n\n        .stack stack_1 Object java/lang/Exception \nL26:    astore_1 \n\n        .stack same \nL27:    iconst_0 \nL28:    putstatic Field signlink active Z \n\n        .stack same \nL31:    iconst_0 \nL32:    putstatic Field signlink socketreq I \nL35:    aconst_null \nL36:    putstatic Field signlink threadreq Ljava/lang/Runnable; \nL39:    aconst_null \nL40:    putstatic Field signlink dnsreq Ljava/lang/String; \nL43:    aconst_null \nL44:    putstatic Field signlink savereq Ljava/lang/String; \nL47:    aconst_null \nL48:    putstatic Field signlink urlreq Ljava/lang/String; \nL51:    aload_0 \nL52:    putstatic Field signlink socketip Ljava/net/InetAddress; \nL55:    new java/lang/Thread \nL58:    dup \nL59:    new signlink \nL62:    dup \nL63:    invokespecial Method signlink <init> ()V \nL66:    invokespecial Method java/lang/Thread <init> (Ljava/lang/Runnable;)V \nL69:    astore_1 \nL70:    aload_1 \nL71:    iconst_1 \nL72:    invokevirtual Method java/lang/Thread setDaemon (Z)V \nL75:    aload_1 \nL76:    invokevirtual Method java/lang/Thread start ()V \n\n        .stack append Object java/lang/Thread \nL79:    getstatic Field signlink active Z \nL82:    ifne L98 \n        .catch java/lang/Exception from L85 to L91 using L94 \nL85:    ldc2_w 50L \nL88:    invokestatic Method java/lang/Thread sleep (J)V \nL91:    goto L79 \n\n        .stack stack_1 Object java/lang/Exception \nL94:    astore_2 \nL95:    goto L79 \n\n        .stack same \nL98:    return \nL99:    \n        .linenumbertable \n            L0 158 \n            L11 159 \n            L17 161 \n            L23 163 \n            L26 162 \n            L27 164 \n            L31 166 \n            L35 167 \n            L39 168 \n            L43 169 \n            L47 170 \n            L51 171 \n            L55 172 \n            L70 173 \n            L75 174 \n            L79 175 \n            L85 177 \n            L91 179 \n            L94 178 \n            L95 179 \n            L98 180 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static synchronized startThread : (Ljava/lang/Runnable;I)V \n    .code stack 1 locals 2 \nL0:     iload_1 \nL1:     putstatic Field signlink threadreqpri I \nL4:     aload_0 \nL5:     putstatic Field signlink threadreq Ljava/lang/Runnable; \nL8:     return \nL9:     \n        .linenumbertable \n            L0 183 \n            L4 184 \n            L8 185 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static synchronized wavereplay : ()Z \n    .code stack 2 locals 0 \nL0:     getstatic Field signlink savereq Ljava/lang/String; \nL3:     ifnull L8 \nL6:     iconst_0 \nL7:     ireturn \n\n        .stack same \nL8:     aconst_null \nL9:     putstatic Field signlink savebuf [B \nL12:    iconst_1 \nL13:    putstatic Field signlink waveplay Z \nL16:    new java/lang/StringBuilder \nL19:    dup \nL20:    invokespecial Method java/lang/StringBuilder <init> ()V \nL23:    ldc 'sound' \nL25:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL28:    getstatic Field signlink wavepos I \nL31:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL34:    ldc '.wav' \nL36:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL39:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL42:    putstatic Field signlink savereq Ljava/lang/String; \nL45:    iconst_1 \nL46:    ireturn \nL47:    \n        .linenumbertable \n            L0 188 \n            L6 189 \n            L8 191 \n            L12 192 \n            L16 193 \n            L45 194 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static synchronized wavesave : ([BI)Z \n    .code stack 2 locals 2 \nL0:     iload_1 \nL1:     ldc 2000000 \nL3:     if_icmple L8 \nL6:     iconst_0 \nL7:     ireturn \n\n        .stack same \nL8:     getstatic Field signlink savereq Ljava/lang/String; \nL11:    ifnull L16 \nL14:    iconst_0 \nL15:    ireturn \n\n        .stack same \nL16:    getstatic Field signlink wavepos I \nL19:    iconst_1 \nL20:    iadd \nL21:    iconst_5 \nL22:    irem \nL23:    putstatic Field signlink wavepos I \nL26:    iload_1 \nL27:    putstatic Field signlink savelen I \nL30:    aload_0 \nL31:    putstatic Field signlink savebuf [B \nL34:    iconst_1 \nL35:    putstatic Field signlink waveplay Z \nL38:    new java/lang/StringBuilder \nL41:    dup \nL42:    invokespecial Method java/lang/StringBuilder <init> ()V \nL45:    ldc 'sound' \nL47:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL50:    getstatic Field signlink wavepos I \nL53:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL56:    ldc '.wav' \nL58:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL61:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL64:    putstatic Field signlink savereq Ljava/lang/String; \nL67:    iconst_1 \nL68:    ireturn \nL69:    \n        .linenumbertable \n            L0 199 \n            L6 200 \n            L8 201 \n            L14 202 \n            L16 204 \n            L26 205 \n            L30 206 \n            L34 207 \n            L38 208 \n            L67 209 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private static findcachedir : ()Ljava/lang/String; \n    .code stack 1 locals 0 \nL0:     ldc './cache/' \nL2:     areturn \nL3:     \n        .linenumbertable \n            L0 214 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private static getuid : (Ljava/lang/String;)I \n    .code stack 6 locals 3 \n        .catch java/lang/Exception from L0 to L95 using L98 \nL0:     new java/io/File \nL3:     dup \nL4:     new java/lang/StringBuilder \nL7:     dup \nL8:     invokespecial Method java/lang/StringBuilder <init> ()V \nL11:    aload_0 \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    ldc 'uid.dat' \nL17:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL20:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL23:    invokespecial Method java/io/File <init> (Ljava/lang/String;)V \nL26:    astore_1 \nL27:    aload_1 \nL28:    invokevirtual Method java/io/File exists ()Z \nL31:    ifeq L45 \nL34:    aload_1 \nL35:    invokevirtual Method java/io/File length ()J \nL38:    ldc2_w 4L \nL41:    lcmp \nL42:    ifge L95 \n\n        .stack append Object java/io/File \nL45:    new java/io/DataOutputStream \nL48:    dup \nL49:    new java/io/FileOutputStream \nL52:    dup \nL53:    new java/lang/StringBuilder \nL56:    dup \nL57:    invokespecial Method java/lang/StringBuilder <init> ()V \nL60:    aload_0 \nL61:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL64:    ldc 'uid.dat' \nL66:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL69:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL72:    invokespecial Method java/io/FileOutputStream <init> (Ljava/lang/String;)V \nL75:    invokespecial Method java/io/DataOutputStream <init> (Ljava/io/OutputStream;)V \nL78:    astore_2 \nL79:    aload_2 \nL80:    invokestatic Method java/lang/Math random ()D \nL83:    ldc2_w +99999999.0 \nL86:    dmul \nL87:    d2i \nL88:    invokevirtual Method java/io/DataOutputStream writeInt (I)V \nL91:    aload_2 \nL92:    invokevirtual Method java/io/DataOutputStream close ()V \n\n        .stack chop 1 \nL95:    goto L99 \n\n        .stack stack_1 Object java/lang/Exception \nL98:    astore_1 \n        .catch java/lang/Exception from L99 to L145 using L146 \n\n        .stack same \nL99:    new java/io/DataInputStream \nL102:   dup \nL103:   new java/io/FileInputStream \nL106:   dup \nL107:   new java/lang/StringBuilder \nL110:   dup \nL111:   invokespecial Method java/lang/StringBuilder <init> ()V \nL114:   aload_0 \nL115:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL118:   ldc 'uid.dat' \nL120:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL123:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL126:   invokespecial Method java/io/FileInputStream <init> (Ljava/lang/String;)V \nL129:   invokespecial Method java/io/DataInputStream <init> (Ljava/io/InputStream;)V \nL132:   astore_1 \nL133:   aload_1 \nL134:   invokevirtual Method java/io/DataInputStream readInt ()I \nL137:   istore_2 \nL138:   aload_1 \nL139:   invokevirtual Method java/io/DataInputStream close ()V \nL142:   iload_2 \nL143:   iconst_1 \nL144:   iadd \nL145:   ireturn \n\n        .stack stack_1 Object java/lang/Exception \nL146:   astore_1 \nL147:   iconst_0 \nL148:   ireturn \nL149:   \n        .linenumbertable \n            L0 219 \n            L27 220 \n            L45 221 \n            L79 222 \n            L91 223 \n            L95 226 \n            L98 225 \n            L99 228 \n            L133 229 \n            L138 230 \n            L142 231 \n            L146 232 \n            L147 233 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public run : ()V \n    .code stack 6 locals 4 \nL0:     iconst_1 \nL1:     putstatic Field signlink active Z \nL4:     invokestatic Method signlink findcachedir ()Ljava/lang/String; \nL7:     astore_1 \nL8:     aload_1 \nL9:     invokestatic Method signlink getuid (Ljava/lang/String;)I \nL12:    putstatic Field signlink uid I \n        .catch java/lang/Exception from L15 to L146 using L149 \nL15:    new java/io/File \nL18:    dup \nL19:    new java/lang/StringBuilder \nL22:    dup \nL23:    invokespecial Method java/lang/StringBuilder <init> ()V \nL26:    aload_1 \nL27:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL30:    ldc 'main_file_cache.dat' \nL32:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL35:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL38:    invokespecial Method java/io/File <init> (Ljava/lang/String;)V \nL41:    astore_2 \nL42:    aload_2 \nL43:    invokevirtual Method java/io/File exists ()Z \nL46:    ifeq L65 \nL49:    aload_2 \nL50:    invokevirtual Method java/io/File length ()J \nL53:    ldc2_w 52428800L \nL56:    lcmp \nL57:    ifle L65 \nL60:    aload_2 \nL61:    invokevirtual Method java/io/File delete ()Z \nL64:    pop \n\n        .stack append Object java/lang/String Object java/io/File \nL65:    new java/io/RandomAccessFile \nL68:    dup \nL69:    new java/lang/StringBuilder \nL72:    dup \nL73:    invokespecial Method java/lang/StringBuilder <init> ()V \nL76:    aload_1 \nL77:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL80:    ldc 'main_file_cache.dat' \nL82:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL85:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL88:    ldc 'rw' \nL90:    invokespecial Method java/io/RandomAccessFile <init> (Ljava/lang/String;Ljava/lang/String;)V \nL93:    putstatic Field signlink cache_dat Ljava/io/RandomAccessFile; \nL96:    iconst_0 \nL97:    istore_3 \n\n        .stack append Integer \nL98:    iload_3 \nL99:    iconst_5 \nL100:   if_icmpge L146 \nL103:   getstatic Field signlink cache_idx [Ljava/io/RandomAccessFile; \nL106:   iload_3 \nL107:   new java/io/RandomAccessFile \nL110:   dup \nL111:   new java/lang/StringBuilder \nL114:   dup \nL115:   invokespecial Method java/lang/StringBuilder <init> ()V \nL118:   aload_1 \nL119:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL122:   ldc 'main_file_cache.idx' \nL124:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL127:   iload_3 \nL128:   invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL131:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL134:   ldc 'rw' \nL136:   invokespecial Method java/io/RandomAccessFile <init> (Ljava/lang/String;Ljava/lang/String;)V \nL139:   aastore \nL140:   iinc 3 1 \nL143:   goto L98 \n\n        .stack chop 2 \nL146:   goto L154 \n\n        .stack stack_1 Object java/lang/Exception \nL149:   astore_2 \nL150:   aload_2 \nL151:   invokevirtual Method java/lang/Exception printStackTrace ()V \n\n        .stack same \nL154:   getstatic Field signlink threadliveid I \nL157:   istore_2 \n\n        .stack append Integer \nL158:   getstatic Field signlink threadliveid I \nL161:   iload_2 \nL162:   if_icmpne L453 \nL165:   getstatic Field signlink socketreq I \nL168:   ifeq L202 \n        .catch java/lang/Exception from L171 to L187 using L190 \nL171:   new java/net/Socket \nL174:   dup \nL175:   getstatic Field signlink socketip Ljava/net/InetAddress; \nL178:   getstatic Field signlink socketreq I \nL181:   invokespecial Method java/net/Socket <init> (Ljava/net/InetAddress;I)V \nL184:   putstatic Field signlink socket Ljava/net/Socket; \nL187:   goto L195 \n\n        .stack stack_1 Object java/lang/Exception \nL190:   astore_3 \nL191:   aconst_null \nL192:   putstatic Field signlink socket Ljava/net/Socket; \n\n        .stack same \nL195:   iconst_0 \nL196:   putstatic Field signlink socketreq I \nL199:   goto L440 \n\n        .stack same \nL202:   getstatic Field signlink threadreq Ljava/lang/Runnable; \nL205:   ifnull L242 \nL208:   new java/lang/Thread \nL211:   dup \nL212:   getstatic Field signlink threadreq Ljava/lang/Runnable; \nL215:   invokespecial Method java/lang/Thread <init> (Ljava/lang/Runnable;)V \nL218:   astore_3 \nL219:   aload_3 \nL220:   iconst_1 \nL221:   invokevirtual Method java/lang/Thread setDaemon (Z)V \nL224:   aload_3 \nL225:   invokevirtual Method java/lang/Thread start ()V \nL228:   aload_3 \nL229:   getstatic Field signlink threadreqpri I \nL232:   invokevirtual Method java/lang/Thread setPriority (I)V \nL235:   aconst_null \nL236:   putstatic Field signlink threadreq Ljava/lang/Runnable; \nL239:   goto L440 \n\n        .stack same \nL242:   getstatic Field signlink dnsreq Ljava/lang/String; \nL245:   ifnull L276 \n        .catch java/lang/Exception from L248 to L260 using L263 \nL248:   getstatic Field signlink dnsreq Ljava/lang/String; \nL251:   invokestatic Method java/net/InetAddress getByName (Ljava/lang/String;)Ljava/net/InetAddress; \nL254:   invokevirtual Method java/net/InetAddress getHostName ()Ljava/lang/String; \nL257:   putstatic Field signlink dns Ljava/lang/String; \nL260:   goto L269 \n\n        .stack stack_1 Object java/lang/Exception \nL263:   astore_3 \nL264:   ldc 'unknown' \nL266:   putstatic Field signlink dns Ljava/lang/String; \n\n        .stack same \nL269:   aconst_null \nL270:   putstatic Field signlink dnsreq Ljava/lang/String; \nL273:   goto L440 \n\n        .stack same \nL276:   getstatic Field signlink savereq Ljava/lang/String; \nL279:   ifnull L385 \nL282:   getstatic Field signlink savebuf [B \nL285:   ifnull L335 \n        .catch java/lang/Exception from L288 to L331 using L334 \nL288:   new java/io/FileOutputStream \nL291:   dup \nL292:   new java/lang/StringBuilder \nL295:   dup \nL296:   invokespecial Method java/lang/StringBuilder <init> ()V \nL299:   aload_1 \nL300:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL303:   getstatic Field signlink savereq Ljava/lang/String; \nL306:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL309:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL312:   invokespecial Method java/io/FileOutputStream <init> (Ljava/lang/String;)V \nL315:   astore_3 \nL316:   aload_3 \nL317:   getstatic Field signlink savebuf [B \nL320:   iconst_0 \nL321:   getstatic Field signlink savelen I \nL324:   invokevirtual Method java/io/FileOutputStream write ([BII)V \nL327:   aload_3 \nL328:   invokevirtual Method java/io/FileOutputStream close ()V \nL331:   goto L335 \n\n        .stack stack_1 Object java/lang/Exception \nL334:   astore_3 \n\n        .stack same \nL335:   getstatic Field signlink waveplay Z \nL338:   ifeq L345 \nL341:   iconst_0 \nL342:   putstatic Field signlink waveplay Z \n\n        .stack same \nL345:   getstatic Field signlink midiplay Z \nL348:   ifeq L378 \nL351:   new java/lang/StringBuilder \nL354:   dup \nL355:   invokespecial Method java/lang/StringBuilder <init> ()V \nL358:   aload_1 \nL359:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL362:   getstatic Field signlink savereq Ljava/lang/String; \nL365:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL368:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL371:   putstatic Field signlink midi Ljava/lang/String; \nL374:   iconst_0 \nL375:   putstatic Field signlink midiplay Z \n\n        .stack same \nL378:   aconst_null \nL379:   putstatic Field signlink savereq Ljava/lang/String; \nL382:   goto L440 \n\n        .stack same \nL385:   getstatic Field signlink urlreq Ljava/lang/String; \nL388:   ifnull L440 \n        .catch java/lang/Exception from L391 to L428 using L431 \nL391:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL394:   ldc 'urlstream' \nL396:   invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL399:   new java/io/DataInputStream \nL402:   dup \nL403:   new java/net/URL \nL406:   dup \nL407:   getstatic Field signlink applet Ljava/applet/Applet; \nL410:   invokevirtual Method java/applet/Applet getCodeBase ()Ljava/net/URL; \nL413:   getstatic Field signlink urlreq Ljava/lang/String; \nL416:   invokespecial Method java/net/URL <init> (Ljava/net/URL;Ljava/lang/String;)V \nL419:   invokevirtual Method java/net/URL openStream ()Ljava/io/InputStream; \nL422:   invokespecial Method java/io/DataInputStream <init> (Ljava/io/InputStream;)V \nL425:   putstatic Field signlink urlstream Ljava/io/DataInputStream; \nL428:   goto L436 \n\n        .stack stack_1 Object java/lang/Exception \nL431:   astore_3 \nL432:   aconst_null \nL433:   putstatic Field signlink urlstream Ljava/io/DataInputStream; \n\n        .stack same \nL436:   aconst_null \nL437:   putstatic Field signlink urlreq Ljava/lang/String; \n        .catch java/lang/Exception from L440 to L446 using L449 \n\n        .stack same \nL440:   ldc2_w 50L \nL443:   invokestatic Method java/lang/Thread sleep (J)V \nL446:   goto L158 \n\n        .stack stack_1 Object java/lang/Exception \nL449:   astore_3 \nL450:   goto L158 \n\n        .stack chop 1 \nL453:   return \nL454:   \n        .linenumbertable \n            L0 239 \n            L4 240 \n            L8 241 \n            L15 243 \n            L42 244 \n            L60 245 \n            L65 246 \n            L96 247 \n            L103 248 \n            L140 247 \n            L146 252 \n            L149 250 \n            L150 251 \n            L154 253 \n            L165 254 \n            L171 256 \n            L187 259 \n            L190 257 \n            L191 258 \n            L195 260 \n            L202 261 \n            L208 262 \n            L219 263 \n            L224 264 \n            L228 265 \n            L235 266 \n            L239 267 \n            L248 269 \n            L260 272 \n            L263 270 \n            L264 271 \n            L269 273 \n            L276 274 \n            L282 275 \n            L288 277 \n            L316 278 \n            L327 279 \n            L331 281 \n            L334 280 \n            L335 282 \n            L341 283 \n            L345 286 \n            L351 287 \n            L374 288 \n            L378 291 \n            L385 292 \n            L391 294 \n            L399 295 \n            L428 298 \n            L431 296 \n            L432 297 \n            L436 299 \n            L440 302 \n            L446 304 \n            L449 303 \n            L450 304 \n            L453 307 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 1 locals 0 \nL0:     bipush 32 \nL2:     putstatic Field signlink storeid I \nL5:     aconst_null \nL6:     putstatic Field signlink cache_dat Ljava/io/RandomAccessFile; \nL9:     iconst_5 \nL10:    anewarray java/io/RandomAccessFile \nL13:    putstatic Field signlink cache_idx [Ljava/io/RandomAccessFile; \nL16:    aconst_null \nL17:    putstatic Field signlink applet Ljava/applet/Applet; \nL20:    aconst_null \nL21:    putstatic Field signlink socket Ljava/net/Socket; \nL24:    iconst_1 \nL25:    putstatic Field signlink threadreqpri I \nL28:    aconst_null \nL29:    putstatic Field signlink threadreq Ljava/lang/Runnable; \nL32:    aconst_null \nL33:    putstatic Field signlink dnsreq Ljava/lang/String; \nL36:    aconst_null \nL37:    putstatic Field signlink dns Ljava/lang/String; \nL40:    aconst_null \nL41:    putstatic Field signlink urlreq Ljava/lang/String; \nL44:    aconst_null \nL45:    putstatic Field signlink urlstream Ljava/io/DataInputStream; \nL48:    aconst_null \nL49:    putstatic Field signlink savereq Ljava/lang/String; \nL52:    aconst_null \nL53:    putstatic Field signlink savebuf [B \nL56:    aconst_null \nL57:    putstatic Field signlink midi Ljava/lang/String; \nL60:    iconst_1 \nL61:    putstatic Field signlink reporterror Z \nL64:    ldc '' \nL66:    putstatic Field signlink errorname Ljava/lang/String; \nL69:    return \nL70:    \n        .linenumbertable \n            L0 40 \n            L5 42 \n            L9 44 \n            L16 48 \n            L20 58 \n            L24 60 \n            L28 62 \n            L32 64 \n            L36 65 \n            L40 66 \n            L44 67 \n            L48 69 \n            L52 70 \n            L56 73 \n            L60 79 \n            L64 80 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'signlink.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 05:20:45 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.shaded.org.mockito.Mockito.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.io.IOException;\nimport java.net.InetAddress;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.ViolatedAssumptionAnswer;\nimport org.evosuite.runtime.mock.java.lang.MockThread;\nimport org.evosuite.runtime.mock.java.net.MockInetAddress;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class signlink_ESTest extends signlink_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      try { \n        signlink.openSocket(0);\n        fail(\"Expecting exception: IOException\");\n      \n      } catch(IOException e) {\n         //\n         // could not open socket\n         //\n         verifyException(\"signlink\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      byte[] byteArray0 = new byte[1];\n      byteArray0[0] = (byte) (-116);\n      signlink.wavesave(byteArray0, (byte) (-116));\n      signlink.wavesave(byteArray0, 61190);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      signlink.dnslookup(\"\");\n      InetAddress inetAddress0 = MockInetAddress.getLocalHost();\n      signlink.startpriv(inetAddress0);\n      signlink.dnslookup(\"\");\n      signlink.wavereplay();\n      try { \n        signlink.openurl(\"\");\n        fail(\"Expecting exception: IOException\");\n      \n      } catch(IOException e) {\n         //\n         // could not open: \n         //\n         verifyException(\"signlink\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      signlink.dnslookup(\"u.&N9S\\\"\\\"\");\n      signlink.reporterror(\"u.&N9S\\\"\\\"\");\n      signlink.startpriv((InetAddress) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      signlink.wavereplay();\n      byte[] byteArray0 = new byte[1];\n      byteArray0[0] = (byte)121;\n      signlink.midisave(byteArray0, 0);\n      byte[] byteArray1 = new byte[7];\n      byteArray1[0] = (byte)121;\n      byteArray1[1] = (byte)121;\n      byteArray1[2] = (byte)121;\n      byteArray1[3] = (byte)121;\n      byteArray1[4] = (byte)121;\n      byteArray1[5] = (byte)0;\n      byteArray1[6] = (byte)121;\n      signlink.wavesave(byteArray1, (-35345));\n      signlink.midisave(byteArray1, (byte)121);\n      signlink.midisave(byteArray0, 21426);\n      assertEquals(1, byteArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      signlink.dnslookup(\"\");\n      signlink.findcachedirORIG();\n      byte[] byteArray0 = new byte[5];\n      byteArray0[0] = (byte) (-11);\n      byteArray0[1] = (byte)16;\n      byteArray0[2] = (byte)0;\n      byteArray0[3] = (byte)25;\n      byteArray0[4] = (byte) (-1);\n      signlink.midisave(byteArray0, (byte)0);\n      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());\n      MockThread mockThread0 = new MockThread(threadGroup0, (Runnable) null, \"\");\n      signlink.startThread(mockThread0, (byte)16);\n      signlink.dnslookup(\"Error: \");\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 05:20:45 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\nimport static org.evosuite.shaded.org.mockito.Mockito.*;\n@EvoSuiteClassExclude\npublic class signlink_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"signlink\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpx2cutgb5\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(signlink_ESTest_scaffolding.class.getClassLoader() ,\n      \"signlink\"\n    );\n  } \n  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { \n    mock(Class.forName(\"java.lang.ThreadGroup\", false, signlink_ESTest_scaffolding.class.getClassLoader()));\n  }\n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(signlink_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"signlink\"\n    );\n  }\n}\n", "class_idx": 77}
{"class_name": "Users", "java_source": "/*\n* MIT License\n* Copyright (c) 2017 argshub\n*\n*Permission is hereby granted, free of charge, to any person obtaining a copy\n*of this software and associated documentation files (the \"Software\"), to deal\n*in the Software without restriction, including without limitation the rights\n*to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n*copies of the Software, and to permit persons to whom the Software is\n*furnished to do so, subject to the following conditions:\n\n*The above copyright notice and this permission notice shall be included in all\n*copies or substantial portions of the Software.\n*\n*THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n*SOFTWARE.\n */\n\nimport java.util.HashMap;\n\n/**\n * @author argshub\n */\npublic class Users {\n  private String username;\n  private static HashMap<String, Users> users = new HashMap();\n\n  private Users(String username) {\n    this.username = username;\n    System.out.println(\"Loading User Data Of \" + this.username);\n  }\n\n  public static Users getUserInformation(String username) {\n    if (users.get(username) == null) users.put(username, new Users(username));\n    return users.get(username);\n  }\n\n  public void info() {\n    System.out.println(\"User Info of \" + this.username);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Users \n.super java/lang/Object \n.field private username Ljava/lang/String; \n.field private static users Ljava/util/HashMap; .fieldattributes \n    .signature Ljava/util/HashMap<Ljava/lang/String;LUsers;>; \n.end fieldattributes \n\n.method private <init> : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field Users username Ljava/lang/String; \nL9:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL12:    new java/lang/StringBuilder \nL15:    dup \nL16:    invokespecial Method java/lang/StringBuilder <init> ()V \nL19:    ldc 'Loading User Data Of ' \nL21:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL24:    aload_0 \nL25:    getfield Field Users username Ljava/lang/String; \nL28:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL31:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL34:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL37:    return \nL38:    \n        .linenumbertable \n            L0 33 \n            L4 34 \n            L9 35 \n            L37 36 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static getUserInformation : (Ljava/lang/String;)LUsers; \n    .code stack 5 locals 1 \nL0:     getstatic Field Users users Ljava/util/HashMap; \nL3:     aload_0 \nL4:     invokevirtual Method java/util/HashMap get (Ljava/lang/Object;)Ljava/lang/Object; \nL7:     ifnonnull L26 \nL10:    getstatic Field Users users Ljava/util/HashMap; \nL13:    aload_0 \nL14:    new Users \nL17:    dup \nL18:    aload_0 \nL19:    invokespecial Method Users <init> (Ljava/lang/String;)V \nL22:    invokevirtual Method java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nL25:    pop \n\n        .stack same \nL26:    getstatic Field Users users Ljava/util/HashMap; \nL29:    aload_0 \nL30:    invokevirtual Method java/util/HashMap get (Ljava/lang/Object;)Ljava/lang/Object; \nL33:    checkcast Users \nL36:    areturn \nL37:    \n        .linenumbertable \n            L0 39 \n            L26 40 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public info : ()V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new java/lang/StringBuilder \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuilder <init> ()V \nL10:    ldc 'User Info of ' \nL12:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL15:    aload_0 \nL16:    getfield Field Users username Ljava/lang/String; \nL19:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL22:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL25:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL28:    return \nL29:    \n        .linenumbertable \n            L0 44 \n            L28 45 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 2 locals 0 \nL0:     new java/util/HashMap \nL3:     dup \nL4:     invokespecial Method java/util/HashMap <init> ()V \nL7:     putstatic Field Users users Ljava/util/HashMap; \nL10:    return \nL11:    \n        .linenumbertable \n            L0 31 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Users.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 03:27:43 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Users_ESTest extends Users_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Users users0 = Users.getUserInformation(\"'K[=,.],Me=*\");\n      assertNotNull(users0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Users users0 = Users.getUserInformation(\"zYzM&=a\");\n      users0.info();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 03:27:43 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Users_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Users\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpj355e71a\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Users_ESTest_scaffolding.class.getClassLoader() ,\n      \"Users\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Users_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Users\"\n    );\n  }\n}\n", "class_idx": 78}
{"class_name": "StringUtil", "java_source": "public class StringUtil {\n  public static boolean isBlank(String string) {\n    return string == null || string.trim().isEmpty();\n  }\n\n  public static Boolean isNotBlank(String string) {\n    return !isBlank(string);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super StringUtil \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static isBlank : (Ljava/lang/String;)Z \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     ifnull L14 \nL4:     aload_0 \nL5:     invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL8:     invokevirtual Method java/lang/String isEmpty ()Z \nL11:    ifeq L18 \n\n        .stack same \nL14:    iconst_1 \nL15:    goto L19 \n\n        .stack same \nL18:    iconst_0 \n\n        .stack stack_1 Integer \nL19:    ireturn \nL20:    \n        .linenumbertable \n            L0 5 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static isNotBlank : (Ljava/lang/String;)Ljava/lang/Boolean; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokestatic Method StringUtil isBlank (Ljava/lang/String;)Z \nL4:     ifne L11 \nL7:     iconst_1 \nL8:     goto L12 \n\n        .stack same \nL11:    iconst_0 \n\n        .stack stack_1 Integer \nL12:    invokestatic Method java/lang/Boolean valueOf (Z)Ljava/lang/Boolean; \nL15:    areturn \nL16:    \n        .linenumbertable \n            L0 9 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'StringUtil.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 13:51:26 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class StringUtil_ESTest extends StringUtil_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      boolean boolean0 = StringUtil.isBlank((String) null);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      boolean boolean0 = StringUtil.isBlank(\"e4TcN\");\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Boolean boolean0 = StringUtil.isNotBlank(\"6\");\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      boolean boolean0 = StringUtil.isBlank(\"\");\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Boolean boolean0 = StringUtil.isNotBlank((String) null);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      StringUtil stringUtil0 = new StringUtil();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 13:51:26 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class StringUtil_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"StringUtil\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp9wu0h6rq\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StringUtil_ESTest_scaffolding.class.getClassLoader() ,\n      \"StringUtil\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StringUtil_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"StringUtil\"\n    );\n  }\n}\n", "class_idx": 79}
{"class_name": "StockInfo", "java_source": "/**\n * Licensed to Open-Ones Group under one or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information regarding copyright ownership. Open-Ones\n * Group licenses this file to you under the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License. You may obtain a copy of the License at:\n *\n * <p>http://www.apache.org/licenses/LICENSE-2.0\n *\n * <p>Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport java.util.Date;\n\npublic class StockInfo {\n  private String code;\n  private Date date;\n  private float floPrice;\n  private float ceilPrice;\n  private float refPrice;\n  private float closedPrice;\n  private float volume;\n\n  public StockInfo(String symbol) {\n    code = symbol;\n  }\n\n  public String getCode() {\n    return code;\n  }\n\n  public void setCode(String code) {\n    this.code = code;\n  }\n\n  public Date getDate() {\n    return date;\n  }\n\n  public void setDate(Date date) {\n    this.date = date;\n  }\n\n  public float getFloPrice() {\n    return floPrice;\n  }\n\n  public void setFloPrice(float floPrice) {\n    this.floPrice = floPrice;\n  }\n\n  public float getCeilPrice() {\n    return ceilPrice;\n  }\n\n  public void setCeilPrice(float ceilPrice) {\n    this.ceilPrice = ceilPrice;\n  }\n\n  public float getRefPrice() {\n    return refPrice;\n  }\n\n  public void setRefPrice(float refPrice) {\n    this.refPrice = refPrice;\n  }\n\n  public float getClosedPrice() {\n    return closedPrice;\n  }\n\n  public void setClosedPrice(float closedPrice) {\n    this.closedPrice = closedPrice;\n  }\n\n  public float getVolume() {\n    return volume;\n  }\n\n  public void setVolume(float volume) {\n    this.volume = volume;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super StockInfo \n.super java/lang/Object \n.field private code Ljava/lang/String; \n.field private date Ljava/util/Date; \n.field private floPrice F \n.field private ceilPrice F \n.field private refPrice F \n.field private closedPrice F \n.field private volume F \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field StockInfo code Ljava/lang/String; \nL9:     return \nL10:    \n        .linenumbertable \n            L0 32 \n            L4 33 \n            L9 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCode : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field StockInfo code Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 37 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCode : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field StockInfo code Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 40 \n            L5 41 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getDate : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field StockInfo date Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 43 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setDate : (Ljava/util/Date;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field StockInfo date Ljava/util/Date; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 46 \n            L5 47 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFloPrice : ()F \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field StockInfo floPrice F \nL4:     freturn \nL5:     \n        .linenumbertable \n            L0 49 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setFloPrice : (F)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     fload_1 \nL2:     putfield Field StockInfo floPrice F \nL5:     return \nL6:     \n        .linenumbertable \n            L0 52 \n            L5 53 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCeilPrice : ()F \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field StockInfo ceilPrice F \nL4:     freturn \nL5:     \n        .linenumbertable \n            L0 55 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCeilPrice : (F)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     fload_1 \nL2:     putfield Field StockInfo ceilPrice F \nL5:     return \nL6:     \n        .linenumbertable \n            L0 58 \n            L5 59 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getRefPrice : ()F \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field StockInfo refPrice F \nL4:     freturn \nL5:     \n        .linenumbertable \n            L0 61 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRefPrice : (F)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     fload_1 \nL2:     putfield Field StockInfo refPrice F \nL5:     return \nL6:     \n        .linenumbertable \n            L0 64 \n            L5 65 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getClosedPrice : ()F \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field StockInfo closedPrice F \nL4:     freturn \nL5:     \n        .linenumbertable \n            L0 67 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setClosedPrice : (F)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     fload_1 \nL2:     putfield Field StockInfo closedPrice F \nL5:     return \nL6:     \n        .linenumbertable \n            L0 71 \n            L5 72 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getVolume : ()F \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field StockInfo volume F \nL4:     freturn \nL5:     \n        .linenumbertable \n            L0 75 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setVolume : (F)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     fload_1 \nL2:     putfield Field StockInfo volume F \nL5:     return \nL6:     \n        .linenumbertable \n            L0 79 \n            L5 80 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'StockInfo.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 18:38:11 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.Date;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.util.MockDate;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class StockInfo_ESTest extends StockInfo_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo(\"Cq$,XDK&\");\n      stockInfo0.setVolume(17615.27F);\n      float float0 = stockInfo0.getVolume();\n      assertEquals(17615.27F, float0, 0.01F);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo(\".DlP*%+\");\n      stockInfo0.setVolume((-50388.566F));\n      float float0 = stockInfo0.getVolume();\n      assertEquals((-50388.566F), float0, 0.01F);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo(\"\");\n      stockInfo0.setRefPrice(65201.5F);\n      float float0 = stockInfo0.getRefPrice();\n      assertEquals(65201.5F, float0, 0.01F);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo((String) null);\n      stockInfo0.setRefPrice((-10826.32F));\n      float float0 = stockInfo0.getRefPrice();\n      assertEquals((-10826.32F), float0, 0.01F);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo(\"w@A-k\");\n      stockInfo0.setFloPrice((-35918.492F));\n      float float0 = stockInfo0.getFloPrice();\n      assertEquals((-35918.492F), float0, 0.01F);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo((String) null);\n      MockDate mockDate0 = new MockDate(1, (-29768), 1, 1, (-29768), 1);\n      stockInfo0.setDate(mockDate0);\n      Date date0 = stockInfo0.getDate();\n      assertEquals(\"Tue Apr 10 08:52:01 GMT 581\", date0.toString());\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo(\"\");\n      stockInfo0.setCode((String) null);\n      String string0 = stockInfo0.getCode();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo((String) null);\n      stockInfo0.setClosedPrice(22971.0F);\n      float float0 = stockInfo0.getClosedPrice();\n      assertEquals(22971.0F, float0, 0.01F);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo(\"\");\n      stockInfo0.setClosedPrice((-13866.7F));\n      float float0 = stockInfo0.getClosedPrice();\n      assertEquals((-13866.7F), float0, 0.01F);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo((String) null);\n      stockInfo0.setCeilPrice((-1724.8F));\n      float float0 = stockInfo0.getCeilPrice();\n      assertEquals((-1724.8F), float0, 0.01F);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo(\"/}rjSRP.w@-cbx,\\\"ZD6\");\n      stockInfo0.setFloPrice(40939.5F);\n      float float0 = stockInfo0.getFloPrice();\n      assertEquals(40939.5F, float0, 0.01F);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo((String) null);\n      float float0 = stockInfo0.getVolume();\n      assertEquals(0.0F, float0, 0.01F);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo(\"/}rjSRP.w@-cbx,\\\"ZD6\");\n      String string0 = stockInfo0.getCode();\n      assertEquals(\"/}rjSRP.w@-cbx,\\\"ZD6\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo(\"/}rjSRP.w@-cbx,\\\"ZD6\");\n      float float0 = stockInfo0.getClosedPrice();\n      assertEquals(0.0F, float0, 0.01F);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo(\"/}rjSRP.w@-cbx,\\\"ZD6\");\n      float float0 = stockInfo0.getFloPrice();\n      assertEquals(0.0F, float0, 0.01F);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo((String) null);\n      Date date0 = stockInfo0.getDate();\n      assertNull(date0);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo(\"/}rjSRP.w@-cbx,\\\"ZD6\");\n      stockInfo0.setCode(\"\");\n      String string0 = stockInfo0.getCode();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo(\"/}rjSRP.w@-cbx,\\\"ZD6\");\n      float float0 = stockInfo0.getRefPrice();\n      assertEquals(0.0F, float0, 0.01F);\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo((String) null);\n      stockInfo0.setCeilPrice(34904.0F);\n      float float0 = stockInfo0.getCeilPrice();\n      assertEquals(34904.0F, float0, 0.01F);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      StockInfo stockInfo0 = new StockInfo(\"/}rjSRP.w@-cbx,\\\"ZD6\");\n      float float0 = stockInfo0.getCeilPrice();\n      assertEquals(0.0F, float0, 0.01F);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 18:38:11 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class StockInfo_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"StockInfo\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp3j_2m2r7\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StockInfo_ESTest_scaffolding.class.getClassLoader() ,\n      \"StockInfo\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StockInfo_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"StockInfo\"\n    );\n  }\n}\n", "class_idx": 80}
{"class_name": "JarFileLoader", "java_source": "import java.net.MalformedURLException;\nimport java.net.URL;\nimport java.net.URLClassLoader;\n\npublic class JarFileLoader extends URLClassLoader {\n  public JarFileLoader(URL[] urls) {\n    super(urls);\n  }\n\n  @SuppressWarnings(\"resource\")\n  public static void main(String[] args) {\n    try {\n      System.out.println(\"First attempt...\");\n      Class.forName(\"com.tvd12.example.extension.VideoPokerAppEntryLoader\");\n    } catch (Exception ex) {\n      System.out.println(\"Failed.\");\n    }\n    try {\n      URL[] urls = {};\n      JarFileLoader cl = new JarFileLoader(urls);\n      cl.addFile(\n          \"/Users/tavandung12/Documents/tvd12/java/deploy/ezyfox/apps/entries/videopoker/example-extension-0.0.1-SNAPSHOT.jar\");\n      System.out.println(\"Second attempt...\");\n      cl.loadClass(\"com.tvd12.example.extension.VideoPokerAppEntryLoader\");\n      System.out.println(\"Success!\");\n    } catch (Exception ex) {\n      System.out.println(\"Failed.\");\n      ex.printStackTrace();\n    }\n  }\n\n  public void addFile(String path) throws MalformedURLException {\n    String urlPath = \"jar:file://\" + path + \"!/\";\n    addURL(new URL(urlPath));\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super JarFileLoader \n.super java/net/URLClassLoader \n\n.method public <init> : ([Ljava/net/URL;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/net/URLClassLoader <init> ([Ljava/net/URL;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 9 \n            L5 10 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 3 locals 3 \n        .catch java/lang/Exception from L0 to L14 using L17 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     ldc 'First attempt...' \nL5:     invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL8:     ldc 'com.tvd12.example.extension.VideoPokerAppEntryLoader' \nL10:    invokestatic Method java/lang/Class forName (Ljava/lang/String;)Ljava/lang/Class; \nL13:    pop \nL14:    goto L26 \n\n        .stack stack_1 Object java/lang/Exception \nL17:    astore_1 \nL18:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL21:    ldc 'Failed.' \nL23:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \n        .catch java/lang/Exception from L26 to L69 using L72 \n\n        .stack same \nL26:    iconst_0 \nL27:    anewarray java/net/URL \nL30:    astore_1 \nL31:    new JarFileLoader \nL34:    dup \nL35:    aload_1 \nL36:    invokespecial Method JarFileLoader <init> ([Ljava/net/URL;)V \nL39:    astore_2 \nL40:    aload_2 \nL41:    ldc '/Users/tavandung12/Documents/tvd12/java/deploy/ezyfox/apps/entries/videopoker/example-extension-0.0.1-SNAPSHOT.jar' \nL43:    invokevirtual Method JarFileLoader addFile (Ljava/lang/String;)V \nL46:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL49:    ldc 'Second attempt...' \nL51:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL54:    aload_2 \nL55:    ldc 'com.tvd12.example.extension.VideoPokerAppEntryLoader' \nL57:    invokevirtual Method JarFileLoader loadClass (Ljava/lang/String;)Ljava/lang/Class; \nL60:    pop \nL61:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL64:    ldc 'Success!' \nL66:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL69:    goto L85 \n\n        .stack stack_1 Object java/lang/Exception \nL72:    astore_1 \nL73:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL76:    ldc 'Failed.' \nL78:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL81:    aload_1 \nL82:    invokevirtual Method java/lang/Exception printStackTrace ()V \n\n        .stack same \nL85:    return \nL86:    \n        .linenumbertable \n            L0 15 \n            L8 16 \n            L14 19 \n            L17 17 \n            L18 18 \n            L26 21 \n            L31 22 \n            L40 23 \n            L46 24 \n            L54 25 \n            L61 26 \n            L69 30 \n            L72 27 \n            L73 28 \n            L81 29 \n            L85 31 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public addFile : (Ljava/lang/String;)V \n    .code stack 4 locals 3 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     ldc 'jar:file://' \nL9:     invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL12:    aload_1 \nL13:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL16:    ldc '!/' \nL18:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL21:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL24:    astore_2 \nL25:    aload_0 \nL26:    new java/net/URL \nL29:    dup \nL30:    aload_2 \nL31:    invokespecial Method java/net/URL <init> (Ljava/lang/String;)V \nL34:    invokevirtual Method JarFileLoader addURL (Ljava/net/URL;)V \nL37:    return \nL38:    \n        .linenumbertable \n            L0 34 \n            L25 35 \n            L37 36 \n        .end linenumbertable \n    .end code \n    .exceptions java/net/MalformedURLException \n.end method \n.sourcefile 'JarFileLoader.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 16:54:09 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.net.URL;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class JarFileLoader_ESTest extends JarFileLoader_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String[] stringArray0 = new String[0];\n      JarFileLoader.main(stringArray0);\n      assertEquals(0, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      URL[] uRLArray0 = new URL[0];\n      JarFileLoader jarFileLoader0 = new JarFileLoader(uRLArray0);\n      jarFileLoader0.addFile(\"NL2yJ`pem\");\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 16:54:09 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class JarFileLoader_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"JarFileLoader\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp66idlt13\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JarFileLoader_ESTest_scaffolding.class.getClassLoader() ,\n      \"JarFileLoader\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JarFileLoader_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"JarFileLoader\"\n    );\n  }\n}\n", "class_idx": 81}
{"class_name": "Base64", "java_source": "import java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\n\n/**\n * From http://www.wikihow.com/Encode-a-String-to-Base64-With-Java\n *\n * <p>With modificiations.\n *\n * <p>Prevents dependance on sun jdk's Base64Encoder\n *\n * @author andy\n */\nclass Base64 {\n\n  private static final String base64code =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" + \"abcdefghijklmnopqrstuvwxyz\" + \"0123456789\" + \"+/\";\n\n  private static final int splitLinesAt = 76;\n\n  public static byte[] zeroPad(int length, byte[] bytes) {\n    byte[] padded = new byte[length]; // initialized to zero by JVM\n    System.arraycopy(bytes, 0, padded, 0, bytes.length);\n    return padded;\n  }\n\n  public static String encode(String string) {\n\n    byte[] stringArray;\n    try {\n      stringArray = string.getBytes(\"UTF-8\"); // use appropriate encoding\n      // string!\n    } catch (Exception ignored) {\n      stringArray = string.getBytes(); // use locale default rather than croak\n    }\n    return encode(stringArray);\n  }\n\n  public static String encode(byte[] bytes) {\n    String encoded = \"\";\n    // determine how many padding bytes to add to the output\n    int paddingCount = (3 - (bytes.length % 3)) % 3;\n    // add any necessary padding to the input\n    bytes = zeroPad(bytes.length + paddingCount, bytes);\n    // process 3 bytes at a time, churning out 4 output bytes\n    // worry about CRLF insertions later\n    for (int i = 0; i < bytes.length; i += 3) {\n      int j = ((bytes[i] & 0xff) << 16) + ((bytes[i + 1] & 0xff) << 8) + (bytes[i + 2] & 0xff);\n      encoded =\n          encoded\n              + base64code.charAt((j >> 18) & 0x3f)\n              + base64code.charAt((j >> 12) & 0x3f)\n              + base64code.charAt((j >> 6) & 0x3f)\n              + base64code.charAt(j & 0x3f);\n    }\n    // replace encoded padding nulls with \"=\"\n    return splitLines(\n        encoded.substring(0, encoded.length() - paddingCount) + \"==\".substring(0, paddingCount));\n  }\n\n  public static String splitLines(String string) {\n\n    String lines = \"\";\n    for (int i = 0; i < string.length(); i += splitLinesAt) {\n\n      lines += string.substring(i, Math.min(string.length(), i + splitLinesAt));\n      // lines += \"\\r\\n\";\n\n    }\n    return lines;\n  }\n\n  public static void main(String[] args) {\n\n    for (int i = 0; i < args.length; i++) {\n\n      System.err.println(\"encoding \\\"\" + args[i] + \"\\\"\");\n      System.out.println(encode(args[i]));\n    }\n  }\n\n  public static void encode(InputStream in, OutputStream out) throws IOException {\n    ByteArrayOutputStream tout = new ByteArrayOutputStream();\n    byte[] buff = new byte[512];\n    int read = in.read(buff);\n    while (read > 0) {\n      tout.write(buff, 0, read);\n      read = in.read(buff);\n    }\n    String result = encode(tout.toByteArray());\n    out.write(result.getBytes());\n  }\n}\n", "jasm_code": ".version 52 0 \n.class super Base64 \n.super java/lang/Object \n.field private static final base64code Ljava/lang/String; = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' \n.field private static final splitLinesAt I = 76 \n\n.method <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 18 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static zeroPad : (I[B)[B \n    .code stack 5 locals 3 \nL0:     iload_0 \nL1:     newarray byte \nL3:     astore_2 \nL4:     aload_1 \nL5:     iconst_0 \nL6:     aload_2 \nL7:     iconst_0 \nL8:     aload_1 \nL9:     arraylength \nL10:    invokestatic Method java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V \nL13:    aload_2 \nL14:    areturn \nL15:    \n        .linenumbertable \n            L0 26 \n            L4 27 \n            L13 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static encode : (Ljava/lang/String;)Ljava/lang/String; \n    .code stack 2 locals 3 \n        .catch java/lang/Exception from L0 to L7 using L10 \nL0:     aload_0 \nL1:     ldc 'UTF-8' \nL3:     invokevirtual Method java/lang/String getBytes (Ljava/lang/String;)[B \nL6:     astore_1 \nL7:     goto L16 \n\n        .stack stack_1 Object java/lang/Exception \nL10:    astore_2 \nL11:    aload_0 \nL12:    invokevirtual Method java/lang/String getBytes ()[B \nL15:    astore_1 \n\n        .stack append Object [B \nL16:    aload_1 \nL17:    invokestatic Method Base64 encode ([B)Ljava/lang/String; \nL20:    areturn \nL21:    \n        .linenumbertable \n            L0 35 \n            L7 39 \n            L10 37 \n            L11 38 \n            L16 40 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static encode : ([B)Ljava/lang/String; \n    .code stack 5 locals 5 \nL0:     ldc '' \nL2:     astore_1 \nL3:     iconst_3 \nL4:     aload_0 \nL5:     arraylength \nL6:     iconst_3 \nL7:     irem \nL8:     isub \nL9:     iconst_3 \nL10:    irem \nL11:    istore_2 \nL12:    aload_0 \nL13:    arraylength \nL14:    iload_2 \nL15:    iadd \nL16:    aload_0 \nL17:    invokestatic Method Base64 zeroPad (I[B)[B \nL20:    astore_0 \nL21:    iconst_0 \nL22:    istore_3 \n\n        .stack append Object java/lang/String Integer Integer \nL23:    iload_3 \nL24:    aload_0 \nL25:    arraylength \nL26:    if_icmpge L146 \nL29:    aload_0 \nL30:    iload_3 \nL31:    baload \nL32:    sipush 255 \nL35:    iand \nL36:    bipush 16 \nL38:    ishl \nL39:    aload_0 \nL40:    iload_3 \nL41:    iconst_1 \nL42:    iadd \nL43:    baload \nL44:    sipush 255 \nL47:    iand \nL48:    bipush 8 \nL50:    ishl \nL51:    iadd \nL52:    aload_0 \nL53:    iload_3 \nL54:    iconst_2 \nL55:    iadd \nL56:    baload \nL57:    sipush 255 \nL60:    iand \nL61:    iadd \nL62:    istore 4 \nL64:    new java/lang/StringBuilder \nL67:    dup \nL68:    invokespecial Method java/lang/StringBuilder <init> ()V \nL71:    aload_1 \nL72:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL75:    ldc 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' \nL77:    iload 4 \nL79:    bipush 18 \nL81:    ishr \nL82:    bipush 63 \nL84:    iand \nL85:    invokevirtual Method java/lang/String charAt (I)C \nL88:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL91:    ldc 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' \nL93:    iload 4 \nL95:    bipush 12 \nL97:    ishr \nL98:    bipush 63 \nL100:   iand \nL101:   invokevirtual Method java/lang/String charAt (I)C \nL104:   invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL107:   ldc 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' \nL109:   iload 4 \nL111:   bipush 6 \nL113:   ishr \nL114:   bipush 63 \nL116:   iand \nL117:   invokevirtual Method java/lang/String charAt (I)C \nL120:   invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL123:   ldc 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' \nL125:   iload 4 \nL127:   bipush 63 \nL129:   iand \nL130:   invokevirtual Method java/lang/String charAt (I)C \nL133:   invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL136:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL139:   astore_1 \nL140:   iinc 3 3 \nL143:   goto L23 \n\n        .stack chop 1 \nL146:   new java/lang/StringBuilder \nL149:   dup \nL150:   invokespecial Method java/lang/StringBuilder <init> ()V \nL153:   aload_1 \nL154:   iconst_0 \nL155:   aload_1 \nL156:   invokevirtual Method java/lang/String length ()I \nL159:   iload_2 \nL160:   isub \nL161:   invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL164:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL167:   ldc '==' \nL169:   iconst_0 \nL170:   iload_2 \nL171:   invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL174:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL177:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL180:   invokestatic Method Base64 splitLines (Ljava/lang/String;)Ljava/lang/String; \nL183:   areturn \nL184:   \n        .linenumbertable \n            L0 44 \n            L3 46 \n            L12 48 \n            L21 51 \n            L29 52 \n            L64 54 \n            L101 55 \n            L117 56 \n            L140 51 \n            L146 59 \n            L171 60 \n            L180 59 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static splitLines : (Ljava/lang/String;)Ljava/lang/String; \n    .code stack 6 locals 3 \nL0:     ldc '' \nL2:     astore_1 \nL3:     iconst_0 \nL4:     istore_2 \n\n        .stack append Object java/lang/String Integer \nL5:     iload_2 \nL6:     aload_0 \nL7:     invokevirtual Method java/lang/String length ()I \nL10:    if_icmpge L53 \nL13:    new java/lang/StringBuilder \nL16:    dup \nL17:    invokespecial Method java/lang/StringBuilder <init> ()V \nL20:    aload_1 \nL21:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL24:    aload_0 \nL25:    iload_2 \nL26:    aload_0 \nL27:    invokevirtual Method java/lang/String length ()I \nL30:    iload_2 \nL31:    bipush 76 \nL33:    iadd \nL34:    invokestatic Method java/lang/Math min (II)I \nL37:    invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL40:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL43:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL46:    astore_1 \nL47:    iinc 2 76 \nL50:    goto L5 \n\n        .stack chop 1 \nL53:    aload_1 \nL54:    areturn \nL55:    \n        .linenumbertable \n            L0 65 \n            L3 66 \n            L13 68 \n            L47 66 \n            L53 72 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 4 locals 2 \nL0:     iconst_0 \nL1:     istore_1 \n\n        .stack append Integer \nL2:     iload_1 \nL3:     aload_0 \nL4:     arraylength \nL5:     if_icmpge L58 \nL8:     getstatic Field java/lang/System err Ljava/io/PrintStream; \nL11:    new java/lang/StringBuilder \nL14:    dup \nL15:    invokespecial Method java/lang/StringBuilder <init> ()V \nL18:    ldc 'encoding \"' \nL20:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL23:    aload_0 \nL24:    iload_1 \nL25:    aaload \nL26:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL29:    ldc '\"' \nL31:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL34:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL37:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL40:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL43:    aload_0 \nL44:    iload_1 \nL45:    aaload \nL46:    invokestatic Method Base64 encode (Ljava/lang/String;)Ljava/lang/String; \nL49:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL52:    iinc 1 1 \nL55:    goto L2 \n\n        .stack chop 1 \nL58:    return \nL59:    \n        .linenumbertable \n            L0 78 \n            L8 80 \n            L40 81 \n            L52 78 \n            L58 85 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static encode : (Ljava/io/InputStream;Ljava/io/OutputStream;)V \n    .code stack 4 locals 6 \nL0:     new java/io/ByteArrayOutputStream \nL3:     dup \nL4:     invokespecial Method java/io/ByteArrayOutputStream <init> ()V \nL7:     astore_2 \nL8:     sipush 512 \nL11:    newarray byte \nL13:    astore_3 \nL14:    aload_0 \nL15:    aload_3 \nL16:    invokevirtual Method java/io/InputStream read ([B)I \nL19:    istore 4 \n\n        .stack append Object java/io/ByteArrayOutputStream Object [B Integer \nL21:    iload 4 \nL23:    ifle L44 \nL26:    aload_2 \nL27:    aload_3 \nL28:    iconst_0 \nL29:    iload 4 \nL31:    invokevirtual Method java/io/ByteArrayOutputStream write ([BII)V \nL34:    aload_0 \nL35:    aload_3 \nL36:    invokevirtual Method java/io/InputStream read ([B)I \nL39:    istore 4 \nL41:    goto L21 \n\n        .stack same \nL44:    aload_2 \nL45:    invokevirtual Method java/io/ByteArrayOutputStream toByteArray ()[B \nL48:    invokestatic Method Base64 encode ([B)Ljava/lang/String; \nL51:    astore 5 \nL53:    aload_1 \nL54:    aload 5 \nL56:    invokevirtual Method java/lang/String getBytes ()[B \nL59:    invokevirtual Method java/io/OutputStream write ([B)V \nL62:    return \nL63:    \n        .linenumbertable \n            L0 89 \n            L8 90 \n            L14 91 \n            L21 92 \n            L26 93 \n            L34 94 \n            L44 96 \n            L53 97 \n            L62 98 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/IOException \n.end method \n.sourcefile 'Base64.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 14:21:10 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.io.ByteArrayInputStream;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.io.MockFileOutputStream;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Base64_ESTest extends Base64_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      byte[] byteArray0 = new byte[7];\n      byte[] byteArray1 = Base64.zeroPad(8, byteArray0);\n      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);\n      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"Q*$zn15q.$fIfQ\");\n      Base64.encode((InputStream) byteArrayInputStream0, (OutputStream) mockFileOutputStream0);\n      String string0 = Base64.encode(\"5\");\n      assertEquals(\"NQ==\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      String[] stringArray0 = new String[0];\n      Base64.main(stringArray0);\n      String string0 = Base64.encode(\"\");\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      byte[] byteArray0 = new byte[3];\n      Base64.encode(byteArray0);\n      String[] stringArray0 = new String[0];\n      Base64.main(stringArray0);\n      String string0 = Base64.encode(\"Dra\");\n      assertEquals(\"RHJh\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      byte[] byteArray0 = new byte[3];\n      String string0 = Base64.encode(byteArray0);\n      assertEquals(\"AAAA\", string0);\n      \n      String[] stringArray0 = new String[0];\n      Base64.main(stringArray0);\n      String string1 = Base64.encode(\"\");\n      assertFalse(string1.equals((Object)string0));\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      String string0 = Base64.splitLines(\"\");\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      String string0 = Base64.encode(\"Dra\");\n      assertEquals(\"RHJh\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      Base64.splitLines(\")VT&__^?Vb\");\n      String[] stringArray0 = new String[0];\n      Base64.main(stringArray0);\n      String string0 = Base64.encode(\"Dra\");\n      assertEquals(\"RHJh\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      byte[] byteArray0 = new byte[6];\n      String string0 = Base64.encode(byteArray0);\n      assertEquals(\"AAAAAAAA\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      byte[] byteArray0 = new byte[0];\n      byte[] byteArray1 = Base64.zeroPad(0, byteArray0);\n      String string0 = Base64.encode(byteArray1);\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      String[] stringArray0 = new String[3];\n      stringArray0[0] = \"xoyggaW\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n      Base64.main(stringArray0);\n      Base64.main(stringArray0);\n      byte[] byteArray0 = new byte[6];\n      String string0 = Base64.encode(byteArray0);\n      assertEquals(\"AAAAAAAA\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      String[] stringArray0 = new String[3];\n      stringArray0[0] = \"xoyggaW\";\n      // Undeclared exception!\n      try { \n        Base64.main(stringArray0);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"Base64\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Base64 base64_0 = new Base64();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 14:21:10 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Base64_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Base64\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp5p05oc81\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Base64_ESTest_scaffolding.class.getClassLoader() ,\n      \"Base64\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Base64_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Base64\"\n    );\n  }\n}\n", "class_idx": 82}
{"class_name": "HexReader", "java_source": "/*\n * Created on Mar 1, 2008\n *\n * Copyright (c), 2008 Don Branson.  All Rights Reserved.\n *\n *   Licensed under the Apache License, Version 2.0 (the \"License\");\n *   you may not use this file except in compliance with the License.\n *   You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n *   Unless required by applicable law or agreed to in writing, software\n *   distributed under the License is distributed on an \"AS IS\" BASIS,\n *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *   See the License for the specific language governing permissions and\n *   limitations under the License.\n */\n\npublic class HexReader {\n\n  public byte[] getBytes(String string) {\n    byte[] buffer = new byte[string.length() / 2];\n\n    int outIndex = 0;\n    for (int inIndex = 0; inIndex < string.length(); inIndex += 2) {\n      buffer[outIndex++] = (byte) Integer.parseInt(string.substring(inIndex, inIndex + 2), 16);\n    }\n\n    return buffer;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super HexReader \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getBytes : (Ljava/lang/String;)[B \n    .code stack 6 locals 5 \nL0:     aload_1 \nL1:     invokevirtual Method java/lang/String length ()I \nL4:     iconst_2 \nL5:     idiv \nL6:     newarray byte \nL8:     astore_2 \nL9:     iconst_0 \nL10:    istore_3 \nL11:    iconst_0 \nL12:    istore 4 \n\n        .stack append Object [B Integer Integer \nL14:    iload 4 \nL16:    aload_1 \nL17:    invokevirtual Method java/lang/String length ()I \nL20:    if_icmpge L51 \nL23:    aload_2 \nL24:    iload_3 \nL25:    iinc 3 1 \nL28:    aload_1 \nL29:    iload 4 \nL31:    iload 4 \nL33:    iconst_2 \nL34:    iadd \nL35:    invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL38:    bipush 16 \nL40:    invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;I)I \nL43:    i2b \nL44:    bastore \nL45:    iinc 4 2 \nL48:    goto L14 \n\n        .stack chop 1 \nL51:    aload_2 \nL52:    areturn \nL53:    \n        .linenumbertable \n            L0 24 \n            L9 26 \n            L11 27 \n            L23 28 \n            L45 27 \n            L51 31 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'HexReader.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 22:10:16 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class HexReader_ESTest extends HexReader_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      HexReader hexReader0 = new HexReader();\n      String string0 = \"B5u\";\n      // Undeclared exception!\n      try { \n        hexReader0.getBytes(\"B5u\");\n        fail(\"Expecting exception: StringIndexOutOfBoundsException\");\n      \n      } catch(StringIndexOutOfBoundsException e) {\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      HexReader hexReader0 = new HexReader();\n      // Undeclared exception!\n      try { \n        hexReader0.getBytes(\"B2*-aPjaa.F .tlCKY\");\n        fail(\"Expecting exception: NumberFormatException\");\n      \n      } catch(NumberFormatException e) {\n         //\n         // For input string: \\\"*-\\\"\n         //\n         verifyException(\"java.lang.NumberFormatException\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      HexReader hexReader0 = new HexReader();\n      hexReader0.getBytes(\"\");\n      // Undeclared exception!\n      try { \n        hexReader0.getBytes(\"Ngx`\");\n        fail(\"Expecting exception: NumberFormatException\");\n      \n      } catch(NumberFormatException e) {\n         //\n         // For input string: \\\"Ng\\\"\n         //\n         verifyException(\"java.lang.NumberFormatException\", e);\n      }\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 22:10:16 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class HexReader_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"HexReader\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp_n9hud4b\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(HexReader_ESTest_scaffolding.class.getClassLoader() ,\n      \"HexReader\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(HexReader_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"HexReader\"\n    );\n  }\n}\n", "class_idx": 83}
{"class_name": "CarrierItem", "java_source": "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport java.util.Iterator;\n\n/**\n * @author wusheng\n */\npublic class CarrierItem implements Iterator<CarrierItem> {\n  private String headKey;\n  private String headValue;\n  private CarrierItem next;\n\n  public CarrierItem(String headKey, String headValue) {\n    this.headKey = headKey;\n    this.headValue = headValue;\n    next = null;\n  }\n\n  public CarrierItem(String headKey, String headValue, CarrierItem next) {\n    this.headKey = headKey;\n    this.headValue = headValue;\n    this.next = next;\n  }\n\n  public String getHeadKey() {\n    return headKey;\n  }\n\n  public String getHeadValue() {\n    return headValue;\n  }\n\n  public void setHeadValue(String headValue) {\n    this.headValue = headValue;\n  }\n\n  @Override\n  public boolean hasNext() {\n    return next != null;\n  }\n\n  @Override\n  public CarrierItem next() {\n    return next;\n  }\n\n  @Override\n  public void remove() {}\n}\n", "jasm_code": ".version 52 0 \n.class public super CarrierItem \n.super java/lang/Object \n.implements java/util/Iterator \n.field private headKey Ljava/lang/String; \n.field private headValue Ljava/lang/String; \n.field private next LCarrierItem; \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field CarrierItem headKey Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field CarrierItem headValue Ljava/lang/String; \nL14:    aload_0 \nL15:    aconst_null \nL16:    putfield Field CarrierItem next LCarrierItem; \nL19:    return \nL20:    \n        .linenumbertable \n            L0 32 \n            L4 33 \n            L9 34 \n            L14 35 \n            L19 36 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;LCarrierItem;)V \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field CarrierItem headKey Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field CarrierItem headValue Ljava/lang/String; \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field CarrierItem next LCarrierItem; \nL19:    return \nL20:    \n        .linenumbertable \n            L0 38 \n            L4 39 \n            L9 40 \n            L14 41 \n            L19 42 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getHeadKey : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field CarrierItem headKey Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 45 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getHeadValue : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field CarrierItem headValue Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 49 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setHeadValue : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field CarrierItem headValue Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 53 \n            L5 54 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public hasNext : ()Z \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field CarrierItem next LCarrierItem; \nL4:     ifnull L11 \nL7:     iconst_1 \nL8:     goto L12 \n\n        .stack same \nL11:    iconst_0 \n\n        .stack stack_1 Integer \nL12:    ireturn \nL13:    \n        .linenumbertable \n            L0 58 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public next : ()LCarrierItem; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field CarrierItem next LCarrierItem; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 63 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public remove : ()V \n    .code stack 0 locals 1 \nL0:     return \nL1:     \n        .linenumbertable \n            L0 69 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public bridge synthetic next : ()Ljava/lang/Object; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokevirtual Method CarrierItem next ()LCarrierItem; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 27 \n        .end linenumbertable \n    .end code \n.end method \n.signature Ljava/lang/Object;Ljava/util/Iterator<LCarrierItem;>; \n.sourcefile 'CarrierItem.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 13:28:13 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.shaded.org.mockito.Mockito.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.util.function.Consumer;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.ViolatedAssumptionAnswer;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CarrierItem_ESTest extends CarrierItem_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      CarrierItem carrierItem0 = new CarrierItem(\"CarrierItem\", \"\");\n      boolean boolean0 = carrierItem0.hasNext();\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      CarrierItem carrierItem0 = new CarrierItem(\"CarrierItem\", \"\");\n      carrierItem0.setHeadValue(\"CarrierItem\");\n      String string0 = carrierItem0.getHeadValue();\n      assertEquals(\"CarrierItem\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      CarrierItem carrierItem0 = new CarrierItem(\"\", \"\");\n      String string0 = carrierItem0.getHeadKey();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      CarrierItem carrierItem0 = new CarrierItem(\"*e\", \"*e\");\n      CarrierItem carrierItem1 = new CarrierItem(\"*e\", \"*e\", carrierItem0);\n      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());\n      // Undeclared exception!\n      carrierItem1.forEachRemaining(consumer0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      CarrierItem carrierItem0 = new CarrierItem(\"\", (String) null);\n      carrierItem0.remove();\n      assertFalse(carrierItem0.hasNext());\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      CarrierItem carrierItem0 = new CarrierItem(\"CarrierItem\", \"\");\n      String string0 = carrierItem0.getHeadKey();\n      assertEquals(\"CarrierItem\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      CarrierItem carrierItem0 = new CarrierItem(\"\", \"\");\n      CarrierItem carrierItem1 = new CarrierItem(\"~'\", \"A\\\"dM\", carrierItem0);\n      CarrierItem carrierItem2 = carrierItem1.next();\n      assertEquals(\"\", carrierItem2.getHeadKey());\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      CarrierItem carrierItem0 = new CarrierItem(\"\", \"\");\n      CarrierItem carrierItem1 = carrierItem0.next();\n      assertNull(carrierItem1);\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      CarrierItem carrierItem0 = new CarrierItem(\"CarrierItem\", \"\");\n      String string0 = carrierItem0.getHeadValue();\n      assertEquals(\"\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 13:28:13 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\nimport static org.evosuite.shaded.org.mockito.Mockito.*;\n@EvoSuiteClassExclude\npublic class CarrierItem_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CarrierItem\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp5b_nxx3y\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CarrierItem_ESTest_scaffolding.class.getClassLoader() ,\n      \"CarrierItem\"\n    );\n  } \n  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { \n    mock(Class.forName(\"java.util.function.Consumer\", false, CarrierItem_ESTest_scaffolding.class.getClassLoader()));\n  }\n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CarrierItem_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CarrierItem\"\n    );\n  }\n}\n", "class_idx": 84}
{"class_name": "Test", "java_source": "class Test {\n  private static final String STRING;\n\n  static {\n    String temp = \"foo\".trim();\n    STRING = temp + \"foo\".trim();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class super Test \n.super java/lang/Object \n.field private static final STRING Ljava/lang/String; \n\n.method <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 1 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 2 locals 1 \nL0:     ldc 'foo' \nL2:     invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL5:     astore_0 \nL6:     new java/lang/StringBuilder \nL9:     dup \nL10:    invokespecial Method java/lang/StringBuilder <init> ()V \nL13:    aload_0 \nL14:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL17:    ldc 'foo' \nL19:    invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL22:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL25:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL28:    putstatic Field Test STRING Ljava/lang/String; \nL31:    return \nL32:    \n        .linenumbertable \n            L0 5 \n            L6 6 \n            L31 7 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Test.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 16:39:01 GMT 2022\n */\n\n\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Test_ESTest extends Test_ESTest_scaffolding {\n\n  @org.junit.Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Test test0 = new Test();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 16:39:01 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Test_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Test\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmphu0g3urq\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Test_ESTest_scaffolding.class.getClassLoader() ,\n      \"Test\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Test_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Test\"\n    );\n  }\n}\n", "class_idx": 85}
{"class_name": "GetJavaProperty", "java_source": "/**\n * /** Copyright 2007 The Apache Software Foundation\n *\n * <p>Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n * agreements. See the NOTICE file distributed with this work for additional information regarding\n * copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n * copy of the License at\n *\n * <p>http://www.apache.org/licenses/LICENSE-2.0\n *\n * <p>Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** A generic way for querying Java properties. */\npublic class GetJavaProperty {\n  public static void main(String args[]) {\n    if (args.length == 0) {\n      for (Object prop : System.getProperties().keySet()) {\n        System.out.println(prop + \"=\" + System.getProperty((String) prop, \"\"));\n      }\n    } else {\n      for (String prop : args) {\n        System.out.println(System.getProperty(prop, \"\"));\n      }\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super GetJavaProperty \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 26 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 4 locals 5 \nL0:     aload_0 \nL1:     arraylength \nL2:     ifne L76 \nL5:     invokestatic Method java/lang/System getProperties ()Ljava/util/Properties; \nL8:     invokevirtual Method java/util/Properties keySet ()Ljava/util/Set; \nL11:    invokeinterface InterfaceMethod java/util/Set iterator ()Ljava/util/Iterator; 1 \nL16:    astore_1 \n\n        .stack append Object java/util/Iterator \nL17:    aload_1 \nL18:    invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL23:    ifeq L73 \nL26:    aload_1 \nL27:    invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL32:    astore_2 \nL33:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL36:    new java/lang/StringBuilder \nL39:    dup \nL40:    invokespecial Method java/lang/StringBuilder <init> ()V \nL43:    aload_2 \nL44:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/Object;)Ljava/lang/StringBuilder; \nL47:    ldc '=' \nL49:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL52:    aload_2 \nL53:    checkcast java/lang/String \nL56:    ldc '' \nL58:    invokestatic Method java/lang/System getProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; \nL61:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL64:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL67:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL70:    goto L17 \n\n        .stack chop 1 \nL73:    goto L112 \n\n        .stack same \nL76:    aload_0 \nL77:    astore_1 \nL78:    aload_1 \nL79:    arraylength \nL80:    istore_2 \nL81:    iconst_0 \nL82:    istore_3 \n\n        .stack append Object [Ljava/lang/String; Integer Integer \nL83:    iload_3 \nL84:    iload_2 \nL85:    if_icmpge L112 \nL88:    aload_1 \nL89:    iload_3 \nL90:    aaload \nL91:    astore 4 \nL93:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL96:    aload 4 \nL98:    ldc '' \nL100:   invokestatic Method java/lang/System getProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; \nL103:   invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL106:   iinc 3 1 \nL109:   goto L83 \n\n        .stack chop 3 \nL112:   return \nL113:   \n        .linenumbertable \n            L0 28 \n            L5 29 \n            L33 30 \n            L70 31 \n            L76 33 \n            L93 34 \n            L106 33 \n            L112 37 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'GetJavaProperty.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 20:01:44 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class GetJavaProperty_ESTest extends GetJavaProperty_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String[] stringArray0 = new String[1];\n      stringArray0[0] = \".TP2&e~80\";\n      GetJavaProperty.main(stringArray0);\n      String[] stringArray1 = new String[0];\n      GetJavaProperty.main(stringArray1);\n      GetJavaProperty.main(stringArray0);\n      assertNotSame(stringArray0, stringArray1);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      GetJavaProperty getJavaProperty0 = new GetJavaProperty();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 20:01:44 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class GetJavaProperty_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"GetJavaProperty\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpiazttnqq\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n    java.lang.System.setProperty(\"org.evosuite.shaded.org.dom4j.dom.DOMDocumentFactory.singleton.strategy\", \"org.evosuite.shaded.org.dom4j.util.SimpleSingleton\"); \n    java.lang.System.setProperty(\"strategy\", \"EvoSuite\"); \n    java.lang.System.setProperty(\"sun.java.launcher\", \"SUN_STANDARD\"); \n    java.lang.System.setProperty(\"sun.management.compiler\", \"HotSpot 64-Bit Tiered Compilers\"); \n    java.lang.System.setProperty(\"sun.boot.class.path\", \"/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes\"); \n    java.lang.System.setProperty(\"show_progress\", \"false\"); \n    java.lang.System.setProperty(\"extra_timeout\", \"180\"); \n    java.lang.System.setProperty(\"process_communication_port\", \"10260\"); \n    java.lang.System.setProperty(\"org.evosuite.shaded.org.dom4j.factory\", \"org.evosuite.shaded.org.dom4j.DocumentFactory\"); \n    java.lang.System.setProperty(\"log4j.configuration\", \"SUT.log4j.properties\"); \n    java.lang.System.setProperty(\"analysis_criteria\", \"LINE,BRANCH,EXCEPTION,WEAKMUTATION,OUTPUT,METHOD,METHODNOEXCEPTION,CBRANCH,STRONGMUTATION\"); \n    java.lang.System.setProperty(\"sun.boot.library.path\", \"/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64\"); \n    java.lang.System.setProperty(\"sun.arch.data.model\", \"64\"); \n    java.lang.System.setProperty(\"double_precision\", \"0.0001\"); \n    java.lang.System.setProperty(\"sun.cpu.isalist\", \"\"); \n    java.lang.System.setProperty(\"sun.jnu.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"file.encoding.pkg\", \"sun.io\"); \n    java.lang.System.setProperty(\"PROJECT_PREFIX\", \"\"); \n    java.lang.System.setProperty(\"logback.configurationFile\", \"logback-evosuite.xml\"); \n    java.lang.System.setProperty(\"org.evosuite.shaded.org.dom4j.DocumentFactory.singleton.strategy\", \"org.evosuite.shaded.org.dom4j.util.SimpleSingleton\"); \n    java.lang.System.setProperty(\"sun.io.unicode.encoding\", \"UnicodeLittle\"); \n    java.lang.System.setProperty(\"output_variables\", \"TARGET_CLASS,Random_Seed,criterion,Size,Length,BranchCoverage,Lines,Coverage,Covered_Lines,LineCoverage,MethodCoverage,Size,Length,Total_Goals,Covered_Goals,MutationScore,OutputCoverage\"); \n    java.lang.System.setProperty(\"master_log_port\", \"46697\"); \n    java.lang.System.setProperty(\"sun.java.command\", \"org.evosuite.ClientProcess\"); \n    java.lang.System.setProperty(\"minimize\", \"true\"); \n    java.lang.System.setProperty(\"sun.cpu.endian\", \"little\"); \n    java.lang.System.setProperty(\"sun.os.patch.level\", \"unknown\"); \n    java.lang.System.setProperty(\"assertion_strategy\", \"MUTATION\"); \n    java.lang.System.setProperty(\"max_mutants_per_test\", \"200\"); \n    java.lang.System.setProperty(\"java.vendor.url.bug\", \"http://bugreport.sun.com/bugreport/\"); \n    java.lang.System.setProperty(\"max_int\", \"46340\"); \n    java.lang.System.setProperty(\"java.rmi.server.hostname\", \"127.0.0.1\"); \n    java.lang.System.setProperty(\"CP_file_path\", \"/tmp/EvoSuite_classpathFile1230147808594636695.txt\"); \n    java.lang.System.setProperty(\"inline\", \"true\"); \n    java.lang.System.setProperty(\"TARGET_CLASS\", \"GetJavaProperty\"); \n    java.lang.System.setProperty(\"evosuite.log.appender\", \"CLIENT\"); \n    java.lang.System.setProperty(\"search_budget\", \"20\"); \n    java.lang.System.setProperty(\"criterion\", \"LINE:BRANCH:WEAKMUTATION:OUTPUT:METHOD:CBRANCH:STRONGMUTATION\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(GetJavaProperty_ESTest_scaffolding.class.getClassLoader() ,\n      \"GetJavaProperty\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(GetJavaProperty_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"GetJavaProperty\"\n    );\n  }\n}\n", "class_idx": 86}
{"class_name": "Mutex", "java_source": "/**\n * A mutex, based on a string ID, safe for synchronization for a given user context.\n *\n * <h3>Usage</h3>\n *\n * <pre>\n *    MutextContext mutexContext = new MutextContext();\n *    ...\n *\n *    String id = someObject.getCanonicalID();\n *    Mutex mutex = mutexContext.getMutex(id);\n *    synchronized(mutex) {\n *       ...\n *    }\n * </pre>\n *\n * Instead of synchronizing on a <tt>Mutex</tt> it is also possible to get a lock (exist in several\n * flavours)\n *\n * @see MutexContext\n * @see MutexContext#getLock(String)\n * @see MutexContext#getReadWriteLock(String)\n * @see MutexContext#getStampedLock(String)\n * @author Philippe Poulard\n */\npublic class Mutex {\n\n  private final String id;\n\n  Mutex(String id) {\n    this.id = id;\n  }\n\n  @Override\n  public boolean equals(Object o) {\n    if (o == null) {\n      return false;\n    }\n    if (this.getClass() == o.getClass()) {\n      return this.id.equals(o.toString());\n    }\n    return false;\n  }\n\n  @Override\n  public int hashCode() {\n    return this.id.hashCode();\n  }\n\n  @Override\n  public String toString() {\n    return this.id;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Mutex \n.super java/lang/Object \n.field private final id Ljava/lang/String; \n\n.method <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field Mutex id Ljava/lang/String; \nL9:     return \nL10:    \n        .linenumbertable \n            L0 34 \n            L4 35 \n            L9 36 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public equals : (Ljava/lang/Object;)Z \n    .code stack 2 locals 2 \nL0:     aload_1 \nL1:     ifnonnull L6 \nL4:     iconst_0 \nL5:     ireturn \n\n        .stack same \nL6:     aload_0 \nL7:     invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL10:    aload_1 \nL11:    invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL14:    if_acmpne L29 \nL17:    aload_0 \nL18:    getfield Field Mutex id Ljava/lang/String; \nL21:    aload_1 \nL22:    invokevirtual Method java/lang/Object toString ()Ljava/lang/String; \nL25:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL28:    ireturn \n\n        .stack same \nL29:    iconst_0 \nL30:    ireturn \nL31:    \n        .linenumbertable \n            L0 40 \n            L4 41 \n            L6 43 \n            L17 44 \n            L29 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public hashCode : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Mutex id Ljava/lang/String; \nL4:     invokevirtual Method java/lang/String hashCode ()I \nL7:     ireturn \nL8:     \n        .linenumbertable \n            L0 51 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Mutex id Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 56 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Mutex.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 05:16:33 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Mutex_ESTest extends Mutex_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Mutex mutex0 = new Mutex((String) null);\n      String string0 = mutex0.toString();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Mutex mutex0 = new Mutex(\"VPR1l0?Mbb\");\n      String string0 = mutex0.toString();\n      assertEquals(\"VPR1l0?Mbb\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Mutex mutex0 = new Mutex(\"VPR1l0?Mbb\");\n      boolean boolean0 = mutex0.equals(mutex0);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Mutex mutex0 = new Mutex(\"VPR1l0?Mbb\");\n      boolean boolean0 = mutex0.equals((Object) null);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Mutex mutex0 = new Mutex(\"\");\n      boolean boolean0 = mutex0.equals(\"\");\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Mutex mutex0 = new Mutex(\"\");\n      mutex0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      Mutex mutex0 = new Mutex(\"\");\n      String string0 = mutex0.toString();\n      assertEquals(\"\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 05:16:33 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Mutex_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Mutex\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpsspb6b3r\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Mutex_ESTest_scaffolding.class.getClassLoader() ,\n      \"Mutex\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Mutex_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Mutex\"\n    );\n  }\n}\n", "class_idx": 87}
{"class_name": "StaticFieldUninitialized", "java_source": "/** Created by gordon on 30/11/2016. */\npublic class StaticFieldUninitialized {\n\n  private static Object foo;\n\n  private static int bar;\n\n  static {\n    setBar(7);\n  }\n\n  public static void setFoo(Integer x) {\n    foo = x;\n  }\n\n  public static void setFoo(String x) {\n    foo = x;\n  }\n\n  public static void setBar(int x) {\n    bar = x;\n  }\n\n  public static Object getFoo() {\n    return foo;\n  }\n\n  public static int getBar() {\n    foo = 127;\n    return bar;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super StaticFieldUninitialized \n.super java/lang/Object \n.field private static foo Ljava/lang/Object; \n.field private static bar I \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static setFoo : (Ljava/lang/Integer;)V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     putstatic Field StaticFieldUninitialized foo Ljava/lang/Object; \nL4:     return \nL5:     \n        .linenumbertable \n            L0 17 \n            L4 18 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static setFoo : (Ljava/lang/String;)V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     putstatic Field StaticFieldUninitialized foo Ljava/lang/Object; \nL4:     return \nL5:     \n        .linenumbertable \n            L0 21 \n            L4 22 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static setBar : (I)V \n    .code stack 1 locals 1 \nL0:     iload_0 \nL1:     putstatic Field StaticFieldUninitialized bar I \nL4:     return \nL5:     \n        .linenumbertable \n            L0 25 \n            L4 26 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static getFoo : ()Ljava/lang/Object; \n    .code stack 1 locals 0 \nL0:     getstatic Field StaticFieldUninitialized foo Ljava/lang/Object; \nL3:     areturn \nL4:     \n        .linenumbertable \n            L0 29 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static getBar : ()I \n    .code stack 1 locals 0 \nL0:     bipush 127 \nL2:     invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL5:     putstatic Field StaticFieldUninitialized foo Ljava/lang/Object; \nL8:     getstatic Field StaticFieldUninitialized bar I \nL11:    ireturn \nL12:    \n        .linenumbertable \n            L0 33 \n            L8 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 1 locals 0 \nL0:     bipush 7 \nL2:     invokestatic Method StaticFieldUninitialized setBar (I)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 13 \n            L5 14 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'StaticFieldUninitialized.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 13:33:55 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class StaticFieldUninitialized_ESTest extends StaticFieldUninitialized_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      StaticFieldUninitialized.setFoo(\"'tA91\");\n      Object object0 = StaticFieldUninitialized.getFoo();\n      assertEquals(\"'tA91\", object0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      StaticFieldUninitialized.setBar(0);\n      int int0 = StaticFieldUninitialized.getBar();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      StaticFieldUninitialized.setBar((-7747));\n      int int0 = StaticFieldUninitialized.getBar();\n      assertEquals((-7747), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Object object0 = StaticFieldUninitialized.getFoo();\n      assertNull(object0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      int int0 = StaticFieldUninitialized.getBar();\n      assertEquals(7, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Integer integer0 = new Integer(1150);\n      StaticFieldUninitialized.setFoo(integer0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      StaticFieldUninitialized staticFieldUninitialized0 = new StaticFieldUninitialized();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 13:33:55 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class StaticFieldUninitialized_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"StaticFieldUninitialized\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpq37kf1cr\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StaticFieldUninitialized_ESTest_scaffolding.class.getClassLoader() ,\n      \"StaticFieldUninitialized\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StaticFieldUninitialized_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"StaticFieldUninitialized\"\n    );\n  }\n}\n", "class_idx": 88}
{"class_name": "BuildConfig", "java_source": "/** Automatically generated file. DO NOT MODIFY */\npublic final class BuildConfig {\n  public static final boolean DEBUG = true;\n}\n", "jasm_code": ".version 52 0 \n.class public final super BuildConfig \n.super java/lang/Object \n.field public static final DEBUG Z = 1 \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 4 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'BuildConfig.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 04:57:56 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class BuildConfig_ESTest extends BuildConfig_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      BuildConfig buildConfig0 = new BuildConfig();\n      assertTrue(BuildConfig.DEBUG);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 04:57:56 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class BuildConfig_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"BuildConfig\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpex46z_uf\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BuildConfig_ESTest_scaffolding.class.getClassLoader() ,\n      \"BuildConfig\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BuildConfig_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"BuildConfig\"\n    );\n  }\n}\n", "class_idx": 89}
{"class_name": "HttpBadResponseException", "java_source": "public class HttpBadResponseException extends RuntimeException {\n\n  public HttpBadResponseException() {}\n\n  public HttpBadResponseException(String message) {\n    super(message);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super HttpBadResponseException \n.super java/lang/RuntimeException \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/RuntimeException <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n            L4 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 9 \n            L5 10 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'HttpBadResponseException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 04:53:52 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class HttpBadResponseException_ESTest extends HttpBadResponseException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      HttpBadResponseException httpBadResponseException0 = new HttpBadResponseException(\"1\");\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      HttpBadResponseException httpBadResponseException0 = new HttpBadResponseException();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 04:53:52 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class HttpBadResponseException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"HttpBadResponseException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpqsb2ssu4\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(HttpBadResponseException_ESTest_scaffolding.class.getClassLoader() ,\n      \"HttpBadResponseException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(HttpBadResponseException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"HttpBadResponseException\"\n    );\n  }\n}\n", "class_idx": 90}
{"class_name": "ChatItem", "java_source": "public class ChatItem {\n  public String Message;\n  public String Date;\n}\n", "jasm_code": ".version 52 0 \n.class public super ChatItem \n.super java/lang/Object \n.field public Message Ljava/lang/String; \n.field public Date Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ChatItem.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 06:19:14 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ChatItem_ESTest extends ChatItem_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ChatItem chatItem0 = new ChatItem();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 06:19:14 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ChatItem_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ChatItem\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpa4h8vnb8\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ChatItem_ESTest_scaffolding.class.getClassLoader() ,\n      \"ChatItem\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ChatItem_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ChatItem\"\n    );\n  }\n}\n", "class_idx": 91}
{"class_name": "FirstRecurringCharacter", "java_source": "import java.util.HashSet;\nimport java.util.Set;\n\n/**\n * Find in the string first recurring character and return it else return null\n * https://www.youtube.com/watch?v=GJdiM-muYqc\n *\n * <p>Similar to {@link TwoPairParticularSum} Similar to {@link iurii.job.interview.leetcode.TwoSum}\n *\n * <p>Time complexity: O(min(N, M)) Auxiliary space complexity: O(min(N, M)) N - string length M -\n * size of alphabet (number of different characters in the string)\n */\npublic class FirstRecurringCharacter {\n\n  // set is enough to find the character in case index Map should be used\n  public Character firstRecurringCharacter(String s) {\n    Set<Character> seenCharacters = new HashSet<>();\n    for (char c : s.toCharArray()) {\n      if (seenCharacters.contains(c)) {\n        return c;\n      } else {\n        seenCharacters.add(c);\n      }\n    }\n    return null;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super FirstRecurringCharacter \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 18 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public firstRecurringCharacter : (Ljava/lang/String;)Ljava/lang/Character; \n    .code stack 2 locals 7 \nL0:     new java/util/HashSet \nL3:     dup \nL4:     invokespecial Method java/util/HashSet <init> ()V \nL7:     astore_2 \nL8:     aload_1 \nL9:     invokevirtual Method java/lang/String toCharArray ()[C \nL12:    astore_3 \nL13:    aload_3 \nL14:    arraylength \nL15:    istore 4 \nL17:    iconst_0 \nL18:    istore 5 \n\n        .stack full \n            locals Object FirstRecurringCharacter Object java/lang/String Object java/util/Set Object [C Integer Integer \n            stack \n        .end stack \nL20:    iload 5 \nL22:    iload 4 \nL24:    if_icmpge L71 \nL27:    aload_3 \nL28:    iload 5 \nL30:    caload \nL31:    istore 6 \nL33:    aload_2 \nL34:    iload 6 \nL36:    invokestatic Method java/lang/Character valueOf (C)Ljava/lang/Character; \nL39:    invokeinterface InterfaceMethod java/util/Set contains (Ljava/lang/Object;)Z 2 \nL44:    ifeq L53 \nL47:    iload 6 \nL49:    invokestatic Method java/lang/Character valueOf (C)Ljava/lang/Character; \nL52:    areturn \n\n        .stack append Integer \nL53:    aload_2 \nL54:    iload 6 \nL56:    invokestatic Method java/lang/Character valueOf (C)Ljava/lang/Character; \nL59:    invokeinterface InterfaceMethod java/util/Set add (Ljava/lang/Object;)Z 2 \nL64:    pop \nL65:    iinc 5 1 \nL68:    goto L20 \n\n        .stack full \n            locals Object FirstRecurringCharacter Object java/lang/String Object java/util/Set \n            stack \n        .end stack \nL71:    aconst_null \nL72:    areturn \nL73:    \n        .linenumbertable \n            L0 22 \n            L8 23 \n            L33 24 \n            L47 25 \n            L53 27 \n            L65 23 \n            L71 30 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'FirstRecurringCharacter.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 08:17:30 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class FirstRecurringCharacter_ESTest extends FirstRecurringCharacter_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      FirstRecurringCharacter firstRecurringCharacter0 = new FirstRecurringCharacter();\n      firstRecurringCharacter0.firstRecurringCharacter(\"Ne\u007f__23q!T}'\");\n      firstRecurringCharacter0.firstRecurringCharacter(\"\");\n      Character character0 = firstRecurringCharacter0.firstRecurringCharacter(\"\");\n      assertNull(character0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      FirstRecurringCharacter firstRecurringCharacter0 = new FirstRecurringCharacter();\n      Character character0 = firstRecurringCharacter0.firstRecurringCharacter(\"FirstRecurringCharacter\");\n      assertEquals('r', (char)character0);\n      assertNotNull(character0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 08:17:30 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class FirstRecurringCharacter_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"FirstRecurringCharacter\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp8detufug\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FirstRecurringCharacter_ESTest_scaffolding.class.getClassLoader() ,\n      \"FirstRecurringCharacter\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FirstRecurringCharacter_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"FirstRecurringCharacter\"\n    );\n  }\n}\n", "class_idx": 92}
{"class_name": "ConfigTypes", "java_source": "public class ConfigTypes {\n  public static String BOOLEANS = \"booleans\";\n  public static String INTS = \"ints\";\n  public static String FLOATS = \"floats\";\n}\n", "jasm_code": ".version 52 0 \n.class public super ConfigTypes \n.super java/lang/Object \n.field public static BOOLEANS Ljava/lang/String; \n.field public static INTS Ljava/lang/String; \n.field public static FLOATS Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 1 locals 0 \nL0:     ldc 'booleans' \nL2:     putstatic Field ConfigTypes BOOLEANS Ljava/lang/String; \nL5:     ldc 'ints' \nL7:     putstatic Field ConfigTypes INTS Ljava/lang/String; \nL10:    ldc 'floats' \nL12:    putstatic Field ConfigTypes FLOATS Ljava/lang/String; \nL15:    return \nL16:    \n        .linenumbertable \n            L0 4 \n            L5 5 \n            L10 6 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ConfigTypes.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 17:53:57 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ConfigTypes_ESTest extends ConfigTypes_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ConfigTypes configTypes0 = new ConfigTypes();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 17:53:57 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ConfigTypes_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ConfigTypes\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpw1yxew7p\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ConfigTypes_ESTest_scaffolding.class.getClassLoader() ,\n      \"ConfigTypes\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ConfigTypes_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ConfigTypes\"\n    );\n  }\n}\n", "class_idx": 93}
{"class_name": "SmsBroadcastConfigInfo", "java_source": "/*\n * Copyright (C) 2009 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * SmsBroadcastConfigInfo defines one configuration of Cell Broadcast Message (CBM) to be received\n * by the ME\n *\n * <p>fromServiceId - toServiceId defines a range of CBM message identifiers whose value is 0x0000 -\n * 0xFFFF as defined in TS 23.041 9.4.1.2.2 for GMS and 9.4.4.2.2 for UMTS. All other values can be\n * treated as empty CBM message ID.\n *\n * <p>fromCodeScheme - toCodeScheme defines a range of CBM data coding schemes whose value is 0x00 -\n * 0xFF as defined in TS 23.041 9.4.1.2.3 for GMS and 9.4.4.2.3 for UMTS. All other values can be\n * treated as empty CBM data coding scheme.\n *\n * <p>selected false means message types specified in {@code <fromServiceId, toServiceId>} and\n * {@code <fromCodeScheme, toCodeScheme>} are not accepted, while true means accepted.\n */\npublic final class SmsBroadcastConfigInfo {\n  private int fromServiceId;\n  private int toServiceId;\n  private int fromCodeScheme;\n  private int toCodeScheme;\n  private boolean selected;\n\n  /** Initialize the object from rssi and cid. */\n  public SmsBroadcastConfigInfo(\n      int fromId, int toId, int fromScheme, int toScheme, boolean selected) {\n    fromServiceId = fromId;\n    toServiceId = toId;\n    fromCodeScheme = fromScheme;\n    toCodeScheme = toScheme;\n    this.selected = selected;\n  }\n\n  /**\n   * @param fromServiceId the fromServiceId to set\n   */\n  public void setFromServiceId(int fromServiceId) {\n    this.fromServiceId = fromServiceId;\n  }\n\n  /**\n   * @return the fromServiceId\n   */\n  public int getFromServiceId() {\n    return fromServiceId;\n  }\n\n  /**\n   * @param toServiceId the toServiceId to set\n   */\n  public void setToServiceId(int toServiceId) {\n    this.toServiceId = toServiceId;\n  }\n\n  /**\n   * @return the toServiceId\n   */\n  public int getToServiceId() {\n    return toServiceId;\n  }\n\n  /**\n   * @param fromCodeScheme the fromCodeScheme to set\n   */\n  public void setFromCodeScheme(int fromCodeScheme) {\n    this.fromCodeScheme = fromCodeScheme;\n  }\n\n  /**\n   * @return the fromCodeScheme\n   */\n  public int getFromCodeScheme() {\n    return fromCodeScheme;\n  }\n\n  /**\n   * @param toCodeScheme the toCodeScheme to set\n   */\n  public void setToCodeScheme(int toCodeScheme) {\n    this.toCodeScheme = toCodeScheme;\n  }\n\n  /**\n   * @return the toCodeScheme\n   */\n  public int getToCodeScheme() {\n    return toCodeScheme;\n  }\n\n  /**\n   * @param selected the selected to set\n   */\n  public void setSelected(boolean selected) {\n    this.selected = selected;\n  }\n\n  /**\n   * @return the selected\n   */\n  public boolean isSelected() {\n    return selected;\n  }\n\n  @Override\n  public String toString() {\n    return \"SmsBroadcastConfigInfo: Id [\"\n        + fromServiceId\n        + ','\n        + toServiceId\n        + \"] Code [\"\n        + fromCodeScheme\n        + ','\n        + toCodeScheme\n        + \"] \"\n        + (selected ? \"ENABLED\" : \"DISABLED\");\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public final super SmsBroadcastConfigInfo \n.super java/lang/Object \n.field private fromServiceId I \n.field private toServiceId I \n.field private fromCodeScheme I \n.field private toCodeScheme I \n.field private selected Z \n\n.method public <init> : (IIIIZ)V \n    .code stack 2 locals 6 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field SmsBroadcastConfigInfo fromServiceId I \nL9:     aload_0 \nL10:    iload_2 \nL11:    putfield Field SmsBroadcastConfigInfo toServiceId I \nL14:    aload_0 \nL15:    iload_3 \nL16:    putfield Field SmsBroadcastConfigInfo fromCodeScheme I \nL19:    aload_0 \nL20:    iload 4 \nL22:    putfield Field SmsBroadcastConfigInfo toCodeScheme I \nL25:    aload_0 \nL26:    iload 5 \nL28:    putfield Field SmsBroadcastConfigInfo selected Z \nL31:    return \nL32:    \n        .linenumbertable \n            L0 48 \n            L4 49 \n            L9 50 \n            L14 51 \n            L19 52 \n            L25 53 \n            L31 54 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setFromServiceId : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field SmsBroadcastConfigInfo fromServiceId I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 60 \n            L5 61 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFromServiceId : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SmsBroadcastConfigInfo fromServiceId I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 67 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setToServiceId : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field SmsBroadcastConfigInfo toServiceId I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 74 \n            L5 75 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getToServiceId : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SmsBroadcastConfigInfo toServiceId I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 81 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setFromCodeScheme : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field SmsBroadcastConfigInfo fromCodeScheme I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 88 \n            L5 89 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFromCodeScheme : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SmsBroadcastConfigInfo fromCodeScheme I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 95 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setToCodeScheme : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field SmsBroadcastConfigInfo toCodeScheme I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 102 \n            L5 103 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getToCodeScheme : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SmsBroadcastConfigInfo toCodeScheme I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 109 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setSelected : (Z)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field SmsBroadcastConfigInfo selected Z \nL5:     return \nL6:     \n        .linenumbertable \n            L0 116 \n            L5 117 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public isSelected : ()Z \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SmsBroadcastConfigInfo selected Z \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 123 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     ldc 'SmsBroadcastConfigInfo: Id [' \nL9:     invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL12:    aload_0 \nL13:    getfield Field SmsBroadcastConfigInfo fromServiceId I \nL16:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL19:    bipush 44 \nL21:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL24:    aload_0 \nL25:    getfield Field SmsBroadcastConfigInfo toServiceId I \nL28:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL31:    ldc '] Code [' \nL33:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL36:    aload_0 \nL37:    getfield Field SmsBroadcastConfigInfo fromCodeScheme I \nL40:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL43:    bipush 44 \nL45:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL48:    aload_0 \nL49:    getfield Field SmsBroadcastConfigInfo toCodeScheme I \nL52:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL55:    ldc '] ' \nL57:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL60:    aload_0 \nL61:    getfield Field SmsBroadcastConfigInfo selected Z \nL64:    ifeq L72 \nL67:    ldc 'ENABLED' \nL69:    goto L74 \n\n        .stack stack_1_extended Object java/lang/StringBuilder \nL72:    ldc 'DISABLED' \n\n        .stack full \n            locals Object SmsBroadcastConfigInfo \n            stack Object java/lang/StringBuilder Object java/lang/String \n        .end stack \nL74:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL77:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL80:    areturn \nL81:    \n        .linenumbertable \n            L0 128 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'SmsBroadcastConfigInfo.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 06:09:49 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class SmsBroadcastConfigInfo_ESTest extends SmsBroadcastConfigInfo_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo(7938, 7938, 3313, 7938, false);\n      assertFalse(smsBroadcastConfigInfo0.isSelected());\n      \n      smsBroadcastConfigInfo0.setSelected(true);\n      boolean boolean0 = smsBroadcastConfigInfo0.isSelected();\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo(0, 0, 0, 0, false);\n      int int0 = smsBroadcastConfigInfo0.getToServiceId();\n      assertEquals(0, int0);\n      assertEquals(0, smsBroadcastConfigInfo0.getFromCodeScheme());\n      assertEquals(0, smsBroadcastConfigInfo0.getToCodeScheme());\n      assertFalse(smsBroadcastConfigInfo0.isSelected());\n      assertEquals(0, smsBroadcastConfigInfo0.getFromServiceId());\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo((-10294), (-10294), (-10294), (-10294), true);\n      int int0 = smsBroadcastConfigInfo0.getToServiceId();\n      assertEquals((-10294), smsBroadcastConfigInfo0.getFromCodeScheme());\n      assertEquals((-10294), smsBroadcastConfigInfo0.getFromServiceId());\n      assertEquals((-10294), smsBroadcastConfigInfo0.getToCodeScheme());\n      assertTrue(smsBroadcastConfigInfo0.isSelected());\n      assertEquals((-10294), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo(0, 0, 0, 0, true);\n      int int0 = smsBroadcastConfigInfo0.getToCodeScheme();\n      assertEquals(0, smsBroadcastConfigInfo0.getToServiceId());\n      assertEquals(0, smsBroadcastConfigInfo0.getFromServiceId());\n      assertEquals(0, smsBroadcastConfigInfo0.getFromCodeScheme());\n      assertEquals(0, int0);\n      assertTrue(smsBroadcastConfigInfo0.isSelected());\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo((-1), 0, 0, (-1), false);\n      int int0 = smsBroadcastConfigInfo0.getToCodeScheme();\n      assertEquals((-1), smsBroadcastConfigInfo0.getFromServiceId());\n      assertEquals(0, smsBroadcastConfigInfo0.getToServiceId());\n      assertEquals((-1), int0);\n      assertEquals(0, smsBroadcastConfigInfo0.getFromCodeScheme());\n      assertFalse(smsBroadcastConfigInfo0.isSelected());\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo((-10294), (-10294), (-10294), (-10294), true);\n      int int0 = smsBroadcastConfigInfo0.getFromServiceId();\n      assertEquals((-10294), int0);\n      assertEquals((-10294), smsBroadcastConfigInfo0.getFromCodeScheme());\n      assertTrue(smsBroadcastConfigInfo0.isSelected());\n      assertEquals((-10294), smsBroadcastConfigInfo0.getToCodeScheme());\n      assertEquals((-10294), smsBroadcastConfigInfo0.getToServiceId());\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo((-1), 0, 0, (-1), false);\n      int int0 = smsBroadcastConfigInfo0.getFromCodeScheme();\n      assertEquals(0, int0);\n      assertFalse(smsBroadcastConfigInfo0.isSelected());\n      assertEquals((-1), smsBroadcastConfigInfo0.getFromServiceId());\n      assertEquals(0, smsBroadcastConfigInfo0.getToServiceId());\n      assertEquals((-1), smsBroadcastConfigInfo0.getToCodeScheme());\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo(0, (-19075), (-19075), 0, false);\n      int int0 = smsBroadcastConfigInfo0.getFromCodeScheme();\n      assertEquals(0, smsBroadcastConfigInfo0.getFromServiceId());\n      assertFalse(smsBroadcastConfigInfo0.isSelected());\n      assertEquals((-19075), smsBroadcastConfigInfo0.getToServiceId());\n      assertEquals(0, smsBroadcastConfigInfo0.getToCodeScheme());\n      assertEquals((-19075), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo(7938, 7938, 3313, 7938, false);\n      assertFalse(smsBroadcastConfigInfo0.isSelected());\n      \n      smsBroadcastConfigInfo0.setSelected(true);\n      smsBroadcastConfigInfo0.toString();\n      assertTrue(smsBroadcastConfigInfo0.isSelected());\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo(7938, 7938, 3313, 7938, false);\n      String string0 = smsBroadcastConfigInfo0.toString();\n      assertEquals(\"SmsBroadcastConfigInfo: Id [7938,7938] Code [3313,7938] DISABLED\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo(7938, 7938, 3313, 7938, false);\n      smsBroadcastConfigInfo0.setFromCodeScheme((-5992));\n      assertEquals((-5992), smsBroadcastConfigInfo0.getFromCodeScheme());\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo(7938, 7938, 3313, 7938, false);\n      int int0 = smsBroadcastConfigInfo0.getToServiceId();\n      assertEquals(3313, smsBroadcastConfigInfo0.getFromCodeScheme());\n      assertEquals(7938, smsBroadcastConfigInfo0.getToCodeScheme());\n      assertEquals(7938, smsBroadcastConfigInfo0.getFromServiceId());\n      assertEquals(7938, int0);\n      assertFalse(smsBroadcastConfigInfo0.isSelected());\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo(7938, 7938, 3313, 7938, false);\n      smsBroadcastConfigInfo0.setToCodeScheme(7938);\n      assertFalse(smsBroadcastConfigInfo0.isSelected());\n      assertEquals(3313, smsBroadcastConfigInfo0.getFromCodeScheme());\n      assertEquals(7938, smsBroadcastConfigInfo0.getToCodeScheme());\n      assertEquals(7938, smsBroadcastConfigInfo0.getToServiceId());\n      assertEquals(7938, smsBroadcastConfigInfo0.getFromServiceId());\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo(7938, 7938, 3313, 7938, false);\n      boolean boolean0 = smsBroadcastConfigInfo0.isSelected();\n      assertEquals(3313, smsBroadcastConfigInfo0.getFromCodeScheme());\n      assertEquals(7938, smsBroadcastConfigInfo0.getToServiceId());\n      assertEquals(7938, smsBroadcastConfigInfo0.getFromServiceId());\n      assertFalse(boolean0);\n      assertEquals(7938, smsBroadcastConfigInfo0.getToCodeScheme());\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo(7938, 7938, 3313, 7938, false);\n      smsBroadcastConfigInfo0.setToServiceId(33042);\n      assertEquals(33042, smsBroadcastConfigInfo0.getToServiceId());\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo(7938, 7938, 3313, 7938, false);\n      int int0 = smsBroadcastConfigInfo0.getFromServiceId();\n      assertEquals(7938, smsBroadcastConfigInfo0.getToServiceId());\n      assertEquals(7938, smsBroadcastConfigInfo0.getToCodeScheme());\n      assertEquals(3313, smsBroadcastConfigInfo0.getFromCodeScheme());\n      assertFalse(smsBroadcastConfigInfo0.isSelected());\n      assertEquals(7938, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo(7938, 7938, 3313, 7938, false);\n      smsBroadcastConfigInfo0.setFromServiceId(0);\n      int int0 = smsBroadcastConfigInfo0.getFromServiceId();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo(0, 20434, 20434, 0, false);\n      int int0 = smsBroadcastConfigInfo0.getFromCodeScheme();\n      assertEquals(0, smsBroadcastConfigInfo0.getToCodeScheme());\n      assertEquals(0, smsBroadcastConfigInfo0.getFromServiceId());\n      assertFalse(smsBroadcastConfigInfo0.isSelected());\n      assertEquals(20434, smsBroadcastConfigInfo0.getToServiceId());\n      assertEquals(20434, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      SmsBroadcastConfigInfo smsBroadcastConfigInfo0 = new SmsBroadcastConfigInfo(7938, 7938, 3313, 7938, false);\n      int int0 = smsBroadcastConfigInfo0.getToCodeScheme();\n      assertEquals(3313, smsBroadcastConfigInfo0.getFromCodeScheme());\n      assertEquals(7938, smsBroadcastConfigInfo0.getToServiceId());\n      assertEquals(7938, int0);\n      assertFalse(smsBroadcastConfigInfo0.isSelected());\n      assertEquals(7938, smsBroadcastConfigInfo0.getFromServiceId());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 06:09:49 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class SmsBroadcastConfigInfo_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"SmsBroadcastConfigInfo\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpujo2k51n\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SmsBroadcastConfigInfo_ESTest_scaffolding.class.getClassLoader() ,\n      \"SmsBroadcastConfigInfo\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SmsBroadcastConfigInfo_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"SmsBroadcastConfigInfo\"\n    );\n  }\n}\n", "class_idx": 94}
{"class_name": "IdentityComparator", "java_source": "/*\n * Tigase Jabber/XMPP Server\n * Copyright (C) 2004-2012 \"Artur Hefczyc\" <artur.hefczyc@tigase.org>\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, version 3 of the License.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. Look for COPYING file in the top folder.\n * If not, see http://www.gnu.org/licenses/.\n *\n * $Rev$\n * Last modified by $Author$\n * $Date$\n */\n\nimport java.util.Comparator;\n\n/**\n * Created: Jul 15, 2009 11:50:51 AM\n *\n * @author <a href=\"mailto:artur.hefczyc@tigase.org\">Artur Hefczyc</a>\n * @version $Rev$\n */\npublic class IdentityComparator implements Comparator<Object> {\n\n  @Override\n  public int compare(Object o1, Object o2) {\n    if (o1 == o2) {\n      return 0;\n    }\n    if (o1.hashCode() < o2.hashCode()) {\n      return -1;\n    }\n    return 1;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super IdentityComparator \n.super java/lang/Object \n.implements java/util/Comparator \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 33 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public compare : (Ljava/lang/Object;Ljava/lang/Object;)I \n    .code stack 2 locals 3 \nL0:     aload_1 \nL1:     aload_2 \nL2:     if_acmpne L7 \nL5:     iconst_0 \nL6:     ireturn \n\n        .stack same \nL7:     aload_1 \nL8:     invokevirtual Method java/lang/Object hashCode ()I \nL11:    aload_2 \nL12:    invokevirtual Method java/lang/Object hashCode ()I \nL15:    if_icmpge L20 \nL18:    iconst_m1 \nL19:    ireturn \n\n        .stack same \nL20:    iconst_1 \nL21:    ireturn \nL22:    \n        .linenumbertable \n            L0 37 \n            L5 38 \n            L7 40 \n            L18 41 \n            L20 43 \n        .end linenumbertable \n    .end code \n.end method \n.signature Ljava/lang/Object;Ljava/util/Comparator<Ljava/lang/Object;>; \n.sourcefile 'IdentityComparator.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 01:40:51 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class IdentityComparator_ESTest extends IdentityComparator_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      IdentityComparator identityComparator0 = new IdentityComparator();\n      Object object0 = new Object();\n      int int0 = identityComparator0.compare(object0, object0);\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      IdentityComparator identityComparator0 = new IdentityComparator();\n      Object object0 = new Object();\n      Object object1 = new Object();\n      int int0 = identityComparator0.compare(object0, object1);\n      assertEquals((-1), int0);\n      \n      Object object2 = new Object();\n      int int1 = identityComparator0.compare(object2, object1);\n      assertEquals(1, int1);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 01:40:51 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class IdentityComparator_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"IdentityComparator\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp9i2gg8mq\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IdentityComparator_ESTest_scaffolding.class.getClassLoader() ,\n      \"IdentityComparator\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IdentityComparator_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"IdentityComparator\"\n    );\n  }\n}\n", "class_idx": 95}
{"class_name": "IWResourceMessage", "java_source": "/*\n * $Id: IWResourceMessage.java,v 1.2 2006/04/09 12:13:14 laddi Exp $\n * Created on 5.10.2004\n *\n * Copyright (C) 2004 Idega Software hf. All Rights Reserved.\n *\n * This software is the proprietary information of Idega hf.\n * Use is subject to license terms.\n */\n\n/**\n * Last modified: $Date: 2006/04/09 12:13:14 $ by $Author: laddi $\n *\n * @author <a href=\"mailto:aron@idega.com\">aron</a>\n * @version $Revision: 1.2 $\n */\npublic class IWResourceMessage {\n\n  private String message;\n  private String key;\n  /** */\n  public IWResourceMessage() {\n    this(null, null);\n  }\n\n  public IWResourceMessage(String key) {\n    this(key, null);\n  }\n\n  public IWResourceMessage(String key, String message) {\n    this.message = message;\n    this.key = key;\n  }\n\n  public String getKey() {\n    return this.key;\n  }\n\n  public void setKey(String key) {\n    this.key = key;\n  }\n\n  public String getMessage() {\n    return this.message;\n  }\n\n  public void setMessage(String message) {\n    this.message = message;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super IWResourceMessage \n.super java/lang/Object \n.field private message Ljava/lang/String; \n.field private key Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 3 locals 1 \nL0:     aload_0 \nL1:     aconst_null \nL2:     aconst_null \nL3:     invokespecial Method IWResourceMessage <init> (Ljava/lang/String;Ljava/lang/String;)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 27 \n            L6 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     aconst_null \nL3:     invokespecial Method IWResourceMessage <init> (Ljava/lang/String;Ljava/lang/String;)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 31 \n            L6 32 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_2 \nL6:     putfield Field IWResourceMessage message Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_1 \nL11:    putfield Field IWResourceMessage key Ljava/lang/String; \nL14:    return \nL15:    \n        .linenumbertable \n            L0 34 \n            L4 35 \n            L9 36 \n            L14 37 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getKey : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field IWResourceMessage key Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 40 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setKey : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field IWResourceMessage key Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 43 \n            L5 44 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getMessage : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field IWResourceMessage message Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setMessage : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field IWResourceMessage message Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 49 \n            L5 50 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'IWResourceMessage.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 19:31:17 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class IWResourceMessage_ESTest extends IWResourceMessage_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      IWResourceMessage iWResourceMessage0 = new IWResourceMessage(\"\");\n      iWResourceMessage0.setMessage(\"z\");\n      String string0 = iWResourceMessage0.getMessage();\n      assertEquals(\"z\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      IWResourceMessage iWResourceMessage0 = new IWResourceMessage(\"uw;Wp\u007fh5}RU\", \"uw;Wp\u007fh5}RU\");\n      iWResourceMessage0.setMessage(\"\");\n      String string0 = iWResourceMessage0.getMessage();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      IWResourceMessage iWResourceMessage0 = new IWResourceMessage(\"\");\n      String string0 = iWResourceMessage0.getKey();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      IWResourceMessage iWResourceMessage0 = new IWResourceMessage(\"2x&eV>x c0QTqU\", \"2x&eV>x c0QTqU\");\n      String string0 = iWResourceMessage0.getKey();\n      assertEquals(\"2x&eV>x c0QTqU\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      IWResourceMessage iWResourceMessage0 = new IWResourceMessage(\"\");\n      iWResourceMessage0.setKey(\"\");\n      assertNull(iWResourceMessage0.getMessage());\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      IWResourceMessage iWResourceMessage0 = new IWResourceMessage(\"\");\n      String string0 = iWResourceMessage0.getMessage();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      IWResourceMessage iWResourceMessage0 = new IWResourceMessage();\n      String string0 = iWResourceMessage0.getKey();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 19:31:17 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class IWResourceMessage_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"IWResourceMessage\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpmr4of6wz\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IWResourceMessage_ESTest_scaffolding.class.getClassLoader() ,\n      \"IWResourceMessage\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IWResourceMessage_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"IWResourceMessage\"\n    );\n  }\n}\n", "class_idx": 96}
{"class_name": "Fibonacci", "java_source": "public class Fibonacci {\n  static long fibonacci(int n) {\n    if ((n == 1) || (n == 2)) {\n      return 1;\n    } else {\n      return fibonacci(n - 1) + fibonacci(n - 2);\n    }\n  }\n\n  public static void main(String[] args) {\n    System.out.println(fibonacci(10)); // 89\n    System.out.println(fibonacci(20)); // 6765\n    System.out.println(fibonacci(30)); // 832040\n    System.out.println(fibonacci(40)); // 102334155\n    System.out.println(fibonacci(50)); // This will hang for a few minutes!\n    System.out.println(fibonacci(60)); // This will hang for much more..!\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Fibonacci \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 1 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static fibonacci : (I)J \n    .code stack 4 locals 1 \nL0:     iload_0 \nL1:     iconst_1 \nL2:     if_icmpeq L10 \nL5:     iload_0 \nL6:     iconst_2 \nL7:     if_icmpne L12 \n\n        .stack same \nL10:    lconst_1 \nL11:    lreturn \n\n        .stack same \nL12:    iload_0 \nL13:    iconst_1 \nL14:    isub \nL15:    invokestatic Method Fibonacci fibonacci (I)J \nL18:    iload_0 \nL19:    iconst_2 \nL20:    isub \nL21:    invokestatic Method Fibonacci fibonacci (I)J \nL24:    ladd \nL25:    lreturn \nL26:    \n        .linenumbertable \n            L0 3 \n            L10 4 \n            L12 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     bipush 10 \nL5:     invokestatic Method Fibonacci fibonacci (I)J \nL8:     invokevirtual Method java/io/PrintStream println (J)V \nL11:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL14:    bipush 20 \nL16:    invokestatic Method Fibonacci fibonacci (I)J \nL19:    invokevirtual Method java/io/PrintStream println (J)V \nL22:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL25:    bipush 30 \nL27:    invokestatic Method Fibonacci fibonacci (I)J \nL30:    invokevirtual Method java/io/PrintStream println (J)V \nL33:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL36:    bipush 40 \nL38:    invokestatic Method Fibonacci fibonacci (I)J \nL41:    invokevirtual Method java/io/PrintStream println (J)V \nL44:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL47:    bipush 50 \nL49:    invokestatic Method Fibonacci fibonacci (I)J \nL52:    invokevirtual Method java/io/PrintStream println (J)V \nL55:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL58:    bipush 60 \nL60:    invokestatic Method Fibonacci fibonacci (I)J \nL63:    invokevirtual Method java/io/PrintStream println (J)V \nL66:    return \nL67:    \n        .linenumbertable \n            L0 11 \n            L11 12 \n            L22 13 \n            L33 14 \n            L44 15 \n            L55 16 \n            L66 17 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Fibonacci.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 19:56:23 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Fibonacci_ESTest extends Fibonacci_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Fibonacci fibonacci0 = new Fibonacci();\n      String[] stringArray0 = new String[8];\n      stringArray0[0] = \"Fibonacci\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"k{V,j0E\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \"\u007fx}0]mk/rd r0[bc}S7\";\n      stringArray0[5] = \"^ir\";\n      stringArray0[6] = \"\";\n      stringArray0[7] = \"0RpmN\";\n      // Undeclared exception!\n      Fibonacci.main(stringArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Fibonacci fibonacci0 = new Fibonacci();\n      String[] stringArray0 = new String[4];\n      stringArray0[0] = \"Fibonacci\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"-VE[AMIu1E!M[ET#\";\n      // Undeclared exception!\n      Fibonacci.main(stringArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Fibonacci fibonacci0 = new Fibonacci();\n      String[] stringArray0 = new String[0];\n      // Undeclared exception!\n      Fibonacci.main(stringArray0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 19:56:23 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Fibonacci_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Fibonacci\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpx_fw7qw0\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Fibonacci_ESTest_scaffolding.class.getClassLoader() ,\n      \"Fibonacci\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Fibonacci_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Fibonacci\"\n    );\n  }\n}\n", "class_idx": 97}
{"class_name": "BuildConfig", "java_source": "/** Automatically generated file. DO NOT MODIFY */\npublic final class BuildConfig {\n  public static final boolean DEBUG = false;\n  public static final String APPLICATION_ID = \"org.apache.cordova\";\n  public static final String BUILD_TYPE = \"release\";\n  public static final String FLAVOR = \"\";\n  public static final int VERSION_CODE = 1;\n  public static final String VERSION_NAME = \"\";\n}\n", "jasm_code": ".version 52 0 \n.class public final super BuildConfig \n.super java/lang/Object \n.field public static final DEBUG Z = 0 \n.field public static final APPLICATION_ID Ljava/lang/String; = 'org.apache.cordova' \n.field public static final BUILD_TYPE Ljava/lang/String; = 'release' \n.field public static final FLAVOR Ljava/lang/String; = '' \n.field public static final VERSION_CODE I = 1 \n.field public static final VERSION_NAME Ljava/lang/String; = '' \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 6 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'BuildConfig.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 21:49:35 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class BuildConfig_ESTest extends BuildConfig_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      BuildConfig buildConfig0 = new BuildConfig();\n      assertEquals(1, BuildConfig.VERSION_CODE);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 21:49:35 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class BuildConfig_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"BuildConfig\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp52or7jjy\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BuildConfig_ESTest_scaffolding.class.getClassLoader() ,\n      \"BuildConfig\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BuildConfig_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"BuildConfig\"\n    );\n  }\n}\n", "class_idx": 98}
{"class_name": "Reference", "java_source": "import java.awt.Image;\n\npublic class Reference {\n\n  public static Image player;\n}\n", "jasm_code": ".version 52 0 \n.class public super Reference \n.super java/lang/Object \n.field public static player Ljava/awt/Image; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Reference.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 19:22:18 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Reference_ESTest extends Reference_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Reference reference0 = new Reference();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 19:22:18 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Reference_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Reference\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp194ax41p\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Reference_ESTest_scaffolding.class.getClassLoader() ,\n      \"Reference\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Reference_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Reference\"\n    );\n  }\n}\n", "class_idx": 99}
{"class_name": "Meal", "java_source": "import java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\n\n/** Created by Timo on 28.05.17. */\npublic class Meal {\n  private double priceStudent;\n  private double priceEmployee;\n  private String name, ingredients, pictureUrl, foodBar;\n  private String mensaName;\n  private LocalDateTime availabilityDate;\n\n  public Meal(\n      String priceStudent,\n      String priceEmployee,\n      String name,\n      String mensa,\n      String ingredients,\n      String pictureUrl,\n      String date,\n      String foodBar) {\n    this.name = name;\n    this.mensaName = mensa;\n    this.ingredients = ingredients;\n    this.pictureUrl = pictureUrl;\n    this.foodBar = foodBar;\n    priceStudent = priceStudent.replace(\",\", \".\");\n    priceEmployee = priceEmployee.replace(\",\", \".\");\n    this.priceStudent = Double.parseDouble(priceStudent);\n    this.priceEmployee = Double.parseDouble(priceEmployee);\n\n    // Parsing date(String) to LocalDateTime\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"dd.MM.yyyy HH:mm\");\n    this.availabilityDate = LocalDateTime.parse(date, formatter);\n  }\n\n  public String getMensaName() {\n    return mensaName;\n  }\n\n  public LocalDateTime getAvailabilityDate() {\n    return availabilityDate;\n  }\n\n  @Override\n  public String toString() {\n    String string = \"Name: \" + name + \"\\n\";\n    string += \"Mensa: \" + mensaName + \"\\n\";\n    string += \"Ingredients: \" + ingredients + \"\\n\";\n    string += \"Price Student: \" + priceStudent + \"\\n\";\n    string += \"Price Employee: \" + priceEmployee + \"\\n\";\n    string += \"Date: \" + availabilityDate.toString() + \"\\n\";\n    string += \"FoodBar: \" + foodBar + \"\\n\";\n    string += \"URL: \" + pictureUrl + \"\\n\";\n    return string;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Meal \n.super java/lang/Object \n.field private priceStudent D \n.field private priceEmployee D \n.field private name Ljava/lang/String; \n.field private ingredients Ljava/lang/String; \n.field private pictureUrl Ljava/lang/String; \n.field private foodBar Ljava/lang/String; \n.field private mensaName Ljava/lang/String; \n.field private availabilityDate Ljava/time/LocalDateTime; \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 3 locals 10 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_3 \nL6:     putfield Field Meal name Ljava/lang/String; \nL9:     aload_0 \nL10:    aload 4 \nL12:    putfield Field Meal mensaName Ljava/lang/String; \nL15:    aload_0 \nL16:    aload 5 \nL18:    putfield Field Meal ingredients Ljava/lang/String; \nL21:    aload_0 \nL22:    aload 6 \nL24:    putfield Field Meal pictureUrl Ljava/lang/String; \nL27:    aload_0 \nL28:    aload 8 \nL30:    putfield Field Meal foodBar Ljava/lang/String; \nL33:    aload_1 \nL34:    ldc ',' \nL36:    ldc '.' \nL38:    invokevirtual Method java/lang/String replace (Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String; \nL41:    astore_1 \nL42:    aload_2 \nL43:    ldc ',' \nL45:    ldc '.' \nL47:    invokevirtual Method java/lang/String replace (Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String; \nL50:    astore_2 \nL51:    aload_0 \nL52:    aload_1 \nL53:    invokestatic Method java/lang/Double parseDouble (Ljava/lang/String;)D \nL56:    putfield Field Meal priceStudent D \nL59:    aload_0 \nL60:    aload_2 \nL61:    invokestatic Method java/lang/Double parseDouble (Ljava/lang/String;)D \nL64:    putfield Field Meal priceEmployee D \nL67:    ldc 'dd.MM.yyyy HH:mm' \nL69:    invokestatic Method java/time/format/DateTimeFormatter ofPattern (Ljava/lang/String;)Ljava/time/format/DateTimeFormatter; \nL72:    astore 9 \nL74:    aload_0 \nL75:    aload 7 \nL77:    aload 9 \nL79:    invokestatic Method java/time/LocalDateTime parse (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/LocalDateTime; \nL82:    putfield Field Meal availabilityDate Ljava/time/LocalDateTime; \nL85:    return \nL86:    \n        .linenumbertable \n            L0 17 \n            L4 18 \n            L9 19 \n            L15 20 \n            L21 21 \n            L27 22 \n            L33 23 \n            L42 24 \n            L51 25 \n            L59 26 \n            L67 29 \n            L74 30 \n            L85 31 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getMensaName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Meal mensaName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getAvailabilityDate : ()Ljava/time/LocalDateTime; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Meal availabilityDate Ljava/time/LocalDateTime; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 38 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 3 locals 2 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     ldc 'Name: ' \nL9:     invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL12:    aload_0 \nL13:    getfield Field Meal name Ljava/lang/String; \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    ldc '\\n' \nL21:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL24:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL27:    astore_1 \nL28:    new java/lang/StringBuilder \nL31:    dup \nL32:    invokespecial Method java/lang/StringBuilder <init> ()V \nL35:    aload_1 \nL36:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL39:    ldc 'Mensa: ' \nL41:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL44:    aload_0 \nL45:    getfield Field Meal mensaName Ljava/lang/String; \nL48:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL51:    ldc '\\n' \nL53:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL56:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL59:    astore_1 \nL60:    new java/lang/StringBuilder \nL63:    dup \nL64:    invokespecial Method java/lang/StringBuilder <init> ()V \nL67:    aload_1 \nL68:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL71:    ldc 'Ingredients: ' \nL73:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL76:    aload_0 \nL77:    getfield Field Meal ingredients Ljava/lang/String; \nL80:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL83:    ldc '\\n' \nL85:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL88:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL91:    astore_1 \nL92:    new java/lang/StringBuilder \nL95:    dup \nL96:    invokespecial Method java/lang/StringBuilder <init> ()V \nL99:    aload_1 \nL100:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL103:   ldc 'Price Student: ' \nL105:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL108:   aload_0 \nL109:   getfield Field Meal priceStudent D \nL112:   invokevirtual Method java/lang/StringBuilder append (D)Ljava/lang/StringBuilder; \nL115:   ldc '\\n' \nL117:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL120:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL123:   astore_1 \nL124:   new java/lang/StringBuilder \nL127:   dup \nL128:   invokespecial Method java/lang/StringBuilder <init> ()V \nL131:   aload_1 \nL132:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL135:   ldc 'Price Employee: ' \nL137:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL140:   aload_0 \nL141:   getfield Field Meal priceEmployee D \nL144:   invokevirtual Method java/lang/StringBuilder append (D)Ljava/lang/StringBuilder; \nL147:   ldc '\\n' \nL149:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL152:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL155:   astore_1 \nL156:   new java/lang/StringBuilder \nL159:   dup \nL160:   invokespecial Method java/lang/StringBuilder <init> ()V \nL163:   aload_1 \nL164:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL167:   ldc 'Date: ' \nL169:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL172:   aload_0 \nL173:   getfield Field Meal availabilityDate Ljava/time/LocalDateTime; \nL176:   invokevirtual Method java/time/LocalDateTime toString ()Ljava/lang/String; \nL179:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL182:   ldc '\\n' \nL184:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL187:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL190:   astore_1 \nL191:   new java/lang/StringBuilder \nL194:   dup \nL195:   invokespecial Method java/lang/StringBuilder <init> ()V \nL198:   aload_1 \nL199:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL202:   ldc 'FoodBar: ' \nL204:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL207:   aload_0 \nL208:   getfield Field Meal foodBar Ljava/lang/String; \nL211:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL214:   ldc '\\n' \nL216:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL219:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL222:   astore_1 \nL223:   new java/lang/StringBuilder \nL226:   dup \nL227:   invokespecial Method java/lang/StringBuilder <init> ()V \nL230:   aload_1 \nL231:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL234:   ldc 'URL: ' \nL236:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL239:   aload_0 \nL240:   getfield Field Meal pictureUrl Ljava/lang/String; \nL243:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL246:   ldc '\\n' \nL248:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL251:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL254:   astore_1 \nL255:   aload_1 \nL256:   areturn \nL257:   \n        .linenumbertable \n            L0 43 \n            L28 44 \n            L60 45 \n            L92 46 \n            L124 47 \n            L156 48 \n            L191 49 \n            L223 50 \n            L255 51 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Meal.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 11:42:38 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.time.format.DateTimeParseException;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Meal_ESTest extends Meal_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Meal meal0 = null;\n      try {\n        meal0 = new Meal(\"5\", \"5\", \"5\", \"Price Employee: \", \"5\", \"Price Employee: \", \"5\", \"5\");\n        fail(\"Expecting exception: DateTimeParseException\");\n      \n      } catch(DateTimeParseException e) {\n         //\n         // Text '5' could not be parsed at index 0\n         //\n         verifyException(\"java.time.format.DateTimeFormatter\", e);\n      }\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 11:42:38 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Meal_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Meal\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpi26izjpk\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Meal_ESTest_scaffolding.class.getClassLoader() ,\n      \"Meal\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Meal_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Meal\"\n    );\n  }\n}\n", "class_idx": 100}
{"class_name": "Production5528", "java_source": "public class Production5528 {\n\n  private String property0;\n\n  public String getProperty0() {\n    return property0;\n  }\n\n  public void setProperty0(String value) {\n    property0 = value;\n  }\n\n  private String property1;\n\n  public String getProperty1() {\n    return property1;\n  }\n\n  public void setProperty1(String value) {\n    property1 = value;\n  }\n\n  private String property2;\n\n  public String getProperty2() {\n    return property2;\n  }\n\n  public void setProperty2(String value) {\n    property2 = value;\n  }\n\n  private String property3;\n\n  public String getProperty3() {\n    return property3;\n  }\n\n  public void setProperty3(String value) {\n    property3 = value;\n  }\n\n  private String property4;\n\n  public String getProperty4() {\n    return property4;\n  }\n\n  public void setProperty4(String value) {\n    property4 = value;\n  }\n\n  private String property5;\n\n  public String getProperty5() {\n    return property5;\n  }\n\n  public void setProperty5(String value) {\n    property5 = value;\n  }\n\n  private String property6;\n\n  public String getProperty6() {\n    return property6;\n  }\n\n  public void setProperty6(String value) {\n    property6 = value;\n  }\n\n  private String property7;\n\n  public String getProperty7() {\n    return property7;\n  }\n\n  public void setProperty7(String value) {\n    property7 = value;\n  }\n\n  private String property8;\n\n  public String getProperty8() {\n    return property8;\n  }\n\n  public void setProperty8(String value) {\n    property8 = value;\n  }\n\n  private String property9;\n\n  public String getProperty9() {\n    return property9;\n  }\n\n  public void setProperty9(String value) {\n    property9 = value;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Production5528 \n.super java/lang/Object \n.field private property0 Ljava/lang/String; \n.field private property1 Ljava/lang/String; \n.field private property2 Ljava/lang/String; \n.field private property3 Ljava/lang/String; \n.field private property4 Ljava/lang/String; \n.field private property5 Ljava/lang/String; \n.field private property6 Ljava/lang/String; \n.field private property7 Ljava/lang/String; \n.field private property8 Ljava/lang/String; \n.field private property9 Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty0 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production5528 property0 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty0 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production5528 property0 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 12 \n            L5 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty1 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production5528 property1 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 18 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty1 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production5528 property1 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 22 \n            L5 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty2 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production5528 property2 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty2 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production5528 property2 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 32 \n            L5 33 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty3 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production5528 property3 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 38 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty3 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production5528 property3 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 42 \n            L5 43 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty4 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production5528 property4 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 48 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty4 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production5528 property4 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 52 \n            L5 53 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty5 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production5528 property5 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 58 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty5 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production5528 property5 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 62 \n            L5 63 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty6 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production5528 property6 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 68 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty6 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production5528 property6 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 72 \n            L5 73 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty7 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production5528 property7 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 78 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty7 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production5528 property7 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 82 \n            L5 83 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty8 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production5528 property8 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 88 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty8 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production5528 property8 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 92 \n            L5 93 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty9 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production5528 property9 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 98 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty9 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production5528 property9 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 102 \n            L5 103 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Production5528.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 02:02:31 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Production5528_ESTest extends Production5528_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty9(\"D|f'\");\n      String string0 = production5528_0.getProperty9();\n      assertEquals(\"D|f'\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty8(\"'9M\u007fD:MjTt/$25X\");\n      String string0 = production5528_0.getProperty8();\n      assertEquals(\"'9M\u007fD:MjTt/$25X\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty8(\"\");\n      String string0 = production5528_0.getProperty8();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty7(\"Production5528\");\n      String string0 = production5528_0.getProperty7();\n      assertEquals(\"Production5528\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty7(\"\");\n      String string0 = production5528_0.getProperty7();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty6(\"<c-<\");\n      String string0 = production5528_0.getProperty6();\n      assertEquals(\"<c-<\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty6(\"\");\n      String string0 = production5528_0.getProperty6();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty5(\"<c-<\");\n      String string0 = production5528_0.getProperty5();\n      assertEquals(\"<c-<\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty4(\"T'n3+$\");\n      String string0 = production5528_0.getProperty4();\n      assertEquals(\"T'n3+$\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty4(\"\");\n      String string0 = production5528_0.getProperty4();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty3(\"FRMMmoFhO\");\n      String string0 = production5528_0.getProperty3();\n      assertEquals(\"FRMMmoFhO\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty3(\"\");\n      String string0 = production5528_0.getProperty3();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty2(\"m=[l7\u007fpv-7H3R<K\");\n      String string0 = production5528_0.getProperty2();\n      assertEquals(\"m=[l7\u007fpv-7H3R<K\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty1(\"<16L8V)ZvZ\");\n      String string0 = production5528_0.getProperty1();\n      assertEquals(\"<16L8V)ZvZ\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty0(\"rqoOqS6O~$k[n\");\n      String string0 = production5528_0.getProperty0();\n      assertEquals(\"rqoOqS6O~$k[n\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty0(\"\");\n      String string0 = production5528_0.getProperty0();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      String string0 = production5528_0.getProperty4();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      String string0 = production5528_0.getProperty6();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty2(\"\");\n      String string0 = production5528_0.getProperty2();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      String string0 = production5528_0.getProperty9();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      String string0 = production5528_0.getProperty5();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      String string0 = production5528_0.getProperty1();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test22()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      String string0 = production5528_0.getProperty7();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test23()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      String string0 = production5528_0.getProperty2();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test24()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty1(\"\");\n      String string0 = production5528_0.getProperty1();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test25()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty9(\"\");\n      String string0 = production5528_0.getProperty9();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test26()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      String string0 = production5528_0.getProperty3();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test27()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      String string0 = production5528_0.getProperty8();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test28()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      String string0 = production5528_0.getProperty0();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test29()  throws Throwable  {\n      Production5528 production5528_0 = new Production5528();\n      production5528_0.setProperty5(\"\");\n      String string0 = production5528_0.getProperty5();\n      assertEquals(\"\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 02:02:31 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Production5528_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Production5528\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpwzd3tphi\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Production5528_ESTest_scaffolding.class.getClassLoader() ,\n      \"Production5528\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Production5528_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Production5528\"\n    );\n  }\n}\n", "class_idx": 101}
{"class_name": "ExportCSV", "java_source": "import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\n\npublic class ExportCSV {\n\n  public static void main(String[] args) throws SQLException {\n\n    Connection con = null;\n    PreparedStatement pst = null;\n\n    String url = \"jdbc:mysql://localhost:3306/testdb?useSSL=false\";\n    String user = \"root\";\n    String password = \"vertrigo\";\n\n    try {\n\n      con = DriverManager.getConnection(url, user, password);\n      String query =\n          \"SELECT Name, Title INTO OUTFILE '/src/cv/mikusher/databaseMoment/authors_books.csv' \"\n              + \"FIELDS TERMINATED BY ',' FROM Authors, Books WHERE \"\n              + \"Authors.Id=Books.AuthorId\";\n\n      pst = con.prepareStatement(query);\n      pst.execute();\n\n    } finally {\n\n      if (pst != null) {\n        pst.close();\n      }\n\n      if (con != null) {\n        con.close();\n      }\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ExportCSV \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 3 locals 8 \nL0:     aconst_null \nL1:     astore_1 \nL2:     aconst_null \nL3:     astore_2 \nL4:     ldc 'jdbc:mysql://localhost:3306/testdb?useSSL=false' \nL6:     astore_3 \nL7:     ldc 'root' \nL9:     astore 4 \nL11:    ldc 'vertrigo' \nL13:    astore 5 \n        .catch [0] from L15 to L44 using L67 \nL15:    aload_3 \nL16:    aload 4 \nL18:    aload 5 \nL20:    invokestatic Method java/sql/DriverManager getConnection (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection; \nL23:    astore_1 \nL24:    ldc \"SELECT Name, Title INTO OUTFILE '/src/cv/mikusher/databaseMoment/authors_books.csv' FIELDS TERMINATED BY ',' FROM Authors, Books WHERE Authors.Id=Books.AuthorId\" \nL26:    astore 6 \nL28:    aload_1 \nL29:    aload 6 \nL31:    invokeinterface InterfaceMethod java/sql/Connection prepareStatement (Ljava/lang/String;)Ljava/sql/PreparedStatement; 2 \nL36:    astore_2 \nL37:    aload_2 \nL38:    invokeinterface InterfaceMethod java/sql/PreparedStatement execute ()Z 1 \nL43:    pop \nL44:    aload_2 \nL45:    ifnull L54 \nL48:    aload_2 \nL49:    invokeinterface InterfaceMethod java/sql/PreparedStatement close ()V 1 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object java/sql/Connection Object java/sql/PreparedStatement Object java/lang/String Object java/lang/String Object java/lang/String \n            stack \n        .end stack \nL54:    aload_1 \nL55:    ifnull L92 \nL58:    aload_1 \nL59:    invokeinterface InterfaceMethod java/sql/Connection close ()V 1 \nL64:    goto L92 \n        .catch [0] from L67 to L69 using L67 \n\n        .stack stack_1 Object java/lang/Throwable \nL67:    astore 7 \nL69:    aload_2 \nL70:    ifnull L79 \nL73:    aload_2 \nL74:    invokeinterface InterfaceMethod java/sql/PreparedStatement close ()V 1 \n\n        .stack append Top Object java/lang/Throwable \nL79:    aload_1 \nL80:    ifnull L89 \nL83:    aload_1 \nL84:    invokeinterface InterfaceMethod java/sql/Connection close ()V 1 \n\n        .stack same \nL89:    aload 7 \nL91:    athrow \n\n        .stack chop 2 \nL92:    return \nL93:    \n        .linenumbertable \n            L0 25 \n            L2 26 \n            L4 28 \n            L7 29 \n            L11 30 \n            L15 34 \n            L24 35 \n            L28 37 \n            L37 38 \n            L44 42 \n            L48 43 \n            L54 46 \n            L58 47 \n            L67 42 \n            L73 43 \n            L79 46 \n            L83 47 \n            L89 50 \n            L92 51 \n        .end linenumbertable \n    .end code \n    .exceptions java/sql/SQLException \n.end method \n.sourcefile 'ExportCSV.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 16:18:41 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.sql.SQLException;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ExportCSV_ESTest extends ExportCSV_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      try { \n        ExportCSV.main((String[]) null);\n        fail(\"Expecting exception: SQLException\");\n      \n      } catch(SQLException e) {\n         //\n         // No suitable driver found for jdbc:mysql://localhost:3306/testdb?useSSL=false\n         //\n         verifyException(\"java.sql.DriverManager\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      ExportCSV exportCSV0 = new ExportCSV();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 16:18:41 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ExportCSV_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ExportCSV\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp7px4rmzg\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ExportCSV_ESTest_scaffolding.class.getClassLoader() ,\n      \"ExportCSV\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ExportCSV_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ExportCSV\"\n    );\n  }\n}\n", "class_idx": 102}
{"class_name": "Category", "java_source": "/**\n * Copyright 2009-2015 the original author or authors.\n *\n * <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of the License at\n *\n * <p>http://www.apache.org/licenses/LICENSE-2.0\n *\n * <p>Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport java.io.Serializable;\n\npublic class Category implements Serializable {\n\n  private static final long serialVersionUID = 1L;\n\n  private String categoryId;\n  private String name;\n  private String description;\n\n  public String getCategoryId() {\n    return categoryId;\n  }\n\n  public void setCategoryId(String categoryId) {\n    this.categoryId = categoryId.trim();\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  @Override\n  public String toString() {\n    return getCategoryId();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Category \n.super java/lang/Object \n.implements java/io/Serializable \n.field private static final serialVersionUID J = 1L \n.field private categoryId Ljava/lang/String; \n.field private name Ljava/lang/String; \n.field private description Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCategoryId : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Category categoryId Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCategoryId : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL5:     putfield Field Category categoryId Ljava/lang/String; \nL8:     return \nL9:     \n        .linenumbertable \n            L0 34 \n            L8 35 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Category name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 38 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Category name Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 42 \n            L5 43 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getDescription : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Category description Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setDescription : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Category description Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 50 \n            L5 51 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokevirtual Method Category getCategoryId ()Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 55 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Category.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 17:05:03 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Category_ESTest extends Category_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      Category category0 = new Category();\n      category0.setCategoryId(\"@-b\\\"oGP[\");\n      String string0 = category0.toString();\n      assertEquals(\"@-b\\\"oGP[\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      Category category0 = new Category();\n      category0.setCategoryId(\"\");\n      String string0 = category0.toString();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      Category category0 = new Category();\n      category0.setName(\"\");\n      String string0 = category0.getName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      Category category0 = new Category();\n      category0.setDescription(\"[#y.opQ&9UQ}q8{Je\");\n      String string0 = category0.getDescription();\n      assertEquals(\"[#y.opQ&9UQ}q8{Je\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      Category category0 = new Category();\n      category0.setCategoryId(\"\");\n      String string0 = category0.getCategoryId();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      Category category0 = new Category();\n      String string0 = category0.toString();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      Category category0 = new Category();\n      category0.setDescription(\"\");\n      String string0 = category0.getDescription();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Category category0 = new Category();\n      category0.setName(\"P$)mGU\\u0002bKP`?KT*#?\");\n      String string0 = category0.getName();\n      assertEquals(\"P$)mGU\\u0002bKP`?KT*#?\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      Category category0 = new Category();\n      String string0 = category0.getCategoryId();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      Category category0 = new Category();\n      category0.setCategoryId(\"97h3Z-z!TZn\");\n      String string0 = category0.getCategoryId();\n      assertEquals(\"97h3Z-z!TZn\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      Category category0 = new Category();\n      String string0 = category0.getName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Category category0 = new Category();\n      String string0 = category0.getDescription();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 17:05:03 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Category_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Category\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpe0jbim0n\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Category_ESTest_scaffolding.class.getClassLoader() ,\n      \"Category\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Category_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Category\"\n    );\n  }\n}\n", "class_idx": 103}
{"class_name": "StartElastic", "java_source": "import java.io.Serializable;\n\n/** Created by tarjei on 24/06/14. */\npublic class StartElastic implements Serializable {}\n", "jasm_code": ".version 52 0 \n.class public super StartElastic \n.super java/lang/Object \n.implements java/io/Serializable \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'StartElastic.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 01:20:38 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class StartElastic_ESTest extends StartElastic_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      StartElastic startElastic0 = new StartElastic();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 01:20:38 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class StartElastic_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"StartElastic\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp8xjy3vro\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StartElastic_ESTest_scaffolding.class.getClassLoader() ,\n      \"StartElastic\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StartElastic_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"StartElastic\"\n    );\n  }\n}\n", "class_idx": 104}
{"class_name": "LoggedEvent", "java_source": "import java.text.DateFormat;\nimport java.util.Date;\n\n/**\n * Represents a single LoggedEvent. A LoggedEvent is a textual message, and the time at which the\n * event occured.\n *\n * @author Sean Turner\n */\npublic class LoggedEvent {\n\n  /**\n   * Represents the date and time at which the event occurred. This is useful when you need to order\n   * events in chronological order.\n   */\n  private Date timestamp;\n\n  /**\n   * This is the body of the message. This might read something like: msgSitCustomerAtTable called\n   * with Customer Jim at table 3.\n   */\n  private String message;\n\n  /**\n   * @param message\n   */\n  public LoggedEvent(String message) {\n    timestamp = new Date();\n    this.message = message;\n  }\n\n  /**\n   * @return the timestamp\n   */\n  public Date getTimestamp() {\n    return timestamp;\n  }\n\n  /**\n   * @return the message\n   */\n  public String getMessage() {\n    return message;\n  }\n\n  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(DateFormat.getTimeInstance().format(timestamp));\n    sb.append(\": \");\n    sb.append(message);\n    return sb.toString();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super LoggedEvent \n.super java/lang/Object \n.field private timestamp Ljava/util/Date; \n.field private message Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     new java/util/Date \nL8:     dup \nL9:     invokespecial Method java/util/Date <init> ()V \nL12:    putfield Field LoggedEvent timestamp Ljava/util/Date; \nL15:    aload_0 \nL16:    aload_1 \nL17:    putfield Field LoggedEvent message Ljava/lang/String; \nL20:    return \nL21:    \n        .linenumbertable \n            L0 30 \n            L4 31 \n            L15 32 \n            L20 33 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getTimestamp : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LoggedEvent timestamp Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 39 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getMessage : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LoggedEvent message Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 3 locals 2 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     astore_1 \nL8:     aload_1 \nL9:     invokestatic Method java/text/DateFormat getTimeInstance ()Ljava/text/DateFormat; \nL12:    aload_0 \nL13:    getfield Field LoggedEvent timestamp Ljava/util/Date; \nL16:    invokevirtual Method java/text/DateFormat format (Ljava/util/Date;)Ljava/lang/String; \nL19:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL22:    pop \nL23:    aload_1 \nL24:    ldc ': ' \nL26:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL29:    pop \nL30:    aload_1 \nL31:    aload_0 \nL32:    getfield Field LoggedEvent message Ljava/lang/String; \nL35:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL38:    pop \nL39:    aload_1 \nL40:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL43:    areturn \nL44:    \n        .linenumbertable \n            L0 50 \n            L8 51 \n            L23 52 \n            L30 53 \n            L39 54 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'LoggedEvent.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 16:55:10 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.Date;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class LoggedEvent_ESTest extends LoggedEvent_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      LoggedEvent loggedEvent0 = new LoggedEvent((String) null);\n      String string0 = loggedEvent0.getMessage();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      LoggedEvent loggedEvent0 = new LoggedEvent(\"\");\n      String string0 = loggedEvent0.getMessage();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      LoggedEvent loggedEvent0 = new LoggedEvent(\"^j$3\");\n      String string0 = loggedEvent0.getMessage();\n      assertEquals(\"^j$3\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      LoggedEvent loggedEvent0 = new LoggedEvent(\"^j$3\");\n      String string0 = loggedEvent0.toString();\n      assertEquals(\"8:21:21 PM: ^j$3\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      LoggedEvent loggedEvent0 = new LoggedEvent(\"^j$3\");\n      Date date0 = loggedEvent0.getTimestamp();\n      assertEquals(\"Fri Feb 14 20:21:21 GMT 2014\", date0.toString());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 16:55:10 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class LoggedEvent_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"LoggedEvent\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp48ktt5a5\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(LoggedEvent_ESTest_scaffolding.class.getClassLoader() ,\n      \"LoggedEvent\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(LoggedEvent_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"LoggedEvent\"\n    );\n  }\n}\n", "class_idx": 105}
{"class_name": "Messages", "java_source": "/*\n * Copyright (c) 2005, 2006, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\n\nimport java.text.MessageFormat;\nimport java.util.ResourceBundle;\n\n/** Formats error messages. */\nclass Messages {\n  /** Loads a string resource and formats it with specified arguments. */\n  static String format(String property, Object... args) {\n    String text =\n        ResourceBundle.getBundle(Messages.class.getPackage().getName() + \".MessageBundle\")\n            .getString(property);\n    return MessageFormat.format(text, args);\n  }\n\n  static final String ERR_CLASSNAME_COLLISION = \"CodeModelClassFactory.ClassNameCollision\";\n\n  static final String ERR_CLASSNAME_COLLISION_SOURCE =\n      \"CodeModelClassFactory.ClassNameCollision.Source\";\n\n  static final String ERR_INVALID_CLASSNAME = \"ERR_INVALID_CLASSNAME\";\n\n  static final String ERR_CASE_SENSITIVITY_COLLISION = // 2 args\n      \"CodeModelClassFactory.CaseSensitivityCollision\";\n\n  static final String ERR_CHAMELEON_SCHEMA_GONE_WILD = // no argts\n      \"ERR_CHAMELEON_SCHEMA_GONE_WILD\";\n}\n", "jasm_code": ".version 52 0 \n.class super Messages \n.super java/lang/Object \n.field static final ERR_CLASSNAME_COLLISION Ljava/lang/String; = 'CodeModelClassFactory.ClassNameCollision' \n.field static final ERR_CLASSNAME_COLLISION_SOURCE Ljava/lang/String; = 'CodeModelClassFactory.ClassNameCollision.Source' \n.field static final ERR_INVALID_CLASSNAME Ljava/lang/String; = 'ERR_INVALID_CLASSNAME' \n.field static final ERR_CASE_SENSITIVITY_COLLISION Ljava/lang/String; = 'CodeModelClassFactory.CaseSensitivityCollision' \n.field static final ERR_CHAMELEON_SCHEMA_GONE_WILD Ljava/lang/String; = 'ERR_CHAMELEON_SCHEMA_GONE_WILD' \n\n.method <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static varargs format : (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; \n    .code stack 2 locals 3 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     ldc Class Messages \nL9:     invokevirtual Method java/lang/Class getPackage ()Ljava/lang/Package; \nL12:    invokevirtual Method java/lang/Package getName ()Ljava/lang/String; \nL15:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL18:    ldc '.MessageBundle' \nL20:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL23:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL26:    invokestatic Method java/util/ResourceBundle getBundle (Ljava/lang/String;)Ljava/util/ResourceBundle; \nL29:    aload_0 \nL30:    invokevirtual Method java/util/ResourceBundle getString (Ljava/lang/String;)Ljava/lang/String; \nL33:    astore_2 \nL34:    aload_2 \nL35:    aload_1 \nL36:    invokestatic Method java/text/MessageFormat format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; \nL39:    areturn \nL40:    \n        .linenumbertable \n            L0 38 \n            L34 39 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Messages.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 15:34:42 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Messages_ESTest extends Messages_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      // Undeclared exception!\n      try { \n        Messages.format(\"\", (Object[]) null);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"Messages\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Messages messages0 = new Messages();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 15:34:42 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Messages_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Messages\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpmhvpukm9\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Messages_ESTest_scaffolding.class.getClassLoader() ,\n      \"Messages\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Messages_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Messages\"\n    );\n  }\n}\n", "class_idx": 106}
{"class_name": "KeyToToken", "java_source": "import java.io.*;\nimport java.math.BigInteger;\nimport java.security.MessageDigest;\n\npublic class KeyToToken {\n  public static void main(String[] args) throws Exception {\n    BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n    String line;\n    while ((line = reader.readLine()) != null) {\n      MessageDigest md = MessageDigest.getInstance(\"MD5\");\n      md.update(line.getBytes());\n      System.out.println(new BigInteger(md.digest()).abs().toString());\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super KeyToToken \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 5 locals 4 \nL0:     new java/io/BufferedReader \nL3:     dup \nL4:     new java/io/InputStreamReader \nL7:     dup \nL8:     getstatic Field java/lang/System in Ljava/io/InputStream; \nL11:    invokespecial Method java/io/InputStreamReader <init> (Ljava/io/InputStream;)V \nL14:    invokespecial Method java/io/BufferedReader <init> (Ljava/io/Reader;)V \nL17:    astore_1 \n\n        .stack append Object java/io/BufferedReader \nL18:    aload_1 \nL19:    invokevirtual Method java/io/BufferedReader readLine ()Ljava/lang/String; \nL22:    dup \nL23:    astore_2 \nL24:    ifnull L67 \nL27:    ldc 'MD5' \nL29:    invokestatic Method java/security/MessageDigest getInstance (Ljava/lang/String;)Ljava/security/MessageDigest; \nL32:    astore_3 \nL33:    aload_3 \nL34:    aload_2 \nL35:    invokevirtual Method java/lang/String getBytes ()[B \nL38:    invokevirtual Method java/security/MessageDigest update ([B)V \nL41:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL44:    new java/math/BigInteger \nL47:    dup \nL48:    aload_3 \nL49:    invokevirtual Method java/security/MessageDigest digest ()[B \nL52:    invokespecial Method java/math/BigInteger <init> ([B)V \nL55:    invokevirtual Method java/math/BigInteger abs ()Ljava/math/BigInteger; \nL58:    invokevirtual Method java/math/BigInteger toString ()Ljava/lang/String; \nL61:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL64:    goto L18 \n\n        .stack append Object java/lang/String \nL67:    return \nL68:    \n        .linenumbertable \n            L0 7 \n            L18 9 \n            L27 10 \n            L33 11 \n            L41 12 \n            L64 13 \n            L67 14 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/Exception \n.end method \n.sourcefile 'KeyToToken.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 03:16:41 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.io.IOException;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.util.SystemInUtil;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class KeyToToken_ESTest extends KeyToToken_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String[] stringArray0 = new String[3];\n      SystemInUtil.addInputLine(\"bFu';4hv9<`o\");\n      try { \n        KeyToToken.main(stringArray0);\n        fail(\"Expecting exception: IOException\");\n      \n      } catch(IOException e) {\n         //\n         // Simulated exception in System.in\n         //\n         verifyException(\"org.evosuite.runtime.util.SystemInUtil\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      String[] stringArray0 = new String[3];\n      KeyToToken.main(stringArray0);\n      KeyToToken keyToToken0 = new KeyToToken();\n      SystemInUtil.addInputLine(\"bFu';4hv9<`o\");\n      try { \n        KeyToToken.main(stringArray0);\n        fail(\"Expecting exception: IOException\");\n      \n      } catch(IOException e) {\n         //\n         // Simulated exception in System.in\n         //\n         verifyException(\"org.evosuite.runtime.util.SystemInUtil\", e);\n      }\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 03:16:41 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class KeyToToken_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"KeyToToken\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n    org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmphu17ymrc\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(KeyToToken_ESTest_scaffolding.class.getClassLoader() ,\n      \"KeyToToken\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(KeyToToken_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"KeyToToken\"\n    );\n  }\n}\n", "class_idx": 107}
{"class_name": "CsvWriter", "java_source": "/*\n * ***** BEGIN LICENSE BLOCK *****\n * Zimbra Collaboration Suite Server\n * Copyright (C) 2012 Zimbra, Inc.\n *\n * The contents of this file are subject to the Zimbra Public License\n * Version 1.3 (\"License\"); you may not use this file except in\n * compliance with the License.  You may obtain a copy of the License at\n * http://www.zimbra.com/license.\n *\n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.\n * ***** END LICENSE BLOCK *****\n */\n\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.Writer;\n\n/**\n * @author pshao\n */\npublic class CsvWriter {\n\n  private BufferedWriter writer;\n\n  public CsvWriter(Writer writer) throws IOException {\n    this.writer = new BufferedWriter(writer);\n  }\n\n  public void writeRow(String... values) throws IOException {\n    StringBuilder line = new StringBuilder();\n\n    boolean first = true;\n    for (String value : values) {\n      if (!first) {\n        line.append(\",\");\n      } else {\n        first = false;\n      }\n      line.append(value);\n    }\n    line.append(\"\\n\");\n    writer.write(line.toString());\n  }\n\n  public void close() throws IOException {\n    writer.close();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super CsvWriter \n.super java/lang/Object \n.field private writer Ljava/io/BufferedWriter; \n\n.method public <init> : (Ljava/io/Writer;)V \n    .code stack 4 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     new java/io/BufferedWriter \nL8:     dup \nL9:     aload_1 \nL10:    invokespecial Method java/io/BufferedWriter <init> (Ljava/io/Writer;)V \nL13:    putfield Field CsvWriter writer Ljava/io/BufferedWriter; \nL16:    return \nL17:    \n        .linenumbertable \n            L0 28 \n            L4 29 \n            L16 30 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/IOException \n.end method \n\n.method public varargs writeRow : ([Ljava/lang/String;)V \n    .code stack 2 locals 8 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     astore_2 \nL8:     iconst_1 \nL9:     istore_3 \nL10:    aload_1 \nL11:    astore 4 \nL13:    aload 4 \nL15:    arraylength \nL16:    istore 5 \nL18:    iconst_0 \nL19:    istore 6 \n\n        .stack full \n            locals Object CsvWriter Object [Ljava/lang/String; Object java/lang/StringBuilder Integer Object [Ljava/lang/String; Integer Integer \n            stack \n        .end stack \nL21:    iload 6 \nL23:    iload 5 \nL25:    if_icmpge L64 \nL28:    aload 4 \nL30:    iload 6 \nL32:    aaload \nL33:    astore 7 \nL35:    iload_3 \nL36:    ifne L49 \nL39:    aload_2 \nL40:    ldc ',' \nL42:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL45:    pop \nL46:    goto L51 \n\n        .stack append Object java/lang/String \nL49:    iconst_0 \nL50:    istore_3 \n\n        .stack same \nL51:    aload_2 \nL52:    aload 7 \nL54:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL57:    pop \nL58:    iinc 6 1 \nL61:    goto L21 \n\n        .stack full \n            locals Object CsvWriter Object [Ljava/lang/String; Object java/lang/StringBuilder Integer \n            stack \n        .end stack \nL64:    aload_2 \nL65:    ldc '\\n' \nL67:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL70:    pop \nL71:    aload_0 \nL72:    getfield Field CsvWriter writer Ljava/io/BufferedWriter; \nL75:    aload_2 \nL76:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL79:    invokevirtual Method java/io/BufferedWriter write (Ljava/lang/String;)V \nL82:    return \nL83:    \n        .linenumbertable \n            L0 33 \n            L8 35 \n            L10 36 \n            L35 37 \n            L39 38 \n            L49 40 \n            L51 42 \n            L58 36 \n            L64 44 \n            L71 45 \n            L82 46 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/IOException \n.end method \n\n.method public close : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field CsvWriter writer Ljava/io/BufferedWriter; \nL4:     invokevirtual Method java/io/BufferedWriter close ()V \nL7:     return \nL8:     \n        .linenumbertable \n            L0 49 \n            L7 50 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/IOException \n.end method \n.sourcefile 'CsvWriter.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 06:29:07 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.io.StringWriter;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CsvWriter_ESTest extends CsvWriter_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      StringWriter stringWriter0 = new StringWriter(55897);\n      CsvWriter csvWriter0 = new CsvWriter(stringWriter0);\n      String[] stringArray0 = new String[2];\n      csvWriter0.writeRow(stringArray0);\n      assertEquals(2, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      StringWriter stringWriter0 = new StringWriter();\n      CsvWriter csvWriter0 = new CsvWriter(stringWriter0);\n      String[] stringArray0 = new String[0];\n      csvWriter0.writeRow(stringArray0);\n      assertEquals(0, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      StringWriter stringWriter0 = new StringWriter();\n      CsvWriter csvWriter0 = new CsvWriter(stringWriter0);\n      csvWriter0.close();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 06:29:07 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class CsvWriter_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CsvWriter\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpgmfiuujo\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CsvWriter_ESTest_scaffolding.class.getClassLoader() ,\n      \"CsvWriter\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CsvWriter_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CsvWriter\"\n    );\n  }\n}\n", "class_idx": 108}
{"class_name": "UnexpectedInternalStateException", "java_source": "/**\n * This file was either copied or modified from https://github.com/QuantumBadger/RedReader under the\n * Free Software Foundation General Public License version 3\n */\npublic class UnexpectedInternalStateException extends RuntimeException {\n\n  public UnexpectedInternalStateException() {\n    super(\"The application's internal state is invalid\");\n  }\n\n  public UnexpectedInternalStateException(String message) {\n    super(message);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super UnexpectedInternalStateException \n.super java/lang/RuntimeException \n\n.method public <init> : ()V \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     ldc \"The application's internal state is invalid\" \nL3:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 9 \n            L6 10 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 13 \n            L5 14 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'UnexpectedInternalStateException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 18:29:28 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class UnexpectedInternalStateException_ESTest extends UnexpectedInternalStateException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      UnexpectedInternalStateException unexpectedInternalStateException0 = new UnexpectedInternalStateException(\"The application's internal state is invalid\");\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      UnexpectedInternalStateException unexpectedInternalStateException0 = new UnexpectedInternalStateException();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 18:29:28 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class UnexpectedInternalStateException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"UnexpectedInternalStateException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmppiqgykxi\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(UnexpectedInternalStateException_ESTest_scaffolding.class.getClassLoader() ,\n      \"UnexpectedInternalStateException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(UnexpectedInternalStateException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"UnexpectedInternalStateException\"\n    );\n  }\n}\n", "class_idx": 109}
{"class_name": "JassCardSetIsFullException", "java_source": "public class JassCardSetIsFullException extends Exception {\n\n  /** */\n  private static final long serialVersionUID = 7272640762429237035L;\n}\n", "jasm_code": ".version 52 0 \n.class public super JassCardSetIsFullException \n.super java/lang/Exception \n.field private static final serialVersionUID J = 7272640762429237035L \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Exception <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'JassCardSetIsFullException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 12:37:23 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class JassCardSetIsFullException_ESTest extends JassCardSetIsFullException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      JassCardSetIsFullException jassCardSetIsFullException0 = new JassCardSetIsFullException();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 12:37:23 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class JassCardSetIsFullException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"JassCardSetIsFullException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpvlm7rtdl\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JassCardSetIsFullException_ESTest_scaffolding.class.getClassLoader() ,\n      \"JassCardSetIsFullException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JassCardSetIsFullException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"JassCardSetIsFullException\"\n    );\n  }\n}\n", "class_idx": 110}
{"class_name": "Main", "java_source": "/*\n * Copyright (C) 2016 Intel Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// M: no non temporal move expected because of BoundsCheck\n// N: non temporal move is applied because BoundsCheck is eliminated\n\npublic class Main {\n\n  final int iterations = 0x40000;\n\n  public long checkSum(long[] tab, int n) {\n    long s = 0;\n    for (int i = 0; i < n; i++) {\n      s = s + tab[i];\n    }\n    return s;\n  }\n\n  public long testLoop(long[] tab1, long[] tab2) {\n    for (int i = 0; i < iterations; i++) {\n      tab1[i] = tab2[i] = i;\n    }\n    return checkSum(tab1, iterations) - checkSum(tab2, iterations);\n  }\n\n  public void test() {\n    long[] tab1 = new long[iterations];\n    long[] tab2 = new long[iterations];\n    System.out.println(testLoop(tab1, tab2));\n  }\n\n  public static void main(String[] args) {\n    new Main().test();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Main \n.super java/lang/Object \n.field final iterations I = 262144 \n\n.method public <init> : ()V \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     ldc 262144 \nL7:     putfield Field Main iterations I \nL10:    return \nL11:    \n        .linenumbertable \n            L0 22 \n            L4 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public checkSum : ([JI)J \n    .code stack 4 locals 6 \nL0:     lconst_0 \nL1:     lstore_3 \nL2:     iconst_0 \nL3:     istore 5 \n\n        .stack append Long Integer \nL5:     iload 5 \nL7:     iload_2 \nL8:     if_icmpge L24 \nL11:    lload_3 \nL12:    aload_1 \nL13:    iload 5 \nL15:    laload \nL16:    ladd \nL17:    lstore_3 \nL18:    iinc 5 1 \nL21:    goto L5 \n\n        .stack chop 1 \nL24:    lload_3 \nL25:    lreturn \nL26:    \n        .linenumbertable \n            L0 27 \n            L2 28 \n            L11 29 \n            L18 28 \n            L24 31 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public testLoop : ([J[J)J \n    .code stack 8 locals 4 \nL0:     iconst_0 \nL1:     istore_3 \n\n        .stack append Integer \nL2:     iload_3 \nL3:     ldc 262144 \nL5:     if_icmpge L23 \nL8:     aload_1 \nL9:     iload_3 \nL10:    aload_2 \nL11:    iload_3 \nL12:    iload_3 \nL13:    i2l \nL14:    dup2_x2 \nL15:    lastore \nL16:    lastore \nL17:    iinc 3 1 \nL20:    goto L2 \n\n        .stack chop 1 \nL23:    aload_0 \nL24:    aload_1 \nL25:    ldc 262144 \nL27:    invokevirtual Method Main checkSum ([JI)J \nL30:    aload_0 \nL31:    aload_2 \nL32:    ldc 262144 \nL34:    invokevirtual Method Main checkSum ([JI)J \nL37:    lsub \nL38:    lreturn \nL39:    \n        .linenumbertable \n            L0 35 \n            L8 36 \n            L17 35 \n            L23 38 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public test : ()V \n    .code stack 4 locals 3 \nL0:     ldc 262144 \nL2:     newarray long \nL4:     astore_1 \nL5:     ldc 262144 \nL7:     newarray long \nL9:     astore_2 \nL10:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL13:    aload_0 \nL14:    aload_1 \nL15:    aload_2 \nL16:    invokevirtual Method Main testLoop ([J[J)J \nL19:    invokevirtual Method java/io/PrintStream println (J)V \nL22:    return \nL23:    \n        .linenumbertable \n            L0 43 \n            L5 44 \n            L10 45 \n            L22 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 2 locals 1 \nL0:     new Main \nL3:     dup \nL4:     invokespecial Method Main <init> ()V \nL7:     invokevirtual Method Main test ()V \nL10:    return \nL11:    \n        .linenumbertable \n            L0 50 \n            L10 51 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Main.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 09:58:54 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Main_ESTest extends Main_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Main main0 = new Main();\n      // Undeclared exception!\n      main0.test();\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Main main0 = new Main();\n      long[] longArray0 = new long[3];\n      String[] stringArray0 = new String[8];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"Bzxb,Z~/Cl*P?\";\n      stringArray0[4] = \"Main\";\n      stringArray0[5] = \"\";\n      stringArray0[6] = \"\";\n      stringArray0[7] = \"w$UwVzOkrH+>4EgaXE\";\n      // Undeclared exception!\n      Main.main(stringArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      String[] stringArray0 = new String[7];\n      stringArray0[0] = \"7/huX6\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"E7jpYj\";\n      stringArray0[3] = \"L<M\";\n      stringArray0[4] = \"\";\n      stringArray0[5] = \"Main\";\n      stringArray0[6] = \"_iF'n!1^+v6PB]'*2\";\n      // Undeclared exception!\n      Main.main(stringArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Main main0 = new Main();\n      long[] longArray0 = new long[0];\n      String[] stringArray0 = new String[4];\n      stringArray0[0] = \"\";\n      String string0 = \"2}T\u007fC\u007fCc=R/U}]'\";\n      stringArray0[1] = \"2}T\u007fC\u007fCc=R/U}]'\";\n      stringArray0[2] = \"\";\n      String string1 = \"\";\n      // Undeclared exception!\n      Main.main(stringArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Main main0 = new Main();\n      long[] longArray0 = new long[9];\n      longArray0[0] = 0L;\n      longArray0[1] = 37169L;\n      longArray0[2] = 109662L;\n      longArray0[3] = (-16109L);\n      longArray0[4] = 65027L;\n      longArray0[5] = (-1L);\n      longArray0[6] = 40478L;\n      longArray0[7] = 1L;\n      longArray0[8] = 0L;\n      // Undeclared exception!\n      try { \n        main0.checkSum(longArray0, 105587);\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      String[] stringArray0 = new String[8];\n      stringArray0[0] = \"Main\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \"(Z%C,n)!k?`\u007f\";\n      stringArray0[5] = \"3fiK;-R.LjW\";\n      stringArray0[6] = \"\";\n      stringArray0[7] = \"\";\n      // Undeclared exception!\n      Main.main(stringArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      String[] stringArray0 = new String[4];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"\";\n      // Undeclared exception!\n      Main.main(stringArray0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 09:58:54 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Main_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Main\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp7cp2u9o4\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Main_ESTest_scaffolding.class.getClassLoader() ,\n      \"Main\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Main_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Main\"\n    );\n  }\n}\n", "class_idx": 111}
{"class_name": "CartParms", "java_source": "/*\n * Copyright (c) 2004-2007 The Trustees of Indiana University and Indiana\n *                         University Research and Technology\n *                         Corporation.  All rights reserved.\n * Copyright (c) 2004-2005 The University of Tennessee and The University\n *                         of Tennessee Research Foundation.  All rights\n *                         reserved.\n * Copyright (c) 2004-2005 High Performance Computing Center Stuttgart,\n *                         University of Stuttgart.  All rights reserved.\n * Copyright (c) 2004-2005 The Regents of the University of California.\n *                         All rights reserved.\n * Copyright (c) 2015      Los Alamos National Security, LLC. All rights\n *                         reserved.\n * $COPYRIGHT$\n *\n * Additional copyrights may follow\n *\n * $HEADER$\n *\n *\n * This file is almost a complete re-write for Open MPI compared to the\n * original mpiJava package. Its license and copyright are listed below.\n * See <path to ompi/mpi/java/README> for more information.\n *\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n *\n * File         : CartParms.java\n * Author       : Xinying Li\n * Created      : Thu Apr  9 12:22:15 1998\n * Revision     : $Revision: 1.1 $\n * Updated      : $Date: 1998/08/26 18:49:50 $\n * Copyright: Northeast Parallel Architectures Center\n *            at Syracuse University 1998\n */\n\n/** Cartesian topology information associated with a communicator. */\npublic final class CartParms {\n  /** Number of processes for each cartesian dimension. */\n  private final int[] dims;\n\n  /** Periodicity (true/false) for each cartesian dimension. */\n  private final boolean[] periods;\n\n  /** Coordinates of calling process in cartesian structure. */\n  private final int[] coords;\n\n  /**\n   * Constructs a cartesian topology information object.\n   *\n   * @param dims number of processes for each cartesian dimension.\n   * @param periods periodicity (true/false) for each cartesian dimension.\n   * @param coords coordinates of calling process in cartesian structure.\n   */\n  protected CartParms(int[] dims, boolean[] periods, int[] coords) {\n    this.dims = dims;\n    this.periods = periods;\n    this.coords = coords;\n  }\n\n  /**\n   * Returns the number of dimensions.\n   *\n   * @return number of dimensions.\n   */\n  public int getDimCount() {\n    return dims.length;\n  }\n\n  /**\n   * Returns the number of processes for a cartesian dimension.\n   *\n   * @param i cartesian dimension.\n   * @return number of processes for a cartesian dimension.\n   */\n  public int getDim(int i) {\n    return dims[i];\n  }\n\n  /**\n   * Returns the periodicity (true/false) for a cartesian dimension.\n   *\n   * @param i cartesian dimension.\n   * @return periodicity for a cartesian dimension.\n   */\n  public boolean getPeriod(int i) {\n    return periods[i];\n  }\n\n  /**\n   * Returns the coordinate of calling process for a cartesian dimension.\n   *\n   * @param i cartesian dimension.\n   * @return coordinate of calling process for a cartesian dimension.\n   */\n  public int getCoord(int i) {\n    return coords[i];\n  }\n} // CartParms\n", "jasm_code": ".version 52 0 \n.class public final super CartParms \n.super java/lang/Object \n.field private final dims [I \n.field private final periods [Z \n.field private final coords [I \n\n.method protected <init> : ([I[Z[I)V \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field CartParms dims [I \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field CartParms periods [Z \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field CartParms coords [I \nL19:    return \nL20:    \n        .linenumbertable \n            L0 71 \n            L4 72 \n            L9 73 \n            L14 74 \n            L19 75 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getDimCount : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field CartParms dims [I \nL4:     arraylength \nL5:     ireturn \nL6:     \n        .linenumbertable \n            L0 83 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getDim : (I)I \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field CartParms dims [I \nL4:     iload_1 \nL5:     iaload \nL6:     ireturn \nL7:     \n        .linenumbertable \n            L0 93 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPeriod : (I)Z \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field CartParms periods [Z \nL4:     iload_1 \nL5:     baload \nL6:     ireturn \nL7:     \n        .linenumbertable \n            L0 103 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCoord : (I)I \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field CartParms coords [I \nL4:     iload_1 \nL5:     iaload \nL6:     ireturn \nL7:     \n        .linenumbertable \n            L0 113 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'CartParms.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 09:10:44 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CartParms_ESTest extends CartParms_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      boolean[] booleanArray0 = new boolean[1];\n      booleanArray0[0] = true;\n      CartParms cartParms0 = new CartParms((int[]) null, booleanArray0, (int[]) null);\n      boolean boolean0 = cartParms0.getPeriod(0);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      int[] intArray0 = new int[3];\n      boolean[] booleanArray0 = new boolean[1];\n      CartParms cartParms0 = new CartParms(intArray0, booleanArray0, intArray0);\n      boolean boolean0 = cartParms0.getPeriod(0);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      int[] intArray0 = new int[0];\n      boolean[] booleanArray0 = new boolean[1];\n      CartParms cartParms0 = new CartParms(intArray0, booleanArray0, intArray0);\n      int int0 = cartParms0.getDimCount();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      int[] intArray0 = new int[2];\n      boolean[] booleanArray0 = new boolean[0];\n      CartParms cartParms0 = new CartParms(intArray0, booleanArray0, intArray0);\n      int int0 = cartParms0.getDimCount();\n      assertEquals(2, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      int[] intArray0 = new int[3];\n      boolean[] booleanArray0 = new boolean[1];\n      CartParms cartParms0 = new CartParms(intArray0, booleanArray0, intArray0);\n      int int0 = cartParms0.getDim(0);\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      int[] intArray0 = new int[1];\n      intArray0[0] = 43571;\n      boolean[] booleanArray0 = new boolean[3];\n      CartParms cartParms0 = new CartParms(intArray0, booleanArray0, intArray0);\n      int int0 = cartParms0.getDim(0);\n      assertEquals(43571, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      int[] intArray0 = new int[6];\n      intArray0[0] = (-1);\n      boolean[] booleanArray0 = new boolean[2];\n      CartParms cartParms0 = new CartParms(intArray0, booleanArray0, intArray0);\n      int int0 = cartParms0.getDim(0);\n      assertEquals((-1), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      int[] intArray0 = new int[3];\n      boolean[] booleanArray0 = new boolean[1];\n      CartParms cartParms0 = new CartParms(intArray0, booleanArray0, intArray0);\n      cartParms0.getCoord(0);\n      cartParms0.getDim(0);\n      boolean boolean0 = cartParms0.getPeriod(0);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      int[] intArray0 = new int[5];\n      intArray0[0] = 22231;\n      CartParms cartParms0 = new CartParms(intArray0, (boolean[]) null, intArray0);\n      int int0 = cartParms0.getCoord(0);\n      assertEquals(22231, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test9()  throws Throwable  {\n      int[] intArray0 = new int[2];\n      intArray0[0] = (-86850);\n      boolean[] booleanArray0 = new boolean[3];\n      CartParms cartParms0 = new CartParms(intArray0, booleanArray0, intArray0);\n      int int0 = cartParms0.getCoord(0);\n      assertEquals((-86850), int0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 09:10:44 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class CartParms_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CartParms\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmplg8mth5g\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CartParms_ESTest_scaffolding.class.getClassLoader() ,\n      \"CartParms\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CartParms_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CartParms\"\n    );\n  }\n}\n", "class_idx": 112}
{"class_name": "bankHacker", "java_source": "import java.util.Calendar;\nimport java.util.Random;\n\n/** Created by Kill-o-bite on 11/17/2016. */\npublic class bankHacker {\n\n  protected String name;\n  protected String description;\n\n  private int progress;\n  private Random r = new Random();\n  int timeHelper;\n  final int start;\n  final int end;\n  int hourNow;\n  // Calendar hoursNow = Calendar.getInstance();\n\n  bankHacker() {\n    timeHelper = (int) (r.nextInt(24) + 1);\n    // commented for test purpose\n    start = timeHelper;\n    end = timeHelper + 1;\n    hourNow = Calendar.getInstance().get(Calendar.HOUR_OF_DAY);\n    // testing for sure\n    //        start = hourNow;\n    //        end = start +1;\n  }\n\n  public void setProgress(int k) {\n    this.progress = k;\n  }\n\n  public int getProgress() {\n    return this.progress;\n  }\n\n  public void timer(boolean check) {}\n\n  public int reward() {\n    return r.nextInt(10000 - 1000 + 1) + 1000;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super bankHacker \n.super java/lang/Object \n.field protected name Ljava/lang/String; \n.field protected description Ljava/lang/String; \n.field private progress I \n.field private r Ljava/util/Random; \n.field timeHelper I \n.field final start I \n.field final end I \n.field hourNow I \n\n.method <init> : ()V \n    .code stack 3 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     new java/util/Random \nL8:     dup \nL9:     invokespecial Method java/util/Random <init> ()V \nL12:    putfield Field bankHacker r Ljava/util/Random; \nL15:    aload_0 \nL16:    aload_0 \nL17:    getfield Field bankHacker r Ljava/util/Random; \nL20:    bipush 24 \nL22:    invokevirtual Method java/util/Random nextInt (I)I \nL25:    iconst_1 \nL26:    iadd \nL27:    putfield Field bankHacker timeHelper I \nL30:    aload_0 \nL31:    aload_0 \nL32:    getfield Field bankHacker timeHelper I \nL35:    putfield Field bankHacker start I \nL38:    aload_0 \nL39:    aload_0 \nL40:    getfield Field bankHacker timeHelper I \nL43:    iconst_1 \nL44:    iadd \nL45:    putfield Field bankHacker end I \nL48:    aload_0 \nL49:    invokestatic Method java/util/Calendar getInstance ()Ljava/util/Calendar; \nL52:    bipush 11 \nL54:    invokevirtual Method java/util/Calendar get (I)I \nL57:    putfield Field bankHacker hourNow I \nL60:    return \nL61:    \n        .linenumbertable \n            L0 24 \n            L4 16 \n            L15 25 \n            L30 27 \n            L38 28 \n            L48 29 \n            L60 33 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProgress : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field bankHacker progress I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 38 \n            L5 39 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProgress : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field bankHacker progress I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 42 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public timer : (Z)V \n    .code stack 0 locals 2 \nL0:     return \nL1:     \n        .linenumbertable \n            L0 47 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public reward : ()I \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field bankHacker r Ljava/util/Random; \nL4:     sipush 9001 \nL7:     invokevirtual Method java/util/Random nextInt (I)I \nL10:    sipush 1000 \nL13:    iadd \nL14:    ireturn \nL15:    \n        .linenumbertable \n            L0 50 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'bankHacker.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 09:56:53 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class bankHacker_ESTest extends bankHacker_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      bankHacker bankHacker0 = new bankHacker();\n      bankHacker0.setProgress((-51295));\n      int int0 = bankHacker0.getProgress();\n      assertEquals((-51295), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      bankHacker bankHacker0 = new bankHacker();\n      bankHacker0.timer(true);\n      assertEquals(0, bankHacker0.getProgress());\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      bankHacker bankHacker0 = new bankHacker();\n      int int0 = bankHacker0.getProgress();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      bankHacker bankHacker0 = new bankHacker();\n      int int0 = bankHacker0.reward();\n      assertEquals(1000, int0);\n      \n      bankHacker0.timer(true);\n      int int1 = bankHacker0.getProgress();\n      assertEquals(0, int1);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      bankHacker bankHacker0 = new bankHacker();\n      bankHacker0.setProgress(36234);\n      int int0 = bankHacker0.getProgress();\n      assertEquals(36234, int0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 09:56:53 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class bankHacker_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"bankHacker\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpycourugt\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(bankHacker_ESTest_scaffolding.class.getClassLoader() ,\n      \"bankHacker\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(bankHacker_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"bankHacker\"\n    );\n  }\n}\n", "class_idx": 113}
{"class_name": "ErrorLetraIncorrectaException", "java_source": "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n/**\n * @author dam132\n */\npublic class ErrorLetraIncorrectaException extends Exception {\n\n  public ErrorLetraIncorrectaException() {}\n\n  @Override\n  public String getMessage() {\n\n    return \"\\nERROR: La letra no es correcta...\";\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ErrorLetraIncorrectaException \n.super java/lang/Exception \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Exception <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 14 \n            L4 15 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getMessage : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     ldc '\\nERROR: La letra no es correcta...' \nL2:     areturn \nL3:     \n        .linenumbertable \n            L0 20 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ErrorLetraIncorrectaException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 16:15:51 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ErrorLetraIncorrectaException_ESTest extends ErrorLetraIncorrectaException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ErrorLetraIncorrectaException errorLetraIncorrectaException0 = new ErrorLetraIncorrectaException();\n      String string0 = errorLetraIncorrectaException0.getMessage();\n      assertEquals(\"\\nERROR: La letra no es correcta...\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 16:15:51 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ErrorLetraIncorrectaException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ErrorLetraIncorrectaException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp_594dcvm\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ErrorLetraIncorrectaException_ESTest_scaffolding.class.getClassLoader() ,\n      \"ErrorLetraIncorrectaException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ErrorLetraIncorrectaException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ErrorLetraIncorrectaException\"\n    );\n  }\n}\n", "class_idx": 114}
{"class_name": "StarOut", "java_source": "/** created by Maxim Orlov on 18 Nov 2014 */\npublic class StarOut {\n  public String starOut(String str) {\n    String res = \"\";\n    int found = str.indexOf(\"*\");\n\n    if (found == -1) {\n      return str;\n    }\n\n    for (int i = 0; i < str.length(); i++) {\n      if (i == found + 1) {\n        found = str.indexOf(\"*\", found + 1);\n      } else if (i != found - 1 && i != found) {\n        res += str.charAt(i);\n      }\n    }\n\n    return res;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super StarOut \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public starOut : (Ljava/lang/String;)Ljava/lang/String; \n    .code stack 4 locals 5 \nL0:     ldc '' \nL2:     astore_2 \nL3:     aload_1 \nL4:     ldc '*' \nL6:     invokevirtual Method java/lang/String indexOf (Ljava/lang/String;)I \nL9:     istore_3 \nL10:    iload_3 \nL11:    iconst_m1 \nL12:    if_icmpne L17 \nL15:    aload_1 \nL16:    areturn \n\n        .stack append Object java/lang/String Integer \nL17:    iconst_0 \nL18:    istore 4 \n\n        .stack append Integer \nL20:    iload 4 \nL22:    aload_1 \nL23:    invokevirtual Method java/lang/String length ()I \nL26:    if_icmpge L94 \nL29:    iload 4 \nL31:    iload_3 \nL32:    iconst_1 \nL33:    iadd \nL34:    if_icmpne L50 \nL37:    aload_1 \nL38:    ldc '*' \nL40:    iload_3 \nL41:    iconst_1 \nL42:    iadd \nL43:    invokevirtual Method java/lang/String indexOf (Ljava/lang/String;I)I \nL46:    istore_3 \nL47:    goto L88 \n\n        .stack same \nL50:    iload 4 \nL52:    iload_3 \nL53:    iconst_1 \nL54:    isub \nL55:    if_icmpeq L88 \nL58:    iload 4 \nL60:    iload_3 \nL61:    if_icmpeq L88 \nL64:    new java/lang/StringBuilder \nL67:    dup \nL68:    invokespecial Method java/lang/StringBuilder <init> ()V \nL71:    aload_2 \nL72:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL75:    aload_1 \nL76:    iload 4 \nL78:    invokevirtual Method java/lang/String charAt (I)C \nL81:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL84:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL87:    astore_2 \n\n        .stack same \nL88:    iinc 4 1 \nL91:    goto L20 \n\n        .stack chop 1 \nL94:    aload_2 \nL95:    areturn \nL96:    \n        .linenumbertable \n            L0 8 \n            L3 9 \n            L10 11 \n            L15 12 \n            L17 15 \n            L29 16 \n            L37 17 \n            L50 18 \n            L64 19 \n            L88 15 \n            L94 23 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'StarOut.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 20:38:19 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class StarOut_ESTest extends StarOut_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      StarOut starOut0 = new StarOut();\n      String string0 = starOut0.starOut(\"\");\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      StarOut starOut0 = new StarOut();\n      starOut0.starOut(\"1kXAh'W+*W{zBe-D-R\");\n      String string0 = starOut0.starOut(\"I>vH YxS8-%iq4=\");\n      assertEquals(\"I>vH YxS8-%iq4=\", string0);\n      \n      String string1 = starOut0.starOut(\"1kXAh'W+*W{zBe-D-R\");\n      assertEquals(\"1kXAh'W{zBe-D-R\", string1);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 20:38:19 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class StarOut_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"StarOut\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpvhy8upx9\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StarOut_ESTest_scaffolding.class.getClassLoader() ,\n      \"StarOut\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StarOut_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"StarOut\"\n    );\n  }\n}\n", "class_idx": 115}
{"class_name": "Krb5Parser", "java_source": "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n * agreements. See the NOTICE file distributed with this work for additional information regarding\n * copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n * copy of the License at\n *\n * <p>http://www.apache.org/licenses/LICENSE-2.0\n *\n * <p>Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.nio.charset.StandardCharsets;\nimport java.nio.file.Files;\nimport java.util.ArrayList;\nimport java.util.IdentityHashMap;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\n\n/** A parser to parse krb5.conf format file. */\npublic class Krb5Parser {\n  private File krb5conf;\n  /**\n   * The variable items regards section name as a key of Map, and contents of a section as a value\n   * with Object type. In specific, the value is a recursive Map type, which can be in the form of\n   * both Map<String, String> and Map<String, Object>, depending on contents of the section.\n   */\n  private Map<String, Object> items;\n\n  public Krb5Parser(File confFile) {\n    krb5conf = confFile;\n    items = null;\n  }\n\n  /**\n   * Load the krb5.conf into a member variable, which is a Map.\n   *\n   * @throws IOException e\n   */\n  public void load() throws IOException {\n    try (BufferedReader br =\n        new BufferedReader(\n            new InputStreamReader(\n                Files.newInputStream(krb5conf.toPath()), StandardCharsets.UTF_8))) {\n      items = new IdentityHashMap<>();\n\n      String originLine = br.readLine();\n      while (originLine != null) {\n        String line = originLine.trim();\n        /*parse through comments*/\n        if (line.isEmpty() || isComment(line)) {\n          originLine = br.readLine();\n        } else if (line.startsWith(\"[\")) {\n          insertSections(line, br, items);\n          originLine = br.readLine();\n        } else if (line.startsWith(\"include\")) {\n          String[] splited = line.trim().split(\"\\\\s+\");\n          if (splited.length == 2) {\n            items.put(splited[0], splited[1]);\n          } else {\n            throw new RuntimeException(\"Unable to parse:\" + originLine);\n          }\n          originLine = br.readLine();\n        } else {\n          throw new RuntimeException(\"Unable to parse:\" + originLine);\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the whole map.\n   *\n   * @return member variable items.\n   */\n  public Map<String, Object> getItems() {\n    return items;\n  }\n\n  /**\n   * Get all the names of sections in a list.\n   *\n   * @return a list of section names.\n   */\n  public List<String> getSections() {\n    return new ArrayList<String>(items.keySet());\n  }\n\n  /**\n   * Get the contents of a section given the section name.\n   *\n   * @param sectionName the name of a section\n   * @param keys the keys list\n   * @return a Map of section contents\n   */\n  public Object getSection(String sectionName, String... keys) {\n    Object value = null;\n    for (Map.Entry<String, Object> item : items.entrySet()) {\n      if (item.getKey().equals(sectionName)) {\n        value = item.getValue();\n        if (keys.length == 0) {\n          return value;\n        }\n        Map<String, Object> map = (Map) item.getValue();\n        for (Map.Entry<String, Object> entry : map.entrySet()) {\n          if (entry.getKey().equals(keys[0])) {\n            value = entry.getValue();\n          }\n        }\n      }\n    }\n\n    for (int i = 1; i < keys.length; i++) {\n      Map<String, Object> map = (Map) value;\n      for (Map.Entry<String, Object> entry : map.entrySet()) {\n        if (entry.getKey().equals(keys[i])) {\n          value = entry.getValue();\n        }\n      }\n    }\n    return value;\n  }\n\n  /**\n   * Print all the meaningful contents of the krb5.conf on the console. Comments are ignored.\n   * Hierarchy is considered. Attention that the order of sections and the order inside a section\n   * will be different to the original file, due to the use of HashMap.\n   */\n  public void dump() {\n    printSection(items);\n  }\n\n  private void insertSections(String line, BufferedReader br, Map<String, Object> items)\n      throws IOException {\n    while (line.startsWith(\"[\")) {\n      int pos = line.indexOf(\"]\");\n      if (pos < 2 || pos < line.length() - 1) {\n        throw new IOException(\"Illegal section name: \" + line);\n      }\n      String sectionName = line.substring(1, pos);\n      Map<String, Object> entries = new IdentityHashMap<>();\n      line = br.readLine();\n      if (line == null) {\n        break;\n      }\n      while (!line.isEmpty() && isComment(line)) {\n        line = br.readLine();\n        if (line == null) {\n          break;\n        }\n      }\n      if (line != null) {\n        line = line.trim();\n        line = insertEntries(line, br, entries);\n        items.put(sectionName, entries);\n      }\n      /*line has been modified after the recursive.*/\n      if (line == null) {\n        /*the end of file*/\n        break;\n      }\n    }\n  }\n\n  /** recursively go through the key-value pairs of a section */\n  private String insertEntries(String line, BufferedReader br, Map<String, Object> entries)\n      throws IOException {\n    if (line == null) {\n      return line;\n    }\n    if (line.startsWith(\"[\")) {\n      return line;\n    }\n\n    if (line.startsWith(\"}\")) {\n      line = br.readLine();\n      if (line != null) {\n        line = line.trim();\n      }\n      return line;\n    }\n    if (line.isEmpty() || isComment(line)) {\n      line = br.readLine();\n      if (line != null) {\n        line = line.trim();\n        line = insertEntries(line, br, entries);\n      }\n      return line;\n    }\n    /*some special cases above*/\n    String[] kv = line.split(\"=\", 2);\n    kv[0] = kv[0].trim();\n    kv[1] = kv[1].trim();\n\n    if (kv[1].startsWith(\"{\")) {\n      Map<String, Object> meValue = new IdentityHashMap<>();\n      line = br.readLine();\n      while (line != null && (isComment(line.trim()) || line.trim().isEmpty())) {\n        line = br.readLine();\n      }\n      if (line != null) {\n        line = line.trim();\n        if (!line.contains(\"=\") && !isComment(line) && !line.isEmpty()) {\n          // multi-line value\n          List<String> values = new ArrayList<>();\n          while (line != null && !line.contains(\"}\")) {\n            line = line.trim();\n            if (!line.isEmpty() && !isComment(line)) {\n              values.add(line.trim());\n            }\n            line = br.readLine();\n          }\n          entries.put(kv[0], values);\n          line = br.readLine();\n          if (line != null) {\n            line = line.trim();\n          }\n        } else {\n          line = insertEntries(line, br, meValue);\n          entries.put(kv[0], meValue);\n        }\n        line = insertEntries(line, br, entries);\n      }\n    } else {\n      entries.put(kv[0], kv[1]);\n      line = br.readLine();\n      if (line != null) {\n        line = line.trim();\n        line = insertEntries(line, br, entries);\n      }\n    }\n    return line;\n  }\n\n  private void printSection(Map<String, Object> map) {\n    Iterator iter = map.entrySet().iterator();\n    while (iter.hasNext()) {\n      Map.Entry entry = (Map.Entry) iter.next();\n      String key = (String) entry.getKey();\n      Object value = entry.getValue();\n      System.out.println(\"[\" + key + \"]\");\n\n      if (value instanceof Map) {\n        int count = 0;\n        printEntry((Map) value, count);\n      } else {\n        throw new RuntimeException(\"Unable to print contents of [\" + key + \"]\");\n      }\n    }\n  }\n\n  private void printEntry(Map<String, Object> map, int count) {\n    Iterator iter = map.entrySet().iterator();\n    while (iter.hasNext()) {\n      Map.Entry entry = (Map.Entry) iter.next();\n      String key = (String) entry.getKey();\n      Object value = entry.getValue();\n      for (int i = 0; i < count; i++) {\n        System.out.print(\"\\t\");\n      }\n      if (value instanceof String) {\n        System.out.println(key + \" = \" + (String) value);\n      }\n      if (value instanceof Map) {\n        System.out.println(key + \" = {\");\n        printEntry((Map) value, count + 1);\n        for (int i = 0; i < count; i++) {\n          System.out.print(\"\\t\");\n        }\n        System.out.println(\"}\");\n      }\n    }\n  }\n\n  private boolean isComment(String line) {\n    return line.charAt(0) == '#' || line.charAt(0) == ';';\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Krb5Parser \n.super java/lang/Object \n.field private krb5conf Ljava/io/File; \n.field private items Ljava/util/Map; .fieldattributes \n    .signature Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>; \n.end fieldattributes \n\n.method public <init> : (Ljava/io/File;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field Krb5Parser krb5conf Ljava/io/File; \nL9:     aload_0 \nL10:    aconst_null \nL11:    putfield Field Krb5Parser items Ljava/util/Map; \nL14:    return \nL15:    \n        .linenumbertable \n            L0 48 \n            L4 49 \n            L9 50 \n            L14 51 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public load : ()V \n    .code stack 6 locals 8 \nL0:     new java/io/BufferedReader \nL3:     dup \nL4:     new java/io/InputStreamReader \nL7:     dup \nL8:     aload_0 \nL9:     getfield Field Krb5Parser krb5conf Ljava/io/File; \nL12:    invokevirtual Method java/io/File toPath ()Ljava/nio/file/Path; \nL15:    iconst_0 \nL16:    anewarray java/nio/file/OpenOption \nL19:    invokestatic Method java/nio/file/Files newInputStream (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream; \nL22:    getstatic Field java/nio/charset/StandardCharsets UTF_8 Ljava/nio/charset/Charset; \nL25:    invokespecial Method java/io/InputStreamReader <init> (Ljava/io/InputStream;Ljava/nio/charset/Charset;)V \nL28:    invokespecial Method java/io/BufferedReader <init> (Ljava/io/Reader;)V \nL31:    astore_1 \nL32:    aconst_null \nL33:    astore_2 \nL34:    aload_0 \nL35:    new java/util/IdentityHashMap \nL38:    dup \nL39:    invokespecial Method java/util/IdentityHashMap <init> ()V \nL42:    putfield Field Krb5Parser items Ljava/util/Map; \nL45:    aload_1 \nL46:    invokevirtual Method java/io/BufferedReader readLine ()Ljava/lang/String; \nL49:    astore_3 \n\n        .stack append Object java/io/BufferedReader Object java/lang/Throwable Object java/lang/String \nL50:    aload_3 \nL51:    ifnull L229 \nL54:    aload_3 \nL55:    invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL58:    astore 4 \nL60:    aload 4 \nL62:    invokevirtual Method java/lang/String isEmpty ()Z \nL65:    ifne L77 \nL68:    aload_0 \nL69:    aload 4 \nL71:    invokespecial Method Krb5Parser isComment (Ljava/lang/String;)Z \nL74:    ifeq L85 \n\n        .stack append Object java/lang/String \nL77:    aload_1 \nL78:    invokevirtual Method java/io/BufferedReader readLine ()Ljava/lang/String; \nL81:    astore_3 \nL82:    goto L226 \n\n        .stack same \nL85:    aload 4 \nL87:    ldc '[' \nL89:    invokevirtual Method java/lang/String startsWith (Ljava/lang/String;)Z \nL92:    ifeq L114 \nL95:    aload_0 \nL96:    aload 4 \nL98:    aload_1 \nL99:    aload_0 \nL100:   getfield Field Krb5Parser items Ljava/util/Map; \nL103:   invokespecial Method Krb5Parser insertSections (Ljava/lang/String;Ljava/io/BufferedReader;Ljava/util/Map;)V \nL106:   aload_1 \nL107:   invokevirtual Method java/io/BufferedReader readLine ()Ljava/lang/String; \nL110:   astore_3 \nL111:   goto L226 \n\n        .stack same \nL114:   aload 4 \nL116:   ldc 'include' \nL118:   invokevirtual Method java/lang/String startsWith (Ljava/lang/String;)Z \nL121:   ifeq L199 \nL124:   aload 4 \nL126:   invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL129:   ldc '\\\\s+' \nL131:   invokevirtual Method java/lang/String split (Ljava/lang/String;)[Ljava/lang/String; \nL134:   astore 5 \nL136:   aload 5 \nL138:   arraylength \nL139:   iconst_2 \nL140:   if_icmpne L164 \nL143:   aload_0 \nL144:   getfield Field Krb5Parser items Ljava/util/Map; \nL147:   aload 5 \nL149:   iconst_0 \nL150:   aaload \nL151:   aload 5 \nL153:   iconst_1 \nL154:   aaload \nL155:   invokeinterface InterfaceMethod java/util/Map put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; 3 \nL160:   pop \nL161:   goto L191 \n\n        .stack append Object [Ljava/lang/String; \nL164:   new java/lang/RuntimeException \nL167:   dup \nL168:   new java/lang/StringBuilder \nL171:   dup \nL172:   invokespecial Method java/lang/StringBuilder <init> ()V \nL175:   ldc 'Unable to parse:' \nL177:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL180:   aload_3 \nL181:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL184:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL187:   invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;)V \nL190:   athrow \n\n        .stack same \nL191:   aload_1 \nL192:   invokevirtual Method java/io/BufferedReader readLine ()Ljava/lang/String; \nL195:   astore_3 \nL196:   goto L226 \n\n        .stack chop 1 \nL199:   new java/lang/RuntimeException \nL202:   dup \nL203:   new java/lang/StringBuilder \nL206:   dup \nL207:   invokespecial Method java/lang/StringBuilder <init> ()V \nL210:   ldc 'Unable to parse:' \nL212:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL215:   aload_3 \nL216:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL219:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL222:   invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;)V \nL225:   athrow \n\n        .stack chop 1 \nL226:   goto L50 \n\n        .stack chop 1 \nL229:   aload_1 \nL230:   ifnull L300 \nL233:   aload_2 \nL234:   ifnull L253 \n        .catch java/lang/Throwable from L237 to L241 using L244 \n        .catch java/lang/Throwable from L34 to L229 using L260 \n        .catch [0] from L34 to L229 using L265 \nL237:   aload_1 \nL238:   invokevirtual Method java/io/BufferedReader close ()V \nL241:   goto L300 \n\n        .stack stack_1 Object java/lang/Throwable \nL244:   astore_3 \nL245:   aload_2 \nL246:   aload_3 \nL247:   invokevirtual Method java/lang/Throwable addSuppressed (Ljava/lang/Throwable;)V \nL250:   goto L300 \n\n        .stack same \nL253:   aload_1 \nL254:   invokevirtual Method java/io/BufferedReader close ()V \nL257:   goto L300 \n\n        .stack stack_1 Object java/lang/Throwable \nL260:   astore_3 \nL261:   aload_3 \nL262:   astore_2 \nL263:   aload_3 \nL264:   athrow \n\n        .stack stack_1 Object java/lang/Throwable \nL265:   astore 6 \nL267:   aload_1 \nL268:   ifnull L297 \nL271:   aload_2 \nL272:   ifnull L293 \n        .catch java/lang/Throwable from L275 to L279 using L282 \n        .catch [0] from L260 to L267 using L265 \nL275:   aload_1 \nL276:   invokevirtual Method java/io/BufferedReader close ()V \nL279:   goto L297 \n\n        .stack full \n            locals Object Krb5Parser Object java/io/BufferedReader Object java/lang/Throwable Top Top Top Object java/lang/Throwable \n            stack Object java/lang/Throwable \n        .end stack \nL282:   astore 7 \nL284:   aload_2 \nL285:   aload 7 \nL287:   invokevirtual Method java/lang/Throwable addSuppressed (Ljava/lang/Throwable;)V \nL290:   goto L297 \n\n        .stack same \nL293:   aload_1 \nL294:   invokevirtual Method java/io/BufferedReader close ()V \n\n        .stack same \nL297:   aload 6 \nL299:   athrow \n\n        .stack full \n            locals Object Krb5Parser \n            stack \n        .end stack \nL300:   return \nL301:   \n        .linenumbertable \n            L0 58 \n            L34 60 \n            L45 62 \n            L50 63 \n            L54 64 \n            L60 66 \n            L77 67 \n            L85 68 \n            L95 69 \n            L106 70 \n            L114 71 \n            L124 72 \n            L136 73 \n            L143 74 \n            L164 76 \n            L191 78 \n            L196 79 \n            L199 80 \n            L226 82 \n            L229 83 \n            L260 58 \n            L265 83 \n            L300 84 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/IOException \n.end method \n\n.method public getItems : ()Ljava/util/Map; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Krb5Parser items Ljava/util/Map; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 91 \n        .end linenumbertable \n    .end code \n    .signature ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>; \n.end method \n\n.method public getSections : ()Ljava/util/List; \n    .code stack 3 locals 1 \nL0:     new java/util/ArrayList \nL3:     dup \nL4:     aload_0 \nL5:     getfield Field Krb5Parser items Ljava/util/Map; \nL8:     invokeinterface InterfaceMethod java/util/Map keySet ()Ljava/util/Set; 1 \nL13:    invokespecial Method java/util/ArrayList <init> (Ljava/util/Collection;)V \nL16:    areturn \nL17:    \n        .linenumbertable \n            L0 101 \n        .end linenumbertable \n    .end code \n    .signature ()Ljava/util/List<Ljava/lang/String;>; \n.end method \n\n.method public varargs getSection : (Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Object; \n    .code stack 3 locals 9 \nL0:     aconst_null \nL1:     astore_3 \nL2:     aload_0 \nL3:     getfield Field Krb5Parser items Ljava/util/Map; \nL6:     invokeinterface InterfaceMethod java/util/Map entrySet ()Ljava/util/Set; 1 \nL11:    invokeinterface InterfaceMethod java/util/Set iterator ()Ljava/util/Iterator; 1 \nL16:    astore 4 \n\n        .stack append Object java/lang/Object Object java/util/Iterator \nL18:    aload 4 \nL20:    invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL25:    ifeq L153 \nL28:    aload 4 \nL30:    invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL35:    checkcast java/util/Map$Entry \nL38:    astore 5 \nL40:    aload 5 \nL42:    invokeinterface InterfaceMethod java/util/Map$Entry getKey ()Ljava/lang/Object; 1 \nL47:    checkcast java/lang/String \nL50:    aload_1 \nL51:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL54:    ifeq L150 \nL57:    aload 5 \nL59:    invokeinterface InterfaceMethod java/util/Map$Entry getValue ()Ljava/lang/Object; 1 \nL64:    astore_3 \nL65:    aload_2 \nL66:    arraylength \nL67:    ifne L72 \nL70:    aload_3 \nL71:    areturn \n\n        .stack append Object java/util/Map$Entry \nL72:    aload 5 \nL74:    invokeinterface InterfaceMethod java/util/Map$Entry getValue ()Ljava/lang/Object; 1 \nL79:    checkcast java/util/Map \nL82:    astore 6 \nL84:    aload 6 \nL86:    invokeinterface InterfaceMethod java/util/Map entrySet ()Ljava/util/Set; 1 \nL91:    invokeinterface InterfaceMethod java/util/Set iterator ()Ljava/util/Iterator; 1 \nL96:    astore 7 \n\n        .stack append Object java/util/Map Object java/util/Iterator \nL98:    aload 7 \nL100:   invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL105:   ifeq L150 \nL108:   aload 7 \nL110:   invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL115:   checkcast java/util/Map$Entry \nL118:   astore 8 \nL120:   aload 8 \nL122:   invokeinterface InterfaceMethod java/util/Map$Entry getKey ()Ljava/lang/Object; 1 \nL127:   checkcast java/lang/String \nL130:   aload_2 \nL131:   iconst_0 \nL132:   aaload \nL133:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL136:   ifeq L147 \nL139:   aload 8 \nL141:   invokeinterface InterfaceMethod java/util/Map$Entry getValue ()Ljava/lang/Object; 1 \nL146:   astore_3 \n\n        .stack same \nL147:   goto L98 \n\n        .stack chop 3 \nL150:   goto L18 \n\n        .stack chop 1 \nL153:   iconst_1 \nL154:   istore 4 \n\n        .stack append Integer \nL156:   iload 4 \nL158:   aload_2 \nL159:   arraylength \nL160:   if_icmpge L242 \nL163:   aload_3 \nL164:   checkcast java/util/Map \nL167:   astore 5 \nL169:   aload 5 \nL171:   invokeinterface InterfaceMethod java/util/Map entrySet ()Ljava/util/Set; 1 \nL176:   invokeinterface InterfaceMethod java/util/Set iterator ()Ljava/util/Iterator; 1 \nL181:   astore 6 \n\n        .stack append Object java/util/Map Object java/util/Iterator \nL183:   aload 6 \nL185:   invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL190:   ifeq L236 \nL193:   aload 6 \nL195:   invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL200:   checkcast java/util/Map$Entry \nL203:   astore 7 \nL205:   aload 7 \nL207:   invokeinterface InterfaceMethod java/util/Map$Entry getKey ()Ljava/lang/Object; 1 \nL212:   checkcast java/lang/String \nL215:   aload_2 \nL216:   iload 4 \nL218:   aaload \nL219:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL222:   ifeq L233 \nL225:   aload 7 \nL227:   invokeinterface InterfaceMethod java/util/Map$Entry getValue ()Ljava/lang/Object; 1 \nL232:   astore_3 \n\n        .stack same \nL233:   goto L183 \n\n        .stack chop 2 \nL236:   iinc 4 1 \nL239:   goto L156 \n\n        .stack chop 1 \nL242:   aload_3 \nL243:   areturn \nL244:   \n        .linenumbertable \n            L0 111 \n            L2 112 \n            L40 113 \n            L57 114 \n            L65 115 \n            L70 116 \n            L72 118 \n            L84 119 \n            L120 120 \n            L139 121 \n            L147 123 \n            L150 125 \n            L153 127 \n            L163 128 \n            L169 129 \n            L205 130 \n            L225 131 \n            L233 133 \n            L236 127 \n            L242 135 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public dump : ()V \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     aload_0 \nL2:     getfield Field Krb5Parser items Ljava/util/Map; \nL5:     invokespecial Method Krb5Parser printSection (Ljava/util/Map;)V \nL8:     return \nL9:     \n        .linenumbertable \n            L0 146 \n            L8 147 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private insertSections : (Ljava/lang/String;Ljava/io/BufferedReader;Ljava/util/Map;)V \n    .code stack 4 locals 7 \n\n        .stack same \nL0:     aload_1 \nL1:     ldc '[' \nL3:     invokevirtual Method java/lang/String startsWith (Ljava/lang/String;)Z \nL6:     ifeq L157 \nL9:     aload_1 \nL10:    ldc ']' \nL12:    invokevirtual Method java/lang/String indexOf (Ljava/lang/String;)I \nL15:    istore 4 \nL17:    iload 4 \nL19:    iconst_2 \nL20:    if_icmplt L34 \nL23:    iload 4 \nL25:    aload_1 \nL26:    invokevirtual Method java/lang/String length ()I \nL29:    iconst_1 \nL30:    isub \nL31:    if_icmpge L61 \n\n        .stack append Integer \nL34:    new java/io/IOException \nL37:    dup \nL38:    new java/lang/StringBuilder \nL41:    dup \nL42:    invokespecial Method java/lang/StringBuilder <init> ()V \nL45:    ldc 'Illegal section name: ' \nL47:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL50:    aload_1 \nL51:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL54:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL57:    invokespecial Method java/io/IOException <init> (Ljava/lang/String;)V \nL60:    athrow \n\n        .stack same \nL61:    aload_1 \nL62:    iconst_1 \nL63:    iload 4 \nL65:    invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL68:    astore 5 \nL70:    new java/util/IdentityHashMap \nL73:    dup \nL74:    invokespecial Method java/util/IdentityHashMap <init> ()V \nL77:    astore 6 \nL79:    aload_2 \nL80:    invokevirtual Method java/io/BufferedReader readLine ()Ljava/lang/String; \nL83:    astore_1 \nL84:    aload_1 \nL85:    ifnonnull L91 \nL88:    goto L157 \n\n        .stack append Object java/lang/String Object java/util/Map \nL91:    aload_1 \nL92:    invokevirtual Method java/lang/String isEmpty ()Z \nL95:    ifne L118 \nL98:    aload_0 \nL99:    aload_1 \nL100:   invokespecial Method Krb5Parser isComment (Ljava/lang/String;)Z \nL103:   ifeq L118 \nL106:   aload_2 \nL107:   invokevirtual Method java/io/BufferedReader readLine ()Ljava/lang/String; \nL110:   astore_1 \nL111:   aload_1 \nL112:   ifnonnull L91 \nL115:   goto L118 \n\n        .stack same \nL118:   aload_1 \nL119:   ifnull L147 \nL122:   aload_1 \nL123:   invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL126:   astore_1 \nL127:   aload_0 \nL128:   aload_1 \nL129:   aload_2 \nL130:   aload 6 \nL132:   invokespecial Method Krb5Parser insertEntries (Ljava/lang/String;Ljava/io/BufferedReader;Ljava/util/Map;)Ljava/lang/String; \nL135:   astore_1 \nL136:   aload_3 \nL137:   aload 5 \nL139:   aload 6 \nL141:   invokeinterface InterfaceMethod java/util/Map put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; 3 \nL146:   pop \n\n        .stack same \nL147:   aload_1 \nL148:   ifnonnull L154 \nL151:   goto L157 \n\n        .stack chop 3 \nL154:   goto L0 \n\n        .stack same \nL157:   return \nL158:   \n        .linenumbertable \n            L0 150 \n            L9 151 \n            L17 152 \n            L34 153 \n            L61 155 \n            L70 156 \n            L79 157 \n            L84 158 \n            L88 159 \n            L91 161 \n            L106 162 \n            L111 163 \n            L115 164 \n            L118 167 \n            L122 168 \n            L127 169 \n            L136 170 \n            L147 173 \n            L151 175 \n            L154 177 \n            L157 178 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/IOException \n    .signature (Ljava/lang/String;Ljava/io/BufferedReader;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)V \n.end method \n\n.method private insertEntries : (Ljava/lang/String;Ljava/io/BufferedReader;Ljava/util/Map;)Ljava/lang/String; \n    .code stack 4 locals 7 \nL0:     aload_1 \nL1:     ifnonnull L6 \nL4:     aload_1 \nL5:     areturn \n\n        .stack same \nL6:     aload_1 \nL7:     ldc '[' \nL9:     invokevirtual Method java/lang/String startsWith (Ljava/lang/String;)Z \nL12:    ifeq L17 \nL15:    aload_1 \nL16:    areturn \n\n        .stack same \nL17:    aload_1 \nL18:    ldc '}' \nL20:    invokevirtual Method java/lang/String startsWith (Ljava/lang/String;)Z \nL23:    ifeq L42 \nL26:    aload_2 \nL27:    invokevirtual Method java/io/BufferedReader readLine ()Ljava/lang/String; \nL30:    astore_1 \nL31:    aload_1 \nL32:    ifnull L40 \nL35:    aload_1 \nL36:    invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL39:    astore_1 \n\n        .stack same \nL40:    aload_1 \nL41:    areturn \n\n        .stack same \nL42:    aload_1 \nL43:    invokevirtual Method java/lang/String isEmpty ()Z \nL46:    ifne L57 \nL49:    aload_0 \nL50:    aload_1 \nL51:    invokespecial Method Krb5Parser isComment (Ljava/lang/String;)Z \nL54:    ifeq L81 \n\n        .stack same \nL57:    aload_2 \nL58:    invokevirtual Method java/io/BufferedReader readLine ()Ljava/lang/String; \nL61:    astore_1 \nL62:    aload_1 \nL63:    ifnull L79 \nL66:    aload_1 \nL67:    invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL70:    astore_1 \nL71:    aload_0 \nL72:    aload_1 \nL73:    aload_2 \nL74:    aload_3 \nL75:    invokespecial Method Krb5Parser insertEntries (Ljava/lang/String;Ljava/io/BufferedReader;Ljava/util/Map;)Ljava/lang/String; \nL78:    astore_1 \n\n        .stack same \nL79:    aload_1 \nL80:    areturn \n\n        .stack same \nL81:    aload_1 \nL82:    ldc '=' \nL84:    iconst_2 \nL85:    invokevirtual Method java/lang/String split (Ljava/lang/String;I)[Ljava/lang/String; \nL88:    astore 4 \nL90:    aload 4 \nL92:    iconst_0 \nL93:    aload 4 \nL95:    iconst_0 \nL96:    aaload \nL97:    invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL100:   aastore \nL101:   aload 4 \nL103:   iconst_1 \nL104:   aload 4 \nL106:   iconst_1 \nL107:   aaload \nL108:   invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL111:   aastore \nL112:   aload 4 \nL114:   iconst_1 \nL115:   aaload \nL116:   ldc '{' \nL118:   invokevirtual Method java/lang/String startsWith (Ljava/lang/String;)Z \nL121:   ifeq L329 \nL124:   new java/util/IdentityHashMap \nL127:   dup \nL128:   invokespecial Method java/util/IdentityHashMap <init> ()V \nL131:   astore 5 \nL133:   aload_2 \nL134:   invokevirtual Method java/io/BufferedReader readLine ()Ljava/lang/String; \nL137:   astore_1 \n\n        .stack append Object [Ljava/lang/String; Object java/util/Map \nL138:   aload_1 \nL139:   ifnull L171 \nL142:   aload_0 \nL143:   aload_1 \nL144:   invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL147:   invokespecial Method Krb5Parser isComment (Ljava/lang/String;)Z \nL150:   ifne L163 \nL153:   aload_1 \nL154:   invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL157:   invokevirtual Method java/lang/String isEmpty ()Z \nL160:   ifeq L171 \n\n        .stack same \nL163:   aload_2 \nL164:   invokevirtual Method java/io/BufferedReader readLine ()Ljava/lang/String; \nL167:   astore_1 \nL168:   goto L138 \n\n        .stack same \nL171:   aload_1 \nL172:   ifnull L326 \nL175:   aload_1 \nL176:   invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL179:   astore_1 \nL180:   aload_1 \nL181:   ldc '=' \nL183:   invokevirtual Method java/lang/String contains (Ljava/lang/CharSequence;)Z \nL186:   ifne L296 \nL189:   aload_0 \nL190:   aload_1 \nL191:   invokespecial Method Krb5Parser isComment (Ljava/lang/String;)Z \nL194:   ifne L296 \nL197:   aload_1 \nL198:   invokevirtual Method java/lang/String isEmpty ()Z \nL201:   ifne L296 \nL204:   new java/util/ArrayList \nL207:   dup \nL208:   invokespecial Method java/util/ArrayList <init> ()V \nL211:   astore 6 \n\n        .stack append Object java/util/List \nL213:   aload_1 \nL214:   ifnull L266 \nL217:   aload_1 \nL218:   ldc '}' \nL220:   invokevirtual Method java/lang/String contains (Ljava/lang/CharSequence;)Z \nL223:   ifne L266 \nL226:   aload_1 \nL227:   invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL230:   astore_1 \nL231:   aload_1 \nL232:   invokevirtual Method java/lang/String isEmpty ()Z \nL235:   ifne L258 \nL238:   aload_0 \nL239:   aload_1 \nL240:   invokespecial Method Krb5Parser isComment (Ljava/lang/String;)Z \nL243:   ifne L258 \nL246:   aload 6 \nL248:   aload_1 \nL249:   invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL252:   invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL257:   pop \n\n        .stack same \nL258:   aload_2 \nL259:   invokevirtual Method java/io/BufferedReader readLine ()Ljava/lang/String; \nL262:   astore_1 \nL263:   goto L213 \n\n        .stack same \nL266:   aload_3 \nL267:   aload 4 \nL269:   iconst_0 \nL270:   aaload \nL271:   aload 6 \nL273:   invokeinterface InterfaceMethod java/util/Map put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; 3 \nL278:   pop \nL279:   aload_2 \nL280:   invokevirtual Method java/io/BufferedReader readLine ()Ljava/lang/String; \nL283:   astore_1 \nL284:   aload_1 \nL285:   ifnull L293 \nL288:   aload_1 \nL289:   invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL292:   astore_1 \n\n        .stack chop 1 \nL293:   goto L318 \n\n        .stack same \nL296:   aload_0 \nL297:   aload_1 \nL298:   aload_2 \nL299:   aload 5 \nL301:   invokespecial Method Krb5Parser insertEntries (Ljava/lang/String;Ljava/io/BufferedReader;Ljava/util/Map;)Ljava/lang/String; \nL304:   astore_1 \nL305:   aload_3 \nL306:   aload 4 \nL308:   iconst_0 \nL309:   aaload \nL310:   aload 5 \nL312:   invokeinterface InterfaceMethod java/util/Map put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; 3 \nL317:   pop \n\n        .stack same \nL318:   aload_0 \nL319:   aload_1 \nL320:   aload_2 \nL321:   aload_3 \nL322:   invokespecial Method Krb5Parser insertEntries (Ljava/lang/String;Ljava/io/BufferedReader;Ljava/util/Map;)Ljava/lang/String; \nL325:   astore_1 \n\n        .stack chop 1 \nL326:   goto L366 \n\n        .stack same \nL329:   aload_3 \nL330:   aload 4 \nL332:   iconst_0 \nL333:   aaload \nL334:   aload 4 \nL336:   iconst_1 \nL337:   aaload \nL338:   invokeinterface InterfaceMethod java/util/Map put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; 3 \nL343:   pop \nL344:   aload_2 \nL345:   invokevirtual Method java/io/BufferedReader readLine ()Ljava/lang/String; \nL348:   astore_1 \nL349:   aload_1 \nL350:   ifnull L366 \nL353:   aload_1 \nL354:   invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL357:   astore_1 \nL358:   aload_0 \nL359:   aload_1 \nL360:   aload_2 \nL361:   aload_3 \nL362:   invokespecial Method Krb5Parser insertEntries (Ljava/lang/String;Ljava/io/BufferedReader;Ljava/util/Map;)Ljava/lang/String; \nL365:   astore_1 \n\n        .stack same \nL366:   aload_1 \nL367:   areturn \nL368:   \n        .linenumbertable \n            L0 184 \n            L4 185 \n            L6 187 \n            L15 188 \n            L17 191 \n            L26 192 \n            L31 193 \n            L35 194 \n            L40 196 \n            L42 198 \n            L57 199 \n            L62 200 \n            L66 201 \n            L71 202 \n            L79 204 \n            L81 207 \n            L90 208 \n            L101 209 \n            L112 211 \n            L124 212 \n            L133 213 \n            L138 214 \n            L163 215 \n            L171 217 \n            L175 218 \n            L180 219 \n            L204 221 \n            L213 222 \n            L226 223 \n            L231 224 \n            L246 225 \n            L258 227 \n            L266 229 \n            L279 230 \n            L284 231 \n            L288 232 \n            L293 234 \n            L296 235 \n            L305 236 \n            L318 238 \n            L326 240 \n            L329 241 \n            L344 242 \n            L349 243 \n            L353 244 \n            L358 245 \n            L366 248 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/IOException \n    .signature (Ljava/lang/String;Ljava/io/BufferedReader;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)Ljava/lang/String; \n.end method \n\n.method private printSection : (Ljava/util/Map;)V \n    .code stack 4 locals 7 \nL0:     aload_1 \nL1:     invokeinterface InterfaceMethod java/util/Map entrySet ()Ljava/util/Set; 1 \nL6:     invokeinterface InterfaceMethod java/util/Set iterator ()Ljava/util/Iterator; 1 \nL11:    astore_2 \n\n        .stack append Object java/util/Iterator \nL12:    aload_2 \nL13:    invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL18:    ifeq L142 \nL21:    aload_2 \nL22:    invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL27:    checkcast java/util/Map$Entry \nL30:    astore_3 \nL31:    aload_3 \nL32:    invokeinterface InterfaceMethod java/util/Map$Entry getKey ()Ljava/lang/Object; 1 \nL37:    checkcast java/lang/String \nL40:    astore 4 \nL42:    aload_3 \nL43:    invokeinterface InterfaceMethod java/util/Map$Entry getValue ()Ljava/lang/Object; 1 \nL48:    astore 5 \nL50:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL53:    new java/lang/StringBuilder \nL56:    dup \nL57:    invokespecial Method java/lang/StringBuilder <init> ()V \nL60:    ldc '[' \nL62:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL65:    aload 4 \nL67:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL70:    ldc ']' \nL72:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL75:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL78:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL81:    aload 5 \nL83:    instanceof java/util/Map \nL86:    ifeq L106 \nL89:    iconst_0 \nL90:    istore 6 \nL92:    aload_0 \nL93:    aload 5 \nL95:    checkcast java/util/Map \nL98:    iload 6 \nL100:   invokespecial Method Krb5Parser printEntry (Ljava/util/Map;I)V \nL103:   goto L139 \n\n        .stack append Object java/util/Map$Entry Object java/lang/String Object java/lang/Object \nL106:   new java/lang/RuntimeException \nL109:   dup \nL110:   new java/lang/StringBuilder \nL113:   dup \nL114:   invokespecial Method java/lang/StringBuilder <init> ()V \nL117:   ldc 'Unable to print contents of [' \nL119:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL122:   aload 4 \nL124:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL127:   ldc ']' \nL129:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL132:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL135:   invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;)V \nL138:   athrow \n\n        .stack chop 3 \nL139:   goto L12 \n\n        .stack same \nL142:   return \nL143:   \n        .linenumbertable \n            L0 252 \n            L12 253 \n            L21 254 \n            L31 255 \n            L42 256 \n            L50 257 \n            L81 259 \n            L89 260 \n            L92 261 \n            L103 262 \n            L106 263 \n            L139 265 \n            L142 266 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)V \n.end method \n\n.method private printEntry : (Ljava/util/Map;I)V \n    .code stack 4 locals 8 \nL0:     aload_1 \nL1:     invokeinterface InterfaceMethod java/util/Map entrySet ()Ljava/util/Set; 1 \nL6:     invokeinterface InterfaceMethod java/util/Set iterator ()Ljava/util/Iterator; 1 \nL11:    astore_3 \n\n        .stack append Object java/util/Iterator \nL12:    aload_3 \nL13:    invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL18:    ifeq L198 \nL21:    aload_3 \nL22:    invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL27:    checkcast java/util/Map$Entry \nL30:    astore 4 \nL32:    aload 4 \nL34:    invokeinterface InterfaceMethod java/util/Map$Entry getKey ()Ljava/lang/Object; 1 \nL39:    checkcast java/lang/String \nL42:    astore 5 \nL44:    aload 4 \nL46:    invokeinterface InterfaceMethod java/util/Map$Entry getValue ()Ljava/lang/Object; 1 \nL51:    astore 6 \nL53:    iconst_0 \nL54:    istore 7 \n\n        .stack full \n            locals Object Krb5Parser Object java/util/Map Integer Object java/util/Iterator Object java/util/Map$Entry Object java/lang/String Object java/lang/Object Integer \n            stack \n        .end stack \nL56:    iload 7 \nL58:    iload_2 \nL59:    if_icmpge L76 \nL62:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL65:    ldc '\\t' \nL67:    invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \nL70:    iinc 7 1 \nL73:    goto L56 \n\n        .stack chop 1 \nL76:    aload 6 \nL78:    instanceof java/lang/String \nL81:    ifeq L118 \nL84:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL87:    new java/lang/StringBuilder \nL90:    dup \nL91:    invokespecial Method java/lang/StringBuilder <init> ()V \nL94:    aload 5 \nL96:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL99:    ldc ' = ' \nL101:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL104:   aload 6 \nL106:   checkcast java/lang/String \nL109:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL112:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL115:   invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \n\n        .stack same \nL118:   aload 6 \nL120:   instanceof java/util/Map \nL123:   ifeq L195 \nL126:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL129:   new java/lang/StringBuilder \nL132:   dup \nL133:   invokespecial Method java/lang/StringBuilder <init> ()V \nL136:   aload 5 \nL138:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL141:   ldc ' = {' \nL143:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL146:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL149:   invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL152:   aload_0 \nL153:   aload 6 \nL155:   checkcast java/util/Map \nL158:   iload_2 \nL159:   iconst_1 \nL160:   iadd \nL161:   invokespecial Method Krb5Parser printEntry (Ljava/util/Map;I)V \nL164:   iconst_0 \nL165:   istore 7 \n\n        .stack append Integer \nL167:   iload 7 \nL169:   iload_2 \nL170:   if_icmpge L187 \nL173:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL176:   ldc '\\t' \nL178:   invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \nL181:   iinc 7 1 \nL184:   goto L167 \n\n        .stack chop 1 \nL187:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL190:   ldc '}' \nL192:   invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \n\n        .stack chop 3 \nL195:   goto L12 \n\n        .stack same \nL198:   return \nL199:   \n        .linenumbertable \n            L0 269 \n            L12 270 \n            L21 271 \n            L32 272 \n            L44 273 \n            L53 274 \n            L62 275 \n            L70 274 \n            L76 277 \n            L84 278 \n            L118 280 \n            L126 281 \n            L152 282 \n            L164 283 \n            L173 284 \n            L181 283 \n            L187 286 \n            L195 288 \n            L198 289 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;I)V \n.end method \n\n.method private isComment : (Ljava/lang/String;)Z \n    .code stack 2 locals 2 \nL0:     aload_1 \nL1:     iconst_0 \nL2:     invokevirtual Method java/lang/String charAt (I)C \nL5:     bipush 35 \nL7:     if_icmpeq L20 \nL10:    aload_1 \nL11:    iconst_0 \nL12:    invokevirtual Method java/lang/String charAt (I)C \nL15:    bipush 59 \nL17:    if_icmpne L24 \n\n        .stack same \nL20:    iconst_1 \nL21:    goto L25 \n\n        .stack same \nL24:    iconst_0 \n\n        .stack stack_1 Integer \nL25:    ireturn \nL26:    \n        .linenumbertable \n            L0 292 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Krb5Parser.java' \n.innerclasses \n    java/util/Map$Entry java/util/Map Entry public static interface abstract \n.end innerclasses \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 08:03:56 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.Map;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.io.MockFile;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Krb5Parser_ESTest extends Krb5Parser_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      File file0 = MockFile.createTempFile(\"akX]~m0?M6p<Shi\", \"\");\n      Krb5Parser krb5Parser0 = new Krb5Parser(file0);\n      String[] stringArray0 = new String[1];\n      // Undeclared exception!\n      try { \n        krb5Parser0.getSection(\"akX]~m0?M6p<Shi\", stringArray0);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"Krb5Parser\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      MockFile mockFile0 = new MockFile(\"\");\n      Krb5Parser krb5Parser0 = new Krb5Parser(mockFile0);\n      try { \n        krb5Parser0.load();\n        fail(\"Expecting exception: IOException\");\n      \n      } catch(IOException e) {\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Krb5Parser krb5Parser0 = new Krb5Parser((File) null);\n      Map<String, Object> map0 = krb5Parser0.getItems();\n      assertNull(map0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Krb5Parser krb5Parser0 = new Krb5Parser((File) null);\n      // Undeclared exception!\n      try { \n        krb5Parser0.dump();\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"Krb5Parser\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      MockFile mockFile0 = new MockFile(\"\");\n      Krb5Parser krb5Parser0 = new Krb5Parser(mockFile0);\n      // Undeclared exception!\n      try { \n        krb5Parser0.getSections();\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"Krb5Parser\", e);\n      }\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 08:03:56 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Krb5Parser_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Krb5Parser\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp75di1onw\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Krb5Parser_ESTest_scaffolding.class.getClassLoader() ,\n      \"Krb5Parser\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Krb5Parser_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Krb5Parser\"\n    );\n  }\n}\n", "class_idx": 116}
{"class_name": "UrlListFactoryBean", "java_source": "/*\n###############################################################################\n#                                                                             #\n#    Copyright (C) 2011-2016 OpenMEAP, Inc.                                   #\n#    Credits to Jonathan Schang & Rob Thacher                                 #\n#                                                                             #\n#    Released under the LGPLv3                                                #\n#                                                                             #\n#    OpenMEAP is free software: you can redistribute it and/or modify         #\n#    it under the terms of the GNU Lesser General Public License as published #\n#    by the Free Software Foundation, either version 3 of the License, or     #\n#    (at your option) any later version.                                      #\n#                                                                             #\n#    OpenMEAP is distributed in the hope that it will be useful,              #\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of           #\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #\n#    GNU Lesser General Public License for more details.                      #\n#                                                                             #\n#    You should have received a copy of the GNU Lesser General Public License #\n#    along with OpenMEAP.  If not, see <http://www.gnu.org/licenses/>.        #\n#                                                                             #\n###############################################################################\n*/\n\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.List;\n\npublic class UrlListFactoryBean extends ArrayList {\n\n  private static final long serialVersionUID = 6143243343274185728L;\n\n  public UrlListFactoryBean() {\n    super();\n  }\n\n  public UrlListFactoryBean(String listValues) throws MalformedURLException {\n    super();\n    setListValues(listValues);\n  }\n\n  public void setListValues(String commaDelimitedUrls) throws MalformedURLException {\n    this.clear();\n    List urls = Arrays.asList(commaDelimitedUrls.split(\",\"));\n    Iterator urlIter = urls.iterator();\n    while (urlIter.hasNext()) {\n      String url = (String) urlIter.next();\n      this.add(new URL(url));\n    }\n  }\n\n  public String getListValues() {\n    StringBuilder sb = null;\n    Iterator urlItr = this.iterator();\n    while (urlItr.hasNext()) {\n      URL url = (URL) urlItr.next();\n      if (sb != null) sb.append(',');\n      else sb = new StringBuilder();\n      sb.append(url.toString());\n    }\n    return sb.toString();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super UrlListFactoryBean \n.super java/util/ArrayList \n.field private static final serialVersionUID J = 6143243343274185728L \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/util/ArrayList <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 38 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/util/ArrayList <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     invokevirtual Method UrlListFactoryBean setListValues (Ljava/lang/String;)V \nL9:     return \nL10:    \n        .linenumbertable \n            L0 40 \n            L4 41 \n            L9 42 \n        .end linenumbertable \n    .end code \n    .exceptions java/net/MalformedURLException \n.end method \n\n.method public setListValues : (Ljava/lang/String;)V \n    .code stack 4 locals 5 \nL0:     aload_0 \nL1:     invokevirtual Method UrlListFactoryBean clear ()V \nL4:     aload_1 \nL5:     ldc ',' \nL7:     invokevirtual Method java/lang/String split (Ljava/lang/String;)[Ljava/lang/String; \nL10:    invokestatic Method java/util/Arrays asList ([Ljava/lang/Object;)Ljava/util/List; \nL13:    astore_2 \nL14:    aload_2 \nL15:    invokeinterface InterfaceMethod java/util/List iterator ()Ljava/util/Iterator; 1 \nL20:    astore_3 \n\n        .stack append Object java/util/List Object java/util/Iterator \nL21:    aload_3 \nL22:    invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL27:    ifeq L58 \nL30:    aload_3 \nL31:    invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL36:    checkcast java/lang/String \nL39:    astore 4 \nL41:    aload_0 \nL42:    new java/net/URL \nL45:    dup \nL46:    aload 4 \nL48:    invokespecial Method java/net/URL <init> (Ljava/lang/String;)V \nL51:    invokevirtual Method UrlListFactoryBean add (Ljava/lang/Object;)Z \nL54:    pop \nL55:    goto L21 \n\n        .stack same \nL58:    return \nL59:    \n        .linenumbertable \n            L0 44 \n            L4 45 \n            L14 46 \n            L21 47 \n            L30 48 \n            L41 49 \n            L55 50 \n            L58 51 \n        .end linenumbertable \n    .end code \n    .exceptions java/net/MalformedURLException \n.end method \n\n.method public getListValues : ()Ljava/lang/String; \n    .code stack 2 locals 4 \nL0:     aconst_null \nL1:     astore_1 \nL2:     aload_0 \nL3:     invokevirtual Method UrlListFactoryBean iterator ()Ljava/util/Iterator; \nL6:     astore_2 \n\n        .stack append Object java/lang/StringBuilder Object java/util/Iterator \nL7:     aload_2 \nL8:     invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL13:    ifeq L60 \nL16:    aload_2 \nL17:    invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL22:    checkcast java/net/URL \nL25:    astore_3 \nL26:    aload_1 \nL27:    ifnull L40 \nL30:    aload_1 \nL31:    bipush 44 \nL33:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL36:    pop \nL37:    goto L48 \n\n        .stack append Object java/net/URL \nL40:    new java/lang/StringBuilder \nL43:    dup \nL44:    invokespecial Method java/lang/StringBuilder <init> ()V \nL47:    astore_1 \n\n        .stack same \nL48:    aload_1 \nL49:    aload_3 \nL50:    invokevirtual Method java/net/URL toString ()Ljava/lang/String; \nL53:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL56:    pop \nL57:    goto L7 \n\n        .stack chop 1 \nL60:    aload_1 \nL61:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL64:    areturn \nL65:    \n        .linenumbertable \n            L0 53 \n            L2 54 \n            L7 55 \n            L16 56 \n            L26 57 \n            L30 58 \n            L40 59 \n            L48 60 \n            L57 61 \n            L60 62 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'UrlListFactoryBean.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 10:11:52 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.net.MockURL;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class UrlListFactoryBean_ESTest extends UrlListFactoryBean_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      UrlListFactoryBean urlListFactoryBean0 = new UrlListFactoryBean();\n      urlListFactoryBean0.setListValues(\",\");\n      assertTrue(urlListFactoryBean0.isEmpty());\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      UrlListFactoryBean urlListFactoryBean0 = new UrlListFactoryBean();\n      urlListFactoryBean0.add(0, (Object) null);\n      URL uRL0 = MockURL.getHttpExample();\n      urlListFactoryBean0.add(0, (Object) uRL0);\n      // Undeclared exception!\n      try { \n        urlListFactoryBean0.getListValues();\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"org.evosuite.runtime.mock.java.net.MockURL\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      UrlListFactoryBean urlListFactoryBean0 = new UrlListFactoryBean();\n      URL uRL0 = MockURL.getHttpExample();\n      urlListFactoryBean0.add(0, (Object) uRL0);\n      urlListFactoryBean0.getListValues();\n      try { \n        urlListFactoryBean0.setListValues(\"\");\n        fail(\"Expecting exception: MalformedURLException\");\n      \n      } catch(MalformedURLException e) {\n         //\n         // no protocol: \n         //\n         verifyException(\"java.net.URL\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      UrlListFactoryBean urlListFactoryBean0 = new UrlListFactoryBean(\",\");\n      assertTrue(urlListFactoryBean0.isEmpty());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 10:11:52 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class UrlListFactoryBean_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"UrlListFactoryBean\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp1hkfpp2f\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(UrlListFactoryBean_ESTest_scaffolding.class.getClassLoader() ,\n      \"UrlListFactoryBean\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(UrlListFactoryBean_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"UrlListFactoryBean\"\n    );\n  }\n}\n", "class_idx": 117}
{"class_name": "NetworkUtil", "java_source": "import java.net.InetAddress;\nimport java.net.NetworkInterface;\nimport java.net.SocketException;\nimport java.net.UnknownHostException;\nimport java.util.ArrayList;\nimport java.util.Enumeration;\nimport java.util.List;\n\npublic class NetworkUtil {\n\n  private static final String DEFAULT_LOCALHOST = \"127.0.0.1\";\n\n  public static boolean isLocalhost(String ip) {\n    return ip.startsWith(\"127.0.0.\");\n  }\n\n  public static boolean isLanAddress(String ip) {\n    if (ip.startsWith(\"10.\") || ip.startsWith(\"192.168.\")) {\n      return true;\n    }\n    if (ip.startsWith(\"172.\")) {\n      String[] parts = ip.split(\"\\\\.\");\n      int n = Integer.parseInt(parts[1]);\n      if (n >= 16 && n <= 31) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public static String getLocationAddress() {\n    String[] addresses = getAllLocalHostIP();\n    if (addresses == null || addresses.length == 0) {\n      return DEFAULT_LOCALHOST;\n    }\n    for (String address : addresses) {\n      if (DEFAULT_LOCALHOST.equals(address)) {\n        continue;\n      }\n      return address;\n    }\n    return DEFAULT_LOCALHOST;\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  private static String[] getAllLocalHostIP() {\n    List<String> res = new ArrayList<String>();\n    Enumeration netInterfaces;\n    try {\n      netInterfaces = NetworkInterface.getNetworkInterfaces();\n      InetAddress ip = null;\n      while (netInterfaces.hasMoreElements()) {\n        NetworkInterface ni = (NetworkInterface) netInterfaces.nextElement();\n        Enumeration nii = ni.getInetAddresses();\n        while (nii.hasMoreElements()) {\n          ip = (InetAddress) nii.nextElement();\n          if (ip.getHostAddress().indexOf(\":\") == -1) {\n            res.add(ip.getHostAddress());\n          }\n        }\n      }\n    } catch (SocketException e) {\n      throw new RuntimeException(e);\n    }\n    return (String[]) res.toArray(new String[0]);\n  }\n\n  public String getMacAddress(String host) {\n    String mac = \"\";\n    StringBuffer sb = new StringBuffer();\n    try {\n      NetworkInterface ni = NetworkInterface.getByInetAddress(InetAddress.getByName(host));\n      byte[] macs = ni.getHardwareAddress();\n      for (int i = 0; i < macs.length; i++) {\n        mac = Integer.toHexString(macs[i] & 0xFF);\n        if (mac.length() == 1) {\n          mac = '0' + mac;\n        }\n        sb.append(mac + \"-\");\n      }\n    } catch (SocketException e) {\n      e.printStackTrace();\n    } catch (UnknownHostException e) {\n      e.printStackTrace();\n    }\n    mac = sb.toString();\n    mac = mac.substring(0, mac.length() - 1);\n    return mac;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super NetworkUtil \n.super java/lang/Object \n.field private static final DEFAULT_LOCALHOST Ljava/lang/String; = '127.0.0.1' \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 11 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static isLocalhost : (Ljava/lang/String;)Z \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     ldc '127.0.0.' \nL3:     invokevirtual Method java/lang/String startsWith (Ljava/lang/String;)Z \nL6:     ireturn \nL7:     \n        .linenumbertable \n            L0 16 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static isLanAddress : (Ljava/lang/String;)Z \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     ldc '10.' \nL3:     invokevirtual Method java/lang/String startsWith (Ljava/lang/String;)Z \nL6:     ifne L18 \nL9:     aload_0 \nL10:    ldc '192.168.' \nL12:    invokevirtual Method java/lang/String startsWith (Ljava/lang/String;)Z \nL15:    ifeq L20 \n\n        .stack same \nL18:    iconst_1 \nL19:    ireturn \n\n        .stack same \nL20:    aload_0 \nL21:    ldc '172.' \nL23:    invokevirtual Method java/lang/String startsWith (Ljava/lang/String;)Z \nL26:    ifeq L57 \nL29:    aload_0 \nL30:    ldc '\\\\.' \nL32:    invokevirtual Method java/lang/String split (Ljava/lang/String;)[Ljava/lang/String; \nL35:    astore_1 \nL36:    aload_1 \nL37:    iconst_1 \nL38:    aaload \nL39:    invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;)I \nL42:    istore_2 \nL43:    iload_2 \nL44:    bipush 16 \nL46:    if_icmplt L57 \nL49:    iload_2 \nL50:    bipush 31 \nL52:    if_icmpgt L57 \nL55:    iconst_1 \nL56:    ireturn \n\n        .stack same \nL57:    iconst_0 \nL58:    ireturn \nL59:    \n        .linenumbertable \n            L0 20 \n            L18 21 \n            L20 23 \n            L29 24 \n            L36 25 \n            L43 26 \n            L55 27 \n            L57 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static getLocationAddress : ()Ljava/lang/String; \n    .code stack 2 locals 5 \nL0:     invokestatic Method NetworkUtil getAllLocalHostIP ()[Ljava/lang/String; \nL3:     astore_0 \nL4:     aload_0 \nL5:     ifnull L13 \nL8:     aload_0 \nL9:     arraylength \nL10:    ifne L16 \n\n        .stack append Object [Ljava/lang/String; \nL13:    ldc '127.0.0.1' \nL15:    areturn \n\n        .stack same \nL16:    aload_0 \nL17:    astore_1 \nL18:    aload_1 \nL19:    arraylength \nL20:    istore_2 \nL21:    iconst_0 \nL22:    istore_3 \n\n        .stack append Object [Ljava/lang/String; Integer Integer \nL23:    iload_3 \nL24:    iload_2 \nL25:    if_icmpge L55 \nL28:    aload_1 \nL29:    iload_3 \nL30:    aaload \nL31:    astore 4 \nL33:    ldc '127.0.0.1' \nL35:    aload 4 \nL37:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL40:    ifeq L46 \nL43:    goto L49 \n\n        .stack append Object java/lang/String \nL46:    aload 4 \nL48:    areturn \n\n        .stack chop 1 \nL49:    iinc 3 1 \nL52:    goto L23 \n\n        .stack chop 3 \nL55:    ldc '127.0.0.1' \nL57:    areturn \nL58:    \n        .linenumbertable \n            L0 34 \n            L4 35 \n            L13 36 \n            L16 38 \n            L33 39 \n            L43 40 \n            L46 42 \n            L49 38 \n            L55 44 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private static getAllLocalHostIP : ()[Ljava/lang/String; \n    .code stack 3 locals 5 \nL0:     new java/util/ArrayList \nL3:     dup \nL4:     invokespecial Method java/util/ArrayList <init> ()V \nL7:     astore_0 \n        .catch java/net/SocketException from L8 to L90 using L93 \nL8:     invokestatic Method java/net/NetworkInterface getNetworkInterfaces ()Ljava/util/Enumeration; \nL11:    astore_1 \nL12:    aconst_null \nL13:    astore_2 \n\n        .stack append Object java/util/List Object java/util/Enumeration Object java/net/InetAddress \nL14:    aload_1 \nL15:    invokeinterface InterfaceMethod java/util/Enumeration hasMoreElements ()Z 1 \nL20:    ifeq L90 \nL23:    aload_1 \nL24:    invokeinterface InterfaceMethod java/util/Enumeration nextElement ()Ljava/lang/Object; 1 \nL29:    checkcast java/net/NetworkInterface \nL32:    astore_3 \nL33:    aload_3 \nL34:    invokevirtual Method java/net/NetworkInterface getInetAddresses ()Ljava/util/Enumeration; \nL37:    astore 4 \n\n        .stack append Object java/net/NetworkInterface Object java/util/Enumeration \nL39:    aload 4 \nL41:    invokeinterface InterfaceMethod java/util/Enumeration hasMoreElements ()Z 1 \nL46:    ifeq L87 \nL49:    aload 4 \nL51:    invokeinterface InterfaceMethod java/util/Enumeration nextElement ()Ljava/lang/Object; 1 \nL56:    checkcast java/net/InetAddress \nL59:    astore_2 \nL60:    aload_2 \nL61:    invokevirtual Method java/net/InetAddress getHostAddress ()Ljava/lang/String; \nL64:    ldc ':' \nL66:    invokevirtual Method java/lang/String indexOf (Ljava/lang/String;)I \nL69:    iconst_m1 \nL70:    if_icmpne L39 \nL73:    aload_0 \nL74:    aload_2 \nL75:    invokevirtual Method java/net/InetAddress getHostAddress ()Ljava/lang/String; \nL78:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL83:    pop \nL84:    goto L39 \n\n        .stack chop 2 \nL87:    goto L14 \n\n        .stack chop 1 \nL90:    goto L103 \n\n        .stack full \n            locals Object java/util/List \n            stack Object java/net/SocketException \n        .end stack \nL93:    astore_2 \nL94:    new java/lang/RuntimeException \nL97:    dup \nL98:    aload_2 \nL99:    invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/Throwable;)V \nL102:   athrow \n\n        .stack append Object java/util/Enumeration \nL103:   aload_0 \nL104:   iconst_0 \nL105:   anewarray java/lang/String \nL108:   invokeinterface InterfaceMethod java/util/List toArray ([Ljava/lang/Object;)[Ljava/lang/Object; 2 \nL113:   checkcast [Ljava/lang/String; \nL116:   checkcast [Ljava/lang/String; \nL119:   areturn \nL120:   \n        .linenumbertable \n            L0 49 \n            L8 52 \n            L12 53 \n            L14 54 \n            L23 55 \n            L24 56 \n            L33 57 \n            L39 58 \n            L49 59 \n            L60 60 \n            L73 61 \n            L87 64 \n            L90 67 \n            L93 65 \n            L94 66 \n            L103 68 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getMacAddress : (Ljava/lang/String;)Ljava/lang/String; \n    .code stack 4 locals 7 \nL0:     ldc '' \nL2:     astore_2 \nL3:     new java/lang/StringBuffer \nL6:     dup \nL7:     invokespecial Method java/lang/StringBuffer <init> ()V \nL10:    astore_3 \n        .catch java/net/SocketException from L11 to L109 using L112 \n        .catch java/net/UnknownHostException from L11 to L109 using L122 \nL11:    aload_1 \nL12:    invokestatic Method java/net/InetAddress getByName (Ljava/lang/String;)Ljava/net/InetAddress; \nL15:    invokestatic Method java/net/NetworkInterface getByInetAddress (Ljava/net/InetAddress;)Ljava/net/NetworkInterface; \nL18:    astore 4 \nL20:    aload 4 \nL22:    invokevirtual Method java/net/NetworkInterface getHardwareAddress ()[B \nL25:    astore 5 \nL27:    iconst_0 \nL28:    istore 6 \n\n        .stack full \n            locals Object NetworkUtil Object java/lang/String Object java/lang/String Object java/lang/StringBuffer Object java/net/NetworkInterface Object [B Integer \n            stack \n        .end stack \nL30:    iload 6 \nL32:    aload 5 \nL34:    arraylength \nL35:    if_icmpge L109 \nL38:    aload 5 \nL40:    iload 6 \nL42:    baload \nL43:    sipush 255 \nL46:    iand \nL47:    invokestatic Method java/lang/Integer toHexString (I)Ljava/lang/String; \nL50:    astore_2 \nL51:    aload_2 \nL52:    invokevirtual Method java/lang/String length ()I \nL55:    iconst_1 \nL56:    if_icmpne L79 \nL59:    new java/lang/StringBuilder \nL62:    dup \nL63:    invokespecial Method java/lang/StringBuilder <init> ()V \nL66:    bipush 48 \nL68:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL71:    aload_2 \nL72:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL75:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL78:    astore_2 \n\n        .stack same \nL79:    aload_3 \nL80:    new java/lang/StringBuilder \nL83:    dup \nL84:    invokespecial Method java/lang/StringBuilder <init> ()V \nL87:    aload_2 \nL88:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL91:    ldc '-' \nL93:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL96:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL99:    invokevirtual Method java/lang/StringBuffer append (Ljava/lang/String;)Ljava/lang/StringBuffer; \nL102:   pop \nL103:   iinc 6 1 \nL106:   goto L30 \n\n        .stack chop 3 \nL109:   goto L129 \n\n        .stack stack_1 Object java/net/SocketException \nL112:   astore 4 \nL114:   aload 4 \nL116:   invokevirtual Method java/net/SocketException printStackTrace ()V \nL119:   goto L129 \n\n        .stack stack_1 Object java/net/UnknownHostException \nL122:   astore 4 \nL124:   aload 4 \nL126:   invokevirtual Method java/net/UnknownHostException printStackTrace ()V \n\n        .stack same \nL129:   aload_3 \nL130:   invokevirtual Method java/lang/StringBuffer toString ()Ljava/lang/String; \nL133:   astore_2 \nL134:   aload_2 \nL135:   iconst_0 \nL136:   aload_2 \nL137:   invokevirtual Method java/lang/String length ()I \nL140:   iconst_1 \nL141:   isub \nL142:   invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL145:   astore_2 \nL146:   aload_2 \nL147:   areturn \nL148:   \n        .linenumbertable \n            L0 72 \n            L3 73 \n            L11 75 \n            L12 76 \n            L15 75 \n            L20 77 \n            L27 78 \n            L38 79 \n            L51 80 \n            L59 81 \n            L79 83 \n            L103 78 \n            L109 89 \n            L112 85 \n            L114 86 \n            L119 89 \n            L122 87 \n            L124 88 \n            L129 90 \n            L134 91 \n            L146 92 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'NetworkUtil.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 02:53:34 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class NetworkUtil_ESTest extends NetworkUtil_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      NetworkUtil networkUtil0 = new NetworkUtil();\n      NetworkUtil.getLocationAddress();\n      String string0 = networkUtil0.getMacAddress(\"192.168.1.42\");\n      assertEquals(\"00-2a-00-2a-00-2a\", string0);\n      \n      String string1 = NetworkUtil.getLocationAddress();\n      assertEquals(\"192.168.1.42\", string1);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      NetworkUtil networkUtil0 = new NetworkUtil();\n      String string0 = \"172.Q]pW&`hwK`iV9Gc{l9\";\n      // Undeclared exception!\n      try { \n        NetworkUtil.isLanAddress(\"172.Q]pW&`hwK`iV9Gc{l9\");\n        fail(\"Expecting exception: NumberFormatException\");\n      \n      } catch(NumberFormatException e) {\n         //\n         // For input string: \\\"Q]pW&`hwK`iV9Gc{l9\\\"\n         //\n         verifyException(\"java.lang.NumberFormatException\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      NetworkUtil networkUtil0 = new NetworkUtil();\n      NetworkUtil.isLanAddress(\"\");\n      // Undeclared exception!\n      try { \n        networkUtil0.getMacAddress(\"\");\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"NetworkUtil\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      boolean boolean0 = NetworkUtil.isLocalhost(\"127.0.0.1\");\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      boolean boolean0 = NetworkUtil.isLanAddress(\"192.168.1.42\");\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      boolean boolean0 = NetworkUtil.isLanAddress(\"10.192.168.1.42\");\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      boolean boolean0 = NetworkUtil.isLocalhost(\"192.168.1.42\");\n      assertFalse(boolean0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 02:53:34 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class NetworkUtil_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"NetworkUtil\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmphvmfn1lk\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NetworkUtil_ESTest_scaffolding.class.getClassLoader() ,\n      \"NetworkUtil\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NetworkUtil_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"NetworkUtil\"\n    );\n  }\n}\n", "class_idx": 118}
{"class_name": "BuildConfig", "java_source": "/** Automatically generated file. DO NOT MODIFY */\npublic final class BuildConfig {\n  public static final boolean DEBUG = true;\n}\n", "jasm_code": ".version 52 0 \n.class public final super BuildConfig \n.super java/lang/Object \n.field public static final DEBUG Z = 1 \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 4 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'BuildConfig.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 14:23:12 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class BuildConfig_ESTest extends BuildConfig_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      BuildConfig buildConfig0 = new BuildConfig();\n      assertTrue(BuildConfig.DEBUG);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 14:23:12 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class BuildConfig_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"BuildConfig\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp84f9kvsg\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BuildConfig_ESTest_scaffolding.class.getClassLoader() ,\n      \"BuildConfig\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BuildConfig_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"BuildConfig\"\n    );\n  }\n}\n", "class_idx": 119}
{"class_name": "FilePaths", "java_source": "/**\n * @author Paraskevas Eleftherios\n * @version 2015.07.13_1404\n */\npublic class FilePaths {\n\n  // Root folders\n  public static String DEFAULT_ROOT_PATH = \"/home/deppych/public_html/evo_com/\";\n  public static String DATA_PARENT_FOLDER = \"data/\";\n\n  // Source paths (DBs, files, etc)\n  public static String DBs_FOLDER = \"dbs/\";\n  public static String BACKEND_LOCATION = \"backend/\";\n  public static String LUCENE_FOLDER = \"/lucene/\";\n  public static String MONGO_FOLDER = \"mongo/\";\n  public static String NEO_FOLDER = \"/neo/neo-db\";\n  public static String NEO_FOR_LUCENE_FOLDER = \"/neo/neo-lucene\";\n  public static String TIMESTEP_INDEX_FILE = \"/TIMESTEP_INDEX\";\n  public static String COMMUNITIES_EVOLUTION_FILE = \"/communities_evolution\";\n  public static String TIMEFRAMES_FILE = \"/timeframes\";\n  public static String EVOL_RESULTS_FILE = \"/results\";\n  public static String STOP_WORDS_FILE = \"/stopwords\";\n\n  // Target folders (Metafiles, files, etc)\n  public static String METAFILES_FOLDER = \"meta/\";\n  public static String ENTIRE_FOLDER = \"/entire/\";\n  public static String GEXF_FOLDER = \"/gexf/\";\n  public static String JSON_FOLDER = \"/json/\";\n  public static String STATISTICS_FOLDER = \"/statistics\";\n  public static String EVENTWHEEL_FOLDER = \"/eventwheel/\";\n  public static String HASHTAGS_JSON = \"/hashtags.json\";\n  public static String URLS_JSON = \"/urls.json\";\n  public static String TERMS_JSON = \"/terms.json\";\n  public static String TIMEFRAMES_LIST_FILE = \"/timeframes_list\";\n  public static String HISTOGRAM_CSV = \"/histogram.csv\";\n  public static String SIZE_OF_COMMUNITIES_CSV = \"/sizeOfCom.csv\";\n  public static String PIE_JSON = \"/pie.json\";\n  public static String TIMELINE_JSON = \"/timeline.json\";\n  public static String LONGEST_CHAINS_FILE = \"/chains\";\n\n  // Custom extensions\n  public static String METAFILES_EXT = \".metaf\";\n\n  // Separator\n  public static String SEPARATOR = \"/\";\n}\n", "jasm_code": ".version 52 0 \n.class public super FilePaths \n.super java/lang/Object \n.field public static DEFAULT_ROOT_PATH Ljava/lang/String; \n.field public static DATA_PARENT_FOLDER Ljava/lang/String; \n.field public static DBs_FOLDER Ljava/lang/String; \n.field public static BACKEND_LOCATION Ljava/lang/String; \n.field public static LUCENE_FOLDER Ljava/lang/String; \n.field public static MONGO_FOLDER Ljava/lang/String; \n.field public static NEO_FOLDER Ljava/lang/String; \n.field public static NEO_FOR_LUCENE_FOLDER Ljava/lang/String; \n.field public static TIMESTEP_INDEX_FILE Ljava/lang/String; \n.field public static COMMUNITIES_EVOLUTION_FILE Ljava/lang/String; \n.field public static TIMEFRAMES_FILE Ljava/lang/String; \n.field public static EVOL_RESULTS_FILE Ljava/lang/String; \n.field public static STOP_WORDS_FILE Ljava/lang/String; \n.field public static METAFILES_FOLDER Ljava/lang/String; \n.field public static ENTIRE_FOLDER Ljava/lang/String; \n.field public static GEXF_FOLDER Ljava/lang/String; \n.field public static JSON_FOLDER Ljava/lang/String; \n.field public static STATISTICS_FOLDER Ljava/lang/String; \n.field public static EVENTWHEEL_FOLDER Ljava/lang/String; \n.field public static HASHTAGS_JSON Ljava/lang/String; \n.field public static URLS_JSON Ljava/lang/String; \n.field public static TERMS_JSON Ljava/lang/String; \n.field public static TIMEFRAMES_LIST_FILE Ljava/lang/String; \n.field public static HISTOGRAM_CSV Ljava/lang/String; \n.field public static SIZE_OF_COMMUNITIES_CSV Ljava/lang/String; \n.field public static PIE_JSON Ljava/lang/String; \n.field public static TIMELINE_JSON Ljava/lang/String; \n.field public static LONGEST_CHAINS_FILE Ljava/lang/String; \n.field public static METAFILES_EXT Ljava/lang/String; \n.field public static SEPARATOR Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 1 locals 0 \nL0:     ldc '/home/deppych/public_html/evo_com/' \nL2:     putstatic Field FilePaths DEFAULT_ROOT_PATH Ljava/lang/String; \nL5:     ldc 'data/' \nL7:     putstatic Field FilePaths DATA_PARENT_FOLDER Ljava/lang/String; \nL10:    ldc 'dbs/' \nL12:    putstatic Field FilePaths DBs_FOLDER Ljava/lang/String; \nL15:    ldc 'backend/' \nL17:    putstatic Field FilePaths BACKEND_LOCATION Ljava/lang/String; \nL20:    ldc '/lucene/' \nL22:    putstatic Field FilePaths LUCENE_FOLDER Ljava/lang/String; \nL25:    ldc 'mongo/' \nL27:    putstatic Field FilePaths MONGO_FOLDER Ljava/lang/String; \nL30:    ldc '/neo/neo-db' \nL32:    putstatic Field FilePaths NEO_FOLDER Ljava/lang/String; \nL35:    ldc '/neo/neo-lucene' \nL37:    putstatic Field FilePaths NEO_FOR_LUCENE_FOLDER Ljava/lang/String; \nL40:    ldc '/TIMESTEP_INDEX' \nL42:    putstatic Field FilePaths TIMESTEP_INDEX_FILE Ljava/lang/String; \nL45:    ldc '/communities_evolution' \nL47:    putstatic Field FilePaths COMMUNITIES_EVOLUTION_FILE Ljava/lang/String; \nL50:    ldc '/timeframes' \nL52:    putstatic Field FilePaths TIMEFRAMES_FILE Ljava/lang/String; \nL55:    ldc '/results' \nL57:    putstatic Field FilePaths EVOL_RESULTS_FILE Ljava/lang/String; \nL60:    ldc '/stopwords' \nL62:    putstatic Field FilePaths STOP_WORDS_FILE Ljava/lang/String; \nL65:    ldc 'meta/' \nL67:    putstatic Field FilePaths METAFILES_FOLDER Ljava/lang/String; \nL70:    ldc '/entire/' \nL72:    putstatic Field FilePaths ENTIRE_FOLDER Ljava/lang/String; \nL75:    ldc '/gexf/' \nL77:    putstatic Field FilePaths GEXF_FOLDER Ljava/lang/String; \nL80:    ldc '/json/' \nL82:    putstatic Field FilePaths JSON_FOLDER Ljava/lang/String; \nL85:    ldc '/statistics' \nL87:    putstatic Field FilePaths STATISTICS_FOLDER Ljava/lang/String; \nL90:    ldc '/eventwheel/' \nL92:    putstatic Field FilePaths EVENTWHEEL_FOLDER Ljava/lang/String; \nL95:    ldc '/hashtags.json' \nL97:    putstatic Field FilePaths HASHTAGS_JSON Ljava/lang/String; \nL100:   ldc '/urls.json' \nL102:   putstatic Field FilePaths URLS_JSON Ljava/lang/String; \nL105:   ldc '/terms.json' \nL107:   putstatic Field FilePaths TERMS_JSON Ljava/lang/String; \nL110:   ldc '/timeframes_list' \nL112:   putstatic Field FilePaths TIMEFRAMES_LIST_FILE Ljava/lang/String; \nL115:   ldc '/histogram.csv' \nL117:   putstatic Field FilePaths HISTOGRAM_CSV Ljava/lang/String; \nL120:   ldc '/sizeOfCom.csv' \nL122:   putstatic Field FilePaths SIZE_OF_COMMUNITIES_CSV Ljava/lang/String; \nL125:   ldc '/pie.json' \nL127:   putstatic Field FilePaths PIE_JSON Ljava/lang/String; \nL130:   ldc '/timeline.json' \nL132:   putstatic Field FilePaths TIMELINE_JSON Ljava/lang/String; \nL135:   ldc '/chains' \nL137:   putstatic Field FilePaths LONGEST_CHAINS_FILE Ljava/lang/String; \nL140:   ldc '.metaf' \nL142:   putstatic Field FilePaths METAFILES_EXT Ljava/lang/String; \nL145:   ldc '/' \nL147:   putstatic Field FilePaths SEPARATOR Ljava/lang/String; \nL150:   return \nL151:   \n        .linenumbertable \n            L0 11 \n            L5 12 \n            L10 15 \n            L15 16 \n            L20 17 \n            L25 18 \n            L30 19 \n            L35 20 \n            L40 21 \n            L45 22 \n            L50 23 \n            L55 24 \n            L60 25 \n            L65 28 \n            L70 29 \n            L75 30 \n            L80 31 \n            L85 32 \n            L90 33 \n            L95 34 \n            L100 35 \n            L105 36 \n            L110 37 \n            L115 38 \n            L120 39 \n            L125 40 \n            L130 41 \n            L135 42 \n            L140 45 \n            L145 48 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'FilePaths.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 10:22:36 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class FilePaths_ESTest extends FilePaths_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      FilePaths filePaths0 = new FilePaths();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 10:22:36 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class FilePaths_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"FilePaths\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp30i1rw5g\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FilePaths_ESTest_scaffolding.class.getClassLoader() ,\n      \"FilePaths\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FilePaths_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"FilePaths\"\n    );\n  }\n}\n", "class_idx": 120}
{"class_name": "Home", "java_source": "/**\n * Copyright (c) 2010-2020 Contributors to the openHAB project\n *\n * <p>See the NOTICE file(s) distributed with this work for additional information.\n *\n * <p>This program and the accompanying materials are made available under the terms of the Eclipse\n * Public License 2.0 which is available at http://www.eclipse.org/legal/epl-2.0\n *\n * <p>SPDX-License-Identifier: EPL-2.0\n */\nimport java.util.Map;\n\n/**\n * {@link Home} refers to the \"Home\" screen of a pool controller.\n *\n * @author Dan Cunningham - Initial contribution\n */\npublic class Home {\n\n  private String status;\n\n  private String response;\n\n  private String systemType;\n\n  private String tempScale;\n\n  private String spaTemp;\n\n  private String poolTemp;\n\n  private String airTemp;\n\n  private String spaSetPoint;\n\n  private String poolSetPoint;\n\n  private String coverPool;\n\n  private String freezeProtection;\n\n  private String spaPump;\n\n  private String poolPump;\n\n  private String spaHeater;\n\n  private String poolHeater;\n\n  private String solarHeater;\n\n  private String spaSalinity;\n\n  private String poolSalinity;\n\n  private String orp;\n\n  private String ph;\n\n  private Map<String, String> serializedMap;\n\n  public String getStatus() {\n    return status;\n  }\n\n  public void setStatus(String status) {\n    this.status = status;\n  }\n\n  public String getResponse() {\n    return response;\n  }\n\n  public void setResponse(String response) {\n    this.response = response;\n  }\n\n  public String getSystemType() {\n    return systemType;\n  }\n\n  public void setSystemType(String systemType) {\n    this.systemType = systemType;\n  }\n\n  public String getTempScale() {\n    return tempScale;\n  }\n\n  public void setTempScale(String tempScale) {\n    this.tempScale = tempScale;\n  }\n\n  public String getSpaTemp() {\n    return spaTemp;\n  }\n\n  public void setSpaTemp(String spaTemp) {\n    this.spaTemp = spaTemp;\n  }\n\n  public String getPoolTemp() {\n    return poolTemp;\n  }\n\n  public void setPoolTemp(String poolTemp) {\n    this.poolTemp = poolTemp;\n  }\n\n  public String getAirTemp() {\n    return airTemp;\n  }\n\n  public void setAirTemp(String airTemp) {\n    this.airTemp = airTemp;\n  }\n\n  public String getSpaSetPoint() {\n    return spaSetPoint;\n  }\n\n  public void setSpaSetPoint(String spaSetPoint) {\n    this.spaSetPoint = spaSetPoint;\n  }\n\n  public String getPoolSetPoint() {\n    return poolSetPoint;\n  }\n\n  public void setPoolSetPoint(String poolSetPoint) {\n    this.poolSetPoint = poolSetPoint;\n  }\n\n  public String getCoverPool() {\n    return coverPool;\n  }\n\n  public void setCoverPool(String coverPool) {\n    this.coverPool = coverPool;\n  }\n\n  public String getFreezeProtection() {\n    return freezeProtection;\n  }\n\n  public void setFreezeProtection(String freezeProtection) {\n    this.freezeProtection = freezeProtection;\n  }\n\n  public String getSpaPump() {\n    return spaPump;\n  }\n\n  public void setSpaPump(String spaPump) {\n    this.spaPump = spaPump;\n  }\n\n  public String getPoolPump() {\n    return poolPump;\n  }\n\n  public void setPoolPump(String poolPump) {\n    this.poolPump = poolPump;\n  }\n\n  public String getSpaHeater() {\n    return spaHeater;\n  }\n\n  public void setSpaHeater(String spaHeater) {\n    this.spaHeater = spaHeater;\n  }\n\n  public String getPoolHeater() {\n    return poolHeater;\n  }\n\n  public void setPoolHeater(String poolHeater) {\n    this.poolHeater = poolHeater;\n  }\n\n  public String getSolarHeater() {\n    return solarHeater;\n  }\n\n  public void setSolarHeater(String solarHeater) {\n    this.solarHeater = solarHeater;\n  }\n\n  public String getSpaSalinity() {\n    return spaSalinity;\n  }\n\n  public void setSpaSalinity(String spaSalinity) {\n    this.spaSalinity = spaSalinity;\n  }\n\n  public String getPoolSalinity() {\n    return poolSalinity;\n  }\n\n  public void setPoolSalinity(String poolSalinity) {\n    this.poolSalinity = poolSalinity;\n  }\n\n  public String getOrp() {\n    return orp;\n  }\n\n  public void setOrp(String orp) {\n    this.orp = orp;\n  }\n\n  public String getPh() {\n    return ph;\n  }\n\n  public void setPh(String ph) {\n    this.ph = ph;\n  }\n\n  public Map<String, String> getSerializedMap() {\n    return serializedMap;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Home \n.super java/lang/Object \n.field private status Ljava/lang/String; \n.field private response Ljava/lang/String; \n.field private systemType Ljava/lang/String; \n.field private tempScale Ljava/lang/String; \n.field private spaTemp Ljava/lang/String; \n.field private poolTemp Ljava/lang/String; \n.field private airTemp Ljava/lang/String; \n.field private spaSetPoint Ljava/lang/String; \n.field private poolSetPoint Ljava/lang/String; \n.field private coverPool Ljava/lang/String; \n.field private freezeProtection Ljava/lang/String; \n.field private spaPump Ljava/lang/String; \n.field private poolPump Ljava/lang/String; \n.field private spaHeater Ljava/lang/String; \n.field private poolHeater Ljava/lang/String; \n.field private solarHeater Ljava/lang/String; \n.field private spaSalinity Ljava/lang/String; \n.field private poolSalinity Ljava/lang/String; \n.field private orp Ljava/lang/String; \n.field private ph Ljava/lang/String; \n.field private serializedMap Ljava/util/Map; .fieldattributes \n    .signature Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>; \n.end fieldattributes \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getStatus : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home status Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 68 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setStatus : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home status Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 72 \n            L5 73 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getResponse : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home response Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 76 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setResponse : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home response Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 80 \n            L5 81 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSystemType : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home systemType Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 84 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setSystemType : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home systemType Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 88 \n            L5 89 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getTempScale : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home tempScale Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 92 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setTempScale : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home tempScale Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 96 \n            L5 97 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSpaTemp : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home spaTemp Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 100 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setSpaTemp : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home spaTemp Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 104 \n            L5 105 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPoolTemp : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home poolTemp Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 108 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPoolTemp : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home poolTemp Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 112 \n            L5 113 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getAirTemp : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home airTemp Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 116 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setAirTemp : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home airTemp Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 120 \n            L5 121 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSpaSetPoint : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home spaSetPoint Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 124 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setSpaSetPoint : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home spaSetPoint Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 128 \n            L5 129 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPoolSetPoint : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home poolSetPoint Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 132 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPoolSetPoint : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home poolSetPoint Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 136 \n            L5 137 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCoverPool : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home coverPool Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 140 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCoverPool : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home coverPool Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 144 \n            L5 145 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFreezeProtection : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home freezeProtection Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 148 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setFreezeProtection : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home freezeProtection Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 152 \n            L5 153 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSpaPump : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home spaPump Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 156 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setSpaPump : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home spaPump Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 160 \n            L5 161 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPoolPump : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home poolPump Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 164 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPoolPump : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home poolPump Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 168 \n            L5 169 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSpaHeater : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home spaHeater Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 172 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setSpaHeater : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home spaHeater Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 176 \n            L5 177 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPoolHeater : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home poolHeater Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 180 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPoolHeater : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home poolHeater Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 184 \n            L5 185 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSolarHeater : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home solarHeater Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 188 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setSolarHeater : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home solarHeater Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 192 \n            L5 193 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSpaSalinity : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home spaSalinity Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 196 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setSpaSalinity : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home spaSalinity Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 200 \n            L5 201 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPoolSalinity : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home poolSalinity Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 204 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPoolSalinity : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home poolSalinity Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 208 \n            L5 209 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getOrp : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home orp Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 212 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setOrp : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home orp Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 216 \n            L5 217 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPh : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home ph Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 220 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPh : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Home ph Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 224 \n            L5 225 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSerializedMap : ()Ljava/util/Map; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Home serializedMap Ljava/util/Map; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 228 \n        .end linenumbertable \n    .end code \n    .signature ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>; \n.end method \n.sourcefile 'Home.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 06:54:01 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.Map;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Home_ESTest extends Home_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setTempScale(\")7tKyFDV%3-8a\");\n      String string0 = home0.getTempScale();\n      assertEquals(\")7tKyFDV%3-8a\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setSystemType(\"{\");\n      String string0 = home0.getSystemType();\n      assertEquals(\"{\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setSystemType(\"\");\n      String string0 = home0.getSystemType();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setStatus(\"n'7Fq]7\");\n      String string0 = home0.getStatus();\n      assertEquals(\"n'7Fq]7\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setStatus(\"\");\n      String string0 = home0.getStatus();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setSpaTemp(\"[WbDyEu5G1\");\n      String string0 = home0.getSpaTemp();\n      assertEquals(\"[WbDyEu5G1\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setSpaTemp(\"\");\n      String string0 = home0.getSpaTemp();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setSpaSetPoint(\"{\");\n      String string0 = home0.getSpaSetPoint();\n      assertEquals(\"{\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setSpaSetPoint(\"\");\n      String string0 = home0.getSpaSetPoint();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setSpaSalinity(\"PQ!6n}E4v9w:d\");\n      String string0 = home0.getSpaSalinity();\n      assertEquals(\"PQ!6n}E4v9w:d\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setSpaSalinity(\"\");\n      String string0 = home0.getSpaSalinity();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setSpaPump(\"<{Ua\");\n      String string0 = home0.getSpaPump();\n      assertEquals(\"<{Ua\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setSpaPump(\"\");\n      String string0 = home0.getSpaPump();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setSpaHeater(\"v8sIYHWQ_l\");\n      String string0 = home0.getSpaHeater();\n      assertEquals(\"v8sIYHWQ_l\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setSpaHeater(\"\");\n      String string0 = home0.getSpaHeater();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setSolarHeater(\"mGdUG\");\n      String string0 = home0.getSolarHeater();\n      assertEquals(\"mGdUG\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setSolarHeater(\"\");\n      String string0 = home0.getSolarHeater();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setResponse(\"q2Brjula-@%N6SUi\");\n      String string0 = home0.getResponse();\n      assertEquals(\"q2Brjula-@%N6SUi\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setPoolTemp(\"0^92N#Z[z..Y(:$\");\n      String string0 = home0.getPoolTemp();\n      assertEquals(\"0^92N#Z[z..Y(:$\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setPoolSetPoint(\"?f7v|EMYvp^T{TE.Q\");\n      String string0 = home0.getPoolSetPoint();\n      assertEquals(\"?f7v|EMYvp^T{TE.Q\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setPoolSalinity(\"*z)Z0kTC=ek,3DW\");\n      String string0 = home0.getPoolSalinity();\n      assertEquals(\"*z)Z0kTC=ek,3DW\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setPoolPump(\"4wee]7$byq'DPIM<E\");\n      String string0 = home0.getPoolPump();\n      assertEquals(\"4wee]7$byq'DPIM<E\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test22()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setPoolHeater(\"($wA1q+5Cg[\");\n      String string0 = home0.getPoolHeater();\n      assertEquals(\"($wA1q+5Cg[\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test23()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setPh(\"Home\");\n      String string0 = home0.getPh();\n      assertEquals(\"Home\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test24()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setPh(\"\");\n      String string0 = home0.getPh();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test25()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setOrp(\"W<<Wod7\");\n      String string0 = home0.getOrp();\n      assertEquals(\"W<<Wod7\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test26()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setFreezeProtection(\"1Gu/~|]$Sseu\");\n      String string0 = home0.getFreezeProtection();\n      assertEquals(\"1Gu/~|]$Sseu\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test27()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setCoverPool(\"7ga]OLG\");\n      String string0 = home0.getCoverPool();\n      assertEquals(\"7ga]OLG\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test28()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setAirTemp(\"?f7v|EMYvp^T{TE.Q\");\n      String string0 = home0.getAirTemp();\n      assertEquals(\"?f7v|EMYvp^T{TE.Q\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test29()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getCoverPool();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test30()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getOrp();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test31()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getPoolHeater();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test32()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setCoverPool(\"\");\n      String string0 = home0.getCoverPool();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test33()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getSpaPump();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test34()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getPh();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test35()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getSpaHeater();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test36()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setPoolTemp(\"\");\n      String string0 = home0.getPoolTemp();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test37()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setPoolSetPoint(\"\");\n      String string0 = home0.getPoolSetPoint();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test38()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setAirTemp(\"\");\n      String string0 = home0.getAirTemp();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test39()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getSpaTemp();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test40()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setFreezeProtection(\"\");\n      String string0 = home0.getFreezeProtection();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test41()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getResponse();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test42()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getTempScale();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test43()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getSpaSalinity();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test44()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getSolarHeater();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test45()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getFreezeProtection();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test46()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getSystemType();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test47()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setResponse(\"\");\n      String string0 = home0.getResponse();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test48()  throws Throwable  {\n      Home home0 = new Home();\n      Map<String, String> map0 = home0.getSerializedMap();\n      assertNull(map0);\n  }\n\n  @Test(timeout = 4000)\n  public void test49()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getSpaSetPoint();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test50()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setPoolSalinity(\"\");\n      String string0 = home0.getPoolSalinity();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test51()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setPoolHeater(\"\");\n      String string0 = home0.getPoolHeater();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test52()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setPoolPump(\"\");\n      String string0 = home0.getPoolPump();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test53()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getStatus();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test54()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getPoolSetPoint();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test55()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setOrp(\"\");\n      String string0 = home0.getOrp();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test56()  throws Throwable  {\n      Home home0 = new Home();\n      home0.setTempScale(\"\");\n      String string0 = home0.getTempScale();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test57()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getPoolSalinity();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test58()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getPoolTemp();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test59()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getPoolPump();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test60()  throws Throwable  {\n      Home home0 = new Home();\n      String string0 = home0.getAirTemp();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 06:54:01 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Home_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Home\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpypl_qcfo\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Home_ESTest_scaffolding.class.getClassLoader() ,\n      \"Home\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Home_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Home\"\n    );\n  }\n}\n", "class_idx": 121}
{"class_name": "Orgnization", "java_source": "public class Orgnization {\n  private Long id;\n\n  public Long getId() {\n    return id;\n  }\n\n  public void setId(Long id) {\n    this.id = id;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Orgnization \n.super java/lang/Object \n.field private id Ljava/lang/Long; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getId : ()Ljava/lang/Long; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Orgnization id Ljava/lang/Long; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 7 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setId : (Ljava/lang/Long;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Orgnization id Ljava/lang/Long; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 11 \n            L5 12 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Orgnization.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 09:09:20 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Orgnization_ESTest extends Orgnization_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Orgnization orgnization0 = new Orgnization();\n      Long long0 = new Long((-1L));\n      orgnization0.setId(long0);\n      Long long1 = orgnization0.getId();\n      assertEquals((-1L), (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Orgnization orgnization0 = new Orgnization();\n      Long long0 = new Long(0L);\n      orgnization0.setId(long0);\n      Long long1 = orgnization0.getId();\n      assertEquals(0L, (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Orgnization orgnization0 = new Orgnization();\n      Long long0 = new Long(1L);\n      orgnization0.setId(long0);\n      Long long1 = orgnization0.getId();\n      assertEquals(1L, (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Orgnization orgnization0 = new Orgnization();\n      Long long0 = orgnization0.getId();\n      assertNull(long0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 09:09:20 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Orgnization_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Orgnization\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpa6oc0r8e\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Orgnization_ESTest_scaffolding.class.getClassLoader() ,\n      \"Orgnization\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Orgnization_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Orgnization\"\n    );\n  }\n}\n", "class_idx": 122}
{"class_name": "CaesarCipher", "java_source": "/*\nCTF Toolkit - Useful Tools for CTF Competitions\n\nCopyright (C) 2015 by Zachary Taylor <ztaylor54@gmail.com>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\npublic class CaesarCipher {\n  /**\n   * An implementation of the Caesar cipher, one that is commonly used in many CTFs.\n   *\n   * @param amount The amount you would like to shift by, negative for left-shift\n   * @param beginningString The string you would like to \"encrypt\"\n   * @return The \"encrypted\" string\n   */\n  public static String caesar(int amount, String beginningString) {\n    String endString = \"\";\n    amount = amount % 26;\n    if (amount == 0) return beginningString;\n    for (char i : beginningString.toCharArray()) {\n      if (Character.isAlphabetic(i)) {\n        char newCharacter = (char) (i + amount);\n        if ((Character.isLowerCase(i) && !Character.isLowerCase(newCharacter))) {\n          newCharacter =\n              amount > 0\n                  ? (char) ('a' - 1 + (newCharacter - 'z'))\n                  : (char) ('z' + 1 - ('a' - newCharacter));\n        } else if ((Character.isUpperCase(i) && !Character.isUpperCase(newCharacter))) {\n          newCharacter =\n              amount > 0\n                  ? (char) ('A' - 1 + (newCharacter - 'Z'))\n                  : (char) ('Z' + 1 - ('A' - newCharacter));\n        }\n        endString += newCharacter;\n      } else {\n        endString += i;\n      }\n    }\n    return endString;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super CaesarCipher \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 22 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static caesar : (ILjava/lang/String;)Ljava/lang/String; \n    .code stack 3 locals 8 \nL0:     ldc '' \nL2:     astore_2 \nL3:     iload_0 \nL4:     bipush 26 \nL6:     irem \nL7:     istore_0 \nL8:     iload_0 \nL9:     ifne L14 \nL12:    aload_1 \nL13:    areturn \n\n        .stack append Object java/lang/String \nL14:    aload_1 \nL15:    invokevirtual Method java/lang/String toCharArray ()[C \nL18:    astore_3 \nL19:    aload_3 \nL20:    arraylength \nL21:    istore 4 \nL23:    iconst_0 \nL24:    istore 5 \n\n        .stack append Object [C Integer Integer \nL26:    iload 5 \nL28:    iload 4 \nL30:    if_icmpge L192 \nL33:    aload_3 \nL34:    iload 5 \nL36:    caload \nL37:    istore 6 \nL39:    iload 6 \nL41:    invokestatic Method java/lang/Character isAlphabetic (I)Z \nL44:    ifeq L166 \nL47:    iload 6 \nL49:    iload_0 \nL50:    iadd \nL51:    i2c \nL52:    istore 7 \nL54:    iload 6 \nL56:    invokestatic Method java/lang/Character isLowerCase (C)Z \nL59:    ifeq L100 \nL62:    iload 7 \nL64:    invokestatic Method java/lang/Character isLowerCase (C)Z \nL67:    ifne L100 \nL70:    iload_0 \nL71:    ifle L86 \nL74:    bipush 96 \nL76:    iload 7 \nL78:    bipush 122 \nL80:    isub \nL81:    iadd \nL82:    i2c \nL83:    goto L95 \n\n        .stack append Integer Integer \nL86:    bipush 123 \nL88:    bipush 97 \nL90:    iload 7 \nL92:    isub \nL93:    isub \nL94:    i2c \n\n        .stack stack_1 Integer \nL95:    istore 7 \nL97:    goto L143 \n\n        .stack same \nL100:   iload 6 \nL102:   invokestatic Method java/lang/Character isUpperCase (C)Z \nL105:   ifeq L143 \nL108:   iload 7 \nL110:   invokestatic Method java/lang/Character isUpperCase (C)Z \nL113:   ifne L143 \nL116:   iload_0 \nL117:   ifle L132 \nL120:   bipush 64 \nL122:   iload 7 \nL124:   bipush 90 \nL126:   isub \nL127:   iadd \nL128:   i2c \nL129:   goto L141 \n\n        .stack same \nL132:   bipush 91 \nL134:   bipush 65 \nL136:   iload 7 \nL138:   isub \nL139:   isub \nL140:   i2c \n\n        .stack stack_1 Integer \nL141:   istore 7 \n\n        .stack same \nL143:   new java/lang/StringBuilder \nL146:   dup \nL147:   invokespecial Method java/lang/StringBuilder <init> ()V \nL150:   aload_2 \nL151:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL154:   iload 7 \nL156:   invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL159:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL162:   astore_2 \nL163:   goto L186 \n\n        .stack chop 1 \nL166:   new java/lang/StringBuilder \nL169:   dup \nL170:   invokespecial Method java/lang/StringBuilder <init> ()V \nL173:   aload_2 \nL174:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL177:   iload 6 \nL179:   invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL182:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL185:   astore_2 \n\n        .stack chop 1 \nL186:   iinc 5 1 \nL189:   goto L26 \n\n        .stack chop 3 \nL192:   aload_2 \nL193:   areturn \nL194:   \n        .linenumbertable \n            L0 31 \n            L3 32 \n            L8 33 \n            L14 34 \n            L39 35 \n            L47 36 \n            L54 37 \n            L70 38 \n            L100 41 \n            L116 42 \n            L143 46 \n            L163 47 \n            L166 48 \n            L186 34 \n            L192 51 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'CaesarCipher.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 13:09:36 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CaesarCipher_ESTest extends CaesarCipher_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String string0 = CaesarCipher.caesar(0, (String) null);\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      String string0 = CaesarCipher.caesar((-13271), \"CaesarCipher\");\n      assertEquals(\"RpthpgRxewtg\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      String string0 = CaesarCipher.caesar(36243, \"a\u007fn<(1JcpX,_#v{Qq\");\n      assertEquals(\"z\u007fm<(1IboW,_#u{Pp\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      String string0 = CaesarCipher.caesar((-42399), \"f%v[m-75<\u007f{1\\\"\");\n      assertEquals(\"m%c[t-75<\u007f{1\\\"\", string0);\n      \n      String string1 = CaesarCipher.caesar(1, \"4!7]RZ?\");\n      assertEquals(\"4!7]SA?\", string1);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      CaesarCipher.caesar(115909, \"4!7]QY?\");\n      CaesarCipher.caesar(0, \"CaesarCipher\");\n      String string0 = CaesarCipher.caesar((-42399), \"f%v[m-75<\u007f{1\\\"\");\n      assertEquals(\"m%c[t-75<\u007f{1\\\"\", string0);\n      \n      String string1 = CaesarCipher.caesar(1, \"4!7]RZ?\");\n      assertEquals(\"4!7]SA?\", string1);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      CaesarCipher.caesar(90, \"\");\n      CaesarCipher.caesar(0, \"CaesarCipher\");\n      String string0 = CaesarCipher.caesar((-42399), \"f%v[m-75<\u007f{1\\\"\");\n      assertEquals(\"m%c[t-75<\u007f{1\\\"\", string0);\n      \n      String string1 = CaesarCipher.caesar(1, \"4!7]RZ?\");\n      assertEquals(\"4!7]SA?\", string1);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      CaesarCipher caesarCipher0 = new CaesarCipher();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 13:09:36 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class CaesarCipher_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CaesarCipher\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpkdfghbg6\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CaesarCipher_ESTest_scaffolding.class.getClassLoader() ,\n      \"CaesarCipher\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CaesarCipher_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CaesarCipher\"\n    );\n  }\n}\n", "class_idx": 123}
{"class_name": "Services", "java_source": "public class Services {\n\n  private long serviceID;\n  private String serviceName;\n  private String serviceType;\n  private int enabled;\n  private int createdBy;\n  private String createTS;\n  private String lastUpdateTS;\n\n  public Services() {}\n\n  public Services(\n      int serviceID,\n      String serviceName,\n      String serviceType,\n      int enabled,\n      int createdBy,\n      String createTS,\n      String lastUpdateTS) {\n    this.serviceID = serviceID;\n    this.serviceName = serviceName;\n    this.serviceType = serviceType;\n    this.enabled = enabled;\n    this.createdBy = createdBy;\n    this.createTS = createTS;\n    this.lastUpdateTS = lastUpdateTS;\n  }\n\n  public long getServiceID() {\n    return serviceID;\n  }\n\n  public void setServiceID(long serviceID) {\n    this.serviceID = serviceID;\n  }\n\n  public String getServiceName() {\n    return serviceName;\n  }\n\n  public void setServiceName(String serviceName) {\n    this.serviceName = serviceName;\n  }\n\n  public String getServiceType() {\n    return serviceType;\n  }\n\n  public void setServiceType(String serviceType) {\n    this.serviceType = serviceType;\n  }\n\n  public int getEnabled() {\n    return enabled;\n  }\n\n  public void setEnabled(int enabled) {\n    this.enabled = enabled;\n  }\n\n  public int getCreatedBy() {\n    return createdBy;\n  }\n\n  public void setCreatedBy(int createdBy) {\n    this.createdBy = createdBy;\n  }\n\n  public String getCreateTS() {\n    return createTS;\n  }\n\n  public void setCreateTS(String createTS) {\n    this.createTS = createTS;\n  }\n\n  public String getLastUpdateTS() {\n    return lastUpdateTS;\n  }\n\n  public void setLastUpdateTS(String lastUpdateTS) {\n    this.lastUpdateTS = lastUpdateTS;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Services \n.super java/lang/Object \n.field private serviceID J \n.field private serviceName Ljava/lang/String; \n.field private serviceType Ljava/lang/String; \n.field private enabled I \n.field private createdBy I \n.field private createTS Ljava/lang/String; \n.field private lastUpdateTS Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 13 \n            L4 15 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (ILjava/lang/String;Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;)V \n    .code stack 3 locals 8 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     i2l \nL7:     putfield Field Services serviceID J \nL10:    aload_0 \nL11:    aload_2 \nL12:    putfield Field Services serviceName Ljava/lang/String; \nL15:    aload_0 \nL16:    aload_3 \nL17:    putfield Field Services serviceType Ljava/lang/String; \nL20:    aload_0 \nL21:    iload 4 \nL23:    putfield Field Services enabled I \nL26:    aload_0 \nL27:    iload 5 \nL29:    putfield Field Services createdBy I \nL32:    aload_0 \nL33:    aload 6 \nL35:    putfield Field Services createTS Ljava/lang/String; \nL38:    aload_0 \nL39:    aload 7 \nL41:    putfield Field Services lastUpdateTS Ljava/lang/String; \nL44:    return \nL45:    \n        .linenumbertable \n            L0 17 \n            L4 18 \n            L10 19 \n            L15 20 \n            L20 21 \n            L26 22 \n            L32 23 \n            L38 24 \n            L44 25 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getServiceID : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field Services serviceID J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setServiceID : (J)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     lload_1 \nL2:     putfield Field Services serviceID J \nL5:     return \nL6:     \n        .linenumbertable \n            L0 32 \n            L5 33 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getServiceName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Services serviceName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 36 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setServiceName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Services serviceName Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 40 \n            L5 41 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getServiceType : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Services serviceType Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 44 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setServiceType : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Services serviceType Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 48 \n            L5 49 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getEnabled : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Services enabled I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 52 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setEnabled : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field Services enabled I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 56 \n            L5 57 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCreatedBy : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Services createdBy I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 62 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCreatedBy : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field Services createdBy I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 66 \n            L5 67 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCreateTS : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Services createTS Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 70 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCreateTS : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Services createTS Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 74 \n            L5 75 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getLastUpdateTS : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Services lastUpdateTS Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 78 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setLastUpdateTS : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Services lastUpdateTS Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 82 \n            L5 83 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Services.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 15:39:18 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Services_ESTest extends Services_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      Services services0 = new Services();\n      services0.setServiceType(\"\");\n      String string0 = services0.getServiceType();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      Services services0 = new Services();\n      services0.setServiceName(\"4#_G:QPfT`\");\n      String string0 = services0.getServiceName();\n      assertEquals(\"4#_G:QPfT`\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      Services services0 = new Services((-51535), \"\", \"\", (-51535), 0, \"\", (String) null);\n      services0.getServiceName();\n      assertEquals((-51535L), services0.getServiceID());\n      assertEquals((-51535), services0.getEnabled());\n      assertEquals(0, services0.getCreatedBy());\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      Services services0 = new Services(21295, \"%\\\"RI6 DWCw|21Y`+' q\", \"%\\\"RI6 DWCw|21Y`+' q\", 21295, 21295, \"%\\\"RI6 DWCw|21Y`+' q\", \"dhN\");\n      long long0 = services0.getServiceID();\n      assertEquals(21295, services0.getEnabled());\n      assertEquals(21295, services0.getCreatedBy());\n      assertEquals(21295L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      Services services0 = new Services(21295, \"%\\\"RI6 DWCw|21Y`+' q\", \"%\\\"RI6 DWCw|21Y`+' q\", 21295, 21295, \"%\\\"RI6 DWCw|21Y`+' q\", \"dhN\");\n      services0.getLastUpdateTS();\n      assertEquals(21295, services0.getEnabled());\n      assertEquals(21295L, services0.getServiceID());\n      assertEquals(21295, services0.getCreatedBy());\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      Services services0 = new Services();\n      services0.setLastUpdateTS(\"\");\n      String string0 = services0.getLastUpdateTS();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      Services services0 = new Services();\n      services0.setEnabled(1);\n      int int0 = services0.getEnabled();\n      assertEquals(1, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Services services0 = new Services();\n      services0.setEnabled((-738));\n      int int0 = services0.getEnabled();\n      assertEquals((-738), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      Services services0 = new Services(59325, \"n\", (String) null, 0, 59325, \"n\", \"T\");\n      int int0 = services0.getCreatedBy();\n      assertEquals(0, services0.getEnabled());\n      assertEquals(59325, int0);\n      assertEquals(59325L, services0.getServiceID());\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      Services services0 = new Services((-20768), \"\", \"\", 0, (-20768), \"\", \"RybR|4@Hi\");\n      int int0 = services0.getCreatedBy();\n      assertEquals((-20768), int0);\n      assertEquals((-20768L), services0.getServiceID());\n      assertEquals(0, services0.getEnabled());\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      Services services0 = new Services(21295, \"%\\\"RI6 DWCw|21Y`+' q\", \"%\\\"RI6 DWCw|21Y`+' q\", 21295, 21295, \"%\\\"RI6 DWCw|21Y`+' q\", \"dhN\");\n      services0.getCreateTS();\n      assertEquals(21295, services0.getCreatedBy());\n      assertEquals(21295, services0.getEnabled());\n      assertEquals(21295L, services0.getServiceID());\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Services services0 = new Services();\n      services0.setCreateTS(\"\");\n      String string0 = services0.getCreateTS();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      Services services0 = new Services();\n      String string0 = services0.getServiceType();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      Services services0 = new Services();\n      services0.setServiceID((-1L));\n      long long0 = services0.getServiceID();\n      assertEquals((-1L), long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      Services services0 = new Services();\n      int int0 = services0.getCreatedBy();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      Services services0 = new Services();\n      services0.setCreatedBy(1);\n      assertEquals(1, services0.getCreatedBy());\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      Services services0 = new Services();\n      String string0 = services0.getCreateTS();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      Services services0 = new Services();\n      String string0 = services0.getServiceName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      Services services0 = new Services();\n      String string0 = services0.getLastUpdateTS();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      Services services0 = new Services();\n      services0.setServiceType(\"V@#+e\");\n      String string0 = services0.getServiceType();\n      assertEquals(\"V@#+e\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      Services services0 = new Services();\n      long long0 = services0.getServiceID();\n      assertEquals(0L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      Services services0 = new Services();\n      int int0 = services0.getEnabled();\n      assertEquals(0, int0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 15:39:18 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Services_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Services\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpgimobuwo\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Services_ESTest_scaffolding.class.getClassLoader() ,\n      \"Services\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Services_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Services\"\n    );\n  }\n}\n", "class_idx": 124}
{"class_name": "EBMenu", "java_source": "import java.util.HashMap;\n\npublic class EBMenu {\n  HashMap<String, Float> hm = new HashMap<String, Float>();\n\n  public EBMenu() {\n    super();\n\n    hm.put(\"steak\", (float) 15.99);\n    hm.put(\"chicken\", (float) 10.99);\n    hm.put(\"salad\", (float) 5.99);\n    hm.put(\"cookie\", (float) 8.99);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super EBMenu \n.super java/lang/Object \n.field hm Ljava/util/HashMap; .fieldattributes \n    .signature Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Float;>; \n.end fieldattributes \n\n.method public <init> : ()V \n    .code stack 3 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     new java/util/HashMap \nL8:     dup \nL9:     invokespecial Method java/util/HashMap <init> ()V \nL12:    putfield Field EBMenu hm Ljava/util/HashMap; \nL15:    aload_0 \nL16:    getfield Field EBMenu hm Ljava/util/HashMap; \nL19:    ldc 'steak' \nL21:    ldc +15.989999771118164f \nL23:    invokestatic Method java/lang/Float valueOf (F)Ljava/lang/Float; \nL26:    invokevirtual Method java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nL29:    pop \nL30:    aload_0 \nL31:    getfield Field EBMenu hm Ljava/util/HashMap; \nL34:    ldc 'chicken' \nL36:    ldc +10.989999771118164f \nL38:    invokestatic Method java/lang/Float valueOf (F)Ljava/lang/Float; \nL41:    invokevirtual Method java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nL44:    pop \nL45:    aload_0 \nL46:    getfield Field EBMenu hm Ljava/util/HashMap; \nL49:    ldc 'salad' \nL51:    ldc +5.989999771118164f \nL53:    invokestatic Method java/lang/Float valueOf (F)Ljava/lang/Float; \nL56:    invokevirtual Method java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nL59:    pop \nL60:    aload_0 \nL61:    getfield Field EBMenu hm Ljava/util/HashMap; \nL64:    ldc 'cookie' \nL66:    ldc +8.989999771118164f \nL68:    invokestatic Method java/lang/Float valueOf (F)Ljava/lang/Float; \nL71:    invokevirtual Method java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nL74:    pop \nL75:    return \nL76:    \n        .linenumbertable \n            L0 9 \n            L4 6 \n            L15 11 \n            L30 12 \n            L45 13 \n            L60 14 \n            L75 15 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'EBMenu.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 20:47:16 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class EBMenu_ESTest extends EBMenu_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      EBMenu eBMenu0 = new EBMenu();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 20:47:16 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class EBMenu_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"EBMenu\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp4rgb8sd4\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(EBMenu_ESTest_scaffolding.class.getClassLoader() ,\n      \"EBMenu\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(EBMenu_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"EBMenu\"\n    );\n  }\n}\n", "class_idx": 125}
{"class_name": "Tuple", "java_source": "public class Tuple {\n  public final String k;\n  public final Object v;\n\n  public Tuple(String k, Object v) {\n    this.k = k;\n    this.v = v;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Tuple \n.super java/lang/Object \n.field public final k Ljava/lang/String; \n.field public final v Ljava/lang/Object; \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/Object;)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field Tuple k Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field Tuple v Ljava/lang/Object; \nL14:    return \nL15:    \n        .linenumbertable \n            L0 6 \n            L4 7 \n            L9 8 \n            L14 9 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Tuple.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 15:43:32 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Tuple_ESTest extends Tuple_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Tuple tuple0 = new Tuple(\"\", \"\");\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 15:43:32 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Tuple_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Tuple\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpp0zjuhdv\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Tuple_ESTest_scaffolding.class.getClassLoader() ,\n      \"Tuple\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Tuple_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Tuple\"\n    );\n  }\n}\n", "class_idx": 126}
{"class_name": "CometBaseController", "java_source": "public class CometBaseController {}\n", "jasm_code": ".version 52 0 \n.class public super CometBaseController \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'CometBaseController.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 07:46:45 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CometBaseController_ESTest extends CometBaseController_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      CometBaseController cometBaseController0 = new CometBaseController();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 07:46:45 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class CometBaseController_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CometBaseController\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpwvagtxdg\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CometBaseController_ESTest_scaffolding.class.getClassLoader() ,\n      \"CometBaseController\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CometBaseController_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CometBaseController\"\n    );\n  }\n}\n", "class_idx": 127}
{"class_name": "MD5", "java_source": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\n\npublic class MD5 {\n\n  public static String getHash(String str) throws NoSuchAlgorithmException {\n\n    MessageDigest md5;\n    StringBuffer hexString = new StringBuffer();\n\n    try {\n\n      md5 = MessageDigest.getInstance(\"md5\");\n\n      md5.reset();\n      md5.update(str.getBytes());\n\n      byte messageDigest[] = md5.digest();\n\n      for (int i = 0; i < messageDigest.length; i++) {\n        hexString.append(Integer.toHexString(0xFF & messageDigest[i]));\n      }\n\n    } catch (NoSuchAlgorithmException e) {\n      throw e;\n    }\n\n    return hexString.toString();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super MD5 \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 25 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static getHash : (Ljava/lang/String;)Ljava/lang/String; \n    .code stack 4 locals 5 \nL0:     new java/lang/StringBuffer \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuffer <init> ()V \nL7:     astore_2 \n        .catch java/security/NoSuchAlgorithmException from L8 to L63 using L66 \nL8:     ldc 'md5' \nL10:    invokestatic Method java/security/MessageDigest getInstance (Ljava/lang/String;)Ljava/security/MessageDigest; \nL13:    astore_1 \nL14:    aload_1 \nL15:    invokevirtual Method java/security/MessageDigest reset ()V \nL18:    aload_1 \nL19:    aload_0 \nL20:    invokevirtual Method java/lang/String getBytes ()[B \nL23:    invokevirtual Method java/security/MessageDigest update ([B)V \nL26:    aload_1 \nL27:    invokevirtual Method java/security/MessageDigest digest ()[B \nL30:    astore_3 \nL31:    iconst_0 \nL32:    istore 4 \n\n        .stack full \n            locals Object java/lang/String Object java/security/MessageDigest Object java/lang/StringBuffer Object [B Integer \n            stack \n        .end stack \nL34:    iload 4 \nL36:    aload_3 \nL37:    arraylength \nL38:    if_icmpge L63 \nL41:    aload_2 \nL42:    sipush 255 \nL45:    aload_3 \nL46:    iload 4 \nL48:    baload \nL49:    iand \nL50:    invokestatic Method java/lang/Integer toHexString (I)Ljava/lang/String; \nL53:    invokevirtual Method java/lang/StringBuffer append (Ljava/lang/String;)Ljava/lang/StringBuffer; \nL56:    pop \nL57:    iinc 4 1 \nL60:    goto L34 \n\n        .stack chop 2 \nL63:    goto L69 \n\n        .stack full \n            locals Object java/lang/String Top Object java/lang/StringBuffer \n            stack Object java/security/NoSuchAlgorithmException \n        .end stack \nL66:    astore_3 \nL67:    aload_3 \nL68:    athrow \n\n        .stack full \n            locals Object java/lang/String Object java/security/MessageDigest Object java/lang/StringBuffer \n            stack \n        .end stack \nL69:    aload_2 \nL70:    invokevirtual Method java/lang/StringBuffer toString ()Ljava/lang/String; \nL73:    areturn \nL74:    \n        .linenumbertable \n            L0 30 \n            L8 34 \n            L14 36 \n            L18 37 \n            L26 40 \n            L31 42 \n            L41 43 \n            L57 42 \n            L63 49 \n            L66 47 \n            L67 48 \n            L69 51 \n        .end linenumbertable \n    .end code \n    .exceptions java/security/NoSuchAlgorithmException \n.end method \n.sourcefile 'MD5.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 08:08:38 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class MD5_ESTest extends MD5_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String string0 = MD5.getHash(\"\");\n      assertEquals(\"d41d8cd98f0b24e980998ecf8427e\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      MD5 mD5_0 = new MD5();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 08:08:38 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class MD5_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"MD5\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp0uk2enbu\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MD5_ESTest_scaffolding.class.getClassLoader() ,\n      \"MD5\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MD5_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"MD5\"\n    );\n  }\n}\n", "class_idx": 128}
{"class_name": "p004", "java_source": "import java.util.ArrayList;\n\npublic class p004 {\n\n  /**\n   * A palindromic number reads the same both ways. The largest palindrome made from the product of\n   * two 2-digit numbers is 9009 = 91 99. Find the largest palindrome made from the product of two\n   * 3-digit numbers.\n   *\n   * @author Christopher Zhang\n   * @param args\n   */\n  public static void main(String[] args) {\n    double start = System.currentTimeMillis();\n    ArrayList<Integer> numbers = new ArrayList<Integer>();\n    int answer = 0;\n    for (int i = 999; i > 99; i--) {\n      for (int j = 999; j > 99; j--) {\n        int k = i * j;\n        int reverse = 0;\n        while (k != 0) {\n          reverse = reverse * 10;\n          reverse = reverse + k % 10;\n          k = k / 10;\n        }\n        if (reverse == (i * j)) {\n          answer = reverse;\n          numbers.add(answer);\n        }\n      }\n    }\n    answer = numbers.get(0);\n    for (int i : numbers) {\n      if (i > answer) {\n        answer = i;\n      }\n    }\n    System.out.println(answer);\n    System.out.printf(\"\\nRunning Time: %fms\\n\", System.currentTimeMillis() - start);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super p004 \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 9 locals 9 \nL0:     invokestatic Method java/lang/System currentTimeMillis ()J \nL3:     l2d \nL4:     dstore_1 \nL5:     new java/util/ArrayList \nL8:     dup \nL9:     invokespecial Method java/util/ArrayList <init> ()V \nL12:    astore_3 \nL13:    iconst_0 \nL14:    istore 4 \nL16:    sipush 999 \nL19:    istore 5 \n\n        .stack full \n            locals Object [Ljava/lang/String; Double Object java/util/ArrayList Integer Integer \n            stack \n        .end stack \nL21:    iload 5 \nL23:    bipush 99 \nL25:    if_icmple L118 \nL28:    sipush 999 \nL31:    istore 6 \n\n        .stack append Integer \nL33:    iload 6 \nL35:    bipush 99 \nL37:    if_icmple L112 \nL40:    iload 5 \nL42:    iload 6 \nL44:    imul \nL45:    istore 7 \nL47:    iconst_0 \nL48:    istore 8 \n\n        .stack append Integer Integer \nL50:    iload 7 \nL52:    ifeq L82 \nL55:    iload 8 \nL57:    bipush 10 \nL59:    imul \nL60:    istore 8 \nL62:    iload 8 \nL64:    iload 7 \nL66:    bipush 10 \nL68:    irem \nL69:    iadd \nL70:    istore 8 \nL72:    iload 7 \nL74:    bipush 10 \nL76:    idiv \nL77:    istore 7 \nL79:    goto L50 \n\n        .stack same \nL82:    iload 8 \nL84:    iload 5 \nL86:    iload 6 \nL88:    imul \nL89:    if_icmpne L106 \nL92:    iload 8 \nL94:    istore 4 \nL96:    aload_3 \nL97:    iload 4 \nL99:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL102:   invokevirtual Method java/util/ArrayList add (Ljava/lang/Object;)Z \nL105:   pop \n\n        .stack chop 2 \nL106:   iinc 6 -1 \nL109:   goto L33 \n\n        .stack chop 1 \nL112:   iinc 5 -1 \nL115:   goto L21 \n\n        .stack chop 1 \nL118:   aload_3 \nL119:   iconst_0 \nL120:   invokevirtual Method java/util/ArrayList get (I)Ljava/lang/Object; \nL123:   checkcast java/lang/Integer \nL126:   invokevirtual Method java/lang/Integer intValue ()I \nL129:   istore 4 \nL131:   aload_3 \nL132:   invokevirtual Method java/util/ArrayList iterator ()Ljava/util/Iterator; \nL135:   astore 5 \n\n        .stack append Object java/util/Iterator \nL137:   aload 5 \nL139:   invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL144:   ifeq L176 \nL147:   aload 5 \nL149:   invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL154:   checkcast java/lang/Integer \nL157:   invokevirtual Method java/lang/Integer intValue ()I \nL160:   istore 6 \nL162:   iload 6 \nL164:   iload 4 \nL166:   if_icmple L173 \nL169:   iload 6 \nL171:   istore 4 \n\n        .stack same \nL173:   goto L137 \n\n        .stack chop 1 \nL176:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL179:   iload 4 \nL181:   invokevirtual Method java/io/PrintStream println (I)V \nL184:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL187:   ldc '\\nRunning Time: %fms\\n' \nL189:   iconst_1 \nL190:   anewarray java/lang/Object \nL193:   dup \nL194:   iconst_0 \nL195:   invokestatic Method java/lang/System currentTimeMillis ()J \nL198:   l2d \nL199:   dload_1 \nL200:   dsub \nL201:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL204:   aastore \nL205:   invokevirtual Method java/io/PrintStream printf (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; \nL208:   pop \nL209:   return \nL210:   \n        .linenumbertable \n            L0 17 \n            L5 18 \n            L13 19 \n            L16 20 \n            L28 22 \n            L40 24 \n            L47 25 \n            L50 26 \n            L55 28 \n            L62 29 \n            L72 30 \n            L82 32 \n            L92 34 \n            L96 35 \n            L106 22 \n            L112 20 \n            L118 39 \n            L131 40 \n            L162 42 \n            L169 44 \n            L173 46 \n            L176 47 \n            L184 48 \n            L209 50 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'p004.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 00:48:31 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class p004_ESTest extends p004_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String[] stringArray0 = new String[3];\n      String string0 = \"#</'hsFoJ^(\";\n      stringArray0[0] = \"#</'hsFoJ^(\";\n      String string1 = \"x+}\";\n      stringArray0[1] = \"x+}\";\n      String string2 = \"Sa!Q@\\\\G\u007f'P|\";\n      stringArray0[2] = \"Sa!Q@G\u007f'P|\";\n      // Undeclared exception!\n      p004.main(stringArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      String[] stringArray0 = new String[2];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"\\nRunning Time: %fms\\n\";\n      // Undeclared exception!\n      p004.main(stringArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      String[] stringArray0 = new String[7];\n      String string0 = \"\";\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"kb_hWZFPDL\";\n      String string1 = \"n4K~\";\n      stringArray0[2] = \"n4K~\";\n      String string2 = \"\\nRunning Time: %fms\\n\";\n      stringArray0[3] = \"\\nRunning Time: %fms\\n\";\n      String string3 = \"\";\n      stringArray0[4] = \"\";\n      stringArray0[5] = \"\";\n      String string4 = \"\";\n      stringArray0[6] = \"\";\n      // Undeclared exception!\n      p004.main(stringArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      String[] stringArray0 = new String[6];\n      stringArray0[0] = \"\\nRunning Time: %fms\\n\";\n      stringArray0[1] = \"nPTjw`egp\";\n      stringArray0[2] = \"xwQ9E\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \"\";\n      stringArray0[5] = \"p004\";\n      // Undeclared exception!\n      p004.main(stringArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      p004 p004_0 = new p004();\n      String[] stringArray0 = new String[8];\n      stringArray0[0] = \",hl> T\\\"a=vQ\";\n      stringArray0[1] = \" '+oL8\";\n      stringArray0[2] = \"[!zI2Q$\";\n      stringArray0[3] = \"0\u007fk<Z(aemrKm>Xh,\";\n      stringArray0[4] = \"A%[GD1ZI[p:xLWp$Mf\";\n      stringArray0[5] = \"p004\";\n      stringArray0[6] = \"CwzqL=2/a$\\u0001q~:pKP\";\n      stringArray0[7] = \"\";\n      // Undeclared exception!\n      p004.main(stringArray0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 00:48:31 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class p004_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"p004\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmphk5mgqx8\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(p004_ESTest_scaffolding.class.getClassLoader() ,\n      \"p004\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(p004_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"p004\"\n    );\n  }\n}\n", "class_idx": 129}
{"class_name": "RestException", "java_source": "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n * agreements. See the NOTICE file distributed with this work for additional information regarding\n * copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n * copy of the License at\n *\n * <p>http://www.apache.org/licenses/LICENSE-2.0\n *\n * <p>Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\npublic class RestException extends Exception {\n\n  private String fullMessage;\n\n  public RestException(Exception e) {\n    super(e.getMessage(), e.getCause());\n  }\n\n  public RestException(String message) {\n    super(message);\n  }\n\n  public RestException(String message, Throwable cause) {\n    super(message, cause);\n  }\n\n  public RestException(String message, String fullMessage, Throwable cause) {\n    super(message, cause);\n    this.fullMessage = fullMessage;\n  }\n\n  public String getFullMessage() {\n    return this.fullMessage;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super RestException \n.super java/lang/Exception \n.field private fullMessage Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/Exception;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokevirtual Method java/lang/Exception getMessage ()Ljava/lang/String; \nL5:     aload_1 \nL6:     invokevirtual Method java/lang/Exception getCause ()Ljava/lang/Throwable; \nL9:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;Ljava/lang/Throwable;)V \nL12:    return \nL13:    \n        .linenumbertable \n            L0 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 27 \n            L5 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/Throwable;)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     aload_2 \nL3:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;Ljava/lang/Throwable;)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 31 \n            L6 32 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V \n    .code stack 3 locals 4 \nL0:     aload_0 \nL1:     aload_1 \nL2:     aload_3 \nL3:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;Ljava/lang/Throwable;)V \nL6:     aload_0 \nL7:     aload_2 \nL8:     putfield Field RestException fullMessage Ljava/lang/String; \nL11:    return \nL12:    \n        .linenumbertable \n            L0 35 \n            L6 36 \n            L11 37 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFullMessage : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field RestException fullMessage Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 40 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'RestException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 13:41:27 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.lang.MockThrowable;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class RestException_ESTest extends RestException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      MockThrowable mockThrowable0 = new MockThrowable();\n      RestException restException0 = new RestException(\"t~j\u007fko78Gz/\", \"t~j\u007fko78Gz/\", mockThrowable0);\n      String string0 = restException0.getFullMessage();\n      assertEquals(\"t~j\u007fko78Gz/\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      RestException restException0 = new RestException(\"\");\n      RestException restException1 = new RestException(restException0);\n      assertFalse(restException1.equals((Object)restException0));\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      RestException restException0 = new RestException(\"\");\n      String string0 = restException0.getFullMessage();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      RestException restException0 = new RestException(\"\");\n      RestException restException1 = new RestException(\"\", \"\", restException0);\n      String string0 = restException1.getFullMessage();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      RestException restException0 = new RestException(\"\");\n      RestException restException1 = new RestException(\"\", restException0);\n      assertFalse(restException1.equals((Object)restException0));\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 13:41:27 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class RestException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"RestException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpd5achk2b\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(RestException_ESTest_scaffolding.class.getClassLoader() ,\n      \"RestException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(RestException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"RestException\"\n    );\n  }\n}\n", "class_idx": 130}
{"class_name": "TestException", "java_source": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npublic class TestException extends RuntimeException {\n  private static final long serialVersionUID = -3719932856173828526L;\n}\n", "jasm_code": ".version 52 0 \n.class public super TestException \n.super java/lang/RuntimeException \n.field private static final serialVersionUID J = -3719932856173828526L \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/RuntimeException <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'TestException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 16:42:16 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class TestException_ESTest extends TestException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      TestException testException0 = new TestException();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 16:42:16 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class TestException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"TestException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpasrwmbvx\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(TestException_ESTest_scaffolding.class.getClassLoader() ,\n      \"TestException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(TestException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"TestException\"\n    );\n  }\n}\n", "class_idx": 131}
{"class_name": "CourseState", "java_source": "public class CourseState {\n\n  public CourseState() {}\n\n  public CourseState(Long id, String name, Boolean archived) {\n    this();\n    this.id = id;\n    this.name = name;\n    this.archived = archived;\n  }\n\n  public CourseState(String name, Boolean archived) {\n    this(null, name, archived);\n  }\n\n  public Long getId() {\n    return id;\n  }\n\n  public void setId(Long id) {\n    this.id = id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public Boolean getArchived() {\n    return archived;\n  }\n\n  public void setArchived(Boolean archived) {\n    this.archived = archived;\n  }\n\n  private Long id;\n  private String name;\n  private Boolean archived;\n}\n", "jasm_code": ".version 52 0 \n.class public super CourseState \n.super java/lang/Object \n.field private id Ljava/lang/Long; \n.field private name Ljava/lang/String; \n.field private archived Ljava/lang/Boolean; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n            L4 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Boolean;)V \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method CourseState <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field CourseState id Ljava/lang/Long; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field CourseState name Ljava/lang/String; \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field CourseState archived Ljava/lang/Boolean; \nL19:    return \nL20:    \n        .linenumbertable \n            L0 9 \n            L4 10 \n            L9 11 \n            L14 12 \n            L19 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/Boolean;)V \n    .code stack 4 locals 3 \nL0:     aload_0 \nL1:     aconst_null \nL2:     aload_1 \nL3:     aload_2 \nL4:     invokespecial Method CourseState <init> (Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Boolean;)V \nL7:     return \nL8:     \n        .linenumbertable \n            L0 16 \n            L7 17 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getId : ()Ljava/lang/Long; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field CourseState id Ljava/lang/Long; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 20 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setId : (Ljava/lang/Long;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field CourseState id Ljava/lang/Long; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 24 \n            L5 25 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field CourseState name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field CourseState name Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 32 \n            L5 33 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getArchived : ()Ljava/lang/Boolean; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field CourseState archived Ljava/lang/Boolean; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 36 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setArchived : (Ljava/lang/Boolean;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field CourseState archived Ljava/lang/Boolean; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 40 \n            L5 41 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'CourseState.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 16:54:09 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CourseState_ESTest extends CourseState_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      CourseState courseState0 = new CourseState();\n      String string0 = courseState0.getName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      Boolean boolean0 = new Boolean(false);\n      CourseState courseState0 = new CourseState(\"\", boolean0);\n      String string0 = courseState0.getName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      Long long0 = new Long(317L);\n      Boolean boolean0 = new Boolean(\"%j+V\\\"H~\");\n      CourseState courseState0 = new CourseState(long0, \"%j+V\\\"H~\", boolean0);\n      Long long1 = courseState0.getId();\n      assertEquals(317L, (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      CourseState courseState0 = new CourseState();\n      Long long0 = new Long(0L);\n      courseState0.setId(long0);\n      Long long1 = courseState0.getId();\n      assertEquals(0L, (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      Long long0 = new Long((-11240L));\n      CourseState courseState0 = new CourseState(long0, \"[F4XMAxkig*oTb5c.2\", (Boolean) null);\n      Long long1 = courseState0.getId();\n      assertEquals((-11240L), (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      Long long0 = new Long((-1L));\n      Boolean boolean0 = Boolean.valueOf(\"\");\n      CourseState courseState0 = new CourseState(long0, \"\", boolean0);\n      Long long1 = courseState0.getId();\n      assertEquals((-1L), (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      CourseState courseState0 = new CourseState();\n      Boolean boolean0 = courseState0.getArchived();\n      assertNull(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Long long0 = new Long(317L);\n      Boolean boolean0 = new Boolean(\"%j+V\\\"H~\");\n      CourseState courseState0 = new CourseState(long0, \"%j+V\\\"H~\", boolean0);\n      Boolean boolean1 = courseState0.getArchived();\n      assertFalse(boolean1);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      Boolean boolean0 = Boolean.valueOf(true);\n      CourseState courseState0 = new CourseState(\"\\u0002B}cw4 D[R9rWOk:oy\", boolean0);\n      courseState0.setArchived(boolean0);\n      assertNull(courseState0.getId());\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      Boolean boolean0 = Boolean.valueOf(true);\n      CourseState courseState0 = new CourseState(\"\\u0002B}cw4 D[R9rWOk:oy\", boolean0);\n      courseState0.setName(\"CourseState\");\n      assertTrue(courseState0.getArchived());\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      Boolean boolean0 = Boolean.valueOf(true);\n      CourseState courseState0 = new CourseState(\"\\u0002B}cw4 D[R9rWOk:oy\", boolean0);\n      Long long0 = courseState0.getId();\n      assertNull(long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Boolean boolean0 = Boolean.valueOf(true);\n      CourseState courseState0 = new CourseState(\"\\u0002B}cw4 D[R9rWOk:oy\", boolean0);\n      Boolean boolean1 = courseState0.getArchived();\n      assertTrue(boolean1);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      Boolean boolean0 = Boolean.valueOf(true);\n      CourseState courseState0 = new CourseState(\"\\u0002B}cw4 D[R9rWOk:oy\", boolean0);\n      String string0 = courseState0.getName();\n      assertEquals(\"\\u0002B}cw4 D[R9rWOk:oy\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 16:54:09 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class CourseState_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CourseState\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpsolumh09\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CourseState_ESTest_scaffolding.class.getClassLoader() ,\n      \"CourseState\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CourseState_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CourseState\"\n    );\n  }\n}\n", "class_idx": 132}
{"class_name": "FrameRateTracker", "java_source": "public class FrameRateTracker {\n\n  public long[] last;\n  public int i;\n\n  public long lastTime = 0;\n\n  public FrameRateTracker(int n) {\n    this.last = new long[n];\n    this.i = 0;\n  }\n\n  public void hit() {\n    this.last[this.i] = System.currentTimeMillis() - this.lastTime;\n    this.i = (this.i + 1) % this.last.length;\n\n    this.lastTime = System.currentTimeMillis();\n  }\n\n  public double avg() {\n    double sum = 0;\n    for (long aLast : this.last) {\n      sum += aLast;\n    }\n    return 1000.0 / (sum / this.last.length);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super FrameRateTracker \n.super java/lang/Object \n.field public last [J \n.field public i I \n.field public lastTime J \n\n.method public <init> : (I)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     lconst_0 \nL6:     putfield Field FrameRateTracker lastTime J \nL9:     aload_0 \nL10:    iload_1 \nL11:    newarray long \nL13:    putfield Field FrameRateTracker last [J \nL16:    aload_0 \nL17:    iconst_0 \nL18:    putfield Field FrameRateTracker i I \nL21:    return \nL22:    \n        .linenumbertable \n            L0 10 \n            L4 8 \n            L9 11 \n            L16 12 \n            L21 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public hit : ()V \n    .code stack 6 locals 1 \nL0:     aload_0 \nL1:     getfield Field FrameRateTracker last [J \nL4:     aload_0 \nL5:     getfield Field FrameRateTracker i I \nL8:     invokestatic Method java/lang/System currentTimeMillis ()J \nL11:    aload_0 \nL12:    getfield Field FrameRateTracker lastTime J \nL15:    lsub \nL16:    lastore \nL17:    aload_0 \nL18:    aload_0 \nL19:    getfield Field FrameRateTracker i I \nL22:    iconst_1 \nL23:    iadd \nL24:    aload_0 \nL25:    getfield Field FrameRateTracker last [J \nL28:    arraylength \nL29:    irem \nL30:    putfield Field FrameRateTracker i I \nL33:    aload_0 \nL34:    invokestatic Method java/lang/System currentTimeMillis ()J \nL37:    putfield Field FrameRateTracker lastTime J \nL40:    return \nL41:    \n        .linenumbertable \n            L0 16 \n            L17 17 \n            L33 19 \n            L40 20 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public avg : ()D \n    .code stack 6 locals 8 \nL0:     dconst_0 \nL1:     dstore_1 \nL2:     aload_0 \nL3:     getfield Field FrameRateTracker last [J \nL6:     astore_3 \nL7:     aload_3 \nL8:     arraylength \nL9:     istore 4 \nL11:    iconst_0 \nL12:    istore 5 \n\n        .stack full \n            locals Object FrameRateTracker Double Object [J Integer Integer \n            stack \n        .end stack \nL14:    iload 5 \nL16:    iload 4 \nL18:    if_icmpge L39 \nL21:    aload_3 \nL22:    iload 5 \nL24:    laload \nL25:    lstore 6 \nL27:    dload_1 \nL28:    lload 6 \nL30:    l2d \nL31:    dadd \nL32:    dstore_1 \nL33:    iinc 5 1 \nL36:    goto L14 \n\n        .stack chop 3 \nL39:    ldc2_w +1000.0 \nL42:    dload_1 \nL43:    aload_0 \nL44:    getfield Field FrameRateTracker last [J \nL47:    arraylength \nL48:    i2d \nL49:    ddiv \nL50:    ddiv \nL51:    dreturn \nL52:    \n        .linenumbertable \n            L0 23 \n            L2 24 \n            L27 25 \n            L33 24 \n            L39 27 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'FrameRateTracker.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 14:33:44 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class FrameRateTracker_ESTest extends FrameRateTracker_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      FrameRateTracker frameRateTracker0 = new FrameRateTracker(1);\n      long[] longArray0 = new long[6];\n      longArray0[0] = 0L;\n      longArray0[1] = (long) 1;\n      longArray0[2] = 0L;\n      longArray0[3] = 0L;\n      longArray0[4] = (-26212L);\n      longArray0[5] = 0L;\n      frameRateTracker0.last = longArray0;\n      double double0 = frameRateTracker0.avg();\n      assertEquals((-0.22891152569531875), double0, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      FrameRateTracker frameRateTracker0 = new FrameRateTracker(74413);\n      int int0 = 0;\n      long[] longArray0 = new long[0];\n      frameRateTracker0.last = longArray0;\n      frameRateTracker0.i = 0;\n      frameRateTracker0.avg();\n      // Undeclared exception!\n      try { \n        frameRateTracker0.hit();\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // 0\n         //\n         verifyException(\"FrameRateTracker\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      int int0 = 1;\n      FrameRateTracker frameRateTracker0 = new FrameRateTracker(1);\n      frameRateTracker0.i = 1;\n      frameRateTracker0.i = 1;\n      frameRateTracker0.lastTime = (-1L);\n      // Undeclared exception!\n      try { \n        frameRateTracker0.hit();\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // 1\n         //\n         verifyException(\"FrameRateTracker\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      FrameRateTracker frameRateTracker0 = new FrameRateTracker(0);\n      long[] longArray0 = new long[2];\n      longArray0[0] = 0L;\n      longArray0[1] = (long) 0;\n      frameRateTracker0.lastTime = 0L;\n      // Undeclared exception!\n      try { \n        frameRateTracker0.hit();\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // 0\n         //\n         verifyException(\"FrameRateTracker\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      int int0 = (-4459);\n      FrameRateTracker frameRateTracker0 = null;\n      try {\n        frameRateTracker0 = new FrameRateTracker((-4459));\n        fail(\"Expecting exception: NegativeArraySizeException\");\n      \n      } catch(NegativeArraySizeException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"FrameRateTracker\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      int int0 = 0;\n      FrameRateTracker frameRateTracker0 = new FrameRateTracker(0);\n      // Undeclared exception!\n      try { \n        frameRateTracker0.hit();\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // 0\n         //\n         verifyException(\"FrameRateTracker\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      FrameRateTracker frameRateTracker0 = new FrameRateTracker(2951);\n      long[] longArray0 = new long[6];\n      longArray0[0] = 0L;\n      longArray0[1] = 0L;\n      long[] longArray1 = new long[9];\n      longArray1[0] = (long) 0;\n      frameRateTracker0.hit();\n      frameRateTracker0.lastTime = (-25757L);\n      longArray1[1] = 0L;\n      longArray1[2] = (long) 1;\n      longArray1[3] = (-25757L);\n      longArray1[4] = (long) 1;\n      longArray1[5] = (-25757L);\n      longArray1[6] = (long) 1;\n      frameRateTracker0.last = longArray1;\n      longArray1[7] = (long) 1;\n      frameRateTracker0.lastTime = (-31602L);\n      longArray1[8] = (long) 1;\n      frameRateTracker0.last = longArray1;\n      longArray0[2] = (-31602L);\n      longArray0[3] = 0L;\n      longArray0[4] = (long) 2951;\n      longArray0[5] = (long) 2951;\n      frameRateTracker0.last = longArray0;\n      frameRateTracker0.hit();\n      frameRateTracker0.hit();\n      frameRateTracker0.lastTime = (long) 2951;\n      frameRateTracker0.avg();\n      frameRateTracker0.hit();\n      frameRateTracker0.hit();\n      frameRateTracker0.avg();\n      assertEquals(5, frameRateTracker0.i);\n      \n      frameRateTracker0.hit();\n      assertEquals(2.154538905609105E-9, frameRateTracker0.avg(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      int int0 = (-31506);\n      FrameRateTracker frameRateTracker0 = null;\n      try {\n        frameRateTracker0 = new FrameRateTracker((-31506));\n        fail(\"Expecting exception: NegativeArraySizeException\");\n      \n      } catch(NegativeArraySizeException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"FrameRateTracker\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      FrameRateTracker frameRateTracker0 = new FrameRateTracker(0);\n      // Undeclared exception!\n      try { \n        frameRateTracker0.hit();\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // 0\n         //\n         verifyException(\"FrameRateTracker\", e);\n      }\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 14:33:44 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class FrameRateTracker_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"FrameRateTracker\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpzj1ftuie\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FrameRateTracker_ESTest_scaffolding.class.getClassLoader() ,\n      \"FrameRateTracker\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FrameRateTracker_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"FrameRateTracker\"\n    );\n  }\n}\n", "class_idx": 133}
{"class_name": "TrafficConfigKeys", "java_source": "/*-\n * #%L\n * Bobcat\n * %%\n * Copyright (C) 2016 Cognifide Ltd.\n * %%\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * #L%\n */\n\npublic final class TrafficConfigKeys {\n\n  public static final String ANALYTICS_CALL_TIMEOUT_MS = \"analytics.call.timeout.ms\";\n\n  public static final String ANALYTICS_URI_PREFIX = \"analytics.uri.prefix\";\n\n  private TrafficConfigKeys() {\n    // utility class\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public final super TrafficConfigKeys \n.super java/lang/Object \n.field public static final ANALYTICS_CALL_TIMEOUT_MS Ljava/lang/String; = 'analytics.call.timeout.ms' \n.field public static final ANALYTICS_URI_PREFIX Ljava/lang/String; = 'analytics.uri.prefix' \n\n.method private <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 28 \n            L4 30 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'TrafficConfigKeys.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 19:51:57 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class TrafficConfigKeys_ESTest extends TrafficConfigKeys_ESTest_scaffolding {\n  @Test\n  public void notGeneratedAnyTest() {\n    // EvoSuite did not generate any tests\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 19:51:57 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class TrafficConfigKeys_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"TrafficConfigKeys\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    /*No java.lang.System property to set*/\n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(TrafficConfigKeys_ESTest_scaffolding.class.getClassLoader() ,\n      \"TrafficConfigKeys\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(TrafficConfigKeys_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"TrafficConfigKeys\"\n    );\n  }\n}\n", "class_idx": 134}
{"class_name": "Node", "java_source": "/*\n    The Right View of a Binary Tree depicts the nodes that are visible\n    when the tree is viewed from the right side of it. At every level\n    there would be exactly one node that will appear in right view which\n    would be the last node of that level.\n*/\n\nimport java.util.*;\n\n// Node of Binary Tree storing data, level,\n// left and right child information\nclass Node {\n  int data;\n  int level;\n  Node left, right;\n\n  Node(int val) {\n    data = val;\n    left = null;\n    right = null;\n  }\n}\n\nclass Binary_Tree_Right_View {\n  // Function to print Right View of Binary Tree\n  public static void rightView(Node root) {\n    if (root == null) return;\n\n    // initialising variables\n    Queue<Node> q = new LinkedList<>();\n    q.add(root);\n    root.level = 0;\n\n    // Tree Map keeps entries of Map sorted by key\n    TreeMap<Integer, Integer> mp = new TreeMap<>();\n\n    // variable to store level of nodes\n    int level;\n\n    // Assigning level to each node of Binary Tree\n    // Storing first node of same level in a map\n    // with key as level\n    while (!q.isEmpty()) {\n      // extract the node at the front of queue\n      Node temp = q.peek();\n      level = temp.level;\n\n      // make key as level and data as value for map\n      mp.put(level, temp.data);\n\n      // remove the extract node from queue\n      q.poll();\n\n      // when left child exists, assign level to it\n      // and push it to the queue\n      if (temp.left != null) {\n        temp.left.level = level + 1;\n        q.add(temp.left);\n      }\n\n      // when right child exists, assign level to it\n      // and push it to the queue\n      if (temp.right != null) {\n        temp.right.level = level + 1;\n        q.add(temp.right);\n      }\n    }\n    /*\n        Map mp contains:\n        [0] -> 1\n        [1] -> 3\n        [2] -> 7\n        [3] -> 9\n    */\n\n    System.out.println(\"Right View of Binary Tree: \");\n    // Iterate over the map keys i.e 0, 1, 2, 3\n    for (Map.Entry<Integer, Integer> entry : mp.entrySet()) {\n      System.out.print(entry.getValue() + \" \");\n    }\n  }\n\n  // Driver Function\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    HashMap<Integer, Node> m = new HashMap<Integer, Node>();\n\n    // Input number of edges\n    int n = sc.nextInt();\n    Node root = null;\n\n    /*\n        The input format is that we get node1 which is the parent,\n        node2 which is the child, and then direction 'L' or 'R' which\n        tells us whether it is a left or right child of node1. Example:\n        Input:\n        3\n        1 2 L\n        1 3 R\n        2 4 L\n        This means there are 3 edges\n        2 is the left child of 1,\n        3 is the right child of 1,\n        4 is the left child of 2.\n    */\n    for (int i = 0; i < n; i++) {\n      int node1 = sc.nextInt();\n      int node2 = sc.nextInt();\n      char direction = sc.next().charAt(0);\n      Node parent = m.get(node1);\n      if (parent == null) {\n        parent = new Node(node1);\n        m.put(node1, parent);\n        if (root == null) root = parent;\n      }\n      Node child = new Node(node2);\n      if (direction == 'L') parent.left = child;\n      else parent.right = child;\n      m.put(node2, child);\n    }\n\n    // call to leftView function\n    Binary_Tree_Right_View obj = new Binary_Tree_Right_View();\n    obj.rightView(root);\n  }\n}\n\n/*\n            1\n         /     \\\n        2       3\n      /   \\   /   \\\n    4      5 6     7\n          /   \\\n         /     \\\n        8       9\n\n    Input:\n    8\n    1 2 L\n    1 3 R\n    2 4 L\n    2 5 R\n    3 6 L\n    3 7 R\n    5 8 L\n    6 9 R\n\n    Output:\n    Right View of Binary Tree:\n    1 3 7 9\n*/\n", "jasm_code": ".version 52 0 \n.class super Node \n.super java/lang/Object \n.field data I \n.field level I \n.field left LNode; \n.field right LNode; \n\n.method <init> : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field Node data I \nL9:     aload_0 \nL10:    aconst_null \nL11:    putfield Field Node left LNode; \nL14:    aload_0 \nL15:    aconst_null \nL16:    putfield Field Node right LNode; \nL19:    return \nL20:    \n        .linenumbertable \n            L0 18 \n            L4 19 \n            L9 20 \n            L14 21 \n            L19 22 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Node.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 05:38:49 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Node_ESTest extends Node_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Node node0 = new Node(31922);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 05:38:49 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Node_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Node\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpduoovmwk\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Node_ESTest_scaffolding.class.getClassLoader() ,\n      \"Node\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Node_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Node\"\n    );\n  }\n}\n", "class_idx": 135}
{"class_name": "ParentClass", "java_source": "public class ParentClass {\n\n  private String name;\n\n  public ParentClass(final String n) {\n    name = n;\n  }\n\n  public ParentClass(final StringBuffer n) {\n    name = n.toString();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ParentClass \n.super java/lang/Object \n.field private name Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field ParentClass name Ljava/lang/String; \nL9:     return \nL10:    \n        .linenumbertable \n            L0 7 \n            L4 8 \n            L9 9 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/StringBuffer;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     invokevirtual Method java/lang/StringBuffer toString ()Ljava/lang/String; \nL9:     putfield Field ParentClass name Ljava/lang/String; \nL12:    return \nL13:    \n        .linenumbertable \n            L0 11 \n            L4 12 \n            L12 13 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ParentClass.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 07:18:18 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ParentClass_ESTest extends ParentClass_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ParentClass parentClass0 = new ParentClass(\"pW\");\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"pW\");\n      ParentClass parentClass0 = new ParentClass(stringBuffer0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 07:18:18 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ParentClass_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ParentClass\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpojoq6a_b\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ParentClass_ESTest_scaffolding.class.getClassLoader() ,\n      \"ParentClass\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ParentClass_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ParentClass\"\n    );\n  }\n}\n", "class_idx": 136}
{"class_name": "FunctionTest", "java_source": "/*\n\t\u952e\u76d8\u5f55\u5165\u4e24\u4e2a\u6570\u636e\uff0c\u8fd4\u56de\u4e24\u4e2a\u6570\u4e2d\u7684\u8f83\u5927\u503c\n*/\nimport java.util.Scanner;\n\nclass FunctionTest {\n  public static void main(String[] args) {\n    // \u521b\u5efa\u952e\u76d8\u5f55\u5165\u5bf9\u8c61\n    Scanner sc = new Scanner(System.in);\n\n    System.out.println(\"\u8bf7\u8f93\u5165\u7b2c\u4e00\u4e2a\u6570\u636e:\");\n    int a = sc.nextInt();\n\n    System.out.println(\"\u8bf7\u8f93\u5165\u7b2c\u4e8c\u4e2a\u6570\u636e:\");\n    int b = sc.nextInt();\n\n    int result = getMax(a, b);\n    System.out.println(\"\u8f83\u5927\u503c\u662f\uff1a\" + result);\n  }\n\n  /*\n  \t\u9700\u6c42\uff1a\u4e24\u4e2a\u6570\u4e2d\u7684\u8f83\u5927\u503c\n  \t\u4e24\u4e2a\u660e\u786e\uff1a\n  \t\t\u8fd4\u56de\u503c\u7c7b\u578b\uff1aint\n  \t\t\u53c2\u6570\u5217\u8868\uff1aint a,int b\n  */\n  public static int getMax(int a, int b) {\n    // if\u8bed\u53e5\n    /*\n    if(a > b) {\n    \t//System.out.println(a);\n    \treturn a;\n    }else {\n    \t//System.out.println(b);\n    \treturn b;\n    }\n    */\n\n    // \u7528\u4e09\u5143\u6539\u8fdb\n    // int c = ((a > b)? a: b);\n    // return c;\n\n    // \u7531\u4e8ec\u5c31\u662f\u540e\u9762\u7684\u5f0f\u5b50\n    return ((a > b) ? a : b);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class super FunctionTest \n.super java/lang/Object \n\n.method <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 3 locals 5 \nL0:     new java/util/Scanner \nL3:     dup \nL4:     getstatic Field java/lang/System in Ljava/io/InputStream; \nL7:     invokespecial Method java/util/Scanner <init> (Ljava/io/InputStream;)V \nL10:    astore_1 \nL11:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL14:    ldc '\u8bf7\u8f93\u5165\u7b2c\u4e00\u4e2a\u6570\u636e:' \nL16:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL19:    aload_1 \nL20:    invokevirtual Method java/util/Scanner nextInt ()I \nL23:    istore_2 \nL24:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL27:    ldc '\u8bf7\u8f93\u5165\u7b2c\u4e8c\u4e2a\u6570\u636e:' \nL29:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL32:    aload_1 \nL33:    invokevirtual Method java/util/Scanner nextInt ()I \nL36:    istore_3 \nL37:    iload_2 \nL38:    iload_3 \nL39:    invokestatic Method FunctionTest getMax (II)I \nL42:    istore 4 \nL44:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL47:    new java/lang/StringBuilder \nL50:    dup \nL51:    invokespecial Method java/lang/StringBuilder <init> ()V \nL54:    ldc '\u8f83\u5927\u503c\u662f\uff1a' \nL56:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL59:    iload 4 \nL61:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL64:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL67:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL70:    return \nL71:    \n        .linenumbertable \n            L0 9 \n            L11 11 \n            L19 12 \n            L24 14 \n            L32 15 \n            L37 17 \n            L44 18 \n            L70 19 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static getMax : (II)I \n    .code stack 2 locals 2 \nL0:     iload_0 \nL1:     iload_1 \nL2:     if_icmple L9 \nL5:     iload_0 \nL6:     goto L10 \n\n        .stack same \nL9:     iload_1 \n\n        .stack stack_1 Integer \nL10:    ireturn \nL11:    \n        .linenumbertable \n            L0 44 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'FunctionTest.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 16:08:24 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.util.NoSuchElementException;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class FunctionTest_ESTest extends FunctionTest_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      int int0 = FunctionTest.getMax(0, 0);\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      int int0 = FunctionTest.getMax(82926, (-35383));\n      assertEquals(82926, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      int int0 = FunctionTest.getMax((-62682), (-1));\n      assertEquals((-1), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      String[] stringArray0 = new String[1];\n      // Undeclared exception!\n      try { \n        FunctionTest.main(stringArray0);\n        fail(\"Expecting exception: NoSuchElementException\");\n      \n      } catch(NoSuchElementException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"java.util.Scanner\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      FunctionTest functionTest0 = new FunctionTest();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 16:08:24 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class FunctionTest_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"FunctionTest\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n    org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpjvxvrzfs\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FunctionTest_ESTest_scaffolding.class.getClassLoader() ,\n      \"FunctionTest\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FunctionTest_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"FunctionTest\"\n    );\n  }\n}\n", "class_idx": 137}
{"class_name": "ContainsDuplicateII", "java_source": "/** Created by Vonzpf on 17/4/6. */\nimport java.util.HashMap;\n\n/**\n * -------------------------Title--------------------------------- Given an array of integers and an\n * integer k, find out whether there are two distinct indices i and j in the array\n *\n * <p>such that nums[i] = nums[j] and the absolute difference between i and j is at most k.\n */\npublic class ContainsDuplicateII {\n  public boolean containsNearbyDuplicate(int[] nums, int k) {\n    HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\n    for (int i = 0; i < nums.length; i++) {\n      if (!map.containsKey(nums[i])) {\n        map.put(nums[i], i);\n      } else {\n        int j = map.get(nums[i]);\n        if (i - j <= k) {\n          return true;\n        } else {\n          map.replace(nums[i], i);\n        }\n      }\n    }\n    return false;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ContainsDuplicateII \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 14 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public containsNearbyDuplicate : ([II)Z \n    .code stack 3 locals 6 \nL0:     new java/util/HashMap \nL3:     dup \nL4:     invokespecial Method java/util/HashMap <init> ()V \nL7:     astore_3 \nL8:     iconst_0 \nL9:     istore 4 \n\n        .stack append Object java/util/HashMap Integer \nL11:    iload 4 \nL13:    aload_1 \nL14:    arraylength \nL15:    if_icmpge L105 \nL18:    aload_3 \nL19:    aload_1 \nL20:    iload 4 \nL22:    iaload \nL23:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL26:    invokevirtual Method java/util/HashMap containsKey (Ljava/lang/Object;)Z \nL29:    ifne L52 \nL32:    aload_3 \nL33:    aload_1 \nL34:    iload 4 \nL36:    iaload \nL37:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL40:    iload 4 \nL42:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL45:    invokevirtual Method java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nL48:    pop \nL49:    goto L99 \n\n        .stack same \nL52:    aload_3 \nL53:    aload_1 \nL54:    iload 4 \nL56:    iaload \nL57:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL60:    invokevirtual Method java/util/HashMap get (Ljava/lang/Object;)Ljava/lang/Object; \nL63:    checkcast java/lang/Integer \nL66:    invokevirtual Method java/lang/Integer intValue ()I \nL69:    istore 5 \nL71:    iload 4 \nL73:    iload 5 \nL75:    isub \nL76:    iload_2 \nL77:    if_icmpgt L82 \nL80:    iconst_1 \nL81:    ireturn \n\n        .stack append Integer \nL82:    aload_3 \nL83:    aload_1 \nL84:    iload 4 \nL86:    iaload \nL87:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL90:    iload 4 \nL92:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL95:    invokevirtual Method java/util/HashMap replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nL98:    pop \n\n        .stack chop 1 \nL99:    iinc 4 1 \nL102:   goto L11 \n\n        .stack chop 1 \nL105:   iconst_0 \nL106:   ireturn \nL107:   \n        .linenumbertable \n            L0 16 \n            L8 17 \n            L18 18 \n            L32 19 \n            L52 22 \n            L71 23 \n            L80 24 \n            L82 27 \n            L99 17 \n            L105 31 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ContainsDuplicateII.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 08:58:20 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ContainsDuplicateII_ESTest extends ContainsDuplicateII_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ContainsDuplicateII containsDuplicateII0 = new ContainsDuplicateII();\n      int[] intArray0 = new int[9];\n      boolean boolean0 = containsDuplicateII0.containsNearbyDuplicate(intArray0, 72413);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      ContainsDuplicateII containsDuplicateII0 = new ContainsDuplicateII();\n      int[] intArray0 = new int[5];\n      containsDuplicateII0.containsNearbyDuplicate(intArray0, 0);\n      boolean boolean0 = containsDuplicateII0.containsNearbyDuplicate(intArray0, 0);\n      boolean boolean1 = containsDuplicateII0.containsNearbyDuplicate(intArray0, 1);\n      assertFalse(boolean1 == boolean0);\n      assertTrue(boolean1);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 08:58:20 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ContainsDuplicateII_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ContainsDuplicateII\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp12tydrtx\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ContainsDuplicateII_ESTest_scaffolding.class.getClassLoader() ,\n      \"ContainsDuplicateII\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ContainsDuplicateII_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ContainsDuplicateII\"\n    );\n  }\n}\n", "class_idx": 138}
{"class_name": "FireAction", "java_source": "import java.io.Serializable;\n\n/** Created by Taras on 24/11/13. */\npublic class FireAction implements Serializable {}\n", "jasm_code": ".version 52 0 \n.class public super FireAction \n.super java/lang/Object \n.implements java/io/Serializable \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'FireAction.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 22:48:30 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class FireAction_ESTest extends FireAction_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      FireAction fireAction0 = new FireAction();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 22:48:30 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class FireAction_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"FireAction\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpy4tjv94l\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FireAction_ESTest_scaffolding.class.getClassLoader() ,\n      \"FireAction\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FireAction_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"FireAction\"\n    );\n  }\n}\n", "class_idx": 139}
{"class_name": "Reference", "java_source": "public class Reference {\n\n  public static final String MOD_ID = \"mod01\";\n  public static final String MOD_NAME = \"Mod #01\";\n  public static final String VERSION = \"0.0.1\";\n}\n", "jasm_code": ".version 52 0 \n.class public super Reference \n.super java/lang/Object \n.field public static final MOD_ID Ljava/lang/String; = 'mod01' \n.field public static final MOD_NAME Ljava/lang/String; = 'Mod #01' \n.field public static final VERSION Ljava/lang/String; = '0.0.1' \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Reference.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 08:50:23 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Reference_ESTest extends Reference_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Reference reference0 = new Reference();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 08:50:23 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Reference_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Reference\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpx_nk1903\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Reference_ESTest_scaffolding.class.getClassLoader() ,\n      \"Reference\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Reference_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Reference\"\n    );\n  }\n}\n", "class_idx": 140}
{"class_name": "Test7184799", "java_source": "/*\n * Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\n\n/*\n * @test\n * @bug 7187618 7184799\n * @summary Tests just a benchmark of Introspector.getBeanInfo(Class) performance\n * @author Sergey Malenkov\n * @run main/manual Test7184799\n */\n\nimport java.beans.Introspector;\nimport java.util.*;\nimport java.util.concurrent.ConcurrentHashMap;\n\npublic class Test7184799 {\n  private static final Class[] TYPES = {\n    Class.class,\n    String.class,\n    Character.class,\n    Boolean.class,\n    Byte.class,\n    Short.class,\n    Integer.class,\n    Long.class,\n    Float.class,\n    Double.class,\n    Collection.class,\n    Set.class,\n    HashSet.class,\n    TreeSet.class,\n    LinkedHashSet.class,\n    Map.class,\n    HashMap.class,\n    TreeMap.class,\n    LinkedHashMap.class,\n    WeakHashMap.class,\n    ConcurrentHashMap.class,\n    Dictionary.class,\n    Exception.class,\n  };\n\n  public static void main(String[] args) throws Exception {\n    long time = System.nanoTime();\n    for (Class type : TYPES) {\n      Introspector.getBeanInfo(type);\n    }\n    time -= System.nanoTime();\n    System.out.println(\"Time (ms): \" + (-time / 1000000));\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Test7184799 \n.super java/lang/Object \n.field private static final TYPES [Ljava/lang/Class; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 36 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 6 locals 7 \nL0:     invokestatic Method java/lang/System nanoTime ()J \nL3:     lstore_1 \nL4:     getstatic Field Test7184799 TYPES [Ljava/lang/Class; \nL7:     astore_3 \nL8:     aload_3 \nL9:     arraylength \nL10:    istore 4 \nL12:    iconst_0 \nL13:    istore 5 \n\n        .stack full \n            locals Object [Ljava/lang/String; Long Object [Ljava/lang/Class; Integer Integer \n            stack \n        .end stack \nL15:    iload 5 \nL17:    iload 4 \nL19:    if_icmpge L40 \nL22:    aload_3 \nL23:    iload 5 \nL25:    aaload \nL26:    astore 6 \nL28:    aload 6 \nL30:    invokestatic Method java/beans/Introspector getBeanInfo (Ljava/lang/Class;)Ljava/beans/BeanInfo; \nL33:    pop \nL34:    iinc 5 1 \nL37:    goto L15 \n\n        .stack chop 3 \nL40:    lload_1 \nL41:    invokestatic Method java/lang/System nanoTime ()J \nL44:    lsub \nL45:    lstore_1 \nL46:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL49:    new java/lang/StringBuilder \nL52:    dup \nL53:    invokespecial Method java/lang/StringBuilder <init> ()V \nL56:    ldc 'Time (ms): ' \nL58:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL61:    lload_1 \nL62:    lneg \nL63:    ldc2_w 1000000L \nL66:    ldiv \nL67:    invokevirtual Method java/lang/StringBuilder append (J)Ljava/lang/StringBuilder; \nL70:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL73:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL76:    return \nL77:    \n        .linenumbertable \n            L0 64 \n            L4 65 \n            L28 66 \n            L34 65 \n            L40 68 \n            L46 69 \n            L76 70 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/Exception \n.end method \n\n.method static <clinit> : ()V \n    .code stack 4 locals 0 \nL0:     bipush 23 \nL2:     anewarray java/lang/Class \nL5:     dup \nL6:     iconst_0 \nL7:     ldc Class java/lang/Class \nL9:     aastore \nL10:    dup \nL11:    iconst_1 \nL12:    ldc Class java/lang/String \nL14:    aastore \nL15:    dup \nL16:    iconst_2 \nL17:    ldc Class java/lang/Character \nL19:    aastore \nL20:    dup \nL21:    iconst_3 \nL22:    ldc Class java/lang/Boolean \nL24:    aastore \nL25:    dup \nL26:    iconst_4 \nL27:    ldc Class java/lang/Byte \nL29:    aastore \nL30:    dup \nL31:    iconst_5 \nL32:    ldc Class java/lang/Short \nL34:    aastore \nL35:    dup \nL36:    bipush 6 \nL38:    ldc Class java/lang/Integer \nL40:    aastore \nL41:    dup \nL42:    bipush 7 \nL44:    ldc Class java/lang/Long \nL46:    aastore \nL47:    dup \nL48:    bipush 8 \nL50:    ldc Class java/lang/Float \nL52:    aastore \nL53:    dup \nL54:    bipush 9 \nL56:    ldc Class java/lang/Double \nL58:    aastore \nL59:    dup \nL60:    bipush 10 \nL62:    ldc Class java/util/Collection \nL64:    aastore \nL65:    dup \nL66:    bipush 11 \nL68:    ldc Class java/util/Set \nL70:    aastore \nL71:    dup \nL72:    bipush 12 \nL74:    ldc Class java/util/HashSet \nL76:    aastore \nL77:    dup \nL78:    bipush 13 \nL80:    ldc Class java/util/TreeSet \nL82:    aastore \nL83:    dup \nL84:    bipush 14 \nL86:    ldc Class java/util/LinkedHashSet \nL88:    aastore \nL89:    dup \nL90:    bipush 15 \nL92:    ldc Class java/util/Map \nL94:    aastore \nL95:    dup \nL96:    bipush 16 \nL98:    ldc Class java/util/HashMap \nL100:   aastore \nL101:   dup \nL102:   bipush 17 \nL104:   ldc Class java/util/TreeMap \nL106:   aastore \nL107:   dup \nL108:   bipush 18 \nL110:   ldc Class java/util/LinkedHashMap \nL112:   aastore \nL113:   dup \nL114:   bipush 19 \nL116:   ldc Class java/util/WeakHashMap \nL118:   aastore \nL119:   dup \nL120:   bipush 20 \nL122:   ldc Class java/util/concurrent/ConcurrentHashMap \nL124:   aastore \nL125:   dup \nL126:   bipush 21 \nL128:   ldc Class java/util/Dictionary \nL130:   aastore \nL131:   dup \nL132:   bipush 22 \nL134:   ldc Class java/lang/Exception \nL136:   aastore \nL137:   putstatic Field Test7184799 TYPES [Ljava/lang/Class; \nL140:   return \nL141:   \n        .linenumbertable \n            L0 37 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Test7184799.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 03:41:05 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.System;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Test7184799_ESTest extends Test7184799_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String[] stringArray0 = new String[9];\n      Test7184799.main(stringArray0);\n      assertEquals(9, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      System.setCurrentTimeMillis(0L);\n      String[] stringArray0 = new String[9];\n      Test7184799.main(stringArray0);\n      assertEquals(9, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      String[] stringArray0 = new String[0];\n      Test7184799.main(stringArray0);\n      Test7184799.main(stringArray0);\n      Test7184799 test7184799_0 = new Test7184799();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 03:41:05 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Test7184799_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Test7184799\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpgc27l4c8\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Test7184799_ESTest_scaffolding.class.getClassLoader() ,\n      \"Test7184799\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Test7184799_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Test7184799\"\n    );\n  }\n}\n", "class_idx": 141}
{"class_name": "PasswordGenerator", "java_source": "import java.util.Random;\n\npublic class PasswordGenerator {\n\n  private static char[] charPool = {\n    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\n    't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B',\n    'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',\n    'V', 'W', 'X', 'Y', 'Z'\n  };\n\n  /**\n   * \u751f\u6210\u968f\u5373\u5bc6\u7801\n   *\n   * @param passwordLength \u751f\u6210\u7684\u5bc6\u7801\u7684\u603b\u957f\u5ea6\n   * @return \u5bc6\u7801\u7684\u5b57\u7b26\u4e32\n   */\n  public static String generate(int passwordLength) {\n    // 35\u662f\u56e0\u4e3a\u6570\u7ec4\u662f\u4ece0\u5f00\u59cb\u7684\uff0c26\u4e2a\u5b57\u6bcd+10\u4e2a\u6570\u5b57\n    final int maxNum = 62;\n    int i; // \u751f\u6210\u7684\u968f\u673a\u6570\n    int count = 0; // \u751f\u6210\u7684\u5bc6\u7801\u7684\u957f\u5ea6\n\n    StringBuffer pwd = new StringBuffer(\"\");\n\n    Random r = new Random();\n\n    while (count < passwordLength) {\n      // \u751f\u6210\u968f\u673a\u6570\uff0c\u53d6\u7edd\u5bf9\u503c\uff0c\u9632\u6b62\u751f\u6210\u8d1f\u6570\uff0c\n\n      i = Math.abs(r.nextInt(maxNum)); // \u751f\u6210\u7684\u6570\u6700\u5927\u4e3a36-1\n\n      if (i >= 0 && i < charPool.length) {\n        pwd.append(charPool[i]);\n        count++;\n      }\n    }\n\n    return pwd.toString();\n  }\n\n  public static void main(String[] args) {\n    String password = PasswordGenerator.generate(6);\n    System.out.print(password);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super PasswordGenerator \n.super java/lang/Object \n.field private static charPool [C \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static generate : (I)Ljava/lang/String; \n    .code stack 3 locals 6 \nL0:     iconst_0 \nL1:     istore_3 \nL2:     new java/lang/StringBuffer \nL5:     dup \nL6:     ldc '' \nL8:     invokespecial Method java/lang/StringBuffer <init> (Ljava/lang/String;)V \nL11:    astore 4 \nL13:    new java/util/Random \nL16:    dup \nL17:    invokespecial Method java/util/Random <init> ()V \nL20:    astore 5 \n\n        .stack full \n            locals Integer Top Top Integer Object java/lang/StringBuffer Object java/util/Random \n            stack \n        .end stack \nL22:    iload_3 \nL23:    iload_0 \nL24:    if_icmpge L67 \nL27:    aload 5 \nL29:    bipush 62 \nL31:    invokevirtual Method java/util/Random nextInt (I)I \nL34:    invokestatic Method java/lang/Math abs (I)I \nL37:    istore_2 \nL38:    iload_2 \nL39:    iflt L22 \nL42:    iload_2 \nL43:    getstatic Field PasswordGenerator charPool [C \nL46:    arraylength \nL47:    if_icmpge L22 \nL50:    aload 4 \nL52:    getstatic Field PasswordGenerator charPool [C \nL55:    iload_2 \nL56:    caload \nL57:    invokevirtual Method java/lang/StringBuffer append (C)Ljava/lang/StringBuffer; \nL60:    pop \nL61:    iinc 3 1 \nL64:    goto L22 \n\n        .stack same \nL67:    aload 4 \nL69:    invokevirtual Method java/lang/StringBuffer toString ()Ljava/lang/String; \nL72:    areturn \nL73:    \n        .linenumbertable \n            L0 23 \n            L2 25 \n            L13 27 \n            L22 29 \n            L27 32 \n            L38 34 \n            L50 35 \n            L61 36 \n            L67 40 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     bipush 6 \nL2:     invokestatic Method PasswordGenerator generate (I)Ljava/lang/String; \nL5:     astore_1 \nL6:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL9:     aload_1 \nL10:    invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \nL13:    return \nL14:    \n        .linenumbertable \n            L0 44 \n            L6 45 \n            L13 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 4 locals 0 \nL0:     bipush 62 \nL2:     newarray char \nL4:     dup \nL5:     iconst_0 \nL6:     bipush 97 \nL8:     castore \nL9:     dup \nL10:    iconst_1 \nL11:    bipush 98 \nL13:    castore \nL14:    dup \nL15:    iconst_2 \nL16:    bipush 99 \nL18:    castore \nL19:    dup \nL20:    iconst_3 \nL21:    bipush 100 \nL23:    castore \nL24:    dup \nL25:    iconst_4 \nL26:    bipush 101 \nL28:    castore \nL29:    dup \nL30:    iconst_5 \nL31:    bipush 102 \nL33:    castore \nL34:    dup \nL35:    bipush 6 \nL37:    bipush 103 \nL39:    castore \nL40:    dup \nL41:    bipush 7 \nL43:    bipush 104 \nL45:    castore \nL46:    dup \nL47:    bipush 8 \nL49:    bipush 105 \nL51:    castore \nL52:    dup \nL53:    bipush 9 \nL55:    bipush 106 \nL57:    castore \nL58:    dup \nL59:    bipush 10 \nL61:    bipush 107 \nL63:    castore \nL64:    dup \nL65:    bipush 11 \nL67:    bipush 108 \nL69:    castore \nL70:    dup \nL71:    bipush 12 \nL73:    bipush 109 \nL75:    castore \nL76:    dup \nL77:    bipush 13 \nL79:    bipush 110 \nL81:    castore \nL82:    dup \nL83:    bipush 14 \nL85:    bipush 111 \nL87:    castore \nL88:    dup \nL89:    bipush 15 \nL91:    bipush 112 \nL93:    castore \nL94:    dup \nL95:    bipush 16 \nL97:    bipush 113 \nL99:    castore \nL100:   dup \nL101:   bipush 17 \nL103:   bipush 114 \nL105:   castore \nL106:   dup \nL107:   bipush 18 \nL109:   bipush 115 \nL111:   castore \nL112:   dup \nL113:   bipush 19 \nL115:   bipush 116 \nL117:   castore \nL118:   dup \nL119:   bipush 20 \nL121:   bipush 117 \nL123:   castore \nL124:   dup \nL125:   bipush 21 \nL127:   bipush 118 \nL129:   castore \nL130:   dup \nL131:   bipush 22 \nL133:   bipush 119 \nL135:   castore \nL136:   dup \nL137:   bipush 23 \nL139:   bipush 120 \nL141:   castore \nL142:   dup \nL143:   bipush 24 \nL145:   bipush 121 \nL147:   castore \nL148:   dup \nL149:   bipush 25 \nL151:   bipush 122 \nL153:   castore \nL154:   dup \nL155:   bipush 26 \nL157:   bipush 48 \nL159:   castore \nL160:   dup \nL161:   bipush 27 \nL163:   bipush 49 \nL165:   castore \nL166:   dup \nL167:   bipush 28 \nL169:   bipush 50 \nL171:   castore \nL172:   dup \nL173:   bipush 29 \nL175:   bipush 51 \nL177:   castore \nL178:   dup \nL179:   bipush 30 \nL181:   bipush 52 \nL183:   castore \nL184:   dup \nL185:   bipush 31 \nL187:   bipush 53 \nL189:   castore \nL190:   dup \nL191:   bipush 32 \nL193:   bipush 54 \nL195:   castore \nL196:   dup \nL197:   bipush 33 \nL199:   bipush 55 \nL201:   castore \nL202:   dup \nL203:   bipush 34 \nL205:   bipush 56 \nL207:   castore \nL208:   dup \nL209:   bipush 35 \nL211:   bipush 57 \nL213:   castore \nL214:   dup \nL215:   bipush 36 \nL217:   bipush 65 \nL219:   castore \nL220:   dup \nL221:   bipush 37 \nL223:   bipush 66 \nL225:   castore \nL226:   dup \nL227:   bipush 38 \nL229:   bipush 67 \nL231:   castore \nL232:   dup \nL233:   bipush 39 \nL235:   bipush 68 \nL237:   castore \nL238:   dup \nL239:   bipush 40 \nL241:   bipush 69 \nL243:   castore \nL244:   dup \nL245:   bipush 41 \nL247:   bipush 70 \nL249:   castore \nL250:   dup \nL251:   bipush 42 \nL253:   bipush 71 \nL255:   castore \nL256:   dup \nL257:   bipush 43 \nL259:   bipush 72 \nL261:   castore \nL262:   dup \nL263:   bipush 44 \nL265:   bipush 73 \nL267:   castore \nL268:   dup \nL269:   bipush 45 \nL271:   bipush 74 \nL273:   castore \nL274:   dup \nL275:   bipush 46 \nL277:   bipush 75 \nL279:   castore \nL280:   dup \nL281:   bipush 47 \nL283:   bipush 76 \nL285:   castore \nL286:   dup \nL287:   bipush 48 \nL289:   bipush 77 \nL291:   castore \nL292:   dup \nL293:   bipush 49 \nL295:   bipush 78 \nL297:   castore \nL298:   dup \nL299:   bipush 50 \nL301:   bipush 79 \nL303:   castore \nL304:   dup \nL305:   bipush 51 \nL307:   bipush 80 \nL309:   castore \nL310:   dup \nL311:   bipush 52 \nL313:   bipush 81 \nL315:   castore \nL316:   dup \nL317:   bipush 53 \nL319:   bipush 82 \nL321:   castore \nL322:   dup \nL323:   bipush 54 \nL325:   bipush 83 \nL327:   castore \nL328:   dup \nL329:   bipush 55 \nL331:   bipush 84 \nL333:   castore \nL334:   dup \nL335:   bipush 56 \nL337:   bipush 85 \nL339:   castore \nL340:   dup \nL341:   bipush 57 \nL343:   bipush 86 \nL345:   castore \nL346:   dup \nL347:   bipush 58 \nL349:   bipush 87 \nL351:   castore \nL352:   dup \nL353:   bipush 59 \nL355:   bipush 88 \nL357:   castore \nL358:   dup \nL359:   bipush 60 \nL361:   bipush 89 \nL363:   castore \nL364:   dup \nL365:   bipush 61 \nL367:   bipush 90 \nL369:   castore \nL370:   putstatic Field PasswordGenerator charPool [C \nL373:   return \nL374:   \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'PasswordGenerator.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 03:22:28 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class PasswordGenerator_ESTest extends PasswordGenerator_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      int int0 = (-87031);\n      PasswordGenerator.generate((-87031));\n      int int1 = 0;\n      PasswordGenerator.generate(0);\n      PasswordGenerator.generate(0);\n      int int2 = 24096;\n      // Undeclared exception!\n      PasswordGenerator.generate(24096);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      int int0 = (-58540);\n      PasswordGenerator.generate((-58540));\n      PasswordGenerator passwordGenerator0 = new PasswordGenerator();\n      PasswordGenerator.generate(0);\n      // Undeclared exception!\n      PasswordGenerator.generate(38972);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      PasswordGenerator.generate(121);\n      String[] stringArray0 = new String[9];\n      stringArray0[0] = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n      stringArray0[1] = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n      stringArray0[2] = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n      stringArray0[3] = \"g.{Qx,&)/;\";\n      stringArray0[4] = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n      stringArray0[5] = \"k4;Cd!}}&\";\n      stringArray0[6] = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n      stringArray0[7] = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n      stringArray0[8] = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n      PasswordGenerator.main(stringArray0);\n      assertEquals(9, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      PasswordGenerator passwordGenerator0 = new PasswordGenerator();\n      String[] stringArray0 = new String[8];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \">>B_#\\\"<nx9Sg6\";\n      stringArray0[2] = \"08R~+qH\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \")..!i3\";\n      stringArray0[5] = \")DQI[C;6Cu\";\n      stringArray0[6] = \"\";\n      stringArray0[7] = \"\";\n      PasswordGenerator.main(stringArray0);\n      assertEquals(8, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      PasswordGenerator passwordGenerator0 = new PasswordGenerator();\n      String[] stringArray0 = new String[4];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"l.$ K5yhC3%cM\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"\";\n      PasswordGenerator.main(stringArray0);\n      assertEquals(4, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      PasswordGenerator.generate((-26968));\n      // Undeclared exception!\n      PasswordGenerator.generate(42685);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      PasswordGenerator.generate((-50714));\n      PasswordGenerator passwordGenerator0 = new PasswordGenerator();\n      String[] stringArray0 = new String[4];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"\";\n      PasswordGenerator.main(stringArray0);\n      String[] stringArray1 = new String[5];\n      stringArray1[0] = \"\";\n      stringArray1[1] = \"9,h$ufzKa\";\n      stringArray1[2] = \"\";\n      stringArray1[3] = \"\";\n      stringArray1[4] = \"\";\n      PasswordGenerator.main(stringArray1);\n      PasswordGenerator.main(stringArray1);\n      PasswordGenerator.main(stringArray1);\n      PasswordGenerator.main(stringArray1);\n      // Undeclared exception!\n      PasswordGenerator.generate(55666);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      PasswordGenerator passwordGenerator0 = new PasswordGenerator();\n      String[] stringArray0 = new String[9];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"=\";\n      stringArray0[2] = \"PasswordGenerator\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \"\";\n      stringArray0[5] = \"U\";\n      stringArray0[6] = \"N%KO@ :llMf?G\";\n      stringArray0[7] = \"$twMs:7R[\";\n      stringArray0[8] = \"Qu'<_S\";\n      PasswordGenerator.main(stringArray0);\n      PasswordGenerator.main((String[]) null);\n      PasswordGenerator.generate(0);\n      PasswordGenerator.generate(0);\n      String string0 = PasswordGenerator.generate(0);\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      PasswordGenerator.generate(111);\n      PasswordGenerator passwordGenerator0 = new PasswordGenerator();\n      String[] stringArray0 = new String[3];\n      stringArray0[0] = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n      stringArray0[1] = \"h\u007f/\";\n      stringArray0[2] = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n      PasswordGenerator.main(stringArray0);\n      assertEquals(3, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test9()  throws Throwable  {\n      PasswordGenerator.generate((-31406));\n      PasswordGenerator passwordGenerator0 = new PasswordGenerator();\n      String[] stringArray0 = new String[9];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \"\";\n      stringArray0[5] = \"\";\n      stringArray0[6] = \"\";\n      stringArray0[7] = \"\";\n      stringArray0[8] = \"\";\n      PasswordGenerator.main(stringArray0);\n      String string0 = PasswordGenerator.generate((-31406));\n      assertEquals(\"\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 03:22:28 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class PasswordGenerator_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"PasswordGenerator\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp8ya6ol47\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(PasswordGenerator_ESTest_scaffolding.class.getClassLoader() ,\n      \"PasswordGenerator\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(PasswordGenerator_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"PasswordGenerator\"\n    );\n  }\n}\n", "class_idx": 142}
{"class_name": "MfType", "java_source": "/*\n * This program is free software; you can redistribute it and/or modify it under the\n * terms of the GNU Lesser General Public License, version 2.1 as published by the Free Software\n * Foundation.\n *\n * You should have received a copy of the GNU Lesser General Public License along with this\n * program; if not, you can obtain a copy at http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n * or from the Free Software Foundation, Inc.,\n * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU Lesser General Public License for more details.\n *\n * Copyright (c) 2001 - 2013 Object Refinery Ltd, Pentaho Corporation and Contributors..  All rights reserved.\n */\n\n/** Predefined types of Windows metafile records. */\npublic class MfType {\n\n  // NOT YET IMPLEMENTED\n\n  // Needs Bitmap-Implementation to work correctly\n  public static final int CREATE_DIB_PATTERN_BRUSH = 0x0142;\n\n  // Needs Bitmap-Implementation to work correctly\n  public static final int CREATE_PATTERN_BRUSH = 0x01F9;\n  public static final int SET_DIBITS_TO_DEVICE = 0x0d33;\n\n  public static final int ANIMATE_PALETTE = 0x0436;\n  public static final int ARC = 0x0817;\n  public static final int BIT_BLT = 0x0940;\n  public static final int CHORD = 0x0830;\n  public static final int CREATE_BRUSH_INDIRECT = 0x02fc;\n  public static final int CREATE_FONT_INDIRECT = 0x02fb;\n  public static final int CREATE_PALETTE = 0x00f7;\n  public static final int CREATE_PEN_INDIRECT = 0x02fa;\n  public static final int CREATE_REGION = 0x06ff;\n  public static final int DELETE_OBJECT = 0x01f0;\n  public static final int ELLIPSE = 0x0418;\n  public static final int ESCAPE = 0x0626;\n  public static final int EXCLUDE_CLIP_RECT = 0x0415;\n  public static final int EXT_FLOOD_FILL = 0x0548;\n  public static final int EXT_TEXT_OUT = 0x0a32;\n  public static final int FLOOD_FILL = 0x0419;\n  public static final int FILL_REGION = 0x0228;\n  public static final int FRAME_REGION = 0x0429;\n  public static final int INTERSECT_CLIP_RECT = 0x0416;\n  public static final int INVERT_REGION = 0x012a;\n  public static final int LINE_TO = 0x0213;\n  public static final int MOVE_TO = 0x0214;\n  public static final int OFFSET_CLIP_RGN = 0x0220;\n  public static final int OFFSET_VIEWPORT_ORG = 0x0211;\n  public static final int OFFSET_WINDOW_ORG = 0x020f;\n  public static final int PAINTREGION = 0x012b;\n  public static final int PAT_BLT = 0x061d;\n  public static final int PIE = 0x081a;\n  public static final int POLYGON = 0x0324;\n  public static final int POLYLINE = 0x0325;\n  public static final int POLY_POLYGON = 0x0538;\n  public static final int REALISE_PALETTE = 0x0035;\n  public static final int RECTANGLE = 0x041b;\n  public static final int RESIZE_PALETTE = 0x0139;\n  public static final int RESTORE_DC = 0x0127;\n  public static final int ROUND_RECT = 0x061c;\n  public static final int SAVE_DC = 0x001e;\n  public static final int SCALE_VIEWPORT_EXT = 0x0412;\n  public static final int SCALE_WINDOW_EXT = 0x0400;\n  public static final int SELECT_CLIP_REGION = 0x012c;\n  public static final int SELECT_OBJECT = 0x012d;\n  public static final int SELECT_PALETTE = 0x0234;\n  public static final int SET_BK_COLOR = 0x0201;\n  public static final int SET_BK_MODE = 0x0102;\n  public static final int SET_MAP_MODE = 0x0103;\n  public static final int SET_MAPPER_FLAGS = 0x0231;\n  public static final int SET_PALETTE_ENTRIES = 0x0037;\n  public static final int SET_PIXEL = 0x041f;\n  public static final int SET_POLY_FILL_MODE = 0x0106;\n  public static final int SET_ROP2 = 0x0104;\n  public static final int SET_STRETCH_BLT_MODE = 0x0107;\n  public static final int SET_TEXT_ALIGN = 0x012e;\n  public static final int SET_TEXT_CHAR_EXTRA = 0x0108;\n  public static final int SET_TEXT_COLOR = 0x0209;\n  public static final int SET_TEXT_JUSTIFICATION = 0x020a;\n  public static final int SET_VIEWPORT_EXT = 0x020e;\n  public static final int SET_VIEWPORT_ORG = 0x020d;\n  public static final int SET_WINDOW_EXT = 0x020c;\n  public static final int SET_WINDOW_ORG = 0x020b;\n  public static final int STRETCH_BLT = 0x0b41;\n  public static final int STRETCH_DIBITS = 0x0f43;\n  public static final int TEXT_OUT = 0x0521;\n  public static final int END_OF_FILE = 0x0000;\n\n  public static final int OLD_STRETCH_BLT = 0x0b23;\n  public static final int OLD_CREATE_PATTERN_BRUSH = 0x01f9;\n  public static final int OLD_BIT_BLT = 0x0922;\n\n  /** Type bit flags. */\n  public static final int STATE = 0x01;\n\n  public static final int VECTOR = 0x02;\n  public static final int RASTER = 0x04;\n  public static final int MAPPING_MODE = 0x08;\n\n  /** All the known types. The last is the default. */\n  private static MfType[] ntab = {\n    new MfType(PAINTREGION, \"MfPaintRegion\", VECTOR),\n    new MfType(ARC, \"MfArc\", VECTOR),\n    new MfType(CHORD, \"MfChord\", VECTOR),\n    new MfType(ELLIPSE, \"MfEllipse\", VECTOR),\n    new MfType(EXCLUDE_CLIP_RECT, \"MfExcludeClipRect\", STATE),\n    new MfType(FLOOD_FILL, \"MfFloodFill\", VECTOR),\n    new MfType(INTERSECT_CLIP_RECT, \"MfIntersectClipRect\", STATE),\n    new MfType(LINE_TO, \"MfLineTo\", VECTOR),\n    new MfType(MOVE_TO, \"MfMoveTo\", STATE),\n    new MfType(OFFSET_CLIP_RGN, \"MfOffsetclipRgn\", STATE),\n    new MfType(OFFSET_VIEWPORT_ORG, \"MfOffsetViewportOrg\", STATE | MAPPING_MODE),\n    new MfType(OFFSET_WINDOW_ORG, \"MfOffsetWindowOrg\", STATE | MAPPING_MODE),\n    new MfType(PAT_BLT, \"MfPatBlt\", RASTER),\n    new MfType(PIE, \"MfPie\", VECTOR),\n    new MfType(REALISE_PALETTE, \"MfRealisePalette\", STATE),\n    new MfType(RECTANGLE, \"MfRectangle\", VECTOR),\n    new MfType(RESIZE_PALETTE, \"MfResizePalette\", STATE),\n    new MfType(RESTORE_DC, \"MfRestoreDC\", STATE | MAPPING_MODE),\n    new MfType(ROUND_RECT, \"MfRoundRect\", VECTOR),\n    new MfType(SAVE_DC, \"MfSaveDC\", STATE),\n    new MfType(SCALE_VIEWPORT_EXT, \"MfScaleViewportExt\", STATE | MAPPING_MODE),\n    new MfType(SCALE_WINDOW_EXT, \"MfScaleWindowExt\", STATE | MAPPING_MODE),\n    new MfType(SET_BK_COLOR, \"MfSetBkColor\", STATE),\n    new MfType(SET_BK_MODE, \"MfSetBkMode\", STATE),\n    new MfType(SET_MAP_MODE, \"MfSetMapMode\", STATE | MAPPING_MODE),\n    new MfType(SET_MAPPER_FLAGS, \"MfSetMapperFlags\", STATE),\n    new MfType(SET_PIXEL, \"MfSetPixel\", RASTER),\n    new MfType(SET_POLY_FILL_MODE, \"MfSetPolyFillMode\", STATE),\n    new MfType(SET_ROP2, \"MfSetROP2\", STATE),\n    new MfType(SET_STRETCH_BLT_MODE, \"MfSetStretchBltMode\", STATE),\n    new MfType(SET_TEXT_ALIGN, \"MfSetTextAlign\", STATE),\n    new MfType(SET_TEXT_CHAR_EXTRA, \"MfSetTextCharExtra\", STATE),\n    new MfType(SET_TEXT_COLOR, \"MfSetTextColor\", STATE),\n    new MfType(SET_TEXT_JUSTIFICATION, \"MfSetTextJustification\", STATE),\n    new MfType(SET_VIEWPORT_EXT, \"MfSetViewportExt\", STATE | MAPPING_MODE),\n    new MfType(SET_VIEWPORT_ORG, \"MfSetViewportOrg\", STATE | MAPPING_MODE),\n    new MfType(SET_WINDOW_EXT, \"MfSetWindowExt\", STATE | MAPPING_MODE),\n    new MfType(SET_WINDOW_ORG, \"MfSetWindowOrg\", STATE | MAPPING_MODE),\n    new MfType(ANIMATE_PALETTE, \"MfAnimatePalette\", STATE),\n    new MfType(BIT_BLT, \"MfBitBlt\", RASTER),\n    new MfType(OLD_BIT_BLT, \"MfOldBitBlt\", RASTER),\n    new MfType(CREATE_BRUSH_INDIRECT, \"MfCreateBrush\", STATE),\n    new MfType(CREATE_FONT_INDIRECT, \"MfCreateFont\", STATE),\n    new MfType(CREATE_PALETTE, \"MfCreatePalette\", STATE),\n    new MfType(OLD_CREATE_PATTERN_BRUSH, \"MfOldCreatePatternBrush\", STATE),\n    new MfType(CREATE_PATTERN_BRUSH, \"MfCreatePatternBrush\", STATE),\n    new MfType(CREATE_PEN_INDIRECT, \"MfCreatePen\", STATE),\n    new MfType(CREATE_REGION, \"MfCreateRegion\", STATE),\n    new MfType(DELETE_OBJECT, \"MfDeleteObject\", STATE),\n    //    new MfType( DRAW_TEXT, \"MfDrawText\", VECTOR ),\n    new MfType(ESCAPE, \"MfEscape\", STATE),\n    new MfType(EXT_TEXT_OUT, \"MfExtTextOut\", VECTOR),\n    new MfType(POLYGON, \"MfPolygon\", VECTOR),\n    new MfType(POLY_POLYGON, \"MfPolyPolygon\", VECTOR),\n    new MfType(POLYLINE, \"MfPolyline\", VECTOR),\n    new MfType(SELECT_CLIP_REGION, \"MfSelectClipRegion\", STATE),\n    new MfType(SELECT_OBJECT, \"MfSelectObject\", STATE),\n    new MfType(SELECT_PALETTE, \"MfSelectPalette\", STATE),\n    new MfType(SET_DIBITS_TO_DEVICE, \"MfSetDIBitsToDevice\", RASTER),\n    new MfType(SET_PALETTE_ENTRIES, \"MfSetPaletteEntries\", STATE),\n    new MfType(OLD_STRETCH_BLT, \"MfOldStretchBlt\", RASTER),\n    new MfType(STRETCH_BLT, \"MfStretchBlt\", RASTER),\n    new MfType(STRETCH_DIBITS, \"MfStretchDIBits\", RASTER),\n    new MfType(TEXT_OUT, \"MfTextOut\", VECTOR),\n    new MfType(END_OF_FILE, \"MfEndOfFile\", STATE),\n    new MfType(-1, \"MfUnknown\", 0)\n  };\n\n  /** Map a 16-bit type id onto an object. */\n  public static MfType get(final int id) {\n    for (int i = 0; i < ntab.length; i++) {\n      if (ntab[i].id == id) {\n        return ntab[i];\n      }\n    }\n    return ntab[ntab.length - 1]; // Not found.\n  }\n\n  // Getter functionen\n  private int id;\n  private int type;\n  private String name;\n\n  public int getId() {\n    return id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public int getType() {\n    return type;\n  }\n\n  /** True if this record marks the screen. */\n  public boolean doesMark() {\n    return (type & (VECTOR | RASTER)) != 0;\n  }\n\n  /** True if this record affects mapping modes. */\n  public boolean isMappingMode() {\n    return (type & MAPPING_MODE) != 0;\n  }\n\n  private MfType(final int id, final String name, final int type) {\n    this.id = id;\n    this.name = name;\n    this.type = type;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super MfType \n.super java/lang/Object \n.field public static final CREATE_DIB_PATTERN_BRUSH I = 322 \n.field public static final CREATE_PATTERN_BRUSH I = 505 \n.field public static final SET_DIBITS_TO_DEVICE I = 3379 \n.field public static final ANIMATE_PALETTE I = 1078 \n.field public static final ARC I = 2071 \n.field public static final BIT_BLT I = 2368 \n.field public static final CHORD I = 2096 \n.field public static final CREATE_BRUSH_INDIRECT I = 764 \n.field public static final CREATE_FONT_INDIRECT I = 763 \n.field public static final CREATE_PALETTE I = 247 \n.field public static final CREATE_PEN_INDIRECT I = 762 \n.field public static final CREATE_REGION I = 1791 \n.field public static final DELETE_OBJECT I = 496 \n.field public static final ELLIPSE I = 1048 \n.field public static final ESCAPE I = 1574 \n.field public static final EXCLUDE_CLIP_RECT I = 1045 \n.field public static final EXT_FLOOD_FILL I = 1352 \n.field public static final EXT_TEXT_OUT I = 2610 \n.field public static final FLOOD_FILL I = 1049 \n.field public static final FILL_REGION I = 552 \n.field public static final FRAME_REGION I = 1065 \n.field public static final INTERSECT_CLIP_RECT I = 1046 \n.field public static final INVERT_REGION I = 298 \n.field public static final LINE_TO I = 531 \n.field public static final MOVE_TO I = 532 \n.field public static final OFFSET_CLIP_RGN I = 544 \n.field public static final OFFSET_VIEWPORT_ORG I = 529 \n.field public static final OFFSET_WINDOW_ORG I = 527 \n.field public static final PAINTREGION I = 299 \n.field public static final PAT_BLT I = 1565 \n.field public static final PIE I = 2074 \n.field public static final POLYGON I = 804 \n.field public static final POLYLINE I = 805 \n.field public static final POLY_POLYGON I = 1336 \n.field public static final REALISE_PALETTE I = 53 \n.field public static final RECTANGLE I = 1051 \n.field public static final RESIZE_PALETTE I = 313 \n.field public static final RESTORE_DC I = 295 \n.field public static final ROUND_RECT I = 1564 \n.field public static final SAVE_DC I = 30 \n.field public static final SCALE_VIEWPORT_EXT I = 1042 \n.field public static final SCALE_WINDOW_EXT I = 1024 \n.field public static final SELECT_CLIP_REGION I = 300 \n.field public static final SELECT_OBJECT I = 301 \n.field public static final SELECT_PALETTE I = 564 \n.field public static final SET_BK_COLOR I = 513 \n.field public static final SET_BK_MODE I = 258 \n.field public static final SET_MAP_MODE I = 259 \n.field public static final SET_MAPPER_FLAGS I = 561 \n.field public static final SET_PALETTE_ENTRIES I = 55 \n.field public static final SET_PIXEL I = 1055 \n.field public static final SET_POLY_FILL_MODE I = 262 \n.field public static final SET_ROP2 I = 260 \n.field public static final SET_STRETCH_BLT_MODE I = 263 \n.field public static final SET_TEXT_ALIGN I = 302 \n.field public static final SET_TEXT_CHAR_EXTRA I = 264 \n.field public static final SET_TEXT_COLOR I = 521 \n.field public static final SET_TEXT_JUSTIFICATION I = 522 \n.field public static final SET_VIEWPORT_EXT I = 526 \n.field public static final SET_VIEWPORT_ORG I = 525 \n.field public static final SET_WINDOW_EXT I = 524 \n.field public static final SET_WINDOW_ORG I = 523 \n.field public static final STRETCH_BLT I = 2881 \n.field public static final STRETCH_DIBITS I = 3907 \n.field public static final TEXT_OUT I = 1313 \n.field public static final END_OF_FILE I = 0 \n.field public static final OLD_STRETCH_BLT I = 2851 \n.field public static final OLD_CREATE_PATTERN_BRUSH I = 505 \n.field public static final OLD_BIT_BLT I = 2338 \n.field public static final STATE I = 1 \n.field public static final VECTOR I = 2 \n.field public static final RASTER I = 4 \n.field public static final MAPPING_MODE I = 8 \n.field private static ntab [LMfType; \n.field private id I \n.field private type I \n.field private name Ljava/lang/String; \n\n.method public static get : (I)LMfType; \n    .code stack 3 locals 2 \nL0:     iconst_0 \nL1:     istore_1 \n\n        .stack append Integer \nL2:     iload_1 \nL3:     getstatic Field MfType ntab [LMfType; \nL6:     arraylength \nL7:     if_icmpge L34 \nL10:    getstatic Field MfType ntab [LMfType; \nL13:    iload_1 \nL14:    aaload \nL15:    getfield Field MfType id I \nL18:    iload_0 \nL19:    if_icmpne L28 \nL22:    getstatic Field MfType ntab [LMfType; \nL25:    iload_1 \nL26:    aaload \nL27:    areturn \n\n        .stack same \nL28:    iinc 1 1 \nL31:    goto L2 \n\n        .stack chop 1 \nL34:    getstatic Field MfType ntab [LMfType; \nL37:    getstatic Field MfType ntab [LMfType; \nL40:    arraylength \nL41:    iconst_1 \nL42:    isub \nL43:    aaload \nL44:    areturn \nL45:    \n        .linenumbertable \n            L0 189 \n            L10 190 \n            L22 191 \n            L28 189 \n            L34 194 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getId : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field MfType id I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 203 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field MfType name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 207 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getType : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field MfType type I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 211 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public doesMark : ()Z \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field MfType type I \nL4:     bipush 6 \nL6:     iand \nL7:     ifeq L14 \nL10:    iconst_1 \nL11:    goto L15 \n\n        .stack same \nL14:    iconst_0 \n\n        .stack stack_1 Integer \nL15:    ireturn \nL16:    \n        .linenumbertable \n            L0 218 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public isMappingMode : ()Z \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field MfType type I \nL4:     bipush 8 \nL6:     iand \nL7:     ifeq L14 \nL10:    iconst_1 \nL11:    goto L15 \n\n        .stack same \nL14:    iconst_0 \n\n        .stack stack_1 Integer \nL15:    ireturn \nL16:    \n        .linenumbertable \n            L0 225 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private <init> : (ILjava/lang/String;I)V \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field MfType id I \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field MfType name Ljava/lang/String; \nL14:    aload_0 \nL15:    iload_3 \nL16:    putfield Field MfType type I \nL19:    return \nL20:    \n        .linenumbertable \n            L0 228 \n            L4 229 \n            L9 230 \n            L14 231 \n            L19 232 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 8 locals 0 \nL0:     bipush 65 \nL2:     anewarray MfType \nL5:     dup \nL6:     iconst_0 \nL7:     new MfType \nL10:    dup \nL11:    sipush 299 \nL14:    ldc 'MfPaintRegion' \nL16:    iconst_2 \nL17:    invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL20:    aastore \nL21:    dup \nL22:    iconst_1 \nL23:    new MfType \nL26:    dup \nL27:    sipush 2071 \nL30:    ldc 'MfArc' \nL32:    iconst_2 \nL33:    invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL36:    aastore \nL37:    dup \nL38:    iconst_2 \nL39:    new MfType \nL42:    dup \nL43:    sipush 2096 \nL46:    ldc 'MfChord' \nL48:    iconst_2 \nL49:    invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL52:    aastore \nL53:    dup \nL54:    iconst_3 \nL55:    new MfType \nL58:    dup \nL59:    sipush 1048 \nL62:    ldc 'MfEllipse' \nL64:    iconst_2 \nL65:    invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL68:    aastore \nL69:    dup \nL70:    iconst_4 \nL71:    new MfType \nL74:    dup \nL75:    sipush 1045 \nL78:    ldc 'MfExcludeClipRect' \nL80:    iconst_1 \nL81:    invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL84:    aastore \nL85:    dup \nL86:    iconst_5 \nL87:    new MfType \nL90:    dup \nL91:    sipush 1049 \nL94:    ldc 'MfFloodFill' \nL96:    iconst_2 \nL97:    invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL100:   aastore \nL101:   dup \nL102:   bipush 6 \nL104:   new MfType \nL107:   dup \nL108:   sipush 1046 \nL111:   ldc 'MfIntersectClipRect' \nL113:   iconst_1 \nL114:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL117:   aastore \nL118:   dup \nL119:   bipush 7 \nL121:   new MfType \nL124:   dup \nL125:   sipush 531 \nL128:   ldc 'MfLineTo' \nL130:   iconst_2 \nL131:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL134:   aastore \nL135:   dup \nL136:   bipush 8 \nL138:   new MfType \nL141:   dup \nL142:   sipush 532 \nL145:   ldc 'MfMoveTo' \nL147:   iconst_1 \nL148:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL151:   aastore \nL152:   dup \nL153:   bipush 9 \nL155:   new MfType \nL158:   dup \nL159:   sipush 544 \nL162:   ldc 'MfOffsetclipRgn' \nL164:   iconst_1 \nL165:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL168:   aastore \nL169:   dup \nL170:   bipush 10 \nL172:   new MfType \nL175:   dup \nL176:   sipush 529 \nL179:   ldc 'MfOffsetViewportOrg' \nL181:   bipush 9 \nL183:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL186:   aastore \nL187:   dup \nL188:   bipush 11 \nL190:   new MfType \nL193:   dup \nL194:   sipush 527 \nL197:   ldc 'MfOffsetWindowOrg' \nL199:   bipush 9 \nL201:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL204:   aastore \nL205:   dup \nL206:   bipush 12 \nL208:   new MfType \nL211:   dup \nL212:   sipush 1565 \nL215:   ldc 'MfPatBlt' \nL217:   iconst_4 \nL218:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL221:   aastore \nL222:   dup \nL223:   bipush 13 \nL225:   new MfType \nL228:   dup \nL229:   sipush 2074 \nL232:   ldc 'MfPie' \nL234:   iconst_2 \nL235:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL238:   aastore \nL239:   dup \nL240:   bipush 14 \nL242:   new MfType \nL245:   dup \nL246:   bipush 53 \nL248:   ldc 'MfRealisePalette' \nL250:   iconst_1 \nL251:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL254:   aastore \nL255:   dup \nL256:   bipush 15 \nL258:   new MfType \nL261:   dup \nL262:   sipush 1051 \nL265:   ldc 'MfRectangle' \nL267:   iconst_2 \nL268:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL271:   aastore \nL272:   dup \nL273:   bipush 16 \nL275:   new MfType \nL278:   dup \nL279:   sipush 313 \nL282:   ldc 'MfResizePalette' \nL284:   iconst_1 \nL285:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL288:   aastore \nL289:   dup \nL290:   bipush 17 \nL292:   new MfType \nL295:   dup \nL296:   sipush 295 \nL299:   ldc 'MfRestoreDC' \nL301:   bipush 9 \nL303:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL306:   aastore \nL307:   dup \nL308:   bipush 18 \nL310:   new MfType \nL313:   dup \nL314:   sipush 1564 \nL317:   ldc 'MfRoundRect' \nL319:   iconst_2 \nL320:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL323:   aastore \nL324:   dup \nL325:   bipush 19 \nL327:   new MfType \nL330:   dup \nL331:   bipush 30 \nL333:   ldc 'MfSaveDC' \nL335:   iconst_1 \nL336:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL339:   aastore \nL340:   dup \nL341:   bipush 20 \nL343:   new MfType \nL346:   dup \nL347:   sipush 1042 \nL350:   ldc 'MfScaleViewportExt' \nL352:   bipush 9 \nL354:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL357:   aastore \nL358:   dup \nL359:   bipush 21 \nL361:   new MfType \nL364:   dup \nL365:   sipush 1024 \nL368:   ldc 'MfScaleWindowExt' \nL370:   bipush 9 \nL372:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL375:   aastore \nL376:   dup \nL377:   bipush 22 \nL379:   new MfType \nL382:   dup \nL383:   sipush 513 \nL386:   ldc 'MfSetBkColor' \nL388:   iconst_1 \nL389:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL392:   aastore \nL393:   dup \nL394:   bipush 23 \nL396:   new MfType \nL399:   dup \nL400:   sipush 258 \nL403:   ldc 'MfSetBkMode' \nL405:   iconst_1 \nL406:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL409:   aastore \nL410:   dup \nL411:   bipush 24 \nL413:   new MfType \nL416:   dup \nL417:   sipush 259 \nL420:   ldc 'MfSetMapMode' \nL422:   bipush 9 \nL424:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL427:   aastore \nL428:   dup \nL429:   bipush 25 \nL431:   new MfType \nL434:   dup \nL435:   sipush 561 \nL438:   ldc 'MfSetMapperFlags' \nL440:   iconst_1 \nL441:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL444:   aastore \nL445:   dup \nL446:   bipush 26 \nL448:   new MfType \nL451:   dup \nL452:   sipush 1055 \nL455:   ldc 'MfSetPixel' \nL457:   iconst_4 \nL458:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL461:   aastore \nL462:   dup \nL463:   bipush 27 \nL465:   new MfType \nL468:   dup \nL469:   sipush 262 \nL472:   ldc 'MfSetPolyFillMode' \nL474:   iconst_1 \nL475:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL478:   aastore \nL479:   dup \nL480:   bipush 28 \nL482:   new MfType \nL485:   dup \nL486:   sipush 260 \nL489:   ldc 'MfSetROP2' \nL491:   iconst_1 \nL492:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL495:   aastore \nL496:   dup \nL497:   bipush 29 \nL499:   new MfType \nL502:   dup \nL503:   sipush 263 \nL506:   ldc 'MfSetStretchBltMode' \nL508:   iconst_1 \nL509:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL512:   aastore \nL513:   dup \nL514:   bipush 30 \nL516:   new MfType \nL519:   dup \nL520:   sipush 302 \nL523:   ldc 'MfSetTextAlign' \nL525:   iconst_1 \nL526:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL529:   aastore \nL530:   dup \nL531:   bipush 31 \nL533:   new MfType \nL536:   dup \nL537:   sipush 264 \nL540:   ldc 'MfSetTextCharExtra' \nL542:   iconst_1 \nL543:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL546:   aastore \nL547:   dup \nL548:   bipush 32 \nL550:   new MfType \nL553:   dup \nL554:   sipush 521 \nL557:   ldc 'MfSetTextColor' \nL559:   iconst_1 \nL560:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL563:   aastore \nL564:   dup \nL565:   bipush 33 \nL567:   new MfType \nL570:   dup \nL571:   sipush 522 \nL574:   ldc 'MfSetTextJustification' \nL576:   iconst_1 \nL577:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL580:   aastore \nL581:   dup \nL582:   bipush 34 \nL584:   new MfType \nL587:   dup \nL588:   sipush 526 \nL591:   ldc 'MfSetViewportExt' \nL593:   bipush 9 \nL595:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL598:   aastore \nL599:   dup \nL600:   bipush 35 \nL602:   new MfType \nL605:   dup \nL606:   sipush 525 \nL609:   ldc 'MfSetViewportOrg' \nL611:   bipush 9 \nL613:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL616:   aastore \nL617:   dup \nL618:   bipush 36 \nL620:   new MfType \nL623:   dup \nL624:   sipush 524 \nL627:   ldc 'MfSetWindowExt' \nL629:   bipush 9 \nL631:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL634:   aastore \nL635:   dup \nL636:   bipush 37 \nL638:   new MfType \nL641:   dup \nL642:   sipush 523 \nL645:   ldc 'MfSetWindowOrg' \nL647:   bipush 9 \nL649:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL652:   aastore \nL653:   dup \nL654:   bipush 38 \nL656:   new MfType \nL659:   dup \nL660:   sipush 1078 \nL663:   ldc 'MfAnimatePalette' \nL665:   iconst_1 \nL666:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL669:   aastore \nL670:   dup \nL671:   bipush 39 \nL673:   new MfType \nL676:   dup \nL677:   sipush 2368 \nL680:   ldc 'MfBitBlt' \nL682:   iconst_4 \nL683:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL686:   aastore \nL687:   dup \nL688:   bipush 40 \nL690:   new MfType \nL693:   dup \nL694:   sipush 2338 \nL697:   ldc 'MfOldBitBlt' \nL699:   iconst_4 \nL700:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL703:   aastore \nL704:   dup \nL705:   bipush 41 \nL707:   new MfType \nL710:   dup \nL711:   sipush 764 \nL714:   ldc 'MfCreateBrush' \nL716:   iconst_1 \nL717:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL720:   aastore \nL721:   dup \nL722:   bipush 42 \nL724:   new MfType \nL727:   dup \nL728:   sipush 763 \nL731:   ldc 'MfCreateFont' \nL733:   iconst_1 \nL734:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL737:   aastore \nL738:   dup \nL739:   bipush 43 \nL741:   new MfType \nL744:   dup \nL745:   sipush 247 \nL748:   ldc 'MfCreatePalette' \nL750:   iconst_1 \nL751:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL754:   aastore \nL755:   dup \nL756:   bipush 44 \nL758:   new MfType \nL761:   dup \nL762:   sipush 505 \nL765:   ldc 'MfOldCreatePatternBrush' \nL767:   iconst_1 \nL768:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL771:   aastore \nL772:   dup \nL773:   bipush 45 \nL775:   new MfType \nL778:   dup \nL779:   sipush 505 \nL782:   ldc 'MfCreatePatternBrush' \nL784:   iconst_1 \nL785:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL788:   aastore \nL789:   dup \nL790:   bipush 46 \nL792:   new MfType \nL795:   dup \nL796:   sipush 762 \nL799:   ldc 'MfCreatePen' \nL801:   iconst_1 \nL802:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL805:   aastore \nL806:   dup \nL807:   bipush 47 \nL809:   new MfType \nL812:   dup \nL813:   sipush 1791 \nL816:   ldc 'MfCreateRegion' \nL818:   iconst_1 \nL819:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL822:   aastore \nL823:   dup \nL824:   bipush 48 \nL826:   new MfType \nL829:   dup \nL830:   sipush 496 \nL833:   ldc 'MfDeleteObject' \nL835:   iconst_1 \nL836:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL839:   aastore \nL840:   dup \nL841:   bipush 49 \nL843:   new MfType \nL846:   dup \nL847:   sipush 1574 \nL850:   ldc 'MfEscape' \nL852:   iconst_1 \nL853:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL856:   aastore \nL857:   dup \nL858:   bipush 50 \nL860:   new MfType \nL863:   dup \nL864:   sipush 2610 \nL867:   ldc 'MfExtTextOut' \nL869:   iconst_2 \nL870:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL873:   aastore \nL874:   dup \nL875:   bipush 51 \nL877:   new MfType \nL880:   dup \nL881:   sipush 804 \nL884:   ldc 'MfPolygon' \nL886:   iconst_2 \nL887:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL890:   aastore \nL891:   dup \nL892:   bipush 52 \nL894:   new MfType \nL897:   dup \nL898:   sipush 1336 \nL901:   ldc 'MfPolyPolygon' \nL903:   iconst_2 \nL904:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL907:   aastore \nL908:   dup \nL909:   bipush 53 \nL911:   new MfType \nL914:   dup \nL915:   sipush 805 \nL918:   ldc 'MfPolyline' \nL920:   iconst_2 \nL921:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL924:   aastore \nL925:   dup \nL926:   bipush 54 \nL928:   new MfType \nL931:   dup \nL932:   sipush 300 \nL935:   ldc 'MfSelectClipRegion' \nL937:   iconst_1 \nL938:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL941:   aastore \nL942:   dup \nL943:   bipush 55 \nL945:   new MfType \nL948:   dup \nL949:   sipush 301 \nL952:   ldc 'MfSelectObject' \nL954:   iconst_1 \nL955:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL958:   aastore \nL959:   dup \nL960:   bipush 56 \nL962:   new MfType \nL965:   dup \nL966:   sipush 564 \nL969:   ldc 'MfSelectPalette' \nL971:   iconst_1 \nL972:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL975:   aastore \nL976:   dup \nL977:   bipush 57 \nL979:   new MfType \nL982:   dup \nL983:   sipush 3379 \nL986:   ldc 'MfSetDIBitsToDevice' \nL988:   iconst_4 \nL989:   invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL992:   aastore \nL993:   dup \nL994:   bipush 58 \nL996:   new MfType \nL999:   dup \nL1000:  bipush 55 \nL1002:  ldc 'MfSetPaletteEntries' \nL1004:  iconst_1 \nL1005:  invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL1008:  aastore \nL1009:  dup \nL1010:  bipush 59 \nL1012:  new MfType \nL1015:  dup \nL1016:  sipush 2851 \nL1019:  ldc 'MfOldStretchBlt' \nL1021:  iconst_4 \nL1022:  invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL1025:  aastore \nL1026:  dup \nL1027:  bipush 60 \nL1029:  new MfType \nL1032:  dup \nL1033:  sipush 2881 \nL1036:  ldc 'MfStretchBlt' \nL1038:  iconst_4 \nL1039:  invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL1042:  aastore \nL1043:  dup \nL1044:  bipush 61 \nL1046:  new MfType \nL1049:  dup \nL1050:  sipush 3907 \nL1053:  ldc 'MfStretchDIBits' \nL1055:  iconst_4 \nL1056:  invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL1059:  aastore \nL1060:  dup \nL1061:  bipush 62 \nL1063:  new MfType \nL1066:  dup \nL1067:  sipush 1313 \nL1070:  ldc 'MfTextOut' \nL1072:  iconst_2 \nL1073:  invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL1076:  aastore \nL1077:  dup \nL1078:  bipush 63 \nL1080:  new MfType \nL1083:  dup \nL1084:  iconst_0 \nL1085:  ldc 'MfEndOfFile' \nL1087:  iconst_1 \nL1088:  invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL1091:  aastore \nL1092:  dup \nL1093:  bipush 64 \nL1095:  new MfType \nL1098:  dup \nL1099:  iconst_m1 \nL1100:  ldc 'MfUnknown' \nL1102:  iconst_0 \nL1103:  invokespecial Method MfType <init> (ILjava/lang/String;I)V \nL1106:  aastore \nL1107:  putstatic Field MfType ntab [LMfType; \nL1110:  return \nL1111:  \n        .linenumbertable \n            L0 115 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'MfType.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 03:06:13 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class MfType_ESTest extends MfType_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      MfType mfType0 = MfType.get((-65919));\n      int int0 = mfType0.getId();\n      assertEquals((-1), int0);\n      \n      mfType0.getName();\n      mfType0.getType();\n      boolean boolean0 = mfType0.doesMark();\n      MfType.get(4);\n      boolean boolean1 = mfType0.isMappingMode();\n      assertTrue(boolean1 == boolean0);\n      \n      MfType mfType1 = MfType.get(3379);\n      assertEquals(4, mfType1.getType());\n      assertTrue(mfType1.doesMark());\n      assertFalse(mfType1.isMappingMode());\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      MfType mfType0 = MfType.get((-65919));\n      mfType0.getId();\n      mfType0.getName();\n      mfType0.getType();\n      MfType mfType1 = MfType.get(3379);\n      mfType1.getId();\n      boolean boolean0 = mfType0.isMappingMode();\n      int int0 = mfType1.getType();\n      assertEquals(4, int0);\n      \n      mfType0.getType();\n      MfType mfType2 = MfType.get(1);\n      boolean boolean1 = mfType0.doesMark();\n      assertTrue(boolean1 == boolean0);\n      \n      int int1 = mfType2.getId();\n      assertEquals((-1), int1);\n      \n      mfType1.getName();\n      assertFalse(mfType1.isMappingMode());\n      assertTrue(mfType1.doesMark());\n      \n      String string0 = mfType0.getName();\n      assertEquals(\"MfUnknown\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      MfType mfType0 = MfType.get(3379);\n      int int0 = mfType0.getId();\n      assertEquals(3379, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      MfType mfType0 = MfType.get(259);\n      boolean boolean0 = mfType0.isMappingMode();\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      MfType mfType0 = MfType.get(0);\n      boolean boolean0 = mfType0.isMappingMode();\n      assertEquals(0, mfType0.getId());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      MfType mfType0 = MfType.get(1051);\n      boolean boolean0 = mfType0.doesMark();\n      assertTrue(boolean0);\n      assertEquals(\"MfRectangle\", mfType0.getName());\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      MfType mfType0 = MfType.get(0);\n      int int0 = mfType0.getId();\n      assertEquals(0, int0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 03:06:13 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class MfType_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"MfType\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpe0c3gqvi\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MfType_ESTest_scaffolding.class.getClassLoader() ,\n      \"MfType\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MfType_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"MfType\"\n    );\n  }\n}\n", "class_idx": 143}
{"class_name": "ClientToServerPacket", "java_source": "import java.io.DataOutputStream;\nimport java.io.IOException;\n\npublic abstract class ClientToServerPacket {\n\n  protected ClientToServerPacket() {}\n\n  public abstract void writeToStream(DataOutputStream stream) throws IOException;\n\n  public abstract int getLength();\n}\n", "jasm_code": ".version 52 0 \n.class public super abstract ClientToServerPacket \n.super java/lang/Object \n\n.method protected <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 9 \n            L4 10 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public abstract writeToStream : (Ljava/io/DataOutputStream;)V \n    .exceptions java/io/IOException \n.end method \n\n.method public abstract getLength : ()I \n.end method \n.sourcefile 'ClientToServerPacket.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 14:35:33 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ClientToServerPacket_ESTest extends ClientToServerPacket_ESTest_scaffolding {\n  @Test\n  public void notGeneratedAnyTest() {\n    // EvoSuite did not generate any tests\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 14:35:33 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ClientToServerPacket_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ClientToServerPacket\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    /*No java.lang.System property to set*/\n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ClientToServerPacket_ESTest_scaffolding.class.getClassLoader() ,\n      \"ClientToServerPacket\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ClientToServerPacket_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ClientToServerPacket\"\n    );\n  }\n}\n", "class_idx": 144}
{"class_name": "Constants", "java_source": "public class Constants {\n  public static String ACCOUNT_NAME = \"Periodicos RD\";\n  public static String ACCOUNT_TYPE = \"com.wmendez.diariolibre.syncadapter\";\n  public static String CONTENT_AUTHORITY = ACCOUNT_TYPE;\n  public static final int UPDATE_FREQUENCY = 2 * 60 * 60; // Every two hours\n}\n", "jasm_code": ".version 52 0 \n.class public super Constants \n.super java/lang/Object \n.field public static ACCOUNT_NAME Ljava/lang/String; \n.field public static ACCOUNT_TYPE Ljava/lang/String; \n.field public static CONTENT_AUTHORITY Ljava/lang/String; \n.field public static final UPDATE_FREQUENCY I = 7200 \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 1 locals 0 \nL0:     ldc 'Periodicos RD' \nL2:     putstatic Field Constants ACCOUNT_NAME Ljava/lang/String; \nL5:     ldc 'com.wmendez.diariolibre.syncadapter' \nL7:     putstatic Field Constants ACCOUNT_TYPE Ljava/lang/String; \nL10:    getstatic Field Constants ACCOUNT_TYPE Ljava/lang/String; \nL13:    putstatic Field Constants CONTENT_AUTHORITY Ljava/lang/String; \nL16:    return \nL17:    \n        .linenumbertable \n            L0 4 \n            L5 5 \n            L10 6 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Constants.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 13:30:48 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Constants_ESTest extends Constants_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Constants constants0 = new Constants();\n      assertEquals(7200, Constants.UPDATE_FREQUENCY);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 13:30:48 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Constants_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Constants\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmprzrzp_rj\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Constants_ESTest_scaffolding.class.getClassLoader() ,\n      \"Constants\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Constants_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Constants\"\n    );\n  }\n}\n", "class_idx": 145}
{"class_name": "AppLogger", "java_source": "/** Creaated by Balwinder on 26/08/17. */\npublic class AppLogger {\n\n  /*    public static void init() {\n      if (BuildConfig.DEBUG) {\n          Timber.plant(new Timber.DebugTree());\n      }\n  }\n\n  public static void d(String s, Object... objects) {\n      Timber.d(s, objects);\n  }\n\n  public static void d(Throwable throwable, String s, Object... objects) {\n      Timber.d(throwable, s, objects);\n  }\n\n  public static void i(String s, Object... objects) {\n      Timber.i(s, objects);\n  }\n\n  public static void i(Throwable throwable, String s, Object... objects) {\n      Timber.i(throwable, s, objects);\n  }\n\n  public static void w(String s, Object... objects) {\n      Timber.w(s, objects);\n  }\n\n  public static void w(Throwable throwable, String s, Object... objects) {\n      Timber.w(throwable, s, objects);\n  }\n\n  public static void e(String s, Object... objects) {\n      Timber.e(s, objects);\n  }\n\n  public static void e(Throwable throwable, String s, Object... objects) {\n      Timber.e(throwable, s, objects);\n  }*/\n\n}\n", "jasm_code": ".version 52 0 \n.class public super AppLogger \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 11 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'AppLogger.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 14:17:54 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class AppLogger_ESTest extends AppLogger_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      AppLogger appLogger0 = new AppLogger();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 14:17:54 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class AppLogger_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"AppLogger\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpez3p2m4f\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AppLogger_ESTest_scaffolding.class.getClassLoader() ,\n      \"AppLogger\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AppLogger_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"AppLogger\"\n    );\n  }\n}\n", "class_idx": 146}
{"class_name": "VersionDTO", "java_source": "/*\n * Copyright(c) 2016 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport java.util.HashMap;\nimport java.util.Map;\n\n/** The specific object holds all the information related to Version. */\npublic class VersionDTO {\n\n  /** Minimum version of API supported, initial should be \"1.0\". */\n  private double minVersion;\n\n  /** Maximum version of API. */\n  private double maxVersion;\n\n  private Map<String, String> versionContexts;\n\n  /** Default Constructor. */\n  public VersionDTO() {}\n\n  public VersionDTO withMinVersion(double min) {\n    minVersion = min;\n    return this;\n  }\n\n  public VersionDTO withMaxVersion(double max) {\n    maxVersion = max;\n    return this;\n  }\n\n  public VersionDTO withVersionContext(double version, String contextPrefix) {\n    if (null == versionContexts) {\n      versionContexts = new HashMap<String, String>();\n    }\n    versionContexts.put(Double.toString(version), contextPrefix);\n    return this;\n  }\n\n  /**\n   * Returns the minimum supported Version.\n   *\n   * @return A double with the Version\n   */\n  public double getMinVersion() {\n    return minVersion;\n  }\n\n  /**\n   * Set the minimum supported Version.\n   *\n   * @param minVersion a double with the Version\n   */\n  public void setMinVersion(final double minVersion) {\n    this.minVersion = minVersion;\n  }\n\n  /**\n   * Returns the maximum supported Version.\n   *\n   * @return a double with maximum supported Version\n   */\n  public double getMaxVersion() {\n    return maxVersion;\n  }\n\n  /**\n   * Set the maximum supported Version.\n   *\n   * @param maxVersion a double with the maximum supported Version\n   */\n  public void setMaxVersion(final double maxVersion) {\n    this.maxVersion = maxVersion;\n  }\n\n  public Map<String, String> getVersionContexts() {\n    return versionContexts;\n  }\n\n  public void setVersionContexts(Map<String, String> versionContexts) {\n    this.versionContexts = versionContexts;\n  }\n\n  /* (non-Javadoc)\n   * @see java.lang.Object#toString()\n   */\n  @Override\n  public String toString() {\n    StringBuilder builder = new StringBuilder();\n    builder\n        .append(\"VersionDTO [minVersion=\")\n        .append(minVersion)\n        .append(\", maxVersion=\")\n        .append(maxVersion)\n        .append(\", versionContexts=\")\n        .append(versionContexts)\n        .append(\"]\");\n    return builder.toString();\n  }\n\n  /* (non-Javadoc)\n   * @see java.lang.Object#hashCode()\n   */\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    long temp;\n    temp = Double.doubleToLongBits(maxVersion);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(minVersion);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    result = prime * result + ((versionContexts == null) ? 0 : versionContexts.hashCode());\n    return result;\n  }\n\n  /* (non-Javadoc)\n   * @see java.lang.Object#equals(java.lang.Object)\n   */\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (obj == null) return false;\n    if (!(obj instanceof VersionDTO)) return false;\n    VersionDTO other = (VersionDTO) obj;\n    if (Double.doubleToLongBits(maxVersion) != Double.doubleToLongBits(other.maxVersion))\n      return false;\n    if (Double.doubleToLongBits(minVersion) != Double.doubleToLongBits(other.minVersion))\n      return false;\n    if (versionContexts == null) {\n      if (other.versionContexts != null) return false;\n    } else if (!versionContexts.equals(other.versionContexts)) return false;\n    return true;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super VersionDTO \n.super java/lang/Object \n.field private minVersion D \n.field private maxVersion D \n.field private versionContexts Ljava/util/Map; .fieldattributes \n    .signature Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>; \n.end fieldattributes \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 43 \n            L4 44 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public withMinVersion : (D)LVersionDTO; \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     dload_1 \nL2:     putfield Field VersionDTO minVersion D \nL5:     aload_0 \nL6:     areturn \nL7:     \n        .linenumbertable \n            L0 47 \n            L5 48 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public withMaxVersion : (D)LVersionDTO; \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     dload_1 \nL2:     putfield Field VersionDTO maxVersion D \nL5:     aload_0 \nL6:     areturn \nL7:     \n        .linenumbertable \n            L0 52 \n            L5 53 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public withVersionContext : (DLjava/lang/String;)LVersionDTO; \n    .code stack 3 locals 4 \nL0:     aconst_null \nL1:     aload_0 \nL2:     getfield Field VersionDTO versionContexts Ljava/util/Map; \nL5:     if_acmpne L19 \nL8:     aload_0 \nL9:     new java/util/HashMap \nL12:    dup \nL13:    invokespecial Method java/util/HashMap <init> ()V \nL16:    putfield Field VersionDTO versionContexts Ljava/util/Map; \n\n        .stack same \nL19:    aload_0 \nL20:    getfield Field VersionDTO versionContexts Ljava/util/Map; \nL23:    dload_1 \nL24:    invokestatic Method java/lang/Double toString (D)Ljava/lang/String; \nL27:    aload_3 \nL28:    invokeinterface InterfaceMethod java/util/Map put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; 3 \nL33:    pop \nL34:    aload_0 \nL35:    areturn \nL36:    \n        .linenumbertable \n            L0 57 \n            L8 58 \n            L19 60 \n            L34 61 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getMinVersion : ()D \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field VersionDTO minVersion D \nL4:     dreturn \nL5:     \n        .linenumbertable \n            L0 70 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setMinVersion : (D)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     dload_1 \nL2:     putfield Field VersionDTO minVersion D \nL5:     return \nL6:     \n        .linenumbertable \n            L0 79 \n            L5 80 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getMaxVersion : ()D \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field VersionDTO maxVersion D \nL4:     dreturn \nL5:     \n        .linenumbertable \n            L0 88 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setMaxVersion : (D)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     dload_1 \nL2:     putfield Field VersionDTO maxVersion D \nL5:     return \nL6:     \n        .linenumbertable \n            L0 97 \n            L5 98 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getVersionContexts : ()Ljava/util/Map; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field VersionDTO versionContexts Ljava/util/Map; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 102 \n        .end linenumbertable \n    .end code \n    .signature ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>; \n.end method \n\n.method public setVersionContexts : (Ljava/util/Map;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field VersionDTO versionContexts Ljava/util/Map; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 106 \n            L5 107 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 3 locals 2 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     astore_1 \nL8:     aload_1 \nL9:     ldc 'VersionDTO [minVersion=' \nL11:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL14:    aload_0 \nL15:    getfield Field VersionDTO minVersion D \nL18:    invokevirtual Method java/lang/StringBuilder append (D)Ljava/lang/StringBuilder; \nL21:    ldc ', maxVersion=' \nL23:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL26:    aload_0 \nL27:    getfield Field VersionDTO maxVersion D \nL30:    invokevirtual Method java/lang/StringBuilder append (D)Ljava/lang/StringBuilder; \nL33:    ldc ', versionContexts=' \nL35:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL38:    aload_0 \nL39:    getfield Field VersionDTO versionContexts Ljava/util/Map; \nL42:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/Object;)Ljava/lang/StringBuilder; \nL45:    ldc ']' \nL47:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL50:    pop \nL51:    aload_1 \nL52:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL55:    areturn \nL56:    \n        .linenumbertable \n            L0 114 \n            L8 115 \n            L23 116 \n            L35 117 \n            L47 118 \n            L51 119 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public hashCode : ()I \n    .code stack 6 locals 5 \nL0:     iconst_1 \nL1:     istore_2 \nL2:     aload_0 \nL3:     getfield Field VersionDTO maxVersion D \nL6:     invokestatic Method java/lang/Double doubleToLongBits (D)J \nL9:     lstore_3 \nL10:    bipush 31 \nL12:    iload_2 \nL13:    imul \nL14:    lload_3 \nL15:    lload_3 \nL16:    bipush 32 \nL18:    lushr \nL19:    lxor \nL20:    l2i \nL21:    iadd \nL22:    istore_2 \nL23:    aload_0 \nL24:    getfield Field VersionDTO minVersion D \nL27:    invokestatic Method java/lang/Double doubleToLongBits (D)J \nL30:    lstore_3 \nL31:    bipush 31 \nL33:    iload_2 \nL34:    imul \nL35:    lload_3 \nL36:    lload_3 \nL37:    bipush 32 \nL39:    lushr \nL40:    lxor \nL41:    l2i \nL42:    iadd \nL43:    istore_2 \nL44:    bipush 31 \nL46:    iload_2 \nL47:    imul \nL48:    aload_0 \nL49:    getfield Field VersionDTO versionContexts Ljava/util/Map; \nL52:    ifnonnull L59 \nL55:    iconst_0 \nL56:    goto L68 \n\n        .stack full \n            locals Object VersionDTO Top Integer Long \n            stack Integer \n        .end stack \nL59:    aload_0 \nL60:    getfield Field VersionDTO versionContexts Ljava/util/Map; \nL63:    invokeinterface InterfaceMethod java/util/Map hashCode ()I 1 \n\n        .stack full \n            locals Object VersionDTO Top Integer Long \n            stack Integer Integer \n        .end stack \nL68:    iadd \nL69:    istore_2 \nL70:    iload_2 \nL71:    ireturn \nL72:    \n        .linenumbertable \n            L0 128 \n            L2 130 \n            L10 131 \n            L23 132 \n            L31 133 \n            L44 134 \n            L63 135 \n            L70 136 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public equals : (Ljava/lang/Object;)Z \n    .code stack 4 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     if_acmpne L7 \nL5:     iconst_1 \nL6:     ireturn \n\n        .stack same \nL7:     aload_1 \nL8:     ifnonnull L13 \nL11:    iconst_0 \nL12:    ireturn \n\n        .stack same \nL13:    aload_1 \nL14:    instanceof VersionDTO \nL17:    ifne L22 \nL20:    iconst_0 \nL21:    ireturn \n\n        .stack same \nL22:    aload_1 \nL23:    checkcast VersionDTO \nL26:    astore_2 \nL27:    aload_0 \nL28:    getfield Field VersionDTO maxVersion D \nL31:    invokestatic Method java/lang/Double doubleToLongBits (D)J \nL34:    aload_2 \nL35:    getfield Field VersionDTO maxVersion D \nL38:    invokestatic Method java/lang/Double doubleToLongBits (D)J \nL41:    lcmp \nL42:    ifeq L47 \nL45:    iconst_0 \nL46:    ireturn \n\n        .stack append Object VersionDTO \nL47:    aload_0 \nL48:    getfield Field VersionDTO minVersion D \nL51:    invokestatic Method java/lang/Double doubleToLongBits (D)J \nL54:    aload_2 \nL55:    getfield Field VersionDTO minVersion D \nL58:    invokestatic Method java/lang/Double doubleToLongBits (D)J \nL61:    lcmp \nL62:    ifeq L67 \nL65:    iconst_0 \nL66:    ireturn \n\n        .stack same \nL67:    aload_0 \nL68:    getfield Field VersionDTO versionContexts Ljava/util/Map; \nL71:    ifnonnull L83 \nL74:    aload_2 \nL75:    getfield Field VersionDTO versionContexts Ljava/util/Map; \nL78:    ifnull L101 \nL81:    iconst_0 \nL82:    ireturn \n\n        .stack same \nL83:    aload_0 \nL84:    getfield Field VersionDTO versionContexts Ljava/util/Map; \nL87:    aload_2 \nL88:    getfield Field VersionDTO versionContexts Ljava/util/Map; \nL91:    invokeinterface InterfaceMethod java/util/Map equals (Ljava/lang/Object;)Z 2 \nL96:    ifne L101 \nL99:    iconst_0 \nL100:   ireturn \n\n        .stack same \nL101:   iconst_1 \nL102:   ireturn \nL103:   \n        .linenumbertable \n            L0 144 \n            L5 145 \n            L7 146 \n            L11 147 \n            L13 148 \n            L20 149 \n            L22 150 \n            L27 151 \n            L38 152 \n            L45 153 \n            L47 154 \n            L58 155 \n            L65 156 \n            L67 157 \n            L74 158 \n            L81 159 \n            L83 160 \n            L99 161 \n            L101 162 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'VersionDTO.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 08:07:08 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class VersionDTO_ESTest extends VersionDTO_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      VersionDTO versionDTO1 = versionDTO0.withMaxVersion(6539.54517);\n      VersionDTO versionDTO2 = new VersionDTO();\n      boolean boolean0 = versionDTO1.equals(versionDTO2);\n      assertEquals(6539.54517, versionDTO0.getMaxVersion(), 1.0E-4);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      versionDTO0.withVersionContext(0.0, \"\");\n      versionDTO0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      versionDTO0.setMinVersion((-26633.609336742735));\n      versionDTO0.hashCode();\n      assertEquals((-26633.609336742735), versionDTO0.getMinVersion(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      VersionDTO versionDTO1 = versionDTO0.withMaxVersion(15675.123);\n      versionDTO1.hashCode();\n      assertEquals(15675.123, versionDTO0.getMaxVersion(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      versionDTO0.setMaxVersion((-16594.875));\n      versionDTO0.hashCode();\n      assertEquals((-16594.875), versionDTO0.getMaxVersion(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      versionDTO0.withMinVersion(1.0);\n      versionDTO0.withVersionContext(0.0, \"T~#\");\n      assertEquals(1.0, versionDTO0.getMinVersion(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      versionDTO0.setMinVersion((-1.0));\n      versionDTO0.withVersionContext(0.0, \"\");\n      assertEquals((-1.0), versionDTO0.getMinVersion(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      VersionDTO versionDTO1 = versionDTO0.withMaxVersion(1.0);\n      versionDTO1.withVersionContext(0.0, \"pZCA3B\\\"&EG<5\");\n      assertEquals(1.0, versionDTO0.getMaxVersion(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      VersionDTO versionDTO1 = versionDTO0.withMaxVersion(1.0);\n      versionDTO1.withMinVersion(1.0);\n      assertEquals(1.0, versionDTO0.getMaxVersion(), 1.0E-4);\n      assertEquals(1.0, versionDTO0.getMinVersion(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      VersionDTO versionDTO1 = versionDTO0.withMaxVersion((-61756.48698356868));\n      versionDTO1.withMinVersion((-61756.48698356868));\n      assertEquals((-61756.48698356868), versionDTO0.getMaxVersion(), 1.0E-4);\n      assertEquals((-61756.48698356868), versionDTO0.getMinVersion(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      VersionDTO versionDTO1 = versionDTO0.withMinVersion(1.0);\n      versionDTO1.withMaxVersion(0.0);\n      assertEquals(1.0, versionDTO0.getMinVersion(), 1.0E-4);\n      assertEquals(0.0, versionDTO0.getMaxVersion(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      versionDTO0.setMinVersion((-1.0));\n      versionDTO0.withMaxVersion(0.0);\n      assertEquals((-1.0), versionDTO0.getMinVersion(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      versionDTO0.withMaxVersion((-1.0));\n      versionDTO0.withVersionContext(0.0, \"\");\n      assertEquals((-1.0), versionDTO0.getMaxVersion(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      HashMap<String, String> hashMap0 = new HashMap<String, String>();\n      versionDTO0.setVersionContexts(hashMap0);\n      Map<String, String> map0 = versionDTO0.getVersionContexts();\n      assertTrue(map0.isEmpty());\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      versionDTO0.withVersionContext(0.0, \"pZCA3B\\\"&EG<5\");\n      Map<String, String> map0 = versionDTO0.getVersionContexts();\n      assertFalse(map0.isEmpty());\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      versionDTO0.withMinVersion((-16594.875));\n      double double0 = versionDTO0.getMinVersion();\n      assertEquals((-16594.875), double0, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      versionDTO0.setMaxVersion((-1.0));\n      double double0 = versionDTO0.getMaxVersion();\n      assertEquals((-1.0), double0, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      VersionDTO versionDTO1 = new VersionDTO();\n      boolean boolean0 = versionDTO0.equals(versionDTO1);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      Object object0 = new Object();\n      boolean boolean0 = versionDTO0.equals(object0);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      boolean boolean0 = versionDTO0.equals(versionDTO0);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      boolean boolean0 = versionDTO0.equals((Object) null);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      double double0 = versionDTO0.getMinVersion();\n      assertEquals(0.0, double0, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test22()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      VersionDTO versionDTO1 = versionDTO0.withMaxVersion(15675.123);\n      double double0 = versionDTO1.getMaxVersion();\n      assertEquals(15675.123, double0, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test23()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      String string0 = versionDTO0.toString();\n      assertEquals(\"VersionDTO [minVersion=0.0, maxVersion=0.0, versionContexts=null]\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test24()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      versionDTO0.setMinVersion(1.0);\n      double double0 = versionDTO0.getMinVersion();\n      assertEquals(1.0, double0, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test25()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      HashMap<String, String> hashMap0 = new HashMap<String, String>();\n      versionDTO0.setVersionContexts(hashMap0);\n      VersionDTO versionDTO1 = versionDTO0.withVersionContext((-39611.029), \"VersionDTO [minVersion=0.0, maxVersion=0.0, versionContexts=null]\");\n      assertSame(versionDTO1, versionDTO0);\n  }\n\n  @Test(timeout = 4000)\n  public void test26()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      Map<String, String> map0 = versionDTO0.getVersionContexts();\n      assertNull(map0);\n  }\n\n  @Test(timeout = 4000)\n  public void test27()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      versionDTO0.setMaxVersion((-16594.875));\n      VersionDTO versionDTO1 = new VersionDTO();\n      boolean boolean0 = versionDTO0.equals(versionDTO1);\n      assertEquals((-16594.875), versionDTO0.getMaxVersion(), 1.0E-4);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test28()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      VersionDTO versionDTO1 = versionDTO0.withMinVersion(0.0);\n      assertEquals(0.0, versionDTO1.getMinVersion(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test29()  throws Throwable  {\n      VersionDTO versionDTO0 = new VersionDTO();\n      double double0 = versionDTO0.getMaxVersion();\n      assertEquals(0.0, double0, 1.0E-4);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 08:07:09 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class VersionDTO_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"VersionDTO\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpv0me6f7s\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(VersionDTO_ESTest_scaffolding.class.getClassLoader() ,\n      \"VersionDTO\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(VersionDTO_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"VersionDTO\"\n    );\n  }\n}\n", "class_idx": 147}
{"class_name": "X509Certificate", "java_source": "class X509Certificate {\n  int constructor;\n}\n\nclass CertificateParsingException {\n  int serialVersionUID;\n}\n\nclass CertificateNotYetValidException {\n  int serialVersionUID;\n}\n\nclass CertificateExpiredException {\n  int serialVersionUID;\n}\n\nclass CertificateException {\n  int serialVersionUID;\n}\n\nclass CertificateEncodingException {\n  int serialVersionUID;\n}\n\nclass Certificate {}\n", "jasm_code": ".version 52 0 \n.class super X509Certificate \n.super java/lang/Object \n.field constructor I \n\n.method <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 2 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'X509Certificate.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 16:47:09 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class X509Certificate_ESTest extends X509Certificate_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      X509Certificate x509Certificate0 = new X509Certificate();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 16:47:09 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class X509Certificate_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"X509Certificate\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpigufewen\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(X509Certificate_ESTest_scaffolding.class.getClassLoader() ,\n      \"X509Certificate\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(X509Certificate_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"X509Certificate\"\n    );\n  }\n}\n", "class_idx": 148}
{"class_name": "ImageDetails", "java_source": "/*******************************************************************************\n * Copyright (c) 2015 IBM Corp.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *******************************************************************************/\n\n/** */\npublic class ImageDetails {\n  private int width;\n  private int height;\n\n  public void setWidth(int width) {\n    this.width = width;\n  }\n\n  public int getWidth() {\n    return width;\n  }\n\n  public void setHeight(int height) {\n    this.height = height;\n  }\n\n  public int getHeight() {\n    return height;\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + height;\n    result = prime * result + width;\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (obj == null) return false;\n    if (getClass() != obj.getClass()) return false;\n    ImageDetails other = (ImageDetails) obj;\n    if (height != other.height) return false;\n    if (width != other.width) return false;\n    return true;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ImageDetails \n.super java/lang/Object \n.field private width I \n.field private height I \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 22 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setWidth : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field ImageDetails width I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 27 \n            L5 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getWidth : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ImageDetails width I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 31 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setHeight : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field ImageDetails height I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 35 \n            L5 36 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getHeight : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ImageDetails height I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 39 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public hashCode : ()I \n    .code stack 2 locals 3 \nL0:     iconst_1 \nL1:     istore_2 \nL2:     bipush 31 \nL4:     iload_2 \nL5:     imul \nL6:     aload_0 \nL7:     getfield Field ImageDetails height I \nL10:    iadd \nL11:    istore_2 \nL12:    bipush 31 \nL14:    iload_2 \nL15:    imul \nL16:    aload_0 \nL17:    getfield Field ImageDetails width I \nL20:    iadd \nL21:    istore_2 \nL22:    iload_2 \nL23:    ireturn \nL24:    \n        .linenumbertable \n            L0 45 \n            L2 46 \n            L12 47 \n            L22 48 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public equals : (Ljava/lang/Object;)Z \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     if_acmpne L7 \nL5:     iconst_1 \nL6:     ireturn \n\n        .stack same \nL7:     aload_1 \nL8:     ifnonnull L13 \nL11:    iconst_0 \nL12:    ireturn \n\n        .stack same \nL13:    aload_0 \nL14:    invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL17:    aload_1 \nL18:    invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL21:    if_acmpeq L26 \nL24:    iconst_0 \nL25:    ireturn \n\n        .stack same \nL26:    aload_1 \nL27:    checkcast ImageDetails \nL30:    astore_2 \nL31:    aload_0 \nL32:    getfield Field ImageDetails height I \nL35:    aload_2 \nL36:    getfield Field ImageDetails height I \nL39:    if_icmpeq L44 \nL42:    iconst_0 \nL43:    ireturn \n\n        .stack append Object ImageDetails \nL44:    aload_0 \nL45:    getfield Field ImageDetails width I \nL48:    aload_2 \nL49:    getfield Field ImageDetails width I \nL52:    if_icmpeq L57 \nL55:    iconst_0 \nL56:    ireturn \n\n        .stack same \nL57:    iconst_1 \nL58:    ireturn \nL59:    \n        .linenumbertable \n            L0 53 \n            L5 54 \n            L7 55 \n            L11 56 \n            L13 57 \n            L24 58 \n            L26 59 \n            L31 60 \n            L42 61 \n            L44 62 \n            L55 63 \n            L57 64 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ImageDetails.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 12:28:02 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ImageDetails_ESTest extends ImageDetails_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      ImageDetails imageDetails0 = new ImageDetails();\n      imageDetails0.setWidth((-1));\n      ImageDetails imageDetails1 = new ImageDetails();\n      boolean boolean0 = imageDetails0.equals(imageDetails1);\n      assertEquals((-1), imageDetails0.getWidth());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      ImageDetails imageDetails0 = new ImageDetails();\n      imageDetails0.setHeight(1);\n      ImageDetails imageDetails1 = new ImageDetails();\n      boolean boolean0 = imageDetails0.equals(imageDetails1);\n      assertEquals(1, imageDetails0.getHeight());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      ImageDetails imageDetails0 = new ImageDetails();\n      imageDetails0.setWidth((-1));\n      imageDetails0.hashCode();\n      assertEquals((-1), imageDetails0.getWidth());\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      ImageDetails imageDetails0 = new ImageDetails();\n      imageDetails0.setHeight(1);\n      imageDetails0.hashCode();\n      assertEquals(1, imageDetails0.getHeight());\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      ImageDetails imageDetails0 = new ImageDetails();\n      imageDetails0.setWidth(51801);\n      int int0 = imageDetails0.getWidth();\n      assertEquals(51801, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      ImageDetails imageDetails0 = new ImageDetails();\n      imageDetails0.setWidth((-38897));\n      int int0 = imageDetails0.getWidth();\n      assertEquals((-38897), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      ImageDetails imageDetails0 = new ImageDetails();\n      imageDetails0.setHeight(10872);\n      int int0 = imageDetails0.getHeight();\n      assertEquals(10872, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      ImageDetails imageDetails0 = new ImageDetails();\n      imageDetails0.setHeight((-72012));\n      int int0 = imageDetails0.getHeight();\n      assertEquals((-72012), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      ImageDetails imageDetails0 = new ImageDetails();\n      ImageDetails imageDetails1 = new ImageDetails();\n      boolean boolean0 = imageDetails1.equals(imageDetails0);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      ImageDetails imageDetails0 = new ImageDetails();\n      ImageDetails imageDetails1 = new ImageDetails();\n      imageDetails1.setHeight(1);\n      boolean boolean0 = imageDetails0.equals(imageDetails1);\n      assertEquals(1, imageDetails1.getHeight());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      ImageDetails imageDetails0 = new ImageDetails();\n      Object object0 = new Object();\n      boolean boolean0 = imageDetails0.equals(object0);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      ImageDetails imageDetails0 = new ImageDetails();\n      boolean boolean0 = imageDetails0.equals((Object) null);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      ImageDetails imageDetails0 = new ImageDetails();\n      boolean boolean0 = imageDetails0.equals(imageDetails0);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      ImageDetails imageDetails0 = new ImageDetails();\n      imageDetails0.setWidth(1);\n      ImageDetails imageDetails1 = new ImageDetails();\n      boolean boolean0 = imageDetails0.equals(imageDetails1);\n      assertEquals(1, imageDetails0.getWidth());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      ImageDetails imageDetails0 = new ImageDetails();\n      int int0 = imageDetails0.getWidth();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      ImageDetails imageDetails0 = new ImageDetails();\n      int int0 = imageDetails0.getHeight();\n      assertEquals(0, int0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 12:28:02 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ImageDetails_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ImageDetails\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpcn_q5mcw\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ImageDetails_ESTest_scaffolding.class.getClassLoader() ,\n      \"ImageDetails\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ImageDetails_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ImageDetails\"\n    );\n  }\n}\n", "class_idx": 149}
{"class_name": "Solution", "java_source": "import java.io.*;\nimport java.math.*;\nimport java.util.*;\n\nclass Solution {\n\n  private String array[][];\n  private int length;\n\n  public void sort(String[][] inputArr, int low, int high) {\n\n    if (inputArr == null || inputArr.length == 0) {\n      return;\n    }\n    this.array = inputArr;\n    length = inputArr.length;\n    if (low == 0 && high == 0) {\n      quickSort(0, length - 1);\n    } else {\n      quickSort1(low, high);\n    }\n  }\n\n  private void quickSort(int lowerIndex, int higherIndex) {\n\n    int i = lowerIndex;\n    int j = higherIndex;\n    // calculate pivot number, I am taking pivot as middle index number\n    int pivot = Integer.parseInt(array[lowerIndex + (higherIndex - lowerIndex) / 2][1]);\n    // Divide into two arrays\n    while (i <= j) {\n      /**\n       * In each iteration, we will identify a number from left side which is greater then the pivot\n       * value, and also we will identify a number from right side which is less then the pivot\n       * value. Once the search is done, then we exchange both numbers.\n       */\n      while (Integer.parseInt(array[i][1]) > pivot) {\n        i++;\n      }\n      while (Integer.parseInt(array[j][1]) < pivot) {\n        j--;\n      }\n      if (i <= j) {\n        exchangeNumbers(i, j);\n        // move index to next position on both sides\n        i++;\n        j--;\n      }\n    }\n    // call quickSort() method recursively\n    if (lowerIndex < j) quickSort(lowerIndex, j);\n    if (i < higherIndex) quickSort(i, higherIndex);\n  }\n\n  private void quickSort1(int lowerIndex, int higherIndex) {\n\n    int i = lowerIndex;\n    int j = higherIndex;\n    // calculate pivot number, I am taking pivot as middle index number\n    int pivot = Integer.parseInt(array[lowerIndex + (higherIndex - lowerIndex) / 2][2]);\n    // Divide into two arrays\n    while (i <= j) {\n      /**\n       * In each iteration, we will identify a number from left side which is greater then the pivot\n       * value, and also we will identify a number from right side which is less then the pivot\n       * value. Once the search is done, then we exchange both numbers.\n       */\n      while (Integer.parseInt(array[i][2]) < pivot) {\n        i++;\n      }\n      while (Integer.parseInt(array[j][2]) > pivot) {\n        j--;\n      }\n      if (i <= j) {\n        exchangeNumbers(i, j);\n        // move index to next position on both sides\n        i++;\n        j--;\n      }\n    }\n    // call quickSort() method recursively\n    if (lowerIndex < j) quickSort1(lowerIndex, j);\n    if (i < higherIndex) quickSort1(i, higherIndex);\n  }\n\n  private void exchangeNumbers(int i, int j) {\n    String temp = array[i][0];\n    array[i][0] = array[j][0];\n    array[j][0] = temp;\n    temp = array[i][1];\n    array[i][1] = array[j][1];\n    array[j][1] = temp;\n    temp = array[i][2];\n    array[i][2] = array[j][2];\n    array[j][2] = temp;\n  }\n\n  public static void main(String args[]) {\n    Solution sol = new Solution();\n    Scanner in = new Scanner(System.in);\n    int N = in.nextInt();\n    in.nextLine();\n    String[][] words = new String[N][3];\n    for (int i = 0; i < N; i++) {\n      words[i][0] = in.nextLine();\n      String[] parts = words[i][0].split(\"\");\n      int points = 0;\n      for (int j = 0; j < parts.length; j++) {\n        points += sol.countPoints(parts[j]);\n      }\n      words[i][1] = Integer.toString(points);\n      words[i][2] = Integer.toString(i);\n    }\n    sol.sort(words, 0, 0);\n\n    int index = 0;\n    int start = 0;\n    while (start < N) {\n      int currpoints = Integer.parseInt(words[start][1]);\n      while (Integer.parseInt(words[index + 1][1]) == currpoints) {\n        index++;\n        if (index + 1 == N) {\n          break;\n        }\n      }\n      sol.sort(words, start, index);\n      start = index + 1;\n    }\n\n    String LETTERS = in.nextLine();\n    String[] parts = LETTERS.split(\"\");\n    String answer = \"\";\n    for (int i = 0; i < N; i++) {\n      int cnt = 0;\n      String[] word = new String[parts.length];\n      System.arraycopy(parts, 0, word, 0, parts.length);\n      String[] partsdict = words[i][0].split(\"\");\n      for (int j = 0; j < partsdict.length; j++) { // gia kathe gramma tou dict\n        boolean flag = false;\n        for (int k = 0; k < word.length; k++) { // kai kathe gramma tis leksis\n          if (partsdict[j].equals(word[k])) {\n            flag = true;\n            cnt++;\n            word[k] = \"\";\n            break;\n          }\n        }\n        if (!flag) {\n          break;\n        }\n      }\n      if (cnt == partsdict.length) {\n        answer = words[i][0];\n        break;\n      }\n    }\n\n    System.out.println(answer);\n  }\n\n  public int countPoints(String letter) {\n    if (letter.equals(\"e\")\n        || letter.equals(\"a\")\n        || letter.equals(\"i\")\n        || letter.equals(\"o\")\n        || letter.equals(\"n\")\n        || letter.equals(\"r\")\n        || letter.equals(\"t\")\n        || letter.equals(\"l\")\n        || letter.equals(\"s\")\n        || letter.equals(\"u\")) {\n      return 1;\n    } else if (letter.equals(\"d\") || letter.equals(\"g\")) {\n      return 2;\n    } else if (letter.equals(\"b\")\n        || letter.equals(\"c\")\n        || letter.equals(\"m\")\n        || letter.equals(\"p\")) {\n      return 3;\n    } else if (letter.equals(\"f\")\n        || letter.equals(\"h\")\n        || letter.equals(\"v\")\n        || letter.equals(\"w\")\n        || letter.equals(\"y\")) {\n      return 4;\n    } else if (letter.equals(\"k\")) {\n      return 5;\n    } else if (letter.equals(\"j\") || letter.equals(\"x\")) {\n      return 8;\n    } else {\n      return 10;\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class super Solution \n.super java/lang/Object \n.field private array [[Ljava/lang/String; \n.field private length I \n\n.method <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public sort : ([[Ljava/lang/String;II)V \n    .code stack 4 locals 4 \nL0:     aload_1 \nL1:     ifnull L9 \nL4:     aload_1 \nL5:     arraylength \nL6:     ifne L10 \n\n        .stack same \nL9:     return \n\n        .stack same \nL10:    aload_0 \nL11:    aload_1 \nL12:    putfield Field Solution array [[Ljava/lang/String; \nL15:    aload_0 \nL16:    aload_1 \nL17:    arraylength \nL18:    putfield Field Solution length I \nL21:    iload_2 \nL22:    ifne L43 \nL25:    iload_3 \nL26:    ifne L43 \nL29:    aload_0 \nL30:    iconst_0 \nL31:    aload_0 \nL32:    getfield Field Solution length I \nL35:    iconst_1 \nL36:    isub \nL37:    invokespecial Method Solution quickSort (II)V \nL40:    goto L49 \n\n        .stack same \nL43:    aload_0 \nL44:    iload_2 \nL45:    iload_3 \nL46:    invokespecial Method Solution quickSort1 (II)V \n\n        .stack same \nL49:    return \nL50:    \n        .linenumbertable \n            L0 12 \n            L9 13 \n            L10 15 \n            L15 16 \n            L21 17 \n            L29 18 \n            L43 21 \n            L49 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private quickSort : (II)V \n    .code stack 4 locals 6 \nL0:     iload_1 \nL1:     istore_3 \nL2:     iload_2 \nL3:     istore 4 \nL5:     aload_0 \nL6:     getfield Field Solution array [[Ljava/lang/String; \nL9:     iload_1 \nL10:    iload_2 \nL11:    iload_1 \nL12:    isub \nL13:    iconst_2 \nL14:    idiv \nL15:    iadd \nL16:    aaload \nL17:    iconst_1 \nL18:    aaload \nL19:    invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;)I \nL22:    istore 5 \n\n        .stack append Integer Integer Integer \nL24:    iload_3 \nL25:    iload 4 \nL27:    if_icmpgt L97 \n\n        .stack same \nL30:    aload_0 \nL31:    getfield Field Solution array [[Ljava/lang/String; \nL34:    iload_3 \nL35:    aaload \nL36:    iconst_1 \nL37:    aaload \nL38:    invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;)I \nL41:    iload 5 \nL43:    if_icmple L52 \nL46:    iinc 3 1 \nL49:    goto L30 \n\n        .stack same \nL52:    aload_0 \nL53:    getfield Field Solution array [[Ljava/lang/String; \nL56:    iload 4 \nL58:    aaload \nL59:    iconst_1 \nL60:    aaload \nL61:    invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;)I \nL64:    iload 5 \nL66:    if_icmpge L75 \nL69:    iinc 4 -1 \nL72:    goto L52 \n\n        .stack same \nL75:    iload_3 \nL76:    iload 4 \nL78:    if_icmpgt L24 \nL81:    aload_0 \nL82:    iload_3 \nL83:    iload 4 \nL85:    invokespecial Method Solution exchangeNumbers (II)V \nL88:    iinc 3 1 \nL91:    iinc 4 -1 \nL94:    goto L24 \n\n        .stack same \nL97:    iload_1 \nL98:    iload 4 \nL100:   if_icmpge L110 \nL103:   aload_0 \nL104:   iload_1 \nL105:   iload 4 \nL107:   invokespecial Method Solution quickSort (II)V \n\n        .stack same \nL110:   iload_3 \nL111:   iload_2 \nL112:   if_icmpge L121 \nL115:   aload_0 \nL116:   iload_3 \nL117:   iload_2 \nL118:   invokespecial Method Solution quickSort (II)V \n\n        .stack same \nL121:   return \nL122:   \n        .linenumbertable \n            L0 27 \n            L2 28 \n            L5 30 \n            L24 32 \n            L30 39 \n            L46 40 \n            L52 42 \n            L69 43 \n            L75 45 \n            L81 46 \n            L88 48 \n            L91 49 \n            L97 53 \n            L103 54 \n            L110 55 \n            L115 56 \n            L121 57 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private quickSort1 : (II)V \n    .code stack 4 locals 6 \nL0:     iload_1 \nL1:     istore_3 \nL2:     iload_2 \nL3:     istore 4 \nL5:     aload_0 \nL6:     getfield Field Solution array [[Ljava/lang/String; \nL9:     iload_1 \nL10:    iload_2 \nL11:    iload_1 \nL12:    isub \nL13:    iconst_2 \nL14:    idiv \nL15:    iadd \nL16:    aaload \nL17:    iconst_2 \nL18:    aaload \nL19:    invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;)I \nL22:    istore 5 \n\n        .stack append Integer Integer Integer \nL24:    iload_3 \nL25:    iload 4 \nL27:    if_icmpgt L97 \n\n        .stack same \nL30:    aload_0 \nL31:    getfield Field Solution array [[Ljava/lang/String; \nL34:    iload_3 \nL35:    aaload \nL36:    iconst_2 \nL37:    aaload \nL38:    invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;)I \nL41:    iload 5 \nL43:    if_icmpge L52 \nL46:    iinc 3 1 \nL49:    goto L30 \n\n        .stack same \nL52:    aload_0 \nL53:    getfield Field Solution array [[Ljava/lang/String; \nL56:    iload 4 \nL58:    aaload \nL59:    iconst_2 \nL60:    aaload \nL61:    invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;)I \nL64:    iload 5 \nL66:    if_icmple L75 \nL69:    iinc 4 -1 \nL72:    goto L52 \n\n        .stack same \nL75:    iload_3 \nL76:    iload 4 \nL78:    if_icmpgt L24 \nL81:    aload_0 \nL82:    iload_3 \nL83:    iload 4 \nL85:    invokespecial Method Solution exchangeNumbers (II)V \nL88:    iinc 3 1 \nL91:    iinc 4 -1 \nL94:    goto L24 \n\n        .stack same \nL97:    iload_1 \nL98:    iload 4 \nL100:   if_icmpge L110 \nL103:   aload_0 \nL104:   iload_1 \nL105:   iload 4 \nL107:   invokespecial Method Solution quickSort1 (II)V \n\n        .stack same \nL110:   iload_3 \nL111:   iload_2 \nL112:   if_icmpge L121 \nL115:   aload_0 \nL116:   iload_3 \nL117:   iload_2 \nL118:   invokespecial Method Solution quickSort1 (II)V \n\n        .stack same \nL121:   return \nL122:   \n        .linenumbertable \n            L0 61 \n            L2 62 \n            L5 64 \n            L24 66 \n            L30 73 \n            L46 74 \n            L52 76 \n            L69 77 \n            L75 79 \n            L81 80 \n            L88 82 \n            L91 83 \n            L97 87 \n            L103 88 \n            L110 89 \n            L115 90 \n            L121 91 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private exchangeNumbers : (II)V \n    .code stack 4 locals 4 \nL0:     aload_0 \nL1:     getfield Field Solution array [[Ljava/lang/String; \nL4:     iload_1 \nL5:     aaload \nL6:     iconst_0 \nL7:     aaload \nL8:     astore_3 \nL9:     aload_0 \nL10:    getfield Field Solution array [[Ljava/lang/String; \nL13:    iload_1 \nL14:    aaload \nL15:    iconst_0 \nL16:    aload_0 \nL17:    getfield Field Solution array [[Ljava/lang/String; \nL20:    iload_2 \nL21:    aaload \nL22:    iconst_0 \nL23:    aaload \nL24:    aastore \nL25:    aload_0 \nL26:    getfield Field Solution array [[Ljava/lang/String; \nL29:    iload_2 \nL30:    aaload \nL31:    iconst_0 \nL32:    aload_3 \nL33:    aastore \nL34:    aload_0 \nL35:    getfield Field Solution array [[Ljava/lang/String; \nL38:    iload_1 \nL39:    aaload \nL40:    iconst_1 \nL41:    aaload \nL42:    astore_3 \nL43:    aload_0 \nL44:    getfield Field Solution array [[Ljava/lang/String; \nL47:    iload_1 \nL48:    aaload \nL49:    iconst_1 \nL50:    aload_0 \nL51:    getfield Field Solution array [[Ljava/lang/String; \nL54:    iload_2 \nL55:    aaload \nL56:    iconst_1 \nL57:    aaload \nL58:    aastore \nL59:    aload_0 \nL60:    getfield Field Solution array [[Ljava/lang/String; \nL63:    iload_2 \nL64:    aaload \nL65:    iconst_1 \nL66:    aload_3 \nL67:    aastore \nL68:    aload_0 \nL69:    getfield Field Solution array [[Ljava/lang/String; \nL72:    iload_1 \nL73:    aaload \nL74:    iconst_2 \nL75:    aaload \nL76:    astore_3 \nL77:    aload_0 \nL78:    getfield Field Solution array [[Ljava/lang/String; \nL81:    iload_1 \nL82:    aaload \nL83:    iconst_2 \nL84:    aload_0 \nL85:    getfield Field Solution array [[Ljava/lang/String; \nL88:    iload_2 \nL89:    aaload \nL90:    iconst_2 \nL91:    aaload \nL92:    aastore \nL93:    aload_0 \nL94:    getfield Field Solution array [[Ljava/lang/String; \nL97:    iload_2 \nL98:    aaload \nL99:    iconst_2 \nL100:   aload_3 \nL101:   aastore \nL102:   return \nL103:   \n        .linenumbertable \n            L0 94 \n            L9 95 \n            L25 96 \n            L34 97 \n            L43 98 \n            L59 99 \n            L68 100 \n            L77 101 \n            L93 102 \n            L102 103 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 5 locals 17 \nL0:     new Solution \nL3:     dup \nL4:     invokespecial Method Solution <init> ()V \nL7:     astore_1 \nL8:     new java/util/Scanner \nL11:    dup \nL12:    getstatic Field java/lang/System in Ljava/io/InputStream; \nL15:    invokespecial Method java/util/Scanner <init> (Ljava/io/InputStream;)V \nL18:    astore_2 \nL19:    aload_2 \nL20:    invokevirtual Method java/util/Scanner nextInt ()I \nL23:    istore_3 \nL24:    aload_2 \nL25:    invokevirtual Method java/util/Scanner nextLine ()Ljava/lang/String; \nL28:    pop \nL29:    iload_3 \nL30:    iconst_3 \nL31:    multianewarray [[Ljava/lang/String; 2 \nL35:    astore 4 \nL37:    iconst_0 \nL38:    istore 5 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object Solution Object java/util/Scanner Integer Object [[Ljava/lang/String; Integer \n            stack \n        .end stack \nL40:    iload 5 \nL42:    iload_3 \nL43:    if_icmpge L135 \nL46:    aload 4 \nL48:    iload 5 \nL50:    aaload \nL51:    iconst_0 \nL52:    aload_2 \nL53:    invokevirtual Method java/util/Scanner nextLine ()Ljava/lang/String; \nL56:    aastore \nL57:    aload 4 \nL59:    iload 5 \nL61:    aaload \nL62:    iconst_0 \nL63:    aaload \nL64:    ldc '' \nL66:    invokevirtual Method java/lang/String split (Ljava/lang/String;)[Ljava/lang/String; \nL69:    astore 6 \nL71:    iconst_0 \nL72:    istore 7 \nL74:    iconst_0 \nL75:    istore 8 \n\n        .stack append Object [Ljava/lang/String; Integer Integer \nL77:    iload 8 \nL79:    aload 6 \nL81:    arraylength \nL82:    if_icmpge L105 \nL85:    iload 7 \nL87:    aload_1 \nL88:    aload 6 \nL90:    iload 8 \nL92:    aaload \nL93:    invokevirtual Method Solution countPoints (Ljava/lang/String;)I \nL96:    iadd \nL97:    istore 7 \nL99:    iinc 8 1 \nL102:   goto L77 \n\n        .stack chop 1 \nL105:   aload 4 \nL107:   iload 5 \nL109:   aaload \nL110:   iconst_1 \nL111:   iload 7 \nL113:   invokestatic Method java/lang/Integer toString (I)Ljava/lang/String; \nL116:   aastore \nL117:   aload 4 \nL119:   iload 5 \nL121:   aaload \nL122:   iconst_2 \nL123:   iload 5 \nL125:   invokestatic Method java/lang/Integer toString (I)Ljava/lang/String; \nL128:   aastore \nL129:   iinc 5 1 \nL132:   goto L40 \n\n        .stack chop 3 \nL135:   aload_1 \nL136:   aload 4 \nL138:   iconst_0 \nL139:   iconst_0 \nL140:   invokevirtual Method Solution sort ([[Ljava/lang/String;II)V \nL143:   iconst_0 \nL144:   istore 5 \nL146:   iconst_0 \nL147:   istore 6 \n\n        .stack append Integer Integer \nL149:   iload 6 \nL151:   iload_3 \nL152:   if_icmpge L217 \nL155:   aload 4 \nL157:   iload 6 \nL159:   aaload \nL160:   iconst_1 \nL161:   aaload \nL162:   invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;)I \nL165:   istore 7 \n\n        .stack append Integer \nL167:   aload 4 \nL169:   iload 5 \nL171:   iconst_1 \nL172:   iadd \nL173:   aaload \nL174:   iconst_1 \nL175:   aaload \nL176:   invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;)I \nL179:   iload 7 \nL181:   if_icmpne L198 \nL184:   iinc 5 1 \nL187:   iload 5 \nL189:   iconst_1 \nL190:   iadd \nL191:   iload_3 \nL192:   if_icmpne L167 \nL195:   goto L198 \n\n        .stack same \nL198:   aload_1 \nL199:   aload 4 \nL201:   iload 6 \nL203:   iload 5 \nL205:   invokevirtual Method Solution sort ([[Ljava/lang/String;II)V \nL208:   iload 5 \nL210:   iconst_1 \nL211:   iadd \nL212:   istore 6 \nL214:   goto L149 \n\n        .stack chop 1 \nL217:   aload_2 \nL218:   invokevirtual Method java/util/Scanner nextLine ()Ljava/lang/String; \nL221:   astore 7 \nL223:   aload 7 \nL225:   ldc '' \nL227:   invokevirtual Method java/lang/String split (Ljava/lang/String;)[Ljava/lang/String; \nL230:   astore 8 \nL232:   ldc '' \nL234:   astore 9 \nL236:   iconst_0 \nL237:   istore 10 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object Solution Object java/util/Scanner Integer Object [[Ljava/lang/String; Integer Integer Object java/lang/String Object [Ljava/lang/String; Object java/lang/String Integer \n            stack \n        .end stack \nL239:   iload 10 \nL241:   iload_3 \nL242:   if_icmpge L385 \nL245:   iconst_0 \nL246:   istore 11 \nL248:   aload 8 \nL250:   arraylength \nL251:   anewarray java/lang/String \nL254:   astore 12 \nL256:   aload 8 \nL258:   iconst_0 \nL259:   aload 12 \nL261:   iconst_0 \nL262:   aload 8 \nL264:   arraylength \nL265:   invokestatic Method java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V \nL268:   aload 4 \nL270:   iload 10 \nL272:   aaload \nL273:   iconst_0 \nL274:   aaload \nL275:   ldc '' \nL277:   invokevirtual Method java/lang/String split (Ljava/lang/String;)[Ljava/lang/String; \nL280:   astore 13 \nL282:   iconst_0 \nL283:   istore 14 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object Solution Object java/util/Scanner Integer Object [[Ljava/lang/String; Integer Integer Object java/lang/String Object [Ljava/lang/String; Object java/lang/String Integer Integer Object [Ljava/lang/String; Object [Ljava/lang/String; Integer \n            stack \n        .end stack \nL285:   iload 14 \nL287:   aload 13 \nL289:   arraylength \nL290:   if_icmpge L359 \nL293:   iconst_0 \nL294:   istore 15 \nL296:   iconst_0 \nL297:   istore 16 \n\n        .stack append Integer Integer \nL299:   iload 16 \nL301:   aload 12 \nL303:   arraylength \nL304:   if_icmpge L345 \nL307:   aload 13 \nL309:   iload 14 \nL311:   aaload \nL312:   aload 12 \nL314:   iload 16 \nL316:   aaload \nL317:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL320:   ifeq L339 \nL323:   iconst_1 \nL324:   istore 15 \nL326:   iinc 11 1 \nL329:   aload 12 \nL331:   iload 16 \nL333:   ldc '' \nL335:   aastore \nL336:   goto L345 \n\n        .stack same \nL339:   iinc 16 1 \nL342:   goto L299 \n\n        .stack chop 1 \nL345:   iload 15 \nL347:   ifne L353 \nL350:   goto L359 \n\n        .stack chop 1 \nL353:   iinc 14 1 \nL356:   goto L285 \n\n        .stack chop 1 \nL359:   iload 11 \nL361:   aload 13 \nL363:   arraylength \nL364:   if_icmpne L379 \nL367:   aload 4 \nL369:   iload 10 \nL371:   aaload \nL372:   iconst_0 \nL373:   aaload \nL374:   astore 9 \nL376:   goto L385 \n\n        .stack chop 3 \nL379:   iinc 10 1 \nL382:   goto L239 \n\n        .stack chop 1 \nL385:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL388:   aload 9 \nL390:   invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL393:   return \nL394:   \n        .linenumbertable \n            L0 106 \n            L8 107 \n            L19 108 \n            L24 109 \n            L29 110 \n            L37 111 \n            L46 112 \n            L57 113 \n            L71 114 \n            L74 115 \n            L85 116 \n            L99 115 \n            L105 118 \n            L117 119 \n            L129 111 \n            L135 121 \n            L143 123 \n            L146 124 \n            L149 125 \n            L155 126 \n            L167 127 \n            L184 128 \n            L187 129 \n            L195 130 \n            L198 133 \n            L208 134 \n            L214 135 \n            L217 137 \n            L223 138 \n            L232 139 \n            L236 140 \n            L245 141 \n            L248 142 \n            L256 143 \n            L268 144 \n            L282 145 \n            L293 146 \n            L296 147 \n            L307 148 \n            L323 149 \n            L326 150 \n            L329 151 \n            L336 152 \n            L339 147 \n            L345 155 \n            L350 156 \n            L353 145 \n            L359 159 \n            L367 160 \n            L376 161 \n            L379 140 \n            L385 165 \n            L393 166 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public countPoints : (Ljava/lang/String;)I \n    .code stack 2 locals 2 \nL0:     aload_1 \nL1:     ldc 'e' \nL3:     invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL6:     ifne L90 \nL9:     aload_1 \nL10:    ldc 'a' \nL12:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL15:    ifne L90 \nL18:    aload_1 \nL19:    ldc 'i' \nL21:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL24:    ifne L90 \nL27:    aload_1 \nL28:    ldc 'o' \nL30:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL33:    ifne L90 \nL36:    aload_1 \nL37:    ldc 'n' \nL39:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL42:    ifne L90 \nL45:    aload_1 \nL46:    ldc 'r' \nL48:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL51:    ifne L90 \nL54:    aload_1 \nL55:    ldc 't' \nL57:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL60:    ifne L90 \nL63:    aload_1 \nL64:    ldc 'l' \nL66:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL69:    ifne L90 \nL72:    aload_1 \nL73:    ldc 's' \nL75:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL78:    ifne L90 \nL81:    aload_1 \nL82:    ldc 'u' \nL84:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL87:    ifeq L92 \n\n        .stack same_extended \nL90:    iconst_1 \nL91:    ireturn \n\n        .stack same \nL92:    aload_1 \nL93:    ldc 'd' \nL95:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL98:    ifne L110 \nL101:   aload_1 \nL102:   ldc 'g' \nL104:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL107:   ifeq L112 \n\n        .stack same \nL110:   iconst_2 \nL111:   ireturn \n\n        .stack same \nL112:   aload_1 \nL113:   ldc 'b' \nL115:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL118:   ifne L148 \nL121:   aload_1 \nL122:   ldc 'c' \nL124:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL127:   ifne L148 \nL130:   aload_1 \nL131:   ldc 'm' \nL133:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL136:   ifne L148 \nL139:   aload_1 \nL140:   ldc 'p' \nL142:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL145:   ifeq L150 \n\n        .stack same \nL148:   iconst_3 \nL149:   ireturn \n\n        .stack same \nL150:   aload_1 \nL151:   ldc 'f' \nL153:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL156:   ifne L195 \nL159:   aload_1 \nL160:   ldc 'h' \nL162:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL165:   ifne L195 \nL168:   aload_1 \nL169:   ldc 'v' \nL171:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL174:   ifne L195 \nL177:   aload_1 \nL178:   ldc 'w' \nL180:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL183:   ifne L195 \nL186:   aload_1 \nL187:   ldc 'y' \nL189:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL192:   ifeq L197 \n\n        .stack same \nL195:   iconst_4 \nL196:   ireturn \n\n        .stack same \nL197:   aload_1 \nL198:   ldc 'k' \nL200:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL203:   ifeq L208 \nL206:   iconst_5 \nL207:   ireturn \n\n        .stack same \nL208:   aload_1 \nL209:   ldc 'j' \nL211:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL214:   ifne L226 \nL217:   aload_1 \nL218:   ldc 'x' \nL220:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL223:   ifeq L229 \n\n        .stack same \nL226:   bipush 8 \nL228:   ireturn \n\n        .stack same \nL229:   bipush 10 \nL231:   ireturn \nL232:   \n        .linenumbertable \n            L0 169 \n            L30 170 \n            L57 171 \n            L84 172 \n            L90 173 \n            L92 175 \n            L110 176 \n            L112 178 \n            L142 179 \n            L148 180 \n            L150 182 \n            L180 183 \n            L195 184 \n            L197 186 \n            L206 187 \n            L208 189 \n            L226 190 \n            L229 193 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Solution.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 04:27:36 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.util.NoSuchElementException;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Solution_ESTest extends Solution_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String[][] stringArray0 = new String[7][6];\n      // Undeclared exception!\n      try { \n        solution0.sort(stringArray0, 0, 0);\n        fail(\"Expecting exception: NumberFormatException\");\n      \n      } catch(NumberFormatException e) {\n         //\n         // null\n         //\n         verifyException(\"java.lang.Integer\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String[][] stringArray0 = new String[8][4];\n      // Undeclared exception!\n      try { \n        solution0.sort(stringArray0, 0, 82533);\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // 41266\n         //\n         verifyException(\"Solution\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String[][] stringArray0 = new String[3][9];\n      // Undeclared exception!\n      try { \n        solution0.sort(stringArray0, 0, (-67491));\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // -33745\n         //\n         verifyException(\"Solution\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String[][] stringArray0 = new String[7][8];\n      // Undeclared exception!\n      try { \n        solution0.sort(stringArray0, (-32489), (-32489));\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // -32489\n         //\n         verifyException(\"Solution\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String[][] stringArray0 = new String[3][8];\n      String[] stringArray1 = new String[2];\n      stringArray1[0] = \"Qq2iJ='_ro)k>e+(\";\n      int int0 = 0;\n      int int1 = solution0.countPoints(stringArray1[0]);\n      // Undeclared exception!\n      try { \n        solution0.sort(stringArray0, int0, int1);\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // 5\n         //\n         verifyException(\"Solution\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      String[] stringArray0 = new String[4];\n      // Undeclared exception!\n      try { \n        Solution.main(stringArray0);\n        fail(\"Expecting exception: NoSuchElementException\");\n      \n      } catch(NoSuchElementException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"java.util.Scanner\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      Solution solution0 = new Solution();\n      int int0 = solution0.countPoints(\"b\");\n      assertEquals(3, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Solution solution0 = new Solution();\n      int int0 = solution0.countPoints(\"i\");\n      assertEquals(1, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      Solution solution0 = new Solution();\n      int int0 = solution0.countPoints(\"l >-CgT\");\n      assertEquals(10, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String[][] stringArray0 = new String[3][8];\n      // Undeclared exception!\n      try { \n        solution0.sort(stringArray0, 3, 0);\n        fail(\"Expecting exception: NumberFormatException\");\n      \n      } catch(NumberFormatException e) {\n         //\n         // null\n         //\n         verifyException(\"java.lang.Integer\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String[][] stringArray0 = new String[0][7];\n      solution0.sort(stringArray0, 0, 0);\n      int int0 = solution0.countPoints(\"\");\n      assertEquals(10, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Solution solution0 = new Solution();\n      solution0.sort((String[][]) null, 1, 0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 04:27:36 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Solution_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Solution\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n    org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpr040fhzy\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Solution_ESTest_scaffolding.class.getClassLoader() ,\n      \"Solution\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Solution_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Solution\"\n    );\n  }\n}\n", "class_idx": 150}
{"class_name": "MyMessage", "java_source": "/** since 2015/2/17. */\npublic class MyMessage {\n\n  private String msg;\n\n  public MyMessage(String s) {\n    this.msg = s;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super MyMessage \n.super java/lang/Object \n.field private msg Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field MyMessage msg Ljava/lang/String; \nL9:     return \nL10:    \n        .linenumbertable \n            L0 10 \n            L4 11 \n            L9 12 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'MyMessage.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 04:19:35 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class MyMessage_ESTest extends MyMessage_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      MyMessage myMessage0 = new MyMessage(\"\");\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 04:19:35 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class MyMessage_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"MyMessage\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpfuah524y\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MyMessage_ESTest_scaffolding.class.getClassLoader() ,\n      \"MyMessage\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MyMessage_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"MyMessage\"\n    );\n  }\n}\n", "class_idx": 151}
{"class_name": "ParamMap", "java_source": "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport java.util.Map;\n\npublic class ParamMap {\n\n  public static boolean getParamBoolean(Map params, Object key, boolean default_value) {\n    boolean result = default_value;\n    {\n      Object o = params == null ? null : params.get(key);\n      if (o != null && o instanceof Boolean) result = ((Boolean) o).booleanValue();\n    }\n    return result;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ParamMap \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 22 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static getParamBoolean : (Ljava/util/Map;Ljava/lang/Object;Z)Z \n    .code stack 2 locals 5 \nL0:     iload_2 \nL1:     istore_3 \nL2:     aload_0 \nL3:     ifnonnull L10 \nL6:     aconst_null \nL7:     goto L17 \n\n        .stack append Integer \nL10:    aload_0 \nL11:    aload_1 \nL12:    invokeinterface InterfaceMethod java/util/Map get (Ljava/lang/Object;)Ljava/lang/Object; 2 \n\n        .stack stack_1 Object java/lang/Object \nL17:    astore 4 \nL19:    aload 4 \nL21:    ifnull L41 \nL24:    aload 4 \nL26:    instanceof java/lang/Boolean \nL29:    ifeq L41 \nL32:    aload 4 \nL34:    checkcast java/lang/Boolean \nL37:    invokevirtual Method java/lang/Boolean booleanValue ()Z \nL40:    istore_3 \n\n        .stack same \nL41:    iload_3 \nL42:    ireturn \nL43:    \n        .linenumbertable \n            L0 26 \n            L2 28 \n            L19 29 \n            L32 30 \n            L41 32 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ParamMap.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 04:24:11 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ParamMap_ESTest extends ParamMap_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      HashMap<Object, String> hashMap0 = new HashMap<Object, String>();\n      Object object0 = new Object();\n      hashMap0.put(object0, \"0)u@FJ&+XdU\");\n      boolean boolean0 = ParamMap.getParamBoolean(hashMap0, object0, true);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>(43994, 44561.434F);\n      Integer integer0 = new Integer(43994);\n      Boolean boolean0 = Boolean.valueOf(\"\");\n      hashMap0.put(integer0, boolean0);\n      boolean boolean1 = ParamMap.getParamBoolean(hashMap0, integer0, false);\n      assertFalse(boolean1);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>(43994, 44561.434F);\n      Object object0 = new Object();\n      boolean boolean0 = ParamMap.getParamBoolean(hashMap0, object0, false);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      ParamMap paramMap0 = new ParamMap();\n      boolean boolean0 = ParamMap.getParamBoolean((Map) null, paramMap0, true);\n      assertTrue(boolean0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 04:24:11 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ParamMap_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ParamMap\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp0do6lzgv\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ParamMap_ESTest_scaffolding.class.getClassLoader() ,\n      \"ParamMap\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ParamMap_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ParamMap\"\n    );\n  }\n}\n", "class_idx": 152}
{"class_name": "AuthorizationPolicy", "java_source": "/*\n *  Copyright (c) 2005-2011, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport java.io.Serializable;\n\n/** Authorization Policy associated with a given API. */\n@SuppressWarnings(\"unused\")\npublic class AuthorizationPolicy implements Serializable {\n  private String policyURL;\n\n  public AuthorizationPolicy(String policyURL) {\n    this.policyURL = policyURL;\n  }\n\n  public String getPolicyURL() {\n    return policyURL;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super AuthorizationPolicy \n.super java/lang/Object \n.implements java/io/Serializable \n.field private policyURL Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field AuthorizationPolicy policyURL Ljava/lang/String; \nL9:     return \nL10:    \n        .linenumbertable \n            L0 29 \n            L4 30 \n            L9 31 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPolicyURL : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field AuthorizationPolicy policyURL Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 34 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'AuthorizationPolicy.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 23:42:49 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class AuthorizationPolicy_ESTest extends AuthorizationPolicy_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      AuthorizationPolicy authorizationPolicy0 = new AuthorizationPolicy((String) null);\n      String string0 = authorizationPolicy0.getPolicyURL();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      AuthorizationPolicy authorizationPolicy0 = new AuthorizationPolicy(\"(wO\");\n      String string0 = authorizationPolicy0.getPolicyURL();\n      assertEquals(\"(wO\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      AuthorizationPolicy authorizationPolicy0 = new AuthorizationPolicy(\"\");\n      String string0 = authorizationPolicy0.getPolicyURL();\n      assertEquals(\"\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 23:42:49 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class AuthorizationPolicy_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"AuthorizationPolicy\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp8z114hae\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AuthorizationPolicy_ESTest_scaffolding.class.getClassLoader() ,\n      \"AuthorizationPolicy\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AuthorizationPolicy_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"AuthorizationPolicy\"\n    );\n  }\n}\n", "class_idx": 153}
{"class_name": "ResponseIdentity", "java_source": "/** Created by Cyokin on 9/8/2015. */\npublic class ResponseIdentity {\n  public Object identity;\n}\n", "jasm_code": ".version 52 0 \n.class public super ResponseIdentity \n.super java/lang/Object \n.field public identity Ljava/lang/Object; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 7 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ResponseIdentity.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 23:13:24 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ResponseIdentity_ESTest extends ResponseIdentity_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ResponseIdentity responseIdentity0 = new ResponseIdentity();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 23:13:24 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ResponseIdentity_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ResponseIdentity\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpp3h1ww6s\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ResponseIdentity_ESTest_scaffolding.class.getClassLoader() ,\n      \"ResponseIdentity\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ResponseIdentity_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ResponseIdentity\"\n    );\n  }\n}\n", "class_idx": 154}
{"class_name": "Constants", "java_source": "/*\n * JBoss, Home of Professional Open Source\n * Copyright 2006, JBoss Inc., and individual contributors as indicated\n * by the @authors tag. See the copyright.txt in the distribution for a\n * full listing of individual contributors.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\n\n/**\n * Package Constants\n *\n * @author Mladen Turk\n * @version $Revision: 515 $, $Date: 2008-03-18 02:32:23 +0530 (Tue, 18 Mar 2008) $\n * @since 1.0\n */\npublic class Constants {\n\n  public static final String Package = \"org.jboss.web.php\";\n}\n", "jasm_code": ".version 52 0 \n.class public super Constants \n.super java/lang/Object \n.field public static final Package Ljava/lang/String; = 'org.jboss.web.php' \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 33 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Constants.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 14:30:57 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Constants_ESTest extends Constants_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Constants constants0 = new Constants();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 14:30:57 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Constants_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Constants\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp744its6i\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Constants_ESTest_scaffolding.class.getClassLoader() ,\n      \"Constants\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Constants_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Constants\"\n    );\n  }\n}\n", "class_idx": 155}
{"class_name": "Oauth", "java_source": "/*\n * Copyright 2014 Hiroki Uchida\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Oauth class.\n *\n * @author nikuyoshi\n * @version $Id: $\n */\npublic class Oauth {}\n", "jasm_code": ".version 52 0 \n.class public super Oauth \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 25 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Oauth.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 02:55:07 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Oauth_ESTest extends Oauth_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Oauth oauth0 = new Oauth();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 02:55:07 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Oauth_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Oauth\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpgqlh_l6x\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Oauth_ESTest_scaffolding.class.getClassLoader() ,\n      \"Oauth\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Oauth_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Oauth\"\n    );\n  }\n}\n", "class_idx": 156}
{"class_name": "Exam", "java_source": "public class Exam {\n\n  private Integer aliquotCode;\n\n  public Exam(Integer aliquotCode) {\n    this.aliquotCode = aliquotCode;\n  }\n\n  public Integer getAliquotCode() {\n    return aliquotCode;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Exam \n.super java/lang/Object \n.field private aliquotCode Ljava/lang/Integer; \n\n.method public <init> : (Ljava/lang/Integer;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field Exam aliquotCode Ljava/lang/Integer; \nL9:     return \nL10:    \n        .linenumbertable \n            L0 7 \n            L4 8 \n            L9 9 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getAliquotCode : ()Ljava/lang/Integer; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Exam aliquotCode Ljava/lang/Integer; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 12 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Exam.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 02:20:11 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Exam_ESTest extends Exam_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Integer integer0 = new Integer(0);\n      Exam exam0 = new Exam(integer0);\n      Integer integer1 = exam0.getAliquotCode();\n      assertEquals(0, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Integer integer0 = new Integer(1);\n      Exam exam0 = new Exam(integer0);\n      Integer integer1 = exam0.getAliquotCode();\n      assertEquals(1, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Integer integer0 = new Integer((-16414));\n      Exam exam0 = new Exam(integer0);\n      Integer integer1 = exam0.getAliquotCode();\n      assertEquals((-16414), (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Exam exam0 = new Exam((Integer) null);\n      Integer integer0 = exam0.getAliquotCode();\n      assertNull(integer0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 02:20:11 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Exam_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Exam\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp77vygxsg\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Exam_ESTest_scaffolding.class.getClassLoader() ,\n      \"Exam\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Exam_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Exam\"\n    );\n  }\n}\n", "class_idx": 157}
{"class_name": "CompileException", "java_source": "@SuppressWarnings(\"serial\")\npublic class CompileException extends RuntimeException {\n  public CompileException(String message) {\n    super(message);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super CompileException \n.super java/lang/RuntimeException \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 8 \n            L5 9 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'CompileException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 18:55:28 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CompileException_ESTest extends CompileException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      CompileException compileException0 = new CompileException(\"<xM1C0{n\");\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 18:55:28 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class CompileException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CompileException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpy1kalmfg\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CompileException_ESTest_scaffolding.class.getClassLoader() ,\n      \"CompileException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CompileException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CompileException\"\n    );\n  }\n}\n", "class_idx": 158}
{"class_name": "Monk", "java_source": "/**\n * @author: Aaron Kutekidila\n * @version: 1.0 Created: 17.02.2016.\n * @since: 1.0 Package: com.arrival.utilities\n */\n\n// import com.android.chimpchat.adb.AdbBackend;\n// import com.android.monkeyrunner.MonkeyDevice;\n// import com.android.monkeyrunner.adb.AdbBackend;\n\npublic class Monk {\n  /*\n  public static void main(String[] args) {\n      // TODO code application logic here\n      Monk monk=new Monk();\n      monk.demo();\n  }\n  public void demo()\n  {\n      AdbBackend ab = new AdbBackend();\n    //  MonkeyDevice device = ab.waitForConnection();\n      //Print Device Name\n     // System.out.println(device.getProperty(\"build.model\"));\n     // device.dispose();\n  }\n  */\n}\n", "jasm_code": ".version 52 0 \n.class public super Monk \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 15 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Monk.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 17:01:41 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Monk_ESTest extends Monk_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Monk monk0 = new Monk();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 17:01:41 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Monk_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Monk\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp01j4j81i\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Monk_ESTest_scaffolding.class.getClassLoader() ,\n      \"Monk\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Monk_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Monk\"\n    );\n  }\n}\n", "class_idx": 159}
{"class_name": "BuildConfig", "java_source": "/** Automatically generated file. DO NOT MODIFY */\npublic final class BuildConfig {\n  public static final boolean DEBUG = true;\n}\n", "jasm_code": ".version 52 0 \n.class public final super BuildConfig \n.super java/lang/Object \n.field public static final DEBUG Z = 1 \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 4 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'BuildConfig.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 14:22:08 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class BuildConfig_ESTest extends BuildConfig_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      BuildConfig buildConfig0 = new BuildConfig();\n      assertTrue(BuildConfig.DEBUG);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 14:22:08 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class BuildConfig_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"BuildConfig\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpqrz0k6im\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BuildConfig_ESTest_scaffolding.class.getClassLoader() ,\n      \"BuildConfig\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BuildConfig_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"BuildConfig\"\n    );\n  }\n}\n", "class_idx": 160}
{"class_name": "PluginSettings", "java_source": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class PluginSettings {\n  private List<String> processes;\n  private List<String> hotkeys;\n  private boolean alwaysRun;\n  private String[] sliderList;\n  private boolean reversed;\n\n  public String getSliderAtIndex(int index) {\n    validateSliderArray();\n\n    return sliderList[index];\n  }\n\n  public void setSliderAtIndex(int index, String sliderID) {\n    validateSliderArray();\n\n    sliderList[index] = sliderID;\n  }\n\n  public List<String> getProcesses() {\n    if (processes == null) {\n      processes = new ArrayList<>();\n    }\n\n    return processes;\n  }\n\n  public List<String> getHotkeys() {\n    if (hotkeys == null) {\n      hotkeys = new ArrayList<>();\n    }\n\n    return hotkeys;\n  }\n\n  public boolean isAlwaysRun() {\n    return alwaysRun;\n  }\n\n  public void setAlwaysRun(boolean alwaysRun) {\n    this.alwaysRun = alwaysRun;\n  }\n\n  private void validateSliderArray() {\n    if (sliderList == null) {\n      sliderList = new String[4];\n    } else if (sliderList.length != 4) {\n      sliderList = Arrays.copyOfRange(sliderList, 0, 4);\n    }\n  }\n\n  public boolean isReversed() {\n    return reversed;\n  }\n\n  public void setReversed(boolean reversed) {\n    this.reversed = reversed;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super PluginSettings \n.super java/lang/Object \n.field private processes Ljava/util/List; .fieldattributes \n    .signature Ljava/util/List<Ljava/lang/String;>; \n.end fieldattributes \n.field private hotkeys Ljava/util/List; .fieldattributes \n    .signature Ljava/util/List<Ljava/lang/String;>; \n.end fieldattributes \n.field private alwaysRun Z \n.field private sliderList [Ljava/lang/String; \n.field private reversed Z \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 7 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSliderAtIndex : (I)Ljava/lang/String; \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method PluginSettings validateSliderArray ()V \nL4:     aload_0 \nL5:     getfield Field PluginSettings sliderList [Ljava/lang/String; \nL8:     iload_1 \nL9:     aaload \nL10:    areturn \nL11:    \n        .linenumbertable \n            L0 15 \n            L4 17 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setSliderAtIndex : (ILjava/lang/String;)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method PluginSettings validateSliderArray ()V \nL4:     aload_0 \nL5:     getfield Field PluginSettings sliderList [Ljava/lang/String; \nL8:     iload_1 \nL9:     aload_2 \nL10:    aastore \nL11:    return \nL12:    \n        .linenumbertable \n            L0 21 \n            L4 23 \n            L11 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProcesses : ()Ljava/util/List; \n    .code stack 3 locals 1 \nL0:     aload_0 \nL1:     getfield Field PluginSettings processes Ljava/util/List; \nL4:     ifnonnull L18 \nL7:     aload_0 \nL8:     new java/util/ArrayList \nL11:    dup \nL12:    invokespecial Method java/util/ArrayList <init> ()V \nL15:    putfield Field PluginSettings processes Ljava/util/List; \n\n        .stack same \nL18:    aload_0 \nL19:    getfield Field PluginSettings processes Ljava/util/List; \nL22:    areturn \nL23:    \n        .linenumbertable \n            L0 27 \n            L7 28 \n            L18 31 \n        .end linenumbertable \n    .end code \n    .signature ()Ljava/util/List<Ljava/lang/String;>; \n.end method \n\n.method public getHotkeys : ()Ljava/util/List; \n    .code stack 3 locals 1 \nL0:     aload_0 \nL1:     getfield Field PluginSettings hotkeys Ljava/util/List; \nL4:     ifnonnull L18 \nL7:     aload_0 \nL8:     new java/util/ArrayList \nL11:    dup \nL12:    invokespecial Method java/util/ArrayList <init> ()V \nL15:    putfield Field PluginSettings hotkeys Ljava/util/List; \n\n        .stack same \nL18:    aload_0 \nL19:    getfield Field PluginSettings hotkeys Ljava/util/List; \nL22:    areturn \nL23:    \n        .linenumbertable \n            L0 35 \n            L7 36 \n            L18 39 \n        .end linenumbertable \n    .end code \n    .signature ()Ljava/util/List<Ljava/lang/String;>; \n.end method \n\n.method public isAlwaysRun : ()Z \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field PluginSettings alwaysRun Z \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 43 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setAlwaysRun : (Z)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field PluginSettings alwaysRun Z \nL5:     return \nL6:     \n        .linenumbertable \n            L0 47 \n            L5 48 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private validateSliderArray : ()V \n    .code stack 4 locals 1 \nL0:     aload_0 \nL1:     getfield Field PluginSettings sliderList [Ljava/lang/String; \nL4:     ifnonnull L18 \nL7:     aload_0 \nL8:     iconst_4 \nL9:     anewarray java/lang/String \nL12:    putfield Field PluginSettings sliderList [Ljava/lang/String; \nL15:    goto L43 \n\n        .stack same \nL18:    aload_0 \nL19:    getfield Field PluginSettings sliderList [Ljava/lang/String; \nL22:    arraylength \nL23:    iconst_4 \nL24:    if_icmpeq L43 \nL27:    aload_0 \nL28:    aload_0 \nL29:    getfield Field PluginSettings sliderList [Ljava/lang/String; \nL32:    iconst_0 \nL33:    iconst_4 \nL34:    invokestatic Method java/util/Arrays copyOfRange ([Ljava/lang/Object;II)[Ljava/lang/Object; \nL37:    checkcast [Ljava/lang/String; \nL40:    putfield Field PluginSettings sliderList [Ljava/lang/String; \n\n        .stack same \nL43:    return \nL44:    \n        .linenumbertable \n            L0 51 \n            L7 52 \n            L18 53 \n            L27 54 \n            L43 56 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public isReversed : ()Z \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field PluginSettings reversed Z \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 59 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setReversed : (Z)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field PluginSettings reversed Z \nL5:     return \nL6:     \n        .linenumbertable \n            L0 63 \n            L5 64 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'PluginSettings.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 06:39:53 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.util.List;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class PluginSettings_ESTest extends PluginSettings_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      PluginSettings pluginSettings0 = new PluginSettings();\n      pluginSettings0.setAlwaysRun(true);\n      boolean boolean0 = pluginSettings0.isAlwaysRun();\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      PluginSettings pluginSettings0 = new PluginSettings();\n      pluginSettings0.setSliderAtIndex(0, \"dl\\\"=Z()BpY\\\"-eOdcc\");\n      String string0 = pluginSettings0.getSliderAtIndex(0);\n      assertEquals(\"dl\\\"=Z()BpY\\\"-eOdcc\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      PluginSettings pluginSettings0 = new PluginSettings();\n      pluginSettings0.setSliderAtIndex(0, \"\");\n      String string0 = pluginSettings0.getSliderAtIndex(0);\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      PluginSettings pluginSettings0 = new PluginSettings();\n      pluginSettings0.getSliderAtIndex(1);\n      String string0 = pluginSettings0.getSliderAtIndex(3);\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      PluginSettings pluginSettings0 = new PluginSettings();\n      pluginSettings0.getHotkeys();\n      List<String> list0 = pluginSettings0.getHotkeys();\n      assertEquals(0, list0.size());\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      PluginSettings pluginSettings0 = new PluginSettings();\n      pluginSettings0.getProcesses();\n      List<String> list0 = pluginSettings0.getProcesses();\n      assertEquals(0, list0.size());\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      PluginSettings pluginSettings0 = new PluginSettings();\n      pluginSettings0.setSliderAtIndex(3, (String) null);\n      assertFalse(pluginSettings0.isReversed());\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      PluginSettings pluginSettings0 = new PluginSettings();\n      pluginSettings0.isReversed();\n      pluginSettings0.setSliderAtIndex(0, \"dl\\\"=Z()BpY\\\"-eOdcc\");\n      pluginSettings0.getSliderAtIndex(0);\n      pluginSettings0.getProcesses();\n      pluginSettings0.getHotkeys();\n      pluginSettings0.isReversed();\n      // Undeclared exception!\n      try { \n        pluginSettings0.setSliderAtIndex(1100, \"dl\\\"=Z()BpY\\\"-eOdcc\");\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // 1100\n         //\n         verifyException(\"PluginSettings\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      PluginSettings pluginSettings0 = new PluginSettings();\n      pluginSettings0.setReversed(true);\n      boolean boolean0 = pluginSettings0.isReversed();\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test9()  throws Throwable  {\n      PluginSettings pluginSettings0 = new PluginSettings();\n      boolean boolean0 = pluginSettings0.isAlwaysRun();\n      assertFalse(boolean0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 06:39:53 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class PluginSettings_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"PluginSettings\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpxlr9_7z_\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(PluginSettings_ESTest_scaffolding.class.getClassLoader() ,\n      \"PluginSettings\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(PluginSettings_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"PluginSettings\"\n    );\n  }\n}\n", "class_idx": 161}
{"class_name": "BaseResource", "java_source": "/**\n * \u62bd\u8c61\u8d44\u6e90\u7c7b.\n *\n * @author yangyongzhi\n */\npublic abstract class BaseResource {\n\n  // protected static ThreadLocal<DateFormat> DATE_FORMAT = new\n  // ThreadLocal<DateFormat>() {\n  // @Override\n  // protected DateFormat initialValue() {\n  // return new SimpleDateFormat(\"yyyy-MM-dd\");\n  // }\n  // };\n\n  protected static final String[] DATE_PATTERNS = new String[] {\"yyyy-MM-dd\"};\n}\n", "jasm_code": ".version 52 0 \n.class public super abstract BaseResource \n.super java/lang/Object \n.field protected static final DATE_PATTERNS [Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 10 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 4 locals 0 \nL0:     iconst_1 \nL1:     anewarray java/lang/String \nL4:     dup \nL5:     iconst_0 \nL6:     ldc 'yyyy-MM-dd' \nL8:     aastore \nL9:     putstatic Field BaseResource DATE_PATTERNS [Ljava/lang/String; \nL12:    return \nL13:    \n        .linenumbertable \n            L0 20 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'BaseResource.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 20:04:36 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class BaseResource_ESTest extends BaseResource_ESTest_scaffolding {\n  @Test\n  public void notGeneratedAnyTest() {\n    // EvoSuite did not generate any tests\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 20:04:36 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class BaseResource_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"BaseResource\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    /*No java.lang.System property to set*/\n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BaseResource_ESTest_scaffolding.class.getClassLoader() ,\n      \"BaseResource\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BaseResource_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"BaseResource\"\n    );\n  }\n}\n", "class_idx": 162}
{"class_name": "Pilot", "java_source": "public class Pilot {\n  private String name;\n  private int points;\n\n  public Pilot(String name, int points) {\n    this.name = name;\n    this.points = points;\n  }\n\n  public int getPoints() {\n    return points;\n  }\n\n  public void addPoints(int points) {\n    this.points += points;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public String toString() {\n    return name + \"/\" + points;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Pilot \n.super java/lang/Object \n.field private name Ljava/lang/String; \n.field private points I \n\n.method public <init> : (Ljava/lang/String;I)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field Pilot name Ljava/lang/String; \nL9:     aload_0 \nL10:    iload_2 \nL11:    putfield Field Pilot points I \nL14:    return \nL15:    \n        .linenumbertable \n            L0 7 \n            L4 8 \n            L9 9 \n            L14 10 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPoints : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Pilot points I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public addPoints : (I)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     dup \nL2:     getfield Field Pilot points I \nL5:     iload_1 \nL6:     iadd \nL7:     putfield Field Pilot points I \nL10:    return \nL11:    \n        .linenumbertable \n            L0 17 \n            L10 18 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Pilot name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     aload_0 \nL8:     getfield Field Pilot name Ljava/lang/String; \nL11:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL14:    ldc '/' \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    aload_0 \nL20:    getfield Field Pilot points I \nL23:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL26:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL29:    areturn \nL30:    \n        .linenumbertable \n            L0 25 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Pilot.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 16:23:13 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Pilot_ESTest extends Pilot_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Pilot pilot0 = new Pilot(\"~Q\", 13);\n      pilot0.addPoints(13);\n      assertEquals(26, pilot0.getPoints());\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Pilot pilot0 = new Pilot(\"`2Q'6JejF&mSNDG\", 0);\n      int int0 = pilot0.getPoints();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Pilot pilot0 = new Pilot(\"\", 37610);\n      int int0 = pilot0.getPoints();\n      assertEquals(37610, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Pilot pilot0 = new Pilot(\"Pilot\", 35819);\n      pilot0.getName();\n      assertEquals(35819, pilot0.getPoints());\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Pilot pilot0 = new Pilot(\"\", (-21585));\n      pilot0.getName();\n      assertEquals((-21585), pilot0.getPoints());\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Pilot pilot0 = new Pilot((String) null, 68174);\n      String string0 = pilot0.toString();\n      assertEquals(\"null/68174\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      Pilot pilot0 = new Pilot((String) null, 68174);\n      pilot0.getName();\n      assertEquals(68174, pilot0.getPoints());\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      Pilot pilot0 = new Pilot(\"iPn+\u007f8U)c\\u0002M\", (-41440));\n      int int0 = pilot0.getPoints();\n      assertEquals((-41440), int0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 16:23:13 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Pilot_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Pilot\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp90iah0ea\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Pilot_ESTest_scaffolding.class.getClassLoader() ,\n      \"Pilot\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Pilot_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Pilot\"\n    );\n  }\n}\n", "class_idx": 163}
{"class_name": "App", "java_source": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/** Hello world! */\npublic class App {\n  public static void main(String[] args) {\n    System.out.println(\"Hello World!\");\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super App \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 25 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 2 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     ldc 'Hello World!' \nL5:     invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL8:     return \nL9:     \n        .linenumbertable \n            L0 29 \n            L8 30 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'App.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 23:21:15 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class App_ESTest extends App_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String[] stringArray0 = new String[4];\n      App.main(stringArray0);\n      assertEquals(4, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      App app0 = new App();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 23:21:15 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class App_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"App\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpqlajnfxu\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(App_ESTest_scaffolding.class.getClassLoader() ,\n      \"App\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(App_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"App\"\n    );\n  }\n}\n", "class_idx": 164}
{"class_name": "TriFusion", "java_source": "/**\n * Classe du tri fusion\n *\n * @author Fran\u00e7ois Hallereau & Sullivan Pineau\n */\npublic class TriFusion {\n\n  static int[] aux; // tableau auxiliaire, le tri fusion n'est pas sur place\n\n  /**\n   * fonction de tri\n   *\n   * @param t le tableau \u00e0 trier\n   * @param l index de d\u00e9but\n   * @param r index de fin\n   */\n  private static void sort(int[] t, int l, int r) {\n    if (r > l) { // le tableau a plus d'une case\n      int m = (r + l) / 2; // index de la moiti\u00e9 du tableau\n      sort(t, l, m); // appel de fonction sur les deux moiti\u00e9s\n      sort(t, m + 1, r);\n      // int []tmp = new int[r-l+1];\n      merge(aux, l, t, l, m, t, m + 1, r); // fusion des deux tableau dans aux\n      for (int i = l; i <= r; i++) t[i] = aux[i]; // on copie les valeurs de aux tri\u00e9 dans t\n    }\n  }\n\n  /**\n   * fonction de tri\n   *\n   * @param t le tableau \u00e0 trier\n   */\n  public static void sort(int t[]) {\n    aux = new int[t.length];\n    sort(t, 0, t.length - 1);\n  }\n\n  /**\n   * Fonction de fusion utilis\u00e9 par le tri\n   *\n   * @param res le tableau tri\u00e9\n   * @param l index de d\u00e9but\n   * @param a sous tableau gauche\n   * @param al index de d\u00e9but du sous tableau gauche\n   * @param ar index de fin du sous tableau gauche\n   * @param b sous tableau droit\n   * @param bl index de d\u00e9but du sous tableau gauche\n   * @param br index de fin du sous tableau droit\n   */\n  static void merge(int[] res, int l, int[] a, int al, int ar, int[] b, int bl, int br) {\n    int i = al;\n    int j = bl;\n    for (int k = l; k <= l + ar - al + br - bl + 1; k++) {\n      if (i > ar) {\n        res[k] = b[j++];\n      } else if (j > br) {\n        res[k] = a[i++];\n      } else if (a[i] < b[j]) {\n        res[k] = a[i++];\n      } else {\n        res[k] = b[j++];\n      }\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super TriFusion \n.super java/lang/Object \n.field static aux [I \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private static sort : ([III)V \n    .code stack 8 locals 5 \nL0:     iload_2 \nL1:     iload_1 \nL2:     if_icmple L65 \nL5:     iload_2 \nL6:     iload_1 \nL7:     iadd \nL8:     iconst_2 \nL9:     idiv \nL10:    istore_3 \nL11:    aload_0 \nL12:    iload_1 \nL13:    iload_3 \nL14:    invokestatic Method TriFusion sort ([III)V \nL17:    aload_0 \nL18:    iload_3 \nL19:    iconst_1 \nL20:    iadd \nL21:    iload_2 \nL22:    invokestatic Method TriFusion sort ([III)V \nL25:    getstatic Field TriFusion aux [I \nL28:    iload_1 \nL29:    aload_0 \nL30:    iload_1 \nL31:    iload_3 \nL32:    aload_0 \nL33:    iload_3 \nL34:    iconst_1 \nL35:    iadd \nL36:    iload_2 \nL37:    invokestatic Method TriFusion merge ([II[III[III)V \nL40:    iload_1 \nL41:    istore 4 \n\n        .stack append Integer Integer \nL43:    iload 4 \nL45:    iload_2 \nL46:    if_icmpgt L65 \nL49:    aload_0 \nL50:    iload 4 \nL52:    getstatic Field TriFusion aux [I \nL55:    iload 4 \nL57:    iaload \nL58:    iastore \nL59:    iinc 4 1 \nL62:    goto L43 \n\n        .stack chop 2 \nL65:    return \nL66:    \n        .linenumbertable \n            L0 16 \n            L5 17 \n            L11 18 \n            L17 19 \n            L25 21 \n            L40 22 \n            L49 23 \n            L59 22 \n            L65 25 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static sort : ([I)V \n    .code stack 4 locals 1 \nL0:     aload_0 \nL1:     arraylength \nL2:     newarray int \nL4:     putstatic Field TriFusion aux [I \nL7:     aload_0 \nL8:     iconst_0 \nL9:     aload_0 \nL10:    arraylength \nL11:    iconst_1 \nL12:    isub \nL13:    invokestatic Method TriFusion sort ([III)V \nL16:    return \nL17:    \n        .linenumbertable \n            L0 32 \n            L7 33 \n            L16 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static merge : ([II[III[III)V \n    .code stack 4 locals 11 \nL0:     iload_3 \nL1:     istore 8 \nL3:     iload 6 \nL5:     istore 9 \nL7:     iload_1 \nL8:     istore 10 \n\n        .stack append Integer Integer Integer \nL10:    iload 10 \nL12:    iload_1 \nL13:    iload 4 \nL15:    iadd \nL16:    iload_3 \nL17:    isub \nL18:    iload 7 \nL20:    iadd \nL21:    iload 6 \nL23:    isub \nL24:    iconst_1 \nL25:    iadd \nL26:    if_icmpgt L116 \nL29:    iload 8 \nL31:    iload 4 \nL33:    if_icmple L51 \nL36:    aload_0 \nL37:    iload 10 \nL39:    aload 5 \nL41:    iload 9 \nL43:    iinc 9 1 \nL46:    iaload \nL47:    iastore \nL48:    goto L110 \n\n        .stack same \nL51:    iload 9 \nL53:    iload 7 \nL55:    if_icmple L72 \nL58:    aload_0 \nL59:    iload 10 \nL61:    aload_2 \nL62:    iload 8 \nL64:    iinc 8 1 \nL67:    iaload \nL68:    iastore \nL69:    goto L110 \n\n        .stack same \nL72:    aload_2 \nL73:    iload 8 \nL75:    iaload \nL76:    aload 5 \nL78:    iload 9 \nL80:    iaload \nL81:    if_icmpge L98 \nL84:    aload_0 \nL85:    iload 10 \nL87:    aload_2 \nL88:    iload 8 \nL90:    iinc 8 1 \nL93:    iaload \nL94:    iastore \nL95:    goto L110 \n\n        .stack same \nL98:    aload_0 \nL99:    iload 10 \nL101:   aload 5 \nL103:   iload 9 \nL105:   iinc 9 1 \nL108:   iaload \nL109:   iastore \n\n        .stack same \nL110:   iinc 10 1 \nL113:   goto L10 \n\n        .stack chop 1 \nL116:   return \nL117:   \n        .linenumbertable \n            L0 50 \n            L3 51 \n            L7 52 \n            L29 53 \n            L36 54 \n            L51 56 \n            L58 57 \n            L72 59 \n            L84 60 \n            L98 63 \n            L110 52 \n            L116 66 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'TriFusion.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 03:09:54 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class TriFusion_ESTest extends TriFusion_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      int[] intArray0 = new int[3];\n      TriFusion.sort(intArray0);\n      TriFusion.sort(intArray0);\n      TriFusion triFusion0 = new TriFusion();\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      int[] intArray0 = new int[3];\n      intArray0[1] = 37608;\n      TriFusion.sort(intArray0);\n      TriFusion.sort(intArray0);\n      TriFusion triFusion0 = new TriFusion();\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      int[] intArray0 = new int[2];\n      // Undeclared exception!\n      try { \n        TriFusion.merge(intArray0, 22361, TriFusion.aux, 0, 22361, intArray0, 22361, 22361);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"TriFusion\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      int[] intArray0 = new int[3];\n      intArray0[1] = 37608;\n      TriFusion.sort(intArray0);\n      // Undeclared exception!\n      try { \n        TriFusion.merge(intArray0, 0, TriFusion.aux, 77566, 37608, TriFusion.aux, 37608, 77566);\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // 37608\n         //\n         verifyException(\"TriFusion\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      int[] intArray0 = new int[1];\n      TriFusion.sort(intArray0);\n      TriFusion.merge(intArray0, 132550, intArray0, 0, (-5940), intArray0, 0, 1);\n      TriFusion triFusion0 = new TriFusion();\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      int[] intArray0 = new int[2];\n      intArray0[1] = 22361;\n      TriFusion.sort(intArray0);\n      TriFusion triFusion0 = new TriFusion();\n      TriFusion.sort(intArray0);\n      TriFusion.sort(intArray0);\n      TriFusion.sort(intArray0);\n      assertArrayEquals(new int[] {0, 22361}, intArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      int[] intArray0 = new int[2];\n      TriFusion.sort(intArray0);\n      TriFusion triFusion0 = new TriFusion();\n      TriFusion.sort(intArray0);\n      TriFusion.sort(intArray0);\n      assertArrayEquals(new int[] {0, 0}, intArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      int[] intArray0 = new int[8];\n      intArray0[2] = 37487;\n      TriFusion.sort(intArray0);\n      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 37487}, intArray0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 03:09:54 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class TriFusion_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"TriFusion\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpk1qy372o\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(TriFusion_ESTest_scaffolding.class.getClassLoader() ,\n      \"TriFusion\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(TriFusion_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"TriFusion\"\n    );\n  }\n}\n", "class_idx": 165}
{"class_name": "FileXLSMeta", "java_source": "/*\n *  Copyright 2011-2012 ASCH\n *\n *  This file is part of YPCnv.\n *\n *  YPCnv is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  YPCnv is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with YPCnv.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/** */\n\n/** Meta data - constants, etc. */\npublic final class FileXLSMeta {\n\n  /** Width of e-table's work sheet. */\n  public static final int NUMBER_OF_DATA_FIELDS = 92;\n\n  /* Error messages. */\n\n  public static final String ERR_MESSAGE_FILE_ACCESS = \"Failed with file '%s'.\";\n  public static final String ERR_MESSAGE_FILE_SAVE = \"Failed with file '%s'.\";\n  public static final String ERR_MESSAGE_NO_KEY_IN_MAP = \"There is no such a key '%s' in map.\";\n  public static final String ERR_MESSAGE_WORKBOOK_WRONG_FORMAT = \"Failed with file '%s'.\";\n  public static final String ERR_MESSAGE_WRONG_FIELD_QUANTITY =\n      \"In workbook file '%s' number of data fields in header row does not equals to expected value\"\n          + \" '%d'.\";\n  public static final String ERR_MESSAGE_WRONG_FIELD_NAME =\n      \"In workbook file '%s' in a row with data fields headers/names found unexpected name '%s'.\";\n  public static final String ERR_MESSAGE_NO_HEADER_ROW =\n      \"Failed to locate on sheet num. '%d' row number '%d' of cells with data columns headers.\"\n          + \" Workbook from file '%s'.\";\n  public static final String ERR_MESSAGE_FAILED_TO_PULL_FROM_STORAGE =\n      \"Failed to pull data from file with e-table.\";\n}\n", "jasm_code": ".version 52 0 \n.class public final super FileXLSMeta \n.super java/lang/Object \n.field public static final NUMBER_OF_DATA_FIELDS I = 92 \n.field public static final ERR_MESSAGE_FILE_ACCESS Ljava/lang/String; = \"Failed with file '%s'.\" \n.field public static final ERR_MESSAGE_FILE_SAVE Ljava/lang/String; = \"Failed with file '%s'.\" \n.field public static final ERR_MESSAGE_NO_KEY_IN_MAP Ljava/lang/String; = \"There is no such a key '%s' in map.\" \n.field public static final ERR_MESSAGE_WORKBOOK_WRONG_FORMAT Ljava/lang/String; = \"Failed with file '%s'.\" \n.field public static final ERR_MESSAGE_WRONG_FIELD_QUANTITY Ljava/lang/String; = \"In workbook file '%s' number of data fields in header row does not equals to expected value '%d'.\" \n.field public static final ERR_MESSAGE_WRONG_FIELD_NAME Ljava/lang/String; = \"In workbook file '%s' in a row with data fields headers/names found unexpected name '%s'.\" \n.field public static final ERR_MESSAGE_NO_HEADER_ROW Ljava/lang/String; = \"Failed to locate on sheet num. '%d' row number '%d' of cells with data columns headers. Workbook from file '%s'.\" \n.field public static final ERR_MESSAGE_FAILED_TO_PULL_FROM_STORAGE Ljava/lang/String; = 'Failed to pull data from file with e-table.' \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 29 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'FileXLSMeta.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 14:45:34 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class FileXLSMeta_ESTest extends FileXLSMeta_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      FileXLSMeta fileXLSMeta0 = new FileXLSMeta();\n      assertEquals(92, FileXLSMeta.NUMBER_OF_DATA_FIELDS);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 14:45:34 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class FileXLSMeta_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"FileXLSMeta\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpa3mr2j74\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FileXLSMeta_ESTest_scaffolding.class.getClassLoader() ,\n      \"FileXLSMeta\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FileXLSMeta_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"FileXLSMeta\"\n    );\n  }\n}\n", "class_idx": 166}
{"class_name": "BunnyEars2", "java_source": "/** created by Maxim Orlov on 18 Nov 2014 */\npublic class BunnyEars2 {\n  public int bunnyEars2(int bunnies) {\n    if (bunnies == 0) {\n      return 0;\n    } else if (bunnies % 2 != 0) {\n      return 2 + bunnyEars2(bunnies - 1);\n    }\n\n    return 3 + bunnyEars2(bunnies - 1);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super BunnyEars2 \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public bunnyEars2 : (I)I \n    .code stack 4 locals 2 \nL0:     iload_1 \nL1:     ifne L6 \nL4:     iconst_0 \nL5:     ireturn \n\n        .stack same \nL6:     iload_1 \nL7:     iconst_2 \nL8:     irem \nL9:     ifeq L22 \nL12:    iconst_2 \nL13:    aload_0 \nL14:    iload_1 \nL15:    iconst_1 \nL16:    isub \nL17:    invokevirtual Method BunnyEars2 bunnyEars2 (I)I \nL20:    iadd \nL21:    ireturn \n\n        .stack same \nL22:    iconst_3 \nL23:    aload_0 \nL24:    iload_1 \nL25:    iconst_1 \nL26:    isub \nL27:    invokevirtual Method BunnyEars2 bunnyEars2 (I)I \nL30:    iadd \nL31:    ireturn \nL32:    \n        .linenumbertable \n            L0 8 \n            L4 9 \n            L6 10 \n            L12 11 \n            L22 14 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'BunnyEars2.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 17:00:46 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class BunnyEars2_ESTest extends BunnyEars2_ESTest_scaffolding {\n  @Test\n  public void notGeneratedAnyTest() {\n    // EvoSuite did not generate any tests\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 17:00:46 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class BunnyEars2_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"BunnyEars2\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    /*No java.lang.System property to set*/\n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BunnyEars2_ESTest_scaffolding.class.getClassLoader() ,\n      \"BunnyEars2\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BunnyEars2_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"BunnyEars2\"\n    );\n  }\n}\n", "class_idx": 167}
{"class_name": "StringConv", "java_source": "import java.io.UnsupportedEncodingException;\n\npublic class StringConv {\n\n  public static String UTF8(byte[] bytes) {\n    try {\n\n      if (bytes != null) {\n        return new String(bytes, \"UTF8\");\n\n      } else {\n\n        return \"\";\n      }\n\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return \"\";\n  }\n\n  public static String UTF8(String str) {\n    return new String(str);\n  }\n\n  public static byte[] getBytes(String str) {\n    try {\n\n      return str.getBytes(\"UTF8\");\n\n    } catch (UnsupportedEncodingException e) {\n\n      e.printStackTrace();\n    }\n    return null;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super StringConv \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static UTF8 : ([B)Ljava/lang/String; \n    .code stack 4 locals 2 \n        .catch java/io/UnsupportedEncodingException from L0 to L14 using L18 \nL0:     aload_0 \nL1:     ifnull L15 \nL4:     new java/lang/String \nL7:     dup \nL8:     aload_0 \nL9:     ldc 'UTF8' \nL11:    invokespecial Method java/lang/String <init> ([BLjava/lang/String;)V \nL14:    areturn \n        .catch java/io/UnsupportedEncodingException from L15 to L17 using L18 \n\n        .stack same \nL15:    ldc '' \nL17:    areturn \n\n        .stack stack_1 Object java/io/UnsupportedEncodingException \nL18:    astore_1 \nL19:    aload_1 \nL20:    invokevirtual Method java/io/UnsupportedEncodingException printStackTrace ()V \nL23:    ldc '' \nL25:    areturn \nL26:    \n        .linenumbertable \n            L0 10 \n            L4 11 \n            L15 15 \n            L18 18 \n            L19 19 \n            L23 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static UTF8 : (Ljava/lang/String;)Ljava/lang/String; \n    .code stack 3 locals 1 \nL0:     new java/lang/String \nL3:     dup \nL4:     aload_0 \nL5:     invokespecial Method java/lang/String <init> (Ljava/lang/String;)V \nL8:     areturn \nL9:     \n        .linenumbertable \n            L0 25 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static getBytes : (Ljava/lang/String;)[B \n    .code stack 2 locals 2 \n        .catch java/io/UnsupportedEncodingException from L0 to L6 using L7 \nL0:     aload_0 \nL1:     ldc 'UTF8' \nL3:     invokevirtual Method java/lang/String getBytes (Ljava/lang/String;)[B \nL6:     areturn \n\n        .stack stack_1 Object java/io/UnsupportedEncodingException \nL7:     astore_1 \nL8:     aload_1 \nL9:     invokevirtual Method java/io/UnsupportedEncodingException printStackTrace ()V \nL12:    aconst_null \nL13:    areturn \nL14:    \n        .linenumbertable \n            L0 31 \n            L7 33 \n            L8 35 \n            L12 37 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'StringConv.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 00:47:31 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class StringConv_ESTest extends StringConv_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      byte[] byteArray0 = StringConv.getBytes(\"&/zr\");\n      String string0 = StringConv.UTF8(byteArray0);\n      assertEquals(\"&/zr\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      String string0 = StringConv.UTF8(\"\");\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      String string0 = StringConv.UTF8((byte[]) null);\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      String string0 = StringConv.UTF8(\"&/zr\");\n      assertEquals(\"&/zr\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      StringConv stringConv0 = new StringConv();\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      byte[] byteArray0 = StringConv.getBytes(\"\");\n      String string0 = StringConv.UTF8(byteArray0);\n      assertEquals(\"\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 00:47:31 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class StringConv_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"StringConv\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp50vj3hff\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StringConv_ESTest_scaffolding.class.getClassLoader() ,\n      \"StringConv\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StringConv_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"StringConv\"\n    );\n  }\n}\n", "class_idx": 168}
{"class_name": "GWTObjectToOrder", "java_source": "/**\n * OpenKM, Open Document Management System (http://www.openkm.com) Copyright (c) 2006-2015 Paco\n * Avila & Josep Llort\n *\n * <p>No bytes were intentionally harmed during the development of this application.\n *\n * <p>This program is free software; you can redistribute it and/or modify it under the terms of the\n * GNU General Public License as published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * <p>You should have received a copy of the GNU General Public License along with this program; if\n * not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n * 02110-1301 USA.\n */\n\n/**\n * @author jllort\n */\npublic class GWTObjectToOrder {\n\n  private Object object;\n  private String dataId;\n\n  /** GWTObjectToOrder */\n  public GWTObjectToOrder() {}\n\n  public Object getObject() {\n    return object;\n  }\n\n  public void setObject(Object object) {\n    this.object = object;\n  }\n\n  public String getDataId() {\n    return dataId;\n  }\n\n  public void setDataId(String dataId) {\n    this.dataId = dataId;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super GWTObjectToOrder \n.super java/lang/Object \n.field private object Ljava/lang/Object; \n.field private dataId Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 36 \n            L4 37 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getObject : ()Ljava/lang/Object; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GWTObjectToOrder object Ljava/lang/Object; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 40 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setObject : (Ljava/lang/Object;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field GWTObjectToOrder object Ljava/lang/Object; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 44 \n            L5 45 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getDataId : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GWTObjectToOrder dataId Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 48 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setDataId : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field GWTObjectToOrder dataId Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 52 \n            L5 53 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'GWTObjectToOrder.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 04:59:11 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class GWTObjectToOrder_ESTest extends GWTObjectToOrder_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      GWTObjectToOrder gWTObjectToOrder0 = new GWTObjectToOrder();\n      gWTObjectToOrder0.setDataId(\"!;qwGpLSN\");\n      String string0 = gWTObjectToOrder0.getDataId();\n      assertEquals(\"!;qwGpLSN\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      GWTObjectToOrder gWTObjectToOrder0 = new GWTObjectToOrder();\n      gWTObjectToOrder0.setDataId(\"\");\n      String string0 = gWTObjectToOrder0.getDataId();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      GWTObjectToOrder gWTObjectToOrder0 = new GWTObjectToOrder();\n      Object object0 = gWTObjectToOrder0.getObject();\n      assertNull(object0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      GWTObjectToOrder gWTObjectToOrder0 = new GWTObjectToOrder();\n      gWTObjectToOrder0.setObject(\"\");\n      Object object0 = gWTObjectToOrder0.getObject();\n      assertEquals(\"\", object0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      GWTObjectToOrder gWTObjectToOrder0 = new GWTObjectToOrder();\n      String string0 = gWTObjectToOrder0.getDataId();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 04:59:11 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class GWTObjectToOrder_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"GWTObjectToOrder\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpz58uwxqj\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(GWTObjectToOrder_ESTest_scaffolding.class.getClassLoader() ,\n      \"GWTObjectToOrder\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(GWTObjectToOrder_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"GWTObjectToOrder\"\n    );\n  }\n}\n", "class_idx": 169}
{"class_name": "GcsEvent", "java_source": "/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport java.io.Serializable;\nimport java.util.Date;\n\n// [START functions_helloworld_gcs_event]\npublic class GcsEvent implements Serializable {\n  // Cloud Functions uses GSON to populate this object.\n  // Field types/names are specified by Cloud Functions\n  // Changing them may break your code!\n  private String bucket;\n  private String name;\n  private String metageneration;\n  private Date timeCreated;\n  private Date updated;\n\n  public String getBucket() {\n    return bucket;\n  }\n\n  public void setBucket(String bucket) {\n    this.bucket = bucket;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getMetageneration() {\n    return metageneration;\n  }\n\n  public void setMetageneration(String metageneration) {\n    this.metageneration = metageneration;\n  }\n\n  public Date getTimeCreated() {\n    return timeCreated;\n  }\n\n  public void setTimeCreated(Date timeCreated) {\n    this.timeCreated = timeCreated;\n  }\n\n  public Date getUpdated() {\n    return updated;\n  }\n\n  public void setUpdated(Date updated) {\n    this.updated = updated;\n  }\n}\n// [END functions_helloworld_gcs_event]\n", "jasm_code": ".version 52 0 \n.class public super GcsEvent \n.super java/lang/Object \n.implements java/io/Serializable \n.field private bucket Ljava/lang/String; \n.field private name Ljava/lang/String; \n.field private metageneration Ljava/lang/String; \n.field private timeCreated Ljava/util/Date; \n.field private updated Ljava/util/Date; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getBucket : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GcsEvent bucket Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setBucket : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field GcsEvent bucket Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 38 \n            L5 39 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GcsEvent name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 42 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field GcsEvent name Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 46 \n            L5 47 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getMetageneration : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GcsEvent metageneration Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 50 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setMetageneration : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field GcsEvent metageneration Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 54 \n            L5 55 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getTimeCreated : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GcsEvent timeCreated Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 58 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setTimeCreated : (Ljava/util/Date;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field GcsEvent timeCreated Ljava/util/Date; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 62 \n            L5 63 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getUpdated : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GcsEvent updated Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 66 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setUpdated : (Ljava/util/Date;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field GcsEvent updated Ljava/util/Date; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 70 \n            L5 71 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'GcsEvent.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 14:52:15 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.Date;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.util.MockDate;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class GcsEvent_ESTest extends GcsEvent_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      GcsEvent gcsEvent0 = new GcsEvent();\n      MockDate mockDate0 = new MockDate(0, 0, 0);\n      gcsEvent0.setUpdated(mockDate0);\n      Date date0 = gcsEvent0.getUpdated();\n      assertEquals(\"Sun Dec 31 00:00:00 GMT 1899\", date0.toString());\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      GcsEvent gcsEvent0 = new GcsEvent();\n      gcsEvent0.setName(\"J?&jE*X\");\n      String string0 = gcsEvent0.getName();\n      assertEquals(\"J?&jE*X\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      GcsEvent gcsEvent0 = new GcsEvent();\n      gcsEvent0.setMetageneration(\"|Eh\");\n      String string0 = gcsEvent0.getMetageneration();\n      assertEquals(\"|Eh\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      GcsEvent gcsEvent0 = new GcsEvent();\n      gcsEvent0.setBucket(\"P_a6\");\n      String string0 = gcsEvent0.getBucket();\n      assertEquals(\"P_a6\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      GcsEvent gcsEvent0 = new GcsEvent();\n      gcsEvent0.setName(\"\");\n      String string0 = gcsEvent0.getName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      GcsEvent gcsEvent0 = new GcsEvent();\n      MockDate mockDate0 = new MockDate();\n      gcsEvent0.setTimeCreated(mockDate0);\n      Date date0 = gcsEvent0.getTimeCreated();\n      assertSame(date0, mockDate0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      GcsEvent gcsEvent0 = new GcsEvent();\n      gcsEvent0.setMetageneration(\"\");\n      String string0 = gcsEvent0.getMetageneration();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      GcsEvent gcsEvent0 = new GcsEvent();\n      gcsEvent0.setBucket(\"\");\n      String string0 = gcsEvent0.getBucket();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      GcsEvent gcsEvent0 = new GcsEvent();\n      String string0 = gcsEvent0.getName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      GcsEvent gcsEvent0 = new GcsEvent();\n      String string0 = gcsEvent0.getBucket();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      GcsEvent gcsEvent0 = new GcsEvent();\n      Date date0 = gcsEvent0.getTimeCreated();\n      assertNull(date0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      GcsEvent gcsEvent0 = new GcsEvent();\n      Date date0 = gcsEvent0.getUpdated();\n      assertNull(date0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      GcsEvent gcsEvent0 = new GcsEvent();\n      String string0 = gcsEvent0.getMetageneration();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 14:52:15 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class GcsEvent_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"GcsEvent\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpi9ozaoul\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(GcsEvent_ESTest_scaffolding.class.getClassLoader() ,\n      \"GcsEvent\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(GcsEvent_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"GcsEvent\"\n    );\n  }\n}\n", "class_idx": 170}
{"class_name": "NodeNotInCategoryException", "java_source": "/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\npublic final class NodeNotInCategoryException extends Exception {\n\n  private static final long serialVersionUID = 6032225432638186067L;\n\n  /** Default class constructor. Constructs a new exception with a default message. */\n  public NodeNotInCategoryException() {\n    super(\"NodeNotInCategoryException\");\n  }\n\n  /**\n   * Constructs a new exception with the passed string as the message encapsulated in the exception.\n   *\n   * @param s The exception's message.\n   */\n  public NodeNotInCategoryException(String s) {\n    super(s);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public final super NodeNotInCategoryException \n.super java/lang/Exception \n.field private static final serialVersionUID J = 6032225432638186067L \n\n.method public <init> : ()V \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     ldc 'NodeNotInCategoryException' \nL3:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 40 \n            L6 41 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 51 \n            L5 52 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'NodeNotInCategoryException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 00:58:46 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class NodeNotInCategoryException_ESTest extends NodeNotInCategoryException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      NodeNotInCategoryException nodeNotInCategoryException0 = new NodeNotInCategoryException();\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      NodeNotInCategoryException nodeNotInCategoryException0 = new NodeNotInCategoryException(\"\");\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 00:58:46 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class NodeNotInCategoryException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"NodeNotInCategoryException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpghwbur09\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NodeNotInCategoryException_ESTest_scaffolding.class.getClassLoader() ,\n      \"NodeNotInCategoryException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NodeNotInCategoryException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"NodeNotInCategoryException\"\n    );\n  }\n}\n", "class_idx": 171}
{"class_name": "Type", "java_source": "public class Type {\n  public static String GetSQL(String field) {\n    return null;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Type \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static GetSQL : (Ljava/lang/String;)Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aconst_null \nL1:     areturn \nL2:     \n        .linenumbertable \n            L0 5 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Type.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 12:10:48 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Type_ESTest extends Type_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Type type0 = new Type();\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      String string0 = Type.GetSQL(\"\");\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 12:10:48 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Type_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Type\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpx42fbx1p\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Type_ESTest_scaffolding.class.getClassLoader() ,\n      \"Type\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Type_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Type\"\n    );\n  }\n}\n", "class_idx": 172}
{"class_name": "SchemaConfigDTO", "java_source": "/** Data Transfer Object for use with REST services. */\npublic class SchemaConfigDTO {\n  private String addr;\n\n  public String getSchemaAddress() {\n    return addr;\n  }\n\n  public void setSchemaAddress(String addr) {\n    this.addr = addr;\n  }\n\n  @Override\n  public String toString() {\n    return addr;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super SchemaConfigDTO \n.super java/lang/Object \n.field private addr Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSchemaAddress : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SchemaConfigDTO addr Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 10 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setSchemaAddress : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field SchemaConfigDTO addr Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 14 \n            L5 15 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SchemaConfigDTO addr Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 19 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'SchemaConfigDTO.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 13:01:34 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class SchemaConfigDTO_ESTest extends SchemaConfigDTO_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      SchemaConfigDTO schemaConfigDTO0 = new SchemaConfigDTO();\n      schemaConfigDTO0.setSchemaAddress(\"E#\u007fV(N<2?HyKh59I1\");\n      String string0 = schemaConfigDTO0.toString();\n      assertEquals(\"E#\u007fV(N<2?HyKh59I1\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      SchemaConfigDTO schemaConfigDTO0 = new SchemaConfigDTO();\n      schemaConfigDTO0.setSchemaAddress(\"\");\n      String string0 = schemaConfigDTO0.toString();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      SchemaConfigDTO schemaConfigDTO0 = new SchemaConfigDTO();\n      schemaConfigDTO0.setSchemaAddress(\"E#\u007fV(N<2?HyKh59I1\");\n      String string0 = schemaConfigDTO0.getSchemaAddress();\n      assertEquals(\"E#\u007fV(N<2?HyKh59I1\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      SchemaConfigDTO schemaConfigDTO0 = new SchemaConfigDTO();\n      schemaConfigDTO0.setSchemaAddress(\"\");\n      String string0 = schemaConfigDTO0.getSchemaAddress();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      SchemaConfigDTO schemaConfigDTO0 = new SchemaConfigDTO();\n      String string0 = schemaConfigDTO0.toString();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      SchemaConfigDTO schemaConfigDTO0 = new SchemaConfigDTO();\n      String string0 = schemaConfigDTO0.getSchemaAddress();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 13:01:34 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class SchemaConfigDTO_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"SchemaConfigDTO\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpm_gcvx9u\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SchemaConfigDTO_ESTest_scaffolding.class.getClassLoader() ,\n      \"SchemaConfigDTO\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SchemaConfigDTO_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"SchemaConfigDTO\"\n    );\n  }\n}\n", "class_idx": 173}
{"class_name": "NamedValue", "java_source": "/*\n *  Copyright 2013, 2014 Deutsche Nationalbibliothek\n *\n *  Licensed under the Apache License, Version 2.0 the \"License\";\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * Stores an immutable name-value-pair. The hash code is precomputed during instantiation.\n *\n * @author Markus Michael Geipel\n */\npublic final class NamedValue implements Comparable<NamedValue> {\n\n  private static final int MAGIC1 = 23;\n  private static final int MAGIC2 = 31;\n  private final String name;\n  private final String value;\n  private final int preCompHashCode;\n\n  public NamedValue(final String name, final String value) {\n    this.name = name;\n    this.value = value;\n    int result = MAGIC1;\n    result = MAGIC2 * result + value.hashCode();\n    result = MAGIC2 * result + name.hashCode();\n    preCompHashCode = result;\n  }\n\n  /**\n   * @return the name\n   */\n  public String getName() {\n    return name;\n  }\n\n  /**\n   * @return the value\n   */\n  public String getValue() {\n    return value;\n  }\n\n  @Override\n  public int hashCode() {\n    return preCompHashCode;\n  }\n\n  @Override\n  public boolean equals(final Object obj) {\n    if (obj instanceof NamedValue) {\n      final NamedValue namedValue = (NamedValue) obj;\n      return namedValue.preCompHashCode == preCompHashCode\n          && namedValue.name.equals(name)\n          && namedValue.value.equals(value);\n    }\n    return false;\n  }\n\n  @Override\n  public int compareTo(final NamedValue namedValue) {\n    final int first = name.compareTo(namedValue.name);\n    if (first == 0) {\n      return value.compareTo(namedValue.value);\n    }\n    return first;\n  }\n\n  @Override\n  public String toString() {\n    return name + \":\" + value;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public final super NamedValue \n.super java/lang/Object \n.implements java/lang/Comparable \n.field private static final MAGIC1 I = 23 \n.field private static final MAGIC2 I = 31 \n.field private final name Ljava/lang/String; \n.field private final value Ljava/lang/String; \n.field private final preCompHashCode I \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field NamedValue name Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field NamedValue value Ljava/lang/String; \nL14:    bipush 23 \nL16:    istore_3 \nL17:    bipush 31 \nL19:    iload_3 \nL20:    imul \nL21:    aload_2 \nL22:    invokevirtual Method java/lang/String hashCode ()I \nL25:    iadd \nL26:    istore_3 \nL27:    bipush 31 \nL29:    iload_3 \nL30:    imul \nL31:    aload_1 \nL32:    invokevirtual Method java/lang/String hashCode ()I \nL35:    iadd \nL36:    istore_3 \nL37:    aload_0 \nL38:    iload_3 \nL39:    putfield Field NamedValue preCompHashCode I \nL42:    return \nL43:    \n        .linenumbertable \n            L0 32 \n            L4 33 \n            L9 34 \n            L14 35 \n            L17 36 \n            L27 37 \n            L37 38 \n            L42 39 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field NamedValue name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 45 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getValue : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field NamedValue value Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 52 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public hashCode : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field NamedValue preCompHashCode I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 57 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public equals : (Ljava/lang/Object;)Z \n    .code stack 2 locals 3 \nL0:     aload_1 \nL1:     instanceof NamedValue \nL4:     ifeq L57 \nL7:     aload_1 \nL8:     checkcast NamedValue \nL11:    astore_2 \nL12:    aload_2 \nL13:    getfield Field NamedValue preCompHashCode I \nL16:    aload_0 \nL17:    getfield Field NamedValue preCompHashCode I \nL20:    if_icmpne L55 \nL23:    aload_2 \nL24:    getfield Field NamedValue name Ljava/lang/String; \nL27:    aload_0 \nL28:    getfield Field NamedValue name Ljava/lang/String; \nL31:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL34:    ifeq L55 \nL37:    aload_2 \nL38:    getfield Field NamedValue value Ljava/lang/String; \nL41:    aload_0 \nL42:    getfield Field NamedValue value Ljava/lang/String; \nL45:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL48:    ifeq L55 \nL51:    iconst_1 \nL52:    goto L56 \n\n        .stack append Object NamedValue \nL55:    iconst_0 \n\n        .stack stack_1 Integer \nL56:    ireturn \n\n        .stack chop 1 \nL57:    iconst_0 \nL58:    ireturn \nL59:    \n        .linenumbertable \n            L0 62 \n            L7 63 \n            L12 64 \n            L31 65 \n            L45 66 \n            L56 64 \n            L57 68 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public compareTo : (LNamedValue;)I \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     getfield Field NamedValue name Ljava/lang/String; \nL4:     aload_1 \nL5:     getfield Field NamedValue name Ljava/lang/String; \nL8:     invokevirtual Method java/lang/String compareTo (Ljava/lang/String;)I \nL11:    istore_2 \nL12:    iload_2 \nL13:    ifne L28 \nL16:    aload_0 \nL17:    getfield Field NamedValue value Ljava/lang/String; \nL20:    aload_1 \nL21:    getfield Field NamedValue value Ljava/lang/String; \nL24:    invokevirtual Method java/lang/String compareTo (Ljava/lang/String;)I \nL27:    ireturn \n\n        .stack append Integer \nL28:    iload_2 \nL29:    ireturn \nL30:    \n        .linenumbertable \n            L0 73 \n            L12 74 \n            L16 75 \n            L28 77 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     aload_0 \nL8:     getfield Field NamedValue name Ljava/lang/String; \nL11:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL14:    ldc ':' \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    aload_0 \nL20:    getfield Field NamedValue value Ljava/lang/String; \nL23:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL26:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL29:    areturn \nL30:    \n        .linenumbertable \n            L0 82 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public bridge synthetic compareTo : (Ljava/lang/Object;)I \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     checkcast NamedValue \nL5:     invokevirtual Method NamedValue compareTo (LNamedValue;)I \nL8:     ireturn \nL9:     \n        .linenumbertable \n            L0 24 \n        .end linenumbertable \n    .end code \n.end method \n.signature Ljava/lang/Object;Ljava/lang/Comparable<LNamedValue;>; \n.sourcefile 'NamedValue.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 04:46:38 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class NamedValue_ESTest extends NamedValue_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      NamedValue namedValue0 = new NamedValue(\"IWi{t)$|B8Q+M\", \"IWi{t)$|B8Q+M\");\n      NamedValue namedValue1 = new NamedValue(\"\", \"\");\n      boolean boolean0 = namedValue0.equals(namedValue1);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      NamedValue namedValue0 = new NamedValue(\"D\", \"D\");\n      String string0 = namedValue0.getValue();\n      assertEquals(\"D\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      NamedValue namedValue0 = new NamedValue(\"2DJA%YO,v\u007f2p{Cc\", \"2DJA%YO,v\u007f2p{Cc\");\n      String string0 = namedValue0.getName();\n      assertEquals(\"2DJA%YO,v\u007f2p{Cc\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      NamedValue namedValue0 = new NamedValue(\"\", \"\");\n      NamedValue namedValue1 = new NamedValue(\"NamedValue\", \":\");\n      int int0 = namedValue0.compareTo(namedValue1);\n      assertEquals((-10), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      NamedValue namedValue0 = new NamedValue(\"\", \"\");\n      int int0 = namedValue0.compareTo(namedValue0);\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      NamedValue namedValue0 = new NamedValue(\"IWi{t)$|B8Q+M\", \"IWi{t)$|B8Q+M\");\n      NamedValue namedValue1 = new NamedValue(\"\", \"\");\n      int int0 = namedValue0.compareTo(namedValue1);\n      assertEquals(13, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      NamedValue namedValue0 = new NamedValue(\"\", \"\");\n      NamedValue namedValue1 = new NamedValue(\"\", \":\");\n      boolean boolean0 = namedValue0.equals(namedValue1);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      NamedValue namedValue0 = new NamedValue(\"\", \"\");\n      boolean boolean0 = namedValue0.equals(namedValue0);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      NamedValue namedValue0 = new NamedValue(\"\", \"\");\n      boolean boolean0 = namedValue0.equals(\"\");\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      NamedValue namedValue0 = new NamedValue(\"\", \"\");\n      String string0 = namedValue0.getValue();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      NamedValue namedValue0 = new NamedValue(\"\", \"\");\n      String string0 = namedValue0.getName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      NamedValue namedValue0 = new NamedValue(\"\", \"\");\n      namedValue0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      NamedValue namedValue0 = new NamedValue(\"\", \"\");\n      String string0 = namedValue0.toString();\n      assertEquals(\":\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 04:46:38 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class NamedValue_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"NamedValue\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpc3z03aq7\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NamedValue_ESTest_scaffolding.class.getClassLoader() ,\n      \"NamedValue\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NamedValue_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"NamedValue\"\n    );\n  }\n}\n", "class_idx": 174}
{"class_name": "NotFindException", "java_source": "/** Created by ppc on 2016/3/10. */\npublic class NotFindException extends Exception {\n  private String findId;\n  private String errorClass;\n  private String selfMessage;\n\n  public NotFindException(String id, String className) {\n    super();\n    this.findId = id;\n    this.errorClass = className;\n    this.selfMessage = String.format(\"%s not find  id:%s\", id, className);\n  }\n\n  @Override\n  public String getMessage() {\n    return selfMessage;\n  }\n\n  public String getFindId() {\n    return findId;\n  }\n\n  public String getErrorClass() {\n    return errorClass;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super NotFindException \n.super java/lang/Exception \n.field private findId Ljava/lang/String; \n.field private errorClass Ljava/lang/String; \n.field private selfMessage Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 6 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Exception <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field NotFindException findId Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field NotFindException errorClass Ljava/lang/String; \nL14:    aload_0 \nL15:    ldc '%s not find  id:%s' \nL17:    iconst_2 \nL18:    anewarray java/lang/Object \nL21:    dup \nL22:    iconst_0 \nL23:    aload_1 \nL24:    aastore \nL25:    dup \nL26:    iconst_1 \nL27:    aload_2 \nL28:    aastore \nL29:    invokestatic Method java/lang/String format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; \nL32:    putfield Field NotFindException selfMessage Ljava/lang/String; \nL35:    return \nL36:    \n        .linenumbertable \n            L0 12 \n            L4 13 \n            L9 14 \n            L14 15 \n            L35 16 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getMessage : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field NotFindException selfMessage Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 20 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFindId : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field NotFindException findId Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getErrorClass : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field NotFindException errorClass Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 28 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'NotFindException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 10:52:19 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class NotFindException_ESTest extends NotFindException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      NotFindException notFindException0 = new NotFindException((String) null, \"M=RqT<e\u007fZ_]\");\n      String string0 = notFindException0.getFindId();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      NotFindException notFindException0 = new NotFindException(\"\", \"80x}c]6j4\");\n      String string0 = notFindException0.getFindId();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      NotFindException notFindException0 = new NotFindException(\"PYpz8\", (String) null);\n      String string0 = notFindException0.getErrorClass();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      NotFindException notFindException0 = new NotFindException(\"\", \"\");\n      String string0 = notFindException0.getErrorClass();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      NotFindException notFindException0 = new NotFindException(\"?\", \"?\");\n      String string0 = notFindException0.getMessage();\n      assertEquals(\"? not find  id:?\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      NotFindException notFindException0 = new NotFindException(\"?\", \"?\");\n      String string0 = notFindException0.getErrorClass();\n      assertEquals(\"?\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      NotFindException notFindException0 = new NotFindException(\"?\", \"?\");\n      String string0 = notFindException0.getFindId();\n      assertEquals(\"?\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 10:52:19 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class NotFindException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"NotFindException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpxae7kp_6\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NotFindException_ESTest_scaffolding.class.getClassLoader() ,\n      \"NotFindException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NotFindException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"NotFindException\"\n    );\n  }\n}\n", "class_idx": 175}
{"class_name": "SearchParameters", "java_source": "/**\n * Parameters for searching\n *\n * @author David Read\n */\npublic class SearchParameters {\n  /** The text to be located */\n  private String pattern;\n\n  /** The position in the text area where the search should start */\n  private int position;\n\n  /** Whether the last match was found after wrapping back to the top of the text area */\n  private boolean lastSearchWrapped;\n\n  /** The line number within the text area where the last match was found */\n  private int lastMatchLineNumber = -1;\n\n  /**\n   * Setup a new search parameter.\n   *\n   * @param pPattern The text to be found\n   * @param pPosition The position in the text area to start the search\n   */\n  public SearchParameters(String pPattern, int pPosition) {\n    setPattern(pPattern);\n    setPosition(pPosition);\n  }\n\n  /**\n   * Get the text to be found\n   *\n   * @return The text to be found\n   */\n  public String getPattern() {\n    return pattern;\n  }\n\n  /**\n   * Set the text to be found\n   *\n   * @param pPattern The text to be found\n   */\n  public void setPattern(String pPattern) {\n    pattern = pPattern;\n  }\n\n  /**\n   * Get the position where the search should start\n   *\n   * @return The start position of the search\n   */\n  public int getPosition() {\n    return position;\n  }\n\n  /**\n   * Set the position where the search should start\n   *\n   * @param pPosition The start position of the search\n   */\n  public void setPosition(int pPosition) {\n    position = pPosition;\n  }\n\n  /**\n   * Determine if the last search wrapped back to the top of the text area before a match was found\n   *\n   * @return True if the last match that was found required the search to wrap back to the top of\n   *     the text area\n   */\n  public boolean isLastSearchWrapped() {\n    return lastSearchWrapped;\n  }\n\n  /**\n   * Record whether the last search wrapped back to the top of the text area\n   *\n   * @param pLastSearchWrapped True if the last search wrapped back to the top of the text area\n   */\n  public void setLastSearchWrapped(boolean pLastSearchWrapped) {\n    lastSearchWrapped = pLastSearchWrapped;\n  }\n\n  /**\n   * Get the line number where the latest match was found\n   *\n   * @return The line number where the latest match was found\n   */\n  public int getLastMatchLineNumber() {\n    return lastMatchLineNumber;\n  }\n\n  /**\n   * Set the line number where the latest match was found\n   *\n   * @param pLastMatchLineNumber The line number where the latest match was found\n   */\n  public void setLastMatchLineNumber(int pLastMatchLineNumber) {\n    lastMatchLineNumber = pLastMatchLineNumber;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super SearchParameters \n.super java/lang/Object \n.field private pattern Ljava/lang/String; \n.field private position I \n.field private lastSearchWrapped Z \n.field private lastMatchLineNumber I \n\n.method public <init> : (Ljava/lang/String;I)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iconst_m1 \nL6:     putfield Field SearchParameters lastMatchLineNumber I \nL9:     aload_0 \nL10:    aload_1 \nL11:    invokevirtual Method SearchParameters setPattern (Ljava/lang/String;)V \nL14:    aload_0 \nL15:    iload_2 \nL16:    invokevirtual Method SearchParameters setPosition (I)V \nL19:    return \nL20:    \n        .linenumbertable \n            L0 39 \n            L4 29 \n            L9 40 \n            L14 41 \n            L19 42 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPattern : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SearchParameters pattern Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 50 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPattern : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field SearchParameters pattern Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 60 \n            L5 61 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPosition : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SearchParameters position I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 69 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPosition : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field SearchParameters position I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 79 \n            L5 80 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public isLastSearchWrapped : ()Z \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SearchParameters lastSearchWrapped Z \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 90 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setLastSearchWrapped : (Z)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field SearchParameters lastSearchWrapped Z \nL5:     return \nL6:     \n        .linenumbertable \n            L0 100 \n            L5 101 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getLastMatchLineNumber : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SearchParameters lastMatchLineNumber I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 109 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setLastMatchLineNumber : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field SearchParameters lastMatchLineNumber I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 118 \n            L5 119 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'SearchParameters.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 20:04:21 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class SearchParameters_ESTest extends SearchParameters_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      SearchParameters searchParameters0 = new SearchParameters((String) null, (-71358));\n      searchParameters0.setPosition(0);\n      int int0 = searchParameters0.getPosition();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      SearchParameters searchParameters0 = new SearchParameters(\"\", 1);\n      int int0 = searchParameters0.getPosition();\n      assertEquals(1, int0);\n      assertEquals((-1), searchParameters0.getLastMatchLineNumber());\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      SearchParameters searchParameters0 = new SearchParameters(\"|7-K-@Hhv\u007f{P _\", (-1));\n      searchParameters0.getPattern();\n      assertEquals((-1), searchParameters0.getPosition());\n      assertEquals((-1), searchParameters0.getLastMatchLineNumber());\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      SearchParameters searchParameters0 = new SearchParameters(\"\", 1);\n      searchParameters0.getPattern();\n      assertEquals(1, searchParameters0.getPosition());\n      assertEquals((-1), searchParameters0.getLastMatchLineNumber());\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      SearchParameters searchParameters0 = new SearchParameters((String) null, (-71358));\n      assertEquals((-1), searchParameters0.getLastMatchLineNumber());\n      \n      searchParameters0.setLastMatchLineNumber(0);\n      int int0 = searchParameters0.getLastMatchLineNumber();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      SearchParameters searchParameters0 = new SearchParameters(\"\", 1);\n      searchParameters0.setLastMatchLineNumber(22168);\n      int int0 = searchParameters0.getLastMatchLineNumber();\n      assertEquals(22168, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      SearchParameters searchParameters0 = new SearchParameters((String) null, (-71358));\n      searchParameters0.setPattern(\"\");\n      assertEquals((-1), searchParameters0.getLastMatchLineNumber());\n      assertEquals((-71358), searchParameters0.getPosition());\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      SearchParameters searchParameters0 = new SearchParameters((String) null, (-71358));\n      searchParameters0.getPattern();\n      assertEquals((-1), searchParameters0.getLastMatchLineNumber());\n      assertEquals((-71358), searchParameters0.getPosition());\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      SearchParameters searchParameters0 = new SearchParameters((String) null, (-71358));\n      int int0 = searchParameters0.getLastMatchLineNumber();\n      assertEquals((-1), int0);\n      assertEquals((-71358), searchParameters0.getPosition());\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      SearchParameters searchParameters0 = new SearchParameters((String) null, (-71358));\n      searchParameters0.setLastSearchWrapped(true);\n      boolean boolean0 = searchParameters0.isLastSearchWrapped();\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      SearchParameters searchParameters0 = new SearchParameters((String) null, (-71358));\n      int int0 = searchParameters0.getPosition();\n      assertEquals((-71358), int0);\n      assertEquals((-1), searchParameters0.getLastMatchLineNumber());\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      SearchParameters searchParameters0 = new SearchParameters((String) null, (-71358));\n      searchParameters0.isLastSearchWrapped();\n      assertEquals((-71358), searchParameters0.getPosition());\n      assertEquals((-1), searchParameters0.getLastMatchLineNumber());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 20:04:21 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class SearchParameters_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"SearchParameters\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmph8r9t4es\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SearchParameters_ESTest_scaffolding.class.getClassLoader() ,\n      \"SearchParameters\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SearchParameters_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"SearchParameters\"\n    );\n  }\n}\n", "class_idx": 176}
{"class_name": "CreateCategoriesEvent", "java_source": "/*\n   Copyright 2011 Silvio Wehner, Franziska Staake, Thomas Schulze\n\n   This file is part of HIS.\n\n   HIS is free software: you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   HIS is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with HIS.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport java.util.Collection;\nimport java.util.EventObject;\n\n/**\n * @author Thomas Schulze\n */\npublic class CreateCategoriesEvent extends EventObject {\n  private Collection<Integer> expandedRowsList;\n\n  public CreateCategoriesEvent(Object source) {\n    super(source);\n  }\n\n  public CreateCategoriesEvent(Object source, Collection<Integer> expandedRowsList) {\n    this(source);\n    this.expandedRowsList = expandedRowsList;\n  }\n\n  /**\n   * @return the expandedRowsList\n   */\n  public Collection<Integer> getExpandedRowsList() {\n    return expandedRowsList;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super CreateCategoriesEvent \n.super java/util/EventObject \n.field private expandedRowsList Ljava/util/Collection; .fieldattributes \n    .signature Ljava/util/Collection<Ljava/lang/Integer;>; \n.end fieldattributes \n\n.method public <init> : (Ljava/lang/Object;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/util/EventObject <init> (Ljava/lang/Object;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 33 \n            L5 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/Object;Ljava/util/Collection;)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method CreateCategoriesEvent <init> (Ljava/lang/Object;)V \nL5:     aload_0 \nL6:     aload_2 \nL7:     putfield Field CreateCategoriesEvent expandedRowsList Ljava/util/Collection; \nL10:    return \nL11:    \n        .linenumbertable \n            L0 38 \n            L5 39 \n            L10 40 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/lang/Object;Ljava/util/Collection<Ljava/lang/Integer;>;)V \n.end method \n\n.method public getExpandedRowsList : ()Ljava/util/Collection; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field CreateCategoriesEvent expandedRowsList Ljava/util/Collection; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 46 \n        .end linenumbertable \n    .end code \n    .signature ()Ljava/util/Collection<Ljava/lang/Integer;>; \n.end method \n.sourcefile 'CreateCategoriesEvent.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 13:42:02 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.Collection;\nimport java.util.LinkedList;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CreateCategoriesEvent_ESTest extends CreateCategoriesEvent_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Object object0 = new Object();\n      CreateCategoriesEvent createCategoriesEvent0 = new CreateCategoriesEvent(object0);\n      Collection<Integer> collection0 = createCategoriesEvent0.getExpandedRowsList();\n      assertNull(collection0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Integer integer0 = new Integer(119223);\n      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n      CreateCategoriesEvent createCategoriesEvent0 = new CreateCategoriesEvent(integer0, linkedList0);\n      Collection<Integer> collection0 = createCategoriesEvent0.getExpandedRowsList();\n      assertFalse(collection0.contains(119223));\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 13:42:02 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class CreateCategoriesEvent_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CreateCategoriesEvent\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmprtaauvrx\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CreateCategoriesEvent_ESTest_scaffolding.class.getClassLoader() ,\n      \"CreateCategoriesEvent\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CreateCategoriesEvent_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CreateCategoriesEvent\"\n    );\n  }\n}\n", "class_idx": 177}
{"class_name": "Exercise14", "java_source": "/** Exercise 14 */\nimport java.util.*;\n\npublic class Exercise14 {\n  public static List<Integer> insertInMiddle(\n      List<Integer> list, Integer num) { // insert a num 1-1000 in the middle of the list\n    int halfLength = list.size() / 2;\n    ListIterator<Integer> ite = list.listIterator();\n    List<Integer> resultList = new LinkedList<Integer>();\n    for (int i = 0; i < halfLength; i++) {\n      resultList.add(ite.next());\n    }\n    resultList.add(num);\n    while (ite.hasNext()) {\n      resultList.add(ite.next());\n    }\n    return resultList;\n  }\n\n  public static void main(String[] args) {\n    List<Integer> list = new LinkedList<Integer>();\n    int times = 10;\n    for (int i = 0; i < times; i++) {\n      list = insertInMiddle(list, i);\n    }\n    System.out.println(list);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Exercise14 \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 7 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static insertInMiddle : (Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List; \n    .code stack 2 locals 6 \nL0:     aload_0 \nL1:     invokeinterface InterfaceMethod java/util/List size ()I 1 \nL6:     iconst_2 \nL7:     idiv \nL8:     istore_2 \nL9:     aload_0 \nL10:    invokeinterface InterfaceMethod java/util/List listIterator ()Ljava/util/ListIterator; 1 \nL15:    astore_3 \nL16:    new java/util/LinkedList \nL19:    dup \nL20:    invokespecial Method java/util/LinkedList <init> ()V \nL23:    astore 4 \nL25:    iconst_0 \nL26:    istore 5 \n\n        .stack full \n            locals Object java/util/List Object java/lang/Integer Integer Object java/util/ListIterator Object java/util/List Integer \n            stack \n        .end stack \nL28:    iload 5 \nL30:    iload_2 \nL31:    if_icmpge L54 \nL34:    aload 4 \nL36:    aload_3 \nL37:    invokeinterface InterfaceMethod java/util/ListIterator next ()Ljava/lang/Object; 1 \nL42:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL47:    pop \nL48:    iinc 5 1 \nL51:    goto L28 \n\n        .stack chop 1 \nL54:    aload 4 \nL56:    aload_1 \nL57:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL62:    pop \n\n        .stack same \nL63:    aload_3 \nL64:    invokeinterface InterfaceMethod java/util/ListIterator hasNext ()Z 1 \nL69:    ifeq L89 \nL72:    aload 4 \nL74:    aload_3 \nL75:    invokeinterface InterfaceMethod java/util/ListIterator next ()Ljava/lang/Object; 1 \nL80:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL85:    pop \nL86:    goto L63 \n\n        .stack same \nL89:    aload 4 \nL91:    areturn \nL92:    \n        .linenumbertable \n            L0 9 \n            L9 10 \n            L16 11 \n            L25 12 \n            L34 13 \n            L48 12 \n            L54 15 \n            L63 16 \n            L72 17 \n            L89 19 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/util/List<Ljava/lang/Integer;>;Ljava/lang/Integer;)Ljava/util/List<Ljava/lang/Integer;>; \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 2 locals 4 \nL0:     new java/util/LinkedList \nL3:     dup \nL4:     invokespecial Method java/util/LinkedList <init> ()V \nL7:     astore_1 \nL8:     bipush 10 \nL10:    istore_2 \nL11:    iconst_0 \nL12:    istore_3 \n\n        .stack append Object java/util/List Integer Integer \nL13:    iload_3 \nL14:    iload_2 \nL15:    if_icmpge L33 \nL18:    aload_1 \nL19:    iload_3 \nL20:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL23:    invokestatic Method Exercise14 insertInMiddle (Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List; \nL26:    astore_1 \nL27:    iinc 3 1 \nL30:    goto L13 \n\n        .stack chop 1 \nL33:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL36:    aload_1 \nL37:    invokevirtual Method java/io/PrintStream println (Ljava/lang/Object;)V \nL40:    return \nL41:    \n        .linenumbertable \n            L0 22 \n            L8 23 \n            L11 24 \n            L18 25 \n            L27 24 \n            L33 27 \n            L40 28 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Exercise14.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 21:56:23 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.shaded.org.mockito.Mockito.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.util.Comparator;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.function.Function;\nimport java.util.function.UnaryOperator;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.ViolatedAssumptionAnswer;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Exercise14_ESTest extends Exercise14_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Exercise14 exercise14_0 = new Exercise14();\n      Exercise14.main((String[]) null);\n      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n      Integer integer0 = new Integer((-24008));\n      List<Integer> list0 = Exercise14.insertInMiddle(linkedList0, integer0);\n      Exercise14.main((String[]) null);\n      Exercise14.main((String[]) null);\n      Exercise14.main((String[]) null);\n      Integer integer1 = new Integer((-24008));\n      Exercise14.insertInMiddle(list0, integer1);\n      Exercise14.main((String[]) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Exercise14 exercise14_0 = new Exercise14();\n      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n      Integer integer0 = new Integer(0);\n      List<Integer> list0 = Exercise14.insertInMiddle(linkedList0, integer0);\n      Exercise14.insertInMiddle(list0, integer0);\n      String[] stringArray0 = new String[1];\n      stringArray0[0] = \"\";\n      Exercise14.main(stringArray0);\n      List<Integer> list1 = null;\n      String string0 = \"Exercise14\";\n      int int0 = 17928;\n      try { \n        Integer.valueOf(\"Exercise14\", 17928);\n        fail(\"Expecting exception: NumberFormatException\");\n      \n      } catch(NumberFormatException e) {\n         //\n         // radix 17928 greater than Character.MAX_RADIX\n         //\n         verifyException(\"java.lang.Integer\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Exercise14 exercise14_0 = new Exercise14();\n      Integer integer0 = new Integer(0);\n      // Undeclared exception!\n      try { \n        Exercise14.insertInMiddle((List<Integer>) null, integer0);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      String[] stringArray0 = new String[0];\n      Exercise14.main(stringArray0);\n      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n      List<Integer> list0 = Exercise14.insertInMiddle(linkedList0, (Integer) null);\n      List<Integer> list1 = Exercise14.insertInMiddle(list0, (Integer) null);\n      Exercise14.main(stringArray0);\n      linkedList0.add((Integer) null);\n      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();\n      unaryOperator0.apply((Integer) null);\n      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();\n      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());\n      Function<Object, Integer> function1 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function0);\n      Function.identity();\n      unaryOperator0.compose((Function<? super Object, ? extends Integer>) function1);\n      linkedList0.replaceAll(unaryOperator0);\n      Integer integer0 = new Integer(0);\n      Exercise14.insertInMiddle(list1, integer0);\n      Integer.getInteger((String) null, 0);\n      Integer.sum((-95277), (-95277));\n      Exercise14.main(stringArray0);\n      Exercise14.insertInMiddle(linkedList0, integer0);\n      Exercise14 exercise14_0 = new Exercise14();\n      Exercise14.main((String[]) null);\n      Integer integer1 = new Integer((-95277));\n      Exercise14.insertInMiddle(list0, integer1);\n      Exercise14.main(stringArray0);\n      assertEquals(0, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Exercise14 exercise14_0 = new Exercise14();\n      Integer integer0 = new Integer((-848));\n      // Undeclared exception!\n      try { \n        Exercise14.insertInMiddle((List<Integer>) null, integer0);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n      List<Integer> list0 = Exercise14.insertInMiddle(linkedList0, (Integer) null);\n      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n      linkedList0.sort(comparator0);\n      List<Integer> list1 = Exercise14.insertInMiddle(list0, (Integer) null);\n      List<Integer> list2 = Exercise14.insertInMiddle(list1, (Integer) null);\n      Exercise14.insertInMiddle(list2, (Integer) null);\n      Integer integer0 = new Integer(35118);\n      Integer.sum(11506, 0);\n      Exercise14.insertInMiddle(list1, integer0);\n      Exercise14.insertInMiddle(list2, (Integer) null);\n      Exercise14.insertInMiddle(list0, (Integer) null);\n      String[] stringArray0 = new String[2];\n      stringArray0[0] = \"ow*1:\";\n      stringArray0[1] = \"s9|\";\n      Exercise14.main(stringArray0);\n      assertEquals(2, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n      Integer integer0 = new Integer((-38964));\n      List<Integer> list0 = Exercise14.insertInMiddle(linkedList0, integer0);\n      List<Integer> list1 = Exercise14.insertInMiddle(list0, integer0);\n      Integer integer1 = new Integer((-38964));\n      List<Integer> list2 = Exercise14.insertInMiddle(list1, integer1);\n      assertFalse(list2.equals((Object)list0));\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n      Integer integer0 = new Integer(3633);\n      Integer integer1 = Integer.getInteger(\"\", 3633);\n      List<Integer> list0 = Exercise14.insertInMiddle(linkedList0, integer0);\n      String[] stringArray0 = new String[7];\n      stringArray0[0] = \"e[1*\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"_Uwpt~PO\";\n      stringArray0[3] = \"6la_Oi2S\";\n      stringArray0[4] = \"Uo`[eb:*nL%Iz#:5;Si\";\n      stringArray0[5] = \"No^>'J#@n,]\";\n      stringArray0[6] = \"LM|d{jsl=w\\\\'\";\n      Exercise14.main(stringArray0);\n      Integer integer2 = new Integer(28403);\n      Exercise14.insertInMiddle(linkedList0, integer2);\n      Exercise14 exercise14_0 = new Exercise14();\n      Exercise14.insertInMiddle(list0, integer0);\n      Exercise14.main(stringArray0);\n      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();\n      Exercise14.insertInMiddle(linkedList1, integer1);\n      Integer integer3 = new Integer(28403);\n      Exercise14.insertInMiddle(list0, integer3);\n      Integer integer4 = new Integer(3633);\n      try { \n        Integer.decode(\"|NG@LCKU CXmHb\");\n        fail(\"Expecting exception: NumberFormatException\");\n      \n      } catch(NumberFormatException e) {\n         //\n         // For input string: \\\"|NG@LCKU CXmHb\\\"\n         //\n         verifyException(\"java.lang.NumberFormatException\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n      Integer integer0 = new Integer(0);\n      Integer integer1 = new Integer(0);\n      Integer.getInteger(\"\", integer1);\n      linkedList0.add(integer0);\n      int int0 = (-43181);\n      linkedList0.push(integer1);\n      // Undeclared exception!\n      try { \n        linkedList0.set((-43181), integer1);\n        fail(\"Expecting exception: IndexOutOfBoundsException\");\n      \n      } catch(IndexOutOfBoundsException e) {\n         //\n         // Index: -43181, Size: 2\n         //\n         verifyException(\"java.util.LinkedList\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test9()  throws Throwable  {\n      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n      int int0 = 0;\n      Integer integer0 = Integer.valueOf(0);\n      Exercise14.insertInMiddle(linkedList0, integer0);\n      int int1 = 10;\n      int int2 = 1;\n      Integer integer1 = new Integer(10);\n      linkedList0.offerLast(integer1);\n      // Undeclared exception!\n      try { \n        Integer.remainderUnsigned(0, 0);\n        fail(\"Expecting exception: ArithmeticException\");\n      \n      } catch(ArithmeticException e) {\n         //\n         // / by zero\n         //\n         verifyException(\"java.lang.Integer\", e);\n      }\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 21:56:23 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\nimport static org.evosuite.shaded.org.mockito.Mockito.*;\n@EvoSuiteClassExclude\npublic class Exercise14_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Exercise14\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp5alqjlvl\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Exercise14_ESTest_scaffolding.class.getClassLoader() ,\n      \"Exercise14\"\n    );\n  } \n  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { \n    mock(Class.forName(\"java.util.Comparator\", false, Exercise14_ESTest_scaffolding.class.getClassLoader()));\n    mock(Class.forName(\"java.util.function.Function\", false, Exercise14_ESTest_scaffolding.class.getClassLoader()));\n  }\n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Exercise14_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Exercise14\"\n    );\n  }\n}\n", "class_idx": 178}
{"class_name": "MonDataPK", "java_source": "/*\n * Copyright (C) 2012-2015 Open Source Consulting, Inc. All rights reserved by Open Source Consulting, Inc.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Revision History\n * Author\t\t\tDate\t\t\t\tDescription\n * ---------------\t----------------\t------------\n * BongJin Kwon\t\t2016. 4. 6.\t\tFirst Draft.\n */\n\nimport java.io.Serializable;\nimport java.util.Date;\n\n/**\n *\n *\n * <pre>\n *\n * </pre>\n *\n * @author Bongjin Kwon\n * @version 1.0\n */\npublic class MonDataPK implements Serializable {\n\n  private static final long serialVersionUID = 5808702600047332135L;\n\n  private String monFactorId; //\n  private int serverId; //\n  private Date monDt; //\n\n  public MonDataPK() {}\n\n  public String getMonFactorId() {\n    return monFactorId;\n  }\n\n  public void setMonFactorId(String monFactorId) {\n    this.monFactorId = monFactorId;\n  }\n\n  public int getServerId() {\n    return serverId;\n  }\n\n  public void setServerId(int serverId) {\n    this.serverId = serverId;\n  }\n\n  public Date getMonDt() {\n    return monDt;\n  }\n\n  public void setMonDt(Date monDt) {\n    this.monDt = monDt;\n  }\n}\n// end of MonDataPK.java\n", "jasm_code": ".version 52 0 \n.class public super MonDataPK \n.super java/lang/Object \n.implements java/io/Serializable \n.field private static final serialVersionUID J = 5808702600047332135L \n.field private monFactorId Ljava/lang/String; \n.field private serverId I \n.field private monDt Ljava/util/Date; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 43 \n            L4 44 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getMonFactorId : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field MonDataPK monFactorId Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 47 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setMonFactorId : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field MonDataPK monFactorId Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 51 \n            L5 52 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getServerId : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field MonDataPK serverId I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 55 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setServerId : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field MonDataPK serverId I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 59 \n            L5 60 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getMonDt : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field MonDataPK monDt Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 63 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setMonDt : (Ljava/util/Date;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field MonDataPK monDt Ljava/util/Date; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 67 \n            L5 68 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'MonDataPK.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 18:44:52 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.Date;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.util.MockDate;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class MonDataPK_ESTest extends MonDataPK_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      MonDataPK monDataPK0 = new MonDataPK();\n      monDataPK0.setServerId((-1));\n      int int0 = monDataPK0.getServerId();\n      assertEquals((-1), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      MonDataPK monDataPK0 = new MonDataPK();\n      monDataPK0.setMonFactorId(\"nqnvShkp\");\n      String string0 = monDataPK0.getMonFactorId();\n      assertEquals(\"nqnvShkp\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      MonDataPK monDataPK0 = new MonDataPK();\n      monDataPK0.setMonFactorId(\"\");\n      String string0 = monDataPK0.getMonFactorId();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      MonDataPK monDataPK0 = new MonDataPK();\n      MockDate mockDate0 = new MockDate((-5456L));\n      monDataPK0.setMonDt(mockDate0);\n      Date date0 = monDataPK0.getMonDt();\n      assertSame(date0, mockDate0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      MonDataPK monDataPK0 = new MonDataPK();\n      int int0 = monDataPK0.getServerId();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      MonDataPK monDataPK0 = new MonDataPK();\n      monDataPK0.setServerId(1);\n      int int0 = monDataPK0.getServerId();\n      assertEquals(1, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      MonDataPK monDataPK0 = new MonDataPK();\n      Date date0 = monDataPK0.getMonDt();\n      assertNull(date0);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      MonDataPK monDataPK0 = new MonDataPK();\n      String string0 = monDataPK0.getMonFactorId();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 18:44:52 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class MonDataPK_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"MonDataPK\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpi7g91rtr\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MonDataPK_ESTest_scaffolding.class.getClassLoader() ,\n      \"MonDataPK\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MonDataPK_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"MonDataPK\"\n    );\n  }\n}\n", "class_idx": 179}
{"class_name": "IntChPair", "java_source": "public class IntChPair {\n  int a;\n  char b;\n\n  public IntChPair(int a, char b) {\n    this.a = a;\n    this.b = b;\n  }\n\n  public int getA() {\n    return a;\n  }\n\n  public void setA(int a) {\n    this.a = a;\n  }\n\n  public char getB() {\n    return b;\n  }\n\n  public void setB(char b) {\n    this.b = b;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (!(obj instanceof IntChPair)) return false;\n    IntChPair o = (IntChPair) obj;\n    return this.a == o.getA() && this.b == o.getB();\n  }\n\n  @Override\n  public int hashCode() {\n    return a ^ b;\n  }\n\n  @Override\n  public String toString() {\n    return String.format(\"(%s\u0095%s)\", a, b);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super IntChPair \n.super java/lang/Object \n.field a I \n.field b C \n\n.method public <init> : (IC)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field IntChPair a I \nL9:     aload_0 \nL10:    iload_2 \nL11:    putfield Field IntChPair b C \nL14:    return \nL15:    \n        .linenumbertable \n            L0 7 \n            L4 8 \n            L9 9 \n            L14 10 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getA : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field IntChPair a I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setA : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field IntChPair a I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 17 \n            L5 18 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getB : ()C \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field IntChPair b C \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setB : (C)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field IntChPair b C \nL5:     return \nL6:     \n        .linenumbertable \n            L0 25 \n            L5 26 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public equals : (Ljava/lang/Object;)Z \n    .code stack 2 locals 3 \nL0:     aload_1 \nL1:     instanceof IntChPair \nL4:     ifne L9 \nL7:     iconst_0 \nL8:     ireturn \n\n        .stack same \nL9:     aload_1 \nL10:    checkcast IntChPair \nL13:    astore_2 \nL14:    aload_0 \nL15:    getfield Field IntChPair a I \nL18:    aload_2 \nL19:    invokevirtual Method IntChPair getA ()I \nL22:    if_icmpne L40 \nL25:    aload_0 \nL26:    getfield Field IntChPair b C \nL29:    aload_2 \nL30:    invokevirtual Method IntChPair getB ()C \nL33:    if_icmpne L40 \nL36:    iconst_1 \nL37:    goto L41 \n\n        .stack append Object IntChPair \nL40:    iconst_0 \n\n        .stack stack_1 Integer \nL41:    ireturn \nL42:    \n        .linenumbertable \n            L0 30 \n            L7 31 \n            L9 32 \n            L14 33 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public hashCode : ()I \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field IntChPair a I \nL4:     aload_0 \nL5:     getfield Field IntChPair b C \nL8:     ixor \nL9:     ireturn \nL10:    \n        .linenumbertable \n            L0 38 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 5 locals 1 \nL0:     ldc '(%s\\x95%s)' \nL2:     iconst_2 \nL3:     anewarray java/lang/Object \nL6:     dup \nL7:     iconst_0 \nL8:     aload_0 \nL9:     getfield Field IntChPair a I \nL12:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL15:    aastore \nL16:    dup \nL17:    iconst_1 \nL18:    aload_0 \nL19:    getfield Field IntChPair b C \nL22:    invokestatic Method java/lang/Character valueOf (C)Ljava/lang/Character; \nL25:    aastore \nL26:    invokestatic Method java/lang/String format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; \nL29:    areturn \nL30:    \n        .linenumbertable \n            L0 43 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'IntChPair.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 01:33:45 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class IntChPair_ESTest extends IntChPair_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      IntChPair intChPair0 = new IntChPair((-44455), '!');\n      String string0 = intChPair0.toString();\n      assertEquals(\"(-44455\\u0095!)\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      IntChPair intChPair0 = new IntChPair(2, 'O');\n      IntChPair intChPair1 = new IntChPair(2, 'O');\n      intChPair1.setB('d');\n      boolean boolean0 = intChPair0.equals(intChPair1);\n      assertEquals('d', intChPair1.getB());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      IntChPair intChPair0 = new IntChPair(0, 'B');\n      IntChPair intChPair1 = new IntChPair(0, '>');\n      intChPair1.a = 47392;\n      boolean boolean0 = intChPair0.equals(intChPair1);\n      assertEquals(47392, intChPair1.getA());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      IntChPair intChPair0 = new IntChPair(54210, '2');\n      char char0 = intChPair0.getB();\n      assertEquals(54210, intChPair0.getA());\n      assertEquals('2', char0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      IntChPair intChPair0 = new IntChPair((-19387), 'W');\n      char char0 = intChPair0.getB();\n      assertEquals((-19387), intChPair0.getA());\n      assertEquals('W', char0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      IntChPair intChPair0 = new IntChPair(0, 'T');\n      int int0 = intChPair0.getA();\n      assertEquals('T', intChPair0.getB());\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      IntChPair intChPair0 = new IntChPair((-42567), 'p');\n      intChPair0.setA(1);\n      int int0 = intChPair0.getA();\n      assertEquals(1, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      IntChPair intChPair0 = new IntChPair((-42567), 'p');\n      int int0 = intChPair0.getA();\n      assertEquals('p', intChPair0.getB());\n      assertEquals((-42567), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      IntChPair intChPair0 = new IntChPair((-42567), 'p');\n      intChPair0.setA(1);\n      IntChPair intChPair1 = new IntChPair(1, 'p');\n      intChPair1.setB('O');\n      boolean boolean0 = intChPair0.equals(intChPair1);\n      assertEquals('O', intChPair1.getB());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      IntChPair intChPair0 = new IntChPair((-44455), '!');\n      IntChPair intChPair1 = new IntChPair((-56024), '~');\n      boolean boolean0 = intChPair0.equals(intChPair1);\n      assertEquals('~', intChPair1.getB());\n      assertEquals((-56024), intChPair1.getA());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      IntChPair intChPair0 = new IntChPair(0, '/');\n      Object object0 = new Object();\n      boolean boolean0 = intChPair0.equals(object0);\n      assertFalse(boolean0);\n      assertEquals(0, intChPair0.getA());\n      assertEquals('/', intChPair0.getB());\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      IntChPair intChPair0 = new IntChPair(54210, '2');\n      intChPair0.hashCode();\n      assertEquals(54210, intChPair0.getA());\n      assertEquals('2', intChPair0.getB());\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      IntChPair intChPair0 = new IntChPair(0, '/');\n      boolean boolean0 = intChPair0.equals(intChPair0);\n      assertEquals(0, intChPair0.getA());\n      assertEquals('/', intChPair0.getB());\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      IntChPair intChPair0 = new IntChPair(0, '/');\n      char char0 = intChPair0.getB();\n      assertEquals('/', char0);\n      assertEquals(0, intChPair0.getA());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 01:33:45 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class IntChPair_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"IntChPair\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpm7ymuecz\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IntChPair_ESTest_scaffolding.class.getClassLoader() ,\n      \"IntChPair\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IntChPair_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"IntChPair\"\n    );\n  }\n}\n", "class_idx": 180}
{"class_name": "GraphProperties", "java_source": "import java.util.Arrays;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Map;\nimport java.util.Set;\n\npublic class GraphProperties {\n  protected Map<String, Set<Object>> properties = new HashMap<String, Set<Object>>();\n\n  public GraphProperties() {}\n\n  public GraphProperties(Map<String, Object> properties) {\n    // Add Properties will work faster\n    addProperties(properties);\n  }\n\n  public boolean hasProperty(String key) {\n    return properties.containsKey(key);\n  }\n\n  public Object getProperty(String key) {\n    return getProperty(properties.get(key));\n  }\n\n  public void setProperty(String key, Object value) {\n    if (null != value) {\n      Set<Object> set = properties.get(key);\n      if (null == set) properties.put(key, set = new HashSet<Object>());\n      else set.clear();\n\n      setProperty(set, value);\n    } else properties.remove(key);\n  }\n\n  public void setPropertyOnce(String key, Object value) {\n    if (null != value) {\n      Set<Object> set = properties.get(key);\n      if (null == set) {\n        properties.put(key, set = new HashSet<Object>());\n        setProperty(set, value);\n      }\n    }\n  }\n\n  public void addProperty(String key, Object value) {\n    if (null != value) {\n      Set<Object> set = properties.get(key);\n      if (null == set) {\n        set = new HashSet<Object>();\n        properties.put(key, set);\n      }\n\n      setProperty(set, value);\n    }\n  }\n\n  public Map<String, Object> getProperties() {\n    Map<String, Object> result = new HashMap<String, Object>();\n    for (Map.Entry<String, Set<Object>> entry : properties.entrySet()) {\n      Object value = getProperty(entry.getValue());\n      if (null != value) result.put(entry.getKey(), value);\n    }\n\n    return result;\n  }\n\n  public void setProperties(Map<String, Object> map) {\n    if (null != map)\n      for (Map.Entry<String, Object> entry : map.entrySet())\n        setProperty(entry.getKey(), entry.getValue());\n  }\n\n  public void addProperties(Map<String, Object> map) {\n    if (null != map)\n      for (Map.Entry<String, Object> entry : map.entrySet())\n        addProperty(entry.getKey(), entry.getValue());\n  }\n\n  protected static Object getProperty(Set<Object> set) {\n    if (null == set) return null;\n    int size = set.size();\n    if (0 == size) return null;\n\n    Object element = set.iterator().next();\n    if (1 == size) return element;\n    if (element instanceof Boolean) return set.toArray(new Boolean[size]);\n    if (element instanceof Byte) return set.toArray(new Byte[size]);\n    if (element instanceof Short) return set.toArray(new Short[size]);\n    if (element instanceof Integer) return set.toArray(new Integer[size]);\n    if (element instanceof Long) return set.toArray(new Long[size]);\n    if (element instanceof Float) return set.toArray(new Float[size]);\n    if (element instanceof Double) return set.toArray(new Double[size]);\n    if (element instanceof String) return set.toArray(new String[size]);\n\n    throw new ClassCastException(\n        \"Unable to convert Property Array, they property type: \"\n            + element.getClass()\n            + \" is not supported\");\n  }\n\n  protected static void setProperty(Set<Object> set, Object value) {\n    if (value instanceof String[]) set.addAll(Arrays.asList((String[]) value));\n    else if (value instanceof Boolean[]) set.addAll(Arrays.asList((Boolean[]) value));\n    else if (value instanceof Byte[]) set.addAll(Arrays.asList((Byte[]) value));\n    else if (value instanceof Short[]) set.addAll(Arrays.asList((Short[]) value));\n    else if (value instanceof Integer[]) set.addAll(Arrays.asList((Integer[]) value));\n    else if (value instanceof Long[]) set.addAll(Arrays.asList((Long[]) value));\n    else if (value instanceof Float[]) set.addAll(Arrays.asList((Float[]) value));\n    else if (value instanceof Double[]) set.addAll(Arrays.asList((Double[]) value));\n    /*else if (value instanceof Object[])\n    set.addAll(Arrays.asList((Object[]) value));*/\n    else if (value instanceof Collection<?>) set.addAll((Collection<?>) value);\n    else if (value instanceof Map<?, ?>)\n      throw new IllegalArgumentException(\"Maps as Parameters are not supported\");\n    else if (value.getClass().isArray())\n      throw new IllegalArgumentException(\"Array myst be of Primitive type\");\n    else set.add(value);\n  }\n\n  @Override\n  public GraphProperties clone() {\n    GraphProperties node = new GraphProperties();\n    if (null != properties)\n      for (Map.Entry<String, Set<Object>> entry : properties.entrySet())\n        node.setProperty(entry.getKey(), new HashSet<Object>(entry.getValue()));\n    return node;\n  }\n\n  public GraphProperties clone(String... keys) {\n    GraphProperties node = new GraphProperties();\n    if (null != properties)\n      for (String key : keys) {\n        Set<Object> property = properties.get(key);\n        if (null != property) node.setProperty(key, new HashSet<Object>(property));\n      }\n    return node;\n  }\n\n  @Override\n  public String toString() {\n    return this.properties.toString();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super GraphProperties \n.super java/lang/Object \n.field protected properties Ljava/util/Map; .fieldattributes \n    .signature Ljava/util/Map<Ljava/lang/String;Ljava/util/Set<Ljava/lang/Object;>;>; \n.end fieldattributes \n\n.method public <init> : ()V \n    .code stack 3 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     new java/util/HashMap \nL8:     dup \nL9:     invokespecial Method java/util/HashMap <init> ()V \nL12:    putfield Field GraphProperties properties Ljava/util/Map; \nL15:    return \nL16:    \n        .linenumbertable \n            L0 13 \n            L4 11 \n            L15 15 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/util/Map;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     new java/util/HashMap \nL8:     dup \nL9:     invokespecial Method java/util/HashMap <init> ()V \nL12:    putfield Field GraphProperties properties Ljava/util/Map; \nL15:    aload_0 \nL16:    aload_1 \nL17:    invokevirtual Method GraphProperties addProperties (Ljava/util/Map;)V \nL20:    return \nL21:    \n        .linenumbertable \n            L0 17 \n            L4 11 \n            L15 19 \n            L20 20 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)V \n.end method \n\n.method public hasProperty : (Ljava/lang/String;)Z \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field GraphProperties properties Ljava/util/Map; \nL4:     aload_1 \nL5:     invokeinterface InterfaceMethod java/util/Map containsKey (Ljava/lang/Object;)Z 2 \nL10:    ireturn \nL11:    \n        .linenumbertable \n            L0 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty : (Ljava/lang/String;)Ljava/lang/Object; \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field GraphProperties properties Ljava/util/Map; \nL4:     aload_1 \nL5:     invokeinterface InterfaceMethod java/util/Map get (Ljava/lang/Object;)Ljava/lang/Object; 2 \nL10:    checkcast java/util/Set \nL13:    invokestatic Method GraphProperties getProperty (Ljava/util/Set;)Ljava/lang/Object; \nL16:    areturn \nL17:    \n        .linenumbertable \n            L0 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty : (Ljava/lang/String;Ljava/lang/Object;)V \n    .code stack 4 locals 4 \nL0:     aconst_null \nL1:     aload_2 \nL2:     if_acmpeq L61 \nL5:     aload_0 \nL6:     getfield Field GraphProperties properties Ljava/util/Map; \nL9:     aload_1 \nL10:    invokeinterface InterfaceMethod java/util/Map get (Ljava/lang/Object;)Ljava/lang/Object; 2 \nL15:    checkcast java/util/Set \nL18:    astore_3 \nL19:    aconst_null \nL20:    aload_3 \nL21:    if_acmpne L47 \nL24:    aload_0 \nL25:    getfield Field GraphProperties properties Ljava/util/Map; \nL28:    aload_1 \nL29:    new java/util/HashSet \nL32:    dup \nL33:    invokespecial Method java/util/HashSet <init> ()V \nL36:    dup \nL37:    astore_3 \nL38:    invokeinterface InterfaceMethod java/util/Map put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; 3 \nL43:    pop \nL44:    goto L53 \n\n        .stack append Object java/util/Set \nL47:    aload_3 \nL48:    invokeinterface InterfaceMethod java/util/Set clear ()V 1 \n\n        .stack same \nL53:    aload_3 \nL54:    aload_2 \nL55:    invokestatic Method GraphProperties setProperty (Ljava/util/Set;Ljava/lang/Object;)V \nL58:    goto L72 \n\n        .stack chop 1 \nL61:    aload_0 \nL62:    getfield Field GraphProperties properties Ljava/util/Map; \nL65:    aload_1 \nL66:    invokeinterface InterfaceMethod java/util/Map remove (Ljava/lang/Object;)Ljava/lang/Object; 2 \nL71:    pop \n\n        .stack same \nL72:    return \nL73:    \n        .linenumbertable \n            L0 32 \n            L5 33 \n            L19 34 \n            L24 35 \n            L47 37 \n            L53 39 \n            L58 40 \n            L61 41 \n            L72 42 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPropertyOnce : (Ljava/lang/String;Ljava/lang/Object;)V \n    .code stack 4 locals 4 \nL0:     aconst_null \nL1:     aload_2 \nL2:     if_acmpeq L49 \nL5:     aload_0 \nL6:     getfield Field GraphProperties properties Ljava/util/Map; \nL9:     aload_1 \nL10:    invokeinterface InterfaceMethod java/util/Map get (Ljava/lang/Object;)Ljava/lang/Object; 2 \nL15:    checkcast java/util/Set \nL18:    astore_3 \nL19:    aconst_null \nL20:    aload_3 \nL21:    if_acmpne L49 \nL24:    aload_0 \nL25:    getfield Field GraphProperties properties Ljava/util/Map; \nL28:    aload_1 \nL29:    new java/util/HashSet \nL32:    dup \nL33:    invokespecial Method java/util/HashSet <init> ()V \nL36:    dup \nL37:    astore_3 \nL38:    invokeinterface InterfaceMethod java/util/Map put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; 3 \nL43:    pop \nL44:    aload_3 \nL45:    aload_2 \nL46:    invokestatic Method GraphProperties setProperty (Ljava/util/Set;Ljava/lang/Object;)V \n\n        .stack same \nL49:    return \nL50:    \n        .linenumbertable \n            L0 45 \n            L5 46 \n            L19 47 \n            L24 48 \n            L44 49 \n            L49 52 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public addProperty : (Ljava/lang/String;Ljava/lang/Object;)V \n    .code stack 3 locals 4 \nL0:     aconst_null \nL1:     aload_2 \nL2:     if_acmpeq L49 \nL5:     aload_0 \nL6:     getfield Field GraphProperties properties Ljava/util/Map; \nL9:     aload_1 \nL10:    invokeinterface InterfaceMethod java/util/Map get (Ljava/lang/Object;)Ljava/lang/Object; 2 \nL15:    checkcast java/util/Set \nL18:    astore_3 \nL19:    aconst_null \nL20:    aload_3 \nL21:    if_acmpne L44 \nL24:    new java/util/HashSet \nL27:    dup \nL28:    invokespecial Method java/util/HashSet <init> ()V \nL31:    astore_3 \nL32:    aload_0 \nL33:    getfield Field GraphProperties properties Ljava/util/Map; \nL36:    aload_1 \nL37:    aload_3 \nL38:    invokeinterface InterfaceMethod java/util/Map put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; 3 \nL43:    pop \n\n        .stack append Object java/util/Set \nL44:    aload_3 \nL45:    aload_2 \nL46:    invokestatic Method GraphProperties setProperty (Ljava/util/Set;Ljava/lang/Object;)V \n\n        .stack chop 1 \nL49:    return \nL50:    \n        .linenumbertable \n            L0 55 \n            L5 56 \n            L19 57 \n            L24 58 \n            L32 59 \n            L44 62 \n            L49 64 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperties : ()Ljava/util/Map; \n    .code stack 3 locals 5 \nL0:     new java/util/HashMap \nL3:     dup \nL4:     invokespecial Method java/util/HashMap <init> ()V \nL7:     astore_1 \nL8:     aload_0 \nL9:     getfield Field GraphProperties properties Ljava/util/Map; \nL12:    invokeinterface InterfaceMethod java/util/Map entrySet ()Ljava/util/Set; 1 \nL17:    invokeinterface InterfaceMethod java/util/Set iterator ()Ljava/util/Iterator; 1 \nL22:    astore_2 \n\n        .stack append Object java/util/Map Object java/util/Iterator \nL23:    aload_2 \nL24:    invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL29:    ifeq L80 \nL32:    aload_2 \nL33:    invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL38:    checkcast java/util/Map$Entry \nL41:    astore_3 \nL42:    aload_3 \nL43:    invokeinterface InterfaceMethod java/util/Map$Entry getValue ()Ljava/lang/Object; 1 \nL48:    checkcast java/util/Set \nL51:    invokestatic Method GraphProperties getProperty (Ljava/util/Set;)Ljava/lang/Object; \nL54:    astore 4 \nL56:    aconst_null \nL57:    aload 4 \nL59:    if_acmpeq L77 \nL62:    aload_1 \nL63:    aload_3 \nL64:    invokeinterface InterfaceMethod java/util/Map$Entry getKey ()Ljava/lang/Object; 1 \nL69:    aload 4 \nL71:    invokeinterface InterfaceMethod java/util/Map put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; 3 \nL76:    pop \n\n        .stack same \nL77:    goto L23 \n\n        .stack chop 1 \nL80:    aload_1 \nL81:    areturn \nL82:    \n        .linenumbertable \n            L0 67 \n            L8 68 \n            L42 69 \n            L56 70 \n            L62 71 \n            L77 72 \n            L80 74 \n        .end linenumbertable \n    .end code \n    .signature ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>; \n.end method \n\n.method public setProperties : (Ljava/util/Map;)V \n    .code stack 3 locals 4 \nL0:     aconst_null \nL1:     aload_1 \nL2:     if_acmpeq L58 \nL5:     aload_1 \nL6:     invokeinterface InterfaceMethod java/util/Map entrySet ()Ljava/util/Set; 1 \nL11:    invokeinterface InterfaceMethod java/util/Set iterator ()Ljava/util/Iterator; 1 \nL16:    astore_2 \n\n        .stack append Object java/util/Iterator \nL17:    aload_2 \nL18:    invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL23:    ifeq L58 \nL26:    aload_2 \nL27:    invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL32:    checkcast java/util/Map$Entry \nL35:    astore_3 \nL36:    aload_0 \nL37:    aload_3 \nL38:    invokeinterface InterfaceMethod java/util/Map$Entry getKey ()Ljava/lang/Object; 1 \nL43:    checkcast java/lang/String \nL46:    aload_3 \nL47:    invokeinterface InterfaceMethod java/util/Map$Entry getValue ()Ljava/lang/Object; 1 \nL52:    invokevirtual Method GraphProperties setProperty (Ljava/lang/String;Ljava/lang/Object;)V \nL55:    goto L17 \n\n        .stack chop 1 \nL58:    return \nL59:    \n        .linenumbertable \n            L0 78 \n            L5 79 \n            L36 80 \n            L58 81 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)V \n.end method \n\n.method public addProperties : (Ljava/util/Map;)V \n    .code stack 3 locals 4 \nL0:     aconst_null \nL1:     aload_1 \nL2:     if_acmpeq L58 \nL5:     aload_1 \nL6:     invokeinterface InterfaceMethod java/util/Map entrySet ()Ljava/util/Set; 1 \nL11:    invokeinterface InterfaceMethod java/util/Set iterator ()Ljava/util/Iterator; 1 \nL16:    astore_2 \n\n        .stack append Object java/util/Iterator \nL17:    aload_2 \nL18:    invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL23:    ifeq L58 \nL26:    aload_2 \nL27:    invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL32:    checkcast java/util/Map$Entry \nL35:    astore_3 \nL36:    aload_0 \nL37:    aload_3 \nL38:    invokeinterface InterfaceMethod java/util/Map$Entry getKey ()Ljava/lang/Object; 1 \nL43:    checkcast java/lang/String \nL46:    aload_3 \nL47:    invokeinterface InterfaceMethod java/util/Map$Entry getValue ()Ljava/lang/Object; 1 \nL52:    invokevirtual Method GraphProperties addProperty (Ljava/lang/String;Ljava/lang/Object;)V \nL55:    goto L17 \n\n        .stack chop 1 \nL58:    return \nL59:    \n        .linenumbertable \n            L0 84 \n            L5 85 \n            L36 86 \n            L58 87 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)V \n.end method \n\n.method protected static getProperty : (Ljava/util/Set;)Ljava/lang/Object; \n    .code stack 4 locals 3 \nL0:     aconst_null \nL1:     aload_0 \nL2:     if_acmpne L7 \nL5:     aconst_null \nL6:     areturn \n\n        .stack same \nL7:     aload_0 \nL8:     invokeinterface InterfaceMethod java/util/Set size ()I 1 \nL13:    istore_1 \nL14:    iconst_0 \nL15:    iload_1 \nL16:    if_icmpne L21 \nL19:    aconst_null \nL20:    areturn \n\n        .stack append Integer \nL21:    aload_0 \nL22:    invokeinterface InterfaceMethod java/util/Set iterator ()Ljava/util/Iterator; 1 \nL27:    invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL32:    astore_2 \nL33:    iconst_1 \nL34:    iload_1 \nL35:    if_icmpne L40 \nL38:    aload_2 \nL39:    areturn \n\n        .stack append Object java/lang/Object \nL40:    aload_2 \nL41:    instanceof java/lang/Boolean \nL44:    ifeq L58 \nL47:    aload_0 \nL48:    iload_1 \nL49:    anewarray java/lang/Boolean \nL52:    invokeinterface InterfaceMethod java/util/Set toArray ([Ljava/lang/Object;)[Ljava/lang/Object; 2 \nL57:    areturn \n\n        .stack same \nL58:    aload_2 \nL59:    instanceof java/lang/Byte \nL62:    ifeq L76 \nL65:    aload_0 \nL66:    iload_1 \nL67:    anewarray java/lang/Byte \nL70:    invokeinterface InterfaceMethod java/util/Set toArray ([Ljava/lang/Object;)[Ljava/lang/Object; 2 \nL75:    areturn \n\n        .stack same \nL76:    aload_2 \nL77:    instanceof java/lang/Short \nL80:    ifeq L94 \nL83:    aload_0 \nL84:    iload_1 \nL85:    anewarray java/lang/Short \nL88:    invokeinterface InterfaceMethod java/util/Set toArray ([Ljava/lang/Object;)[Ljava/lang/Object; 2 \nL93:    areturn \n\n        .stack same \nL94:    aload_2 \nL95:    instanceof java/lang/Integer \nL98:    ifeq L112 \nL101:   aload_0 \nL102:   iload_1 \nL103:   anewarray java/lang/Integer \nL106:   invokeinterface InterfaceMethod java/util/Set toArray ([Ljava/lang/Object;)[Ljava/lang/Object; 2 \nL111:   areturn \n\n        .stack same \nL112:   aload_2 \nL113:   instanceof java/lang/Long \nL116:   ifeq L130 \nL119:   aload_0 \nL120:   iload_1 \nL121:   anewarray java/lang/Long \nL124:   invokeinterface InterfaceMethod java/util/Set toArray ([Ljava/lang/Object;)[Ljava/lang/Object; 2 \nL129:   areturn \n\n        .stack same \nL130:   aload_2 \nL131:   instanceof java/lang/Float \nL134:   ifeq L148 \nL137:   aload_0 \nL138:   iload_1 \nL139:   anewarray java/lang/Float \nL142:   invokeinterface InterfaceMethod java/util/Set toArray ([Ljava/lang/Object;)[Ljava/lang/Object; 2 \nL147:   areturn \n\n        .stack same \nL148:   aload_2 \nL149:   instanceof java/lang/Double \nL152:   ifeq L166 \nL155:   aload_0 \nL156:   iload_1 \nL157:   anewarray java/lang/Double \nL160:   invokeinterface InterfaceMethod java/util/Set toArray ([Ljava/lang/Object;)[Ljava/lang/Object; 2 \nL165:   areturn \n\n        .stack same \nL166:   aload_2 \nL167:   instanceof java/lang/String \nL170:   ifeq L184 \nL173:   aload_0 \nL174:   iload_1 \nL175:   anewarray java/lang/String \nL178:   invokeinterface InterfaceMethod java/util/Set toArray ([Ljava/lang/Object;)[Ljava/lang/Object; 2 \nL183:   areturn \n\n        .stack same \nL184:   new java/lang/ClassCastException \nL187:   dup \nL188:   new java/lang/StringBuilder \nL191:   dup \nL192:   invokespecial Method java/lang/StringBuilder <init> ()V \nL195:   ldc 'Unable to convert Property Array, they property type: ' \nL197:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL200:   aload_2 \nL201:   invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL204:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/Object;)Ljava/lang/StringBuilder; \nL207:   ldc ' is not supported' \nL209:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL212:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL215:   invokespecial Method java/lang/ClassCastException <init> (Ljava/lang/String;)V \nL218:   athrow \nL219:   \n        .linenumbertable \n            L0 90 \n            L5 91 \n            L7 92 \n            L14 93 \n            L19 94 \n            L21 96 \n            L33 97 \n            L38 98 \n            L40 99 \n            L47 100 \n            L58 101 \n            L65 102 \n            L76 103 \n            L83 104 \n            L94 105 \n            L101 106 \n            L112 107 \n            L119 108 \n            L130 109 \n            L137 110 \n            L148 111 \n            L155 112 \n            L166 113 \n            L173 114 \n            L184 116 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/util/Set<Ljava/lang/Object;>;)Ljava/lang/Object; \n.end method \n\n.method protected static setProperty : (Ljava/util/Set;Ljava/lang/Object;)V \n    .code stack 3 locals 2 \nL0:     aload_1 \nL1:     instanceof [Ljava/lang/String; \nL4:     ifeq L27 \nL7:     aload_0 \nL8:     aload_1 \nL9:     checkcast [Ljava/lang/String; \nL12:    checkcast [Ljava/lang/String; \nL15:    invokestatic Method java/util/Arrays asList ([Ljava/lang/Object;)Ljava/util/List; \nL18:    invokeinterface InterfaceMethod java/util/Set addAll (Ljava/util/Collection;)Z 2 \nL23:    pop \nL24:    goto L282 \n\n        .stack same \nL27:    aload_1 \nL28:    instanceof [Ljava/lang/Boolean; \nL31:    ifeq L54 \nL34:    aload_0 \nL35:    aload_1 \nL36:    checkcast [Ljava/lang/Boolean; \nL39:    checkcast [Ljava/lang/Boolean; \nL42:    invokestatic Method java/util/Arrays asList ([Ljava/lang/Object;)Ljava/util/List; \nL45:    invokeinterface InterfaceMethod java/util/Set addAll (Ljava/util/Collection;)Z 2 \nL50:    pop \nL51:    goto L282 \n\n        .stack same \nL54:    aload_1 \nL55:    instanceof [Ljava/lang/Byte; \nL58:    ifeq L81 \nL61:    aload_0 \nL62:    aload_1 \nL63:    checkcast [Ljava/lang/Byte; \nL66:    checkcast [Ljava/lang/Byte; \nL69:    invokestatic Method java/util/Arrays asList ([Ljava/lang/Object;)Ljava/util/List; \nL72:    invokeinterface InterfaceMethod java/util/Set addAll (Ljava/util/Collection;)Z 2 \nL77:    pop \nL78:    goto L282 \n\n        .stack same \nL81:    aload_1 \nL82:    instanceof [Ljava/lang/Short; \nL85:    ifeq L108 \nL88:    aload_0 \nL89:    aload_1 \nL90:    checkcast [Ljava/lang/Short; \nL93:    checkcast [Ljava/lang/Short; \nL96:    invokestatic Method java/util/Arrays asList ([Ljava/lang/Object;)Ljava/util/List; \nL99:    invokeinterface InterfaceMethod java/util/Set addAll (Ljava/util/Collection;)Z 2 \nL104:   pop \nL105:   goto L282 \n\n        .stack same \nL108:   aload_1 \nL109:   instanceof [Ljava/lang/Integer; \nL112:   ifeq L135 \nL115:   aload_0 \nL116:   aload_1 \nL117:   checkcast [Ljava/lang/Integer; \nL120:   checkcast [Ljava/lang/Integer; \nL123:   invokestatic Method java/util/Arrays asList ([Ljava/lang/Object;)Ljava/util/List; \nL126:   invokeinterface InterfaceMethod java/util/Set addAll (Ljava/util/Collection;)Z 2 \nL131:   pop \nL132:   goto L282 \n\n        .stack same \nL135:   aload_1 \nL136:   instanceof [Ljava/lang/Long; \nL139:   ifeq L162 \nL142:   aload_0 \nL143:   aload_1 \nL144:   checkcast [Ljava/lang/Long; \nL147:   checkcast [Ljava/lang/Long; \nL150:   invokestatic Method java/util/Arrays asList ([Ljava/lang/Object;)Ljava/util/List; \nL153:   invokeinterface InterfaceMethod java/util/Set addAll (Ljava/util/Collection;)Z 2 \nL158:   pop \nL159:   goto L282 \n\n        .stack same \nL162:   aload_1 \nL163:   instanceof [Ljava/lang/Float; \nL166:   ifeq L189 \nL169:   aload_0 \nL170:   aload_1 \nL171:   checkcast [Ljava/lang/Float; \nL174:   checkcast [Ljava/lang/Float; \nL177:   invokestatic Method java/util/Arrays asList ([Ljava/lang/Object;)Ljava/util/List; \nL180:   invokeinterface InterfaceMethod java/util/Set addAll (Ljava/util/Collection;)Z 2 \nL185:   pop \nL186:   goto L282 \n\n        .stack same \nL189:   aload_1 \nL190:   instanceof [Ljava/lang/Double; \nL193:   ifeq L216 \nL196:   aload_0 \nL197:   aload_1 \nL198:   checkcast [Ljava/lang/Double; \nL201:   checkcast [Ljava/lang/Double; \nL204:   invokestatic Method java/util/Arrays asList ([Ljava/lang/Object;)Ljava/util/List; \nL207:   invokeinterface InterfaceMethod java/util/Set addAll (Ljava/util/Collection;)Z 2 \nL212:   pop \nL213:   goto L282 \n\n        .stack same \nL216:   aload_1 \nL217:   instanceof java/util/Collection \nL220:   ifeq L237 \nL223:   aload_0 \nL224:   aload_1 \nL225:   checkcast java/util/Collection \nL228:   invokeinterface InterfaceMethod java/util/Set addAll (Ljava/util/Collection;)Z 2 \nL233:   pop \nL234:   goto L282 \n\n        .stack same \nL237:   aload_1 \nL238:   instanceof java/util/Map \nL241:   ifeq L254 \nL244:   new java/lang/IllegalArgumentException \nL247:   dup \nL248:   ldc 'Maps as Parameters are not supported' \nL250:   invokespecial Method java/lang/IllegalArgumentException <init> (Ljava/lang/String;)V \nL253:   athrow \n\n        .stack same \nL254:   aload_1 \nL255:   invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL258:   invokevirtual Method java/lang/Class isArray ()Z \nL261:   ifeq L274 \nL264:   new java/lang/IllegalArgumentException \nL267:   dup \nL268:   ldc 'Array myst be of Primitive type' \nL270:   invokespecial Method java/lang/IllegalArgumentException <init> (Ljava/lang/String;)V \nL273:   athrow \n\n        .stack same \nL274:   aload_0 \nL275:   aload_1 \nL276:   invokeinterface InterfaceMethod java/util/Set add (Ljava/lang/Object;)Z 2 \nL281:   pop \n\n        .stack same \nL282:   return \nL283:   \n        .linenumbertable \n            L0 120 \n            L7 121 \n            L27 122 \n            L34 123 \n            L54 124 \n            L61 125 \n            L81 126 \n            L88 127 \n            L108 128 \n            L115 129 \n            L135 130 \n            L142 131 \n            L162 132 \n            L169 133 \n            L189 134 \n            L196 135 \n            L216 138 \n            L223 139 \n            L237 140 \n            L244 141 \n            L254 142 \n            L264 143 \n            L274 145 \n            L282 146 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/util/Set<Ljava/lang/Object;>;Ljava/lang/Object;)V \n.end method \n\n.method public clone : ()LGraphProperties; \n    .code stack 5 locals 4 \nL0:     new GraphProperties \nL3:     dup \nL4:     invokespecial Method GraphProperties <init> ()V \nL7:     astore_1 \nL8:     aconst_null \nL9:     aload_0 \nL10:    getfield Field GraphProperties properties Ljava/util/Map; \nL13:    if_acmpeq L82 \nL16:    aload_0 \nL17:    getfield Field GraphProperties properties Ljava/util/Map; \nL20:    invokeinterface InterfaceMethod java/util/Map entrySet ()Ljava/util/Set; 1 \nL25:    invokeinterface InterfaceMethod java/util/Set iterator ()Ljava/util/Iterator; 1 \nL30:    astore_2 \n\n        .stack append Object GraphProperties Object java/util/Iterator \nL31:    aload_2 \nL32:    invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL37:    ifeq L82 \nL40:    aload_2 \nL41:    invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL46:    checkcast java/util/Map$Entry \nL49:    astore_3 \nL50:    aload_1 \nL51:    aload_3 \nL52:    invokeinterface InterfaceMethod java/util/Map$Entry getKey ()Ljava/lang/Object; 1 \nL57:    checkcast java/lang/String \nL60:    new java/util/HashSet \nL63:    dup \nL64:    aload_3 \nL65:    invokeinterface InterfaceMethod java/util/Map$Entry getValue ()Ljava/lang/Object; 1 \nL70:    checkcast java/util/Collection \nL73:    invokespecial Method java/util/HashSet <init> (Ljava/util/Collection;)V \nL76:    invokevirtual Method GraphProperties setProperty (Ljava/lang/String;Ljava/lang/Object;)V \nL79:    goto L31 \n\n        .stack chop 1 \nL82:    aload_1 \nL83:    areturn \nL84:    \n        .linenumbertable \n            L0 150 \n            L8 151 \n            L16 152 \n            L50 153 \n            L82 154 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public varargs clone : ([Ljava/lang/String;)LGraphProperties; \n    .code stack 5 locals 8 \nL0:     new GraphProperties \nL3:     dup \nL4:     invokespecial Method GraphProperties <init> ()V \nL7:     astore_2 \nL8:     aconst_null \nL9:     aload_0 \nL10:    getfield Field GraphProperties properties Ljava/util/Map; \nL13:    if_acmpeq L81 \nL16:    aload_1 \nL17:    astore_3 \nL18:    aload_3 \nL19:    arraylength \nL20:    istore 4 \nL22:    iconst_0 \nL23:    istore 5 \n\n        .stack full \n            locals Object GraphProperties Object [Ljava/lang/String; Object GraphProperties Object [Ljava/lang/String; Integer Integer \n            stack \n        .end stack \nL25:    iload 5 \nL27:    iload 4 \nL29:    if_icmpge L81 \nL32:    aload_3 \nL33:    iload 5 \nL35:    aaload \nL36:    astore 6 \nL38:    aload_0 \nL39:    getfield Field GraphProperties properties Ljava/util/Map; \nL42:    aload 6 \nL44:    invokeinterface InterfaceMethod java/util/Map get (Ljava/lang/Object;)Ljava/lang/Object; 2 \nL49:    checkcast java/util/Set \nL52:    astore 7 \nL54:    aconst_null \nL55:    aload 7 \nL57:    if_acmpeq L75 \nL60:    aload_2 \nL61:    aload 6 \nL63:    new java/util/HashSet \nL66:    dup \nL67:    aload 7 \nL69:    invokespecial Method java/util/HashSet <init> (Ljava/util/Collection;)V \nL72:    invokevirtual Method GraphProperties setProperty (Ljava/lang/String;Ljava/lang/Object;)V \n\n        .stack same \nL75:    iinc 5 1 \nL78:    goto L25 \n\n        .stack chop 3 \nL81:    aload_2 \nL82:    areturn \nL83:    \n        .linenumbertable \n            L0 158 \n            L8 159 \n            L16 160 \n            L38 161 \n            L54 162 \n            L60 163 \n            L75 160 \n            L81 165 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GraphProperties properties Ljava/util/Map; \nL4:     invokevirtual Method java/lang/Object toString ()Ljava/lang/String; \nL7:     areturn \nL8:     \n        .linenumbertable \n            L0 170 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public bridge synthetic clone : ()Ljava/lang/Object; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokevirtual Method GraphProperties clone ()LGraphProperties; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 10 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/CloneNotSupportedException \n.end method \n.sourcefile 'GraphProperties.java' \n.innerclasses \n    java/util/Map$Entry java/util/Map Entry public static interface abstract \n.end innerclasses \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 16:19:43 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.util.HashMap;\nimport java.util.LinkedHashSet;\nimport java.util.Map;\nimport java.util.Set;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class GraphProperties_ESTest extends GraphProperties_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      String[] stringArray0 = new String[4];\n      GraphProperties graphProperties1 = graphProperties0.clone(stringArray0);\n      assertNotSame(graphProperties1, graphProperties0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n      Long long0 = new Long(46535L);\n      linkedHashSet0.add(long0);\n      GraphProperties graphProperties0 = new GraphProperties();\n      String[] stringArray0 = new String[0];\n      GraphProperties graphProperties1 = graphProperties0.clone(stringArray0);\n      GraphProperties graphProperties2 = graphProperties1.clone();\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n      graphProperties2.addProperties(hashMap0);\n      GraphProperties graphProperties3 = graphProperties2.clone(stringArray0);\n      GraphProperties.getProperty((Set<Object>) linkedHashSet0);\n      graphProperties0.addProperty(\"<>;]B4E~N]niK$;A)\", long0);\n      assertNotSame(graphProperties0, graphProperties3);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n      Long long0 = new Long(46535L);\n      GraphProperties.setProperty((Set<Object>) linkedHashSet0, (Object) long0);\n      Long long1 = new Long(3979L);\n      linkedHashSet0.add(long1);\n      GraphProperties graphProperties0 = new GraphProperties();\n      GraphProperties graphProperties1 = graphProperties0.clone();\n      String[] stringArray0 = new String[0];\n      GraphProperties graphProperties2 = graphProperties1.clone(stringArray0);\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n      graphProperties0.addProperties(hashMap0);\n      Object object0 = GraphProperties.getProperty((Set<Object>) linkedHashSet0);\n      graphProperties0.addProperty(\"<>;]B4E~N]niK$;A)\", long0);\n      graphProperties2.addProperty(\"'_wb\", object0);\n      assertNotSame(graphProperties2, graphProperties0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      Float float0 = new Float(31815.79429734818);\n      Byte byte0 = new Byte((byte)1);\n      graphProperties0.setProperty(\"iE}@dyL\", byte0);\n      graphProperties0.addProperty(\"iE}@dyL\", float0);\n      // Undeclared exception!\n      try { \n        graphProperties0.getProperties();\n        fail(\"Expecting exception: ArrayStoreException\");\n      \n      } catch(ArrayStoreException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n      graphProperties0.toString();\n      GraphProperties.getProperty((Set<Object>) linkedHashSet0);\n      Short short0 = new Short((short)27628);\n      graphProperties0.setPropertyOnce(\"java.util.HashMap@0000000004\", short0);\n      GraphProperties graphProperties1 = graphProperties0.clone();\n      assertNotSame(graphProperties0, graphProperties1);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      GraphProperties graphProperties1 = graphProperties0.clone();\n      Short short0 = new Short((short)0);\n      graphProperties1.setProperty(\"\", short0);\n      graphProperties1.addProperty(\"\", \"\");\n      graphProperties0.setProperty(\"\", \"\");\n      graphProperties0.getProperty(\"\");\n      graphProperties0.setProperty(\"\", \"\");\n      assertNotSame(graphProperties0, graphProperties1);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n      GraphProperties.setProperty((Set<Object>) linkedHashSet0, (Object) linkedHashSet0);\n      assertTrue(linkedHashSet0.isEmpty());\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Object object0 = GraphProperties.getProperty((Set<Object>) null);\n      assertNull(object0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      graphProperties0.setPropertyOnce(\"\", \"\");\n      Map<String, Object> map0 = graphProperties0.getProperties();\n      graphProperties0.addProperties(map0);\n      assertEquals(1, map0.size());\n      assertFalse(map0.isEmpty());\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      Map<String, Object> map0 = graphProperties0.getProperties();\n      graphProperties0.addProperties(map0);\n      assertEquals(0, map0.size());\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n      graphProperties0.setPropertyOnce(\"\", linkedHashSet0);\n      String[] stringArray0 = new String[6];\n      stringArray0[0] = \"\";\n      GraphProperties graphProperties1 = graphProperties0.clone(stringArray0);\n      assertNotSame(graphProperties1, graphProperties0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      GraphProperties graphProperties1 = graphProperties0.clone();\n      graphProperties1.properties = null;\n      GraphProperties graphProperties2 = graphProperties1.clone();\n      assertNotSame(graphProperties1, graphProperties2);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n      // Undeclared exception!\n      try { \n        GraphProperties.setProperty((Set<Object>) linkedHashSet0, (Object) graphProperties0.properties);\n        fail(\"Expecting exception: IllegalArgumentException\");\n      \n      } catch(IllegalArgumentException e) {\n         //\n         // Maps as Parameters are not supported\n         //\n         verifyException(\"GraphProperties\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n      Object object0 = new Object();\n      linkedHashSet0.add(object0);\n      Short short0 = new Short((short) (-1));\n      GraphProperties.setProperty((Set<Object>) linkedHashSet0, (Object) short0);\n      // Undeclared exception!\n      try { \n        GraphProperties.getProperty((Set<Object>) linkedHashSet0);\n        fail(\"Expecting exception: ClassCastException\");\n      \n      } catch(ClassCastException e) {\n         //\n         // Unable to convert Property Array, they property type: class java.lang.Object is not supported\n         //\n         verifyException(\"GraphProperties\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n      Long long0 = new Long(1L);\n      linkedHashSet0.add(long0);\n      Double double0 = new Double((-1.0));\n      linkedHashSet0.add(double0);\n      graphProperties0.setPropertyOnce(\"\", linkedHashSet0);\n      // Undeclared exception!\n      try { \n        graphProperties0.getProperties();\n        fail(\"Expecting exception: ArrayStoreException\");\n      \n      } catch(ArrayStoreException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n      Float float0 = new Float((-38027.09F));\n      linkedHashSet0.add(float0);\n      linkedHashSet0.add(graphProperties0);\n      // Undeclared exception!\n      try { \n        GraphProperties.getProperty((Set<Object>) linkedHashSet0);\n        fail(\"Expecting exception: ArrayStoreException\");\n      \n      } catch(ArrayStoreException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n      Integer integer0 = new Integer(0);\n      linkedHashSet0.add(integer0);\n      Boolean boolean0 = Boolean.valueOf(true);\n      linkedHashSet0.add(boolean0);\n      // Undeclared exception!\n      try { \n        GraphProperties.getProperty((Set<Object>) linkedHashSet0);\n        fail(\"Expecting exception: ArrayStoreException\");\n      \n      } catch(ArrayStoreException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>(23572, 23572);\n      Short short0 = new Short((short)1);\n      linkedHashSet0.add(short0);\n      linkedHashSet0.add((Object) null);\n      Object object0 = GraphProperties.getProperty((Set<Object>) linkedHashSet0);\n      assertFalse(object0.equals((Object)short0));\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n      linkedHashSet0.add(\"\");\n      Double double0 = new Double(0.0);\n      linkedHashSet0.add(double0);\n      // Undeclared exception!\n      try { \n        GraphProperties.getProperty((Set<Object>) linkedHashSet0);\n        fail(\"Expecting exception: ArrayStoreException\");\n      \n      } catch(ArrayStoreException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n      GraphProperties graphProperties0 = new GraphProperties(hashMap0);\n      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n      Byte byte0 = Byte.valueOf((byte)1);\n      linkedHashSet0.add(byte0);\n      GraphProperties.setProperty((Set<Object>) linkedHashSet0, (Object) graphProperties0);\n      // Undeclared exception!\n      try { \n        GraphProperties.getProperty((Set<Object>) linkedHashSet0);\n        fail(\"Expecting exception: ArrayStoreException\");\n      \n      } catch(ArrayStoreException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      graphProperties0.addProperties((Map<String, Object>) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      graphProperties0.setProperties((Map<String, Object>) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test22()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      String[] stringArray0 = new String[8];\n      GraphProperties graphProperties1 = graphProperties0.clone(stringArray0);\n      HashMap<String, Set<Object>> hashMap0 = new HashMap<String, Set<Object>>();\n      LinkedHashSet<Byte> linkedHashSet0 = new LinkedHashSet<Byte>();\n      LinkedHashSet<Object> linkedHashSet1 = new LinkedHashSet<Object>(linkedHashSet0);\n      hashMap0.put(\"Maps as Parameters are not supported\", linkedHashSet1);\n      graphProperties1.properties = (Map<String, Set<Object>>) hashMap0;\n      Map<String, Object> map0 = graphProperties1.getProperties();\n      assertTrue(map0.isEmpty());\n  }\n\n  @Test(timeout = 4000)\n  public void test23()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      graphProperties0.addProperty(\"Q\", (Object) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test24()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n      Byte byte0 = new Byte((byte)1);\n      hashMap0.put(\"\", byte0);\n      graphProperties0.setProperties(hashMap0);\n      graphProperties0.setPropertyOnce(\"\", \"Array myst be of Primitive type\");\n  }\n\n  @Test(timeout = 4000)\n  public void test25()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      graphProperties0.setPropertyOnce(\"\", (Object) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test26()  throws Throwable  {\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n      GraphProperties graphProperties0 = new GraphProperties(hashMap0);\n      graphProperties0.setProperty(\"\", (Object) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test27()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      Float float0 = new Float(0.0);\n      graphProperties0.setPropertyOnce(\"d|B\", float0);\n      boolean boolean0 = graphProperties0.hasProperty(\"d|B\");\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test28()  throws Throwable  {\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n      GraphProperties graphProperties0 = new GraphProperties(hashMap0);\n      boolean boolean0 = graphProperties0.hasProperty(\"\");\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test29()  throws Throwable  {\n      GraphProperties graphProperties0 = new GraphProperties();\n      Object object0 = graphProperties0.getProperty(\"?b`\");\n      assertNull(object0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 16:19:43 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class GraphProperties_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"GraphProperties\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpq_gwx6sn\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(GraphProperties_ESTest_scaffolding.class.getClassLoader() ,\n      \"GraphProperties\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(GraphProperties_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"GraphProperties\"\n    );\n  }\n}\n", "class_idx": 181}
{"class_name": "FileUtils", "java_source": "import java.io.File;\nimport java.io.IOException;\n\npublic class FileUtils {\n\n  private FileUtils() {\n    throw new Error(\"\u4e0d\u5141\u8bb8\u5b9e\u4f8b\u5316\uff01\");\n  }\n\n  /**\n   * \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\u4e00\u4e2a\n   *\n   * @param path \u6587\u4ef6\u8def\u5f84\n   * @throws IOException\n   */\n  public static void checkFileExistsIfNotCreate(String path) throws IOException {\n    File file = new File(path);\n    if (!file.exists()) {\n      file.createNewFile();\n    }\n  }\n\n  /**\n   * \u68c0\u67e5\u6587\u4ef6\u5939\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\u4e00\u4e2a\n   *\n   * @param path\n   */\n  public static void checkFileDirectoryExistsIfNotCreate(String path) {\n    File file = new File(path);\n    // \u5982\u679c\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\u5219\u521b\u5efa\n    if (!file.exists() && !file.isDirectory()) {\n      file.mkdir();\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super FileUtils \n.super java/lang/Object \n\n.method private <init> : ()V \n    .code stack 3 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     new java/lang/Error \nL7:     dup \nL8:     ldc '\u4e0d\u5141\u8bb8\u5b9e\u4f8b\u5316\uff01' \nL10:    invokespecial Method java/lang/Error <init> (Ljava/lang/String;)V \nL13:    athrow \nL14:    \n        .linenumbertable \n            L0 8 \n            L4 9 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static checkFileExistsIfNotCreate : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     new java/io/File \nL3:     dup \nL4:     aload_0 \nL5:     invokespecial Method java/io/File <init> (Ljava/lang/String;)V \nL8:     astore_1 \nL9:     aload_1 \nL10:    invokevirtual Method java/io/File exists ()Z \nL13:    ifne L21 \nL16:    aload_1 \nL17:    invokevirtual Method java/io/File createNewFile ()Z \nL20:    pop \n\n        .stack append Object java/io/File \nL21:    return \nL22:    \n        .linenumbertable \n            L0 18 \n            L9 19 \n            L16 20 \n            L21 22 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/IOException \n.end method \n\n.method public static checkFileDirectoryExistsIfNotCreate : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     new java/io/File \nL3:     dup \nL4:     aload_0 \nL5:     invokespecial Method java/io/File <init> (Ljava/lang/String;)V \nL8:     astore_1 \nL9:     aload_1 \nL10:    invokevirtual Method java/io/File exists ()Z \nL13:    ifne L28 \nL16:    aload_1 \nL17:    invokevirtual Method java/io/File isDirectory ()Z \nL20:    ifne L28 \nL23:    aload_1 \nL24:    invokevirtual Method java/io/File mkdir ()Z \nL27:    pop \n\n        .stack append Object java/io/File \nL28:    return \nL29:    \n        .linenumbertable \n            L0 29 \n            L9 31 \n            L23 33 \n            L28 35 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'FileUtils.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 15:20:59 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class FileUtils_ESTest extends FileUtils_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      FileUtils.checkFileDirectoryExistsIfNotCreate(\";$kM!Pm\");\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      FileUtils.checkFileDirectoryExistsIfNotCreate(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      FileUtils.checkFileExistsIfNotCreate(\";$kM!Pm\");\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      FileUtils.checkFileExistsIfNotCreate(\"\");\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 15:20:59 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class FileUtils_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"FileUtils\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpsbflrh0y\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FileUtils_ESTest_scaffolding.class.getClassLoader() ,\n      \"FileUtils\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FileUtils_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"FileUtils\"\n    );\n  }\n}\n", "class_idx": 182}
{"class_name": "GetPublicKeyQuery", "java_source": "/*\n * Copyright (c) 1998-2012 Caucho Technology -- all rights reserved\n *\n * This file is part of Resin(R) Open Source\n *\n * Each copy or derived work must preserve the copyright notice and this\n * notice unmodified.\n *\n * Resin Open Source is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * Resin Open Source is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE, or any warranty\n * of NON-INFRINGEMENT.  See the GNU General Public License for more\n * details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Resin Open Source; if not, write to the\n *\n *   Free Software Foundation, Inc.\n *   59 Temple Place, Suite 330\n *   Boston, MA 02111-1307  USA\n *\n * @author Scott Ferguson\n */\n\n/** Query to get the public key */\npublic class GetPublicKeyQuery implements java.io.Serializable {\n  private static final long serialVersionUID = -1166286457258394604L;\n\n  private String _algorithm;\n  private String _format;\n  private byte[] _encoded;\n\n  /** Null constructor */\n  public GetPublicKeyQuery() {}\n\n  /** Constructor for the result */\n  public GetPublicKeyQuery(String algorithm, String format, byte[] encoded) {\n    _algorithm = algorithm;\n    _format = format;\n    _encoded = encoded;\n  }\n\n  public String getAlgorithm() {\n    return _algorithm;\n  }\n\n  public String getFormat() {\n    return _format;\n  }\n\n  public byte[] getEncoded() {\n    return _encoded;\n  }\n\n  @Override\n  public String toString() {\n    if (_algorithm != null) {\n      return (getClass().getSimpleName() + \"[\" + _algorithm + \",\" + _format + \"]\");\n    } else {\n      return (getClass().getSimpleName() + \"[]\");\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super GetPublicKeyQuery \n.super java/lang/Object \n.implements java/io/Serializable \n.field private static final serialVersionUID J = -1166286457258394604L \n.field private _algorithm Ljava/lang/String; \n.field private _format Ljava/lang/String; \n.field private _encoded [B \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 46 \n            L4 47 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;[B)V \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field GetPublicKeyQuery _algorithm Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field GetPublicKeyQuery _format Ljava/lang/String; \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field GetPublicKeyQuery _encoded [B \nL19:    return \nL20:    \n        .linenumbertable \n            L0 55 \n            L4 56 \n            L9 57 \n            L14 58 \n            L19 59 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getAlgorithm : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GetPublicKeyQuery _algorithm Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 63 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFormat : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GetPublicKeyQuery _format Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 68 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getEncoded : ()[B \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GetPublicKeyQuery _encoded [B \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 73 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field GetPublicKeyQuery _algorithm Ljava/lang/String; \nL4:     ifnull L57 \nL7:     new java/lang/StringBuilder \nL10:    dup \nL11:    invokespecial Method java/lang/StringBuilder <init> ()V \nL14:    aload_0 \nL15:    invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL18:    invokevirtual Method java/lang/Class getSimpleName ()Ljava/lang/String; \nL21:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL24:    ldc '[' \nL26:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL29:    aload_0 \nL30:    getfield Field GetPublicKeyQuery _algorithm Ljava/lang/String; \nL33:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL36:    ldc ',' \nL38:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL41:    aload_0 \nL42:    getfield Field GetPublicKeyQuery _format Ljava/lang/String; \nL45:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL48:    ldc ']' \nL50:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL53:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL56:    areturn \n\n        .stack same \nL57:    new java/lang/StringBuilder \nL60:    dup \nL61:    invokespecial Method java/lang/StringBuilder <init> ()V \nL64:    aload_0 \nL65:    invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL68:    invokevirtual Method java/lang/Class getSimpleName ()Ljava/lang/String; \nL71:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL74:    ldc '[]' \nL76:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL79:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL82:    areturn \nL83:    \n        .linenumbertable \n            L0 79 \n            L7 80 \n            L57 84 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'GetPublicKeyQuery.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 11:57:38 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class GetPublicKeyQuery_ESTest extends GetPublicKeyQuery_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      GetPublicKeyQuery getPublicKeyQuery0 = new GetPublicKeyQuery();\n      String string0 = getPublicKeyQuery0.getFormat();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      byte[] byteArray0 = new byte[4];\n      GetPublicKeyQuery getPublicKeyQuery0 = new GetPublicKeyQuery(\"\", \"\", byteArray0);\n      String string0 = getPublicKeyQuery0.getFormat();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      byte[] byteArray0 = new byte[1];\n      GetPublicKeyQuery getPublicKeyQuery0 = new GetPublicKeyQuery(\"\\u0000'CPq(LUuP=\u007fzFJw8|\", \"\\u0000'CPq(LUuP=\u007fzFJw8|\", byteArray0);\n      byte[] byteArray1 = getPublicKeyQuery0.getEncoded();\n      assertSame(byteArray1, byteArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      byte[] byteArray0 = new byte[0];\n      GetPublicKeyQuery getPublicKeyQuery0 = new GetPublicKeyQuery(\"\", \"\", byteArray0);\n      byte[] byteArray1 = getPublicKeyQuery0.getEncoded();\n      assertSame(byteArray1, byteArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      GetPublicKeyQuery getPublicKeyQuery0 = new GetPublicKeyQuery();\n      String string0 = getPublicKeyQuery0.getAlgorithm();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      GetPublicKeyQuery getPublicKeyQuery0 = new GetPublicKeyQuery(\"\", \"V1,cF4~%vnH!ILg%h\", (byte[]) null);\n      String string0 = getPublicKeyQuery0.getAlgorithm();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      GetPublicKeyQuery getPublicKeyQuery0 = new GetPublicKeyQuery(\"}\", \"}\", (byte[]) null);\n      String string0 = getPublicKeyQuery0.toString();\n      assertEquals(\"GetPublicKeyQuery[},}]\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      GetPublicKeyQuery getPublicKeyQuery0 = new GetPublicKeyQuery(\"}\", \"}\", (byte[]) null);\n      byte[] byteArray0 = getPublicKeyQuery0.getEncoded();\n      assertNull(byteArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      GetPublicKeyQuery getPublicKeyQuery0 = new GetPublicKeyQuery(\"}\", \"}\", (byte[]) null);\n      String string0 = getPublicKeyQuery0.getAlgorithm();\n      assertEquals(\"}\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      GetPublicKeyQuery getPublicKeyQuery0 = new GetPublicKeyQuery();\n      String string0 = getPublicKeyQuery0.toString();\n      assertEquals(\"GetPublicKeyQuery[]\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      GetPublicKeyQuery getPublicKeyQuery0 = new GetPublicKeyQuery(\"}\", \"}\", (byte[]) null);\n      String string0 = getPublicKeyQuery0.getFormat();\n      assertEquals(\"}\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 11:57:38 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class GetPublicKeyQuery_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"GetPublicKeyQuery\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp1bd3gcs9\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(GetPublicKeyQuery_ESTest_scaffolding.class.getClassLoader() ,\n      \"GetPublicKeyQuery\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(GetPublicKeyQuery_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"GetPublicKeyQuery\"\n    );\n  }\n}\n", "class_idx": 183}
{"class_name": "InvalidTaskResultDetail", "java_source": "/** Used for */\npublic class InvalidTaskResultDetail extends RuntimeException {\n  public InvalidTaskResultDetail(Throwable t) {\n    super(\"Encountered error while parsing task-result-detail from API: \", t);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super InvalidTaskResultDetail \n.super java/lang/RuntimeException \n\n.method public <init> : (Ljava/lang/Throwable;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     ldc 'Encountered error while parsing task-result-detail from API: ' \nL3:     aload_1 \nL4:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;Ljava/lang/Throwable;)V \nL7:     return \nL8:     \n        .linenumbertable \n            L0 8 \n            L7 9 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'InvalidTaskResultDetail.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 16:18:33 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.lang.MockThrowable;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class InvalidTaskResultDetail_ESTest extends InvalidTaskResultDetail_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      MockThrowable mockThrowable0 = new MockThrowable(\"(u@]C'6Fa#\");\n      InvalidTaskResultDetail invalidTaskResultDetail0 = new InvalidTaskResultDetail(mockThrowable0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 16:18:33 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class InvalidTaskResultDetail_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"InvalidTaskResultDetail\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpdvx7kqbj\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(InvalidTaskResultDetail_ESTest_scaffolding.class.getClassLoader() ,\n      \"InvalidTaskResultDetail\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(InvalidTaskResultDetail_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"InvalidTaskResultDetail\"\n    );\n  }\n}\n", "class_idx": 184}
{"class_name": "ProductMppromocionales", "java_source": "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n/**\n * @author AndresDavid\n */\npublic class ProductMppromocionales {\n\n  private String codProvider;\n  private String title;\n\n  private String description;\n  private String material;\n  private String bounds;\n  private String area;\n  private String brand;\n  private String packing;\n\n  private String reference;\n  private String color;\n  private String existenceFontibon;\n  private String existenceCelta;\n  private String existence;\n\n  public ProductMppromocionales() {}\n\n  public ProductMppromocionales(\n      String codProvider,\n      String title,\n      String description,\n      String material,\n      String bounds,\n      String area,\n      String brand,\n      String packing,\n      String reference,\n      String color,\n      String existenceFontibon,\n      String existenceCelta,\n      String existence) {\n    this.codProvider = codProvider;\n    this.title = title;\n    this.description = description;\n    this.material = material;\n    this.bounds = bounds;\n    this.area = area;\n    this.brand = brand;\n    this.packing = packing;\n    this.reference = reference;\n    this.color = color;\n    this.existenceFontibon = existenceFontibon;\n    this.existenceCelta = existenceCelta;\n    this.existence = existence;\n  }\n\n  public String getCodProvider() {\n    return codProvider;\n  }\n\n  public void setCodProvider(String codProvider) {\n    this.codProvider = codProvider;\n  }\n\n  public String getTitle() {\n    return title;\n  }\n\n  public void setTitle(String title) {\n    this.title = title;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  public String getMaterial() {\n    return material;\n  }\n\n  public void setMaterial(String material) {\n    this.material = material;\n  }\n\n  public String getBounds() {\n    return bounds;\n  }\n\n  public void setBounds(String bounds) {\n    this.bounds = bounds;\n  }\n\n  public String getArea() {\n    return area;\n  }\n\n  public void setArea(String area) {\n    this.area = area;\n  }\n\n  public String getBrand() {\n    return brand;\n  }\n\n  public void setBrand(String brand) {\n    this.brand = brand;\n  }\n\n  public String getPacking() {\n    return packing;\n  }\n\n  public void setPacking(String packing) {\n    this.packing = packing;\n  }\n\n  public String getReference() {\n    return reference;\n  }\n\n  public void setReference(String reference) {\n    this.reference = reference;\n  }\n\n  public String getColor() {\n    return color;\n  }\n\n  public void setColor(String color) {\n    this.color = color;\n  }\n\n  public String getExistenceFontibon() {\n    return existenceFontibon;\n  }\n\n  public void setExistenceFontibon(String existenceFontibon) {\n    this.existenceFontibon = existenceFontibon;\n  }\n\n  public String getExistenceCelta() {\n    return existenceCelta;\n  }\n\n  public void setExistenceCelta(String existenceCelta) {\n    this.existenceCelta = existenceCelta;\n  }\n\n  public String getExistence() {\n    return existence;\n  }\n\n  public void setExistence(String existence) {\n    this.existence = existence;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ProductMppromocionales \n.super java/lang/Object \n.field private codProvider Ljava/lang/String; \n.field private title Ljava/lang/String; \n.field private description Ljava/lang/String; \n.field private material Ljava/lang/String; \n.field private bounds Ljava/lang/String; \n.field private area Ljava/lang/String; \n.field private brand Ljava/lang/String; \n.field private packing Ljava/lang/String; \n.field private reference Ljava/lang/String; \n.field private color Ljava/lang/String; \n.field private existenceFontibon Ljava/lang/String; \n.field private existenceCelta Ljava/lang/String; \n.field private existence Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 30 \n            L4 31 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 2 locals 14 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field ProductMppromocionales codProvider Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field ProductMppromocionales title Ljava/lang/String; \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field ProductMppromocionales description Ljava/lang/String; \nL19:    aload_0 \nL20:    aload 4 \nL22:    putfield Field ProductMppromocionales material Ljava/lang/String; \nL25:    aload_0 \nL26:    aload 5 \nL28:    putfield Field ProductMppromocionales bounds Ljava/lang/String; \nL31:    aload_0 \nL32:    aload 6 \nL34:    putfield Field ProductMppromocionales area Ljava/lang/String; \nL37:    aload_0 \nL38:    aload 7 \nL40:    putfield Field ProductMppromocionales brand Ljava/lang/String; \nL43:    aload_0 \nL44:    aload 8 \nL46:    putfield Field ProductMppromocionales packing Ljava/lang/String; \nL49:    aload_0 \nL50:    aload 9 \nL52:    putfield Field ProductMppromocionales reference Ljava/lang/String; \nL55:    aload_0 \nL56:    aload 10 \nL58:    putfield Field ProductMppromocionales color Ljava/lang/String; \nL61:    aload_0 \nL62:    aload 11 \nL64:    putfield Field ProductMppromocionales existenceFontibon Ljava/lang/String; \nL67:    aload_0 \nL68:    aload 12 \nL70:    putfield Field ProductMppromocionales existenceCelta Ljava/lang/String; \nL73:    aload_0 \nL74:    aload 13 \nL76:    putfield Field ProductMppromocionales existence Ljava/lang/String; \nL79:    return \nL80:    \n        .linenumbertable \n            L0 33 \n            L4 34 \n            L9 35 \n            L14 36 \n            L19 37 \n            L25 38 \n            L31 39 \n            L37 40 \n            L43 41 \n            L49 42 \n            L55 43 \n            L61 44 \n            L67 45 \n            L73 46 \n            L79 47 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCodProvider : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ProductMppromocionales codProvider Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 50 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCodProvider : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ProductMppromocionales codProvider Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 54 \n            L5 55 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getTitle : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ProductMppromocionales title Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 58 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setTitle : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ProductMppromocionales title Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 62 \n            L5 63 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getDescription : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ProductMppromocionales description Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 66 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setDescription : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ProductMppromocionales description Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 70 \n            L5 71 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getMaterial : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ProductMppromocionales material Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 74 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setMaterial : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ProductMppromocionales material Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 78 \n            L5 79 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getBounds : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ProductMppromocionales bounds Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 82 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setBounds : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ProductMppromocionales bounds Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 86 \n            L5 87 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getArea : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ProductMppromocionales area Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 90 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setArea : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ProductMppromocionales area Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 94 \n            L5 95 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getBrand : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ProductMppromocionales brand Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 98 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setBrand : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ProductMppromocionales brand Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 102 \n            L5 103 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPacking : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ProductMppromocionales packing Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 106 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPacking : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ProductMppromocionales packing Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 110 \n            L5 111 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getReference : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ProductMppromocionales reference Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 114 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setReference : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ProductMppromocionales reference Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 118 \n            L5 119 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getColor : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ProductMppromocionales color Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 122 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setColor : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ProductMppromocionales color Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 126 \n            L5 127 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExistenceFontibon : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ProductMppromocionales existenceFontibon Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 130 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExistenceFontibon : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ProductMppromocionales existenceFontibon Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 134 \n            L5 135 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExistenceCelta : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ProductMppromocionales existenceCelta Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 138 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExistenceCelta : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ProductMppromocionales existenceCelta Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 142 \n            L5 143 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExistence : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ProductMppromocionales existence Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 146 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExistence : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ProductMppromocionales existence Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 150 \n            L5 151 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ProductMppromocionales.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 15:39:26 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ProductMppromocionales_ESTest extends ProductMppromocionales_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      String string0 = productMppromocionales0.getTitle();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"39x@FP a=\\\"s^>SDfCN\", \"\", \"\", \"\", \"\", \"ProductMppromocionales\", \"39x@FP a=\\\"s^>SDfCN\", \"39x@FP a=\\\"s^>SDfCN\", \"+N.\u007f=i:7OH)e~iH\", \"%m<:#e8o 8jP>Rz8;]\", \"\", \"+4%G@!%\", \"+N.\u007f=i:7OH)e~iH\");\n      String string0 = productMppromocionales0.getTitle();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      String string0 = productMppromocionales0.getReference();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"qnmR\u007f_{K h)\", \"\", \">\\\"{KZJTY`\", \">\\\"{KZJTY`\", \"Y\", \"\", \"<uJ\", \"ei)X@(oYQ+\", \"<uJ\", \"\", \"\", \"\", \"ei)X@(oYQ+\");\n      String string0 = productMppromocionales0.getReference();\n      assertEquals(\"<uJ\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      productMppromocionales0.setPacking(\"]qO_Ztz8X{^JBe|Sn\");\n      String string0 = productMppromocionales0.getPacking();\n      assertEquals(\"]qO_Ztz8X{^JBe|Sn\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      String string0 = productMppromocionales0.getMaterial();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"39x@FP a=\\\"s^>SDfCN\", \"\", \"\", \"\", \"\", \"ProductMppromocionales\", \"39x@FP a=\\\"s^>SDfCN\", \"39x@FP a=\\\"s^>SDfCN\", \"+N.\u007f=i:7OH)e~iH\", \"%m<:#e8o 8jP>Rz8;]\", \"\", \"+4%G@!%\", \"+N.\u007f=i:7OH)e~iH\");\n      String string0 = productMppromocionales0.getMaterial();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      productMppromocionales0.setExistenceFontibon(\"r3l.Xj?.Gza=%C,\");\n      String string0 = productMppromocionales0.getExistenceFontibon();\n      assertEquals(\"r3l.Xj?.Gza=%C,\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"\", \"\", \"jSn5a_*e-~G2m,M}w\", \"\", \"jSn5a_*e-~G2m,M}w\", \"\", \"\", \"jSn5a_*e-~G2m,M}w\", \"jSn5a_*e-~G2m,M}w\", \"\", \"\", \"\", \"\");\n      String string0 = productMppromocionales0.getExistenceFontibon();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"LuETRX2h7BlQni'PZ\", \"LuETRX2h7BlQni'PZ\", \"LuETRX2h7BlQni'PZ\", \"LuETRX2h7BlQni'PZ\", \"LuETRX2h7BlQni'PZ\", \"LuETRX2h7BlQni'PZ\", \"\", \"\", \"\", \"\", \"ProductMppromocionales\", \"ProductMppromocionales\", \"2N?\");\n      String string0 = productMppromocionales0.getExistenceCelta();\n      assertEquals(\"ProductMppromocionales\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      productMppromocionales0.setExistence(\"G}/koDL\\f(9=_lg'uQ\");\n      String string0 = productMppromocionales0.getExistence();\n      assertEquals(\"G}/koDL\\f(9=_lg'uQ\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"q|nQ&\", \"q|nQ&\", \"q|nQ&\", \"q|nQ&\", \"q|nQ&\", \"U+LrRhz[T4lr\", \"q|nQ&\", \"U+LrRhz[T4lr\", \"q|nQ&\", \"q|nQ&\", \"\", \"2N\", \"\");\n      String string0 = productMppromocionales0.getExistence();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      productMppromocionales0.setDescription(\"'t\");\n      String string0 = productMppromocionales0.getDescription();\n      assertEquals(\"'t\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"\", \"\", \"\", \"\", \"0_NDgY6$\", \"\", \"ProductMppromocionales\", \"ProductMppromocionales\", \"\", \"\", \"\", \"T[KkamJwE\", \"WB5ui|V BQ=i\");\n      String string0 = productMppromocionales0.getDescription();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      productMppromocionales0.setColor(\"4*vr^x\");\n      String string0 = productMppromocionales0.getColor();\n      assertEquals(\"4*vr^x\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"[D\", \"[D\", \"[D\", \"[D\", \"nlRm4!f\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\");\n      String string0 = productMppromocionales0.getColor();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      String string0 = productMppromocionales0.getCodProvider();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      productMppromocionales0.setBrand(\"gjP]/?.e}V)FN{fl\");\n      String string0 = productMppromocionales0.getBrand();\n      assertEquals(\"gjP]/?.e}V)FN{fl\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales((String) null, \"\", \"\", \"\", \"\", \"\", \"\", \"EHk#M>*$\", \"\", \"\", \"\", (String) null, \"EHk#M>*$\");\n      String string0 = productMppromocionales0.getBrand();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"\", \"\", \"\", \"\", \"\", \"\", (String) null, \"\", (String) null, (String) null, (String) null, \"ProductMppromocionales\", \"\");\n      productMppromocionales0.setBounds(\"D<}:2L7GJ~u+3rr~U((\");\n      String string0 = productMppromocionales0.getBounds();\n      assertEquals(\"D<}:2L7GJ~u+3rr~U((\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"39x@FP a=\\\"s^>SDfCN\", \"\", \"\", \"\", \"\", \"ProductMppromocionales\", \"39x@FP a=\\\"s^>SDfCN\", \"39x@FP a=\\\"s^>SDfCN\", \"+N.\u007f=i:7OH)e~iH\", \"%m<:#e8o 8jP>Rz8;]\", \"\", \"+4%G@!%\", \"+N.\u007f=i:7OH)e~iH\");\n      String string0 = productMppromocionales0.getBounds();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      productMppromocionales0.setArea(\"y6hIs.MTcCLM'KrSmb\");\n      String string0 = productMppromocionales0.getArea();\n      assertEquals(\"y6hIs.MTcCLM'KrSmb\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test22()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"1u7\\\"vCD~&7CgZb5,N0L\", \"p_0\", \"p_0\", \"1u7\\\"vCD~&7CgZb5,N0L\", \"p_0\", \"\", \"p_0\", \"L<f\", (String) null, \"L<f\", \"\", (String) null, \"L<f\");\n      String string0 = productMppromocionales0.getArea();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test23()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      String string0 = productMppromocionales0.getDescription();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test24()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"[D\", \"[D\", \"[D\", \"[D\", \"nlRm4!f\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\");\n      String string0 = productMppromocionales0.getMaterial();\n      assertEquals(\"[D\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test25()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      String string0 = productMppromocionales0.getColor();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test26()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      productMppromocionales0.setMaterial(\"G}/koDL\\f(9=_lg'uQ\");\n      assertNull(productMppromocionales0.getExistenceFontibon());\n  }\n\n  @Test(timeout = 4000)\n  public void test27()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      productMppromocionales0.setExistenceCelta(\"\");\n      String string0 = productMppromocionales0.getExistenceCelta();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test28()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      String string0 = productMppromocionales0.getExistence();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test29()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"[D\", \"[D\", \"[D\", \"[D\", \"nlRm4!f\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\");\n      productMppromocionales0.setCodProvider(\"\");\n      String string0 = productMppromocionales0.getCodProvider();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test30()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      String string0 = productMppromocionales0.getBrand();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test31()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      productMppromocionales0.setPacking(\"\");\n      String string0 = productMppromocionales0.getPacking();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test32()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      String string0 = productMppromocionales0.getPacking();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test33()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"[D\", \"[D\", \"[D\", \"[D\", \"nlRm4!f\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\");\n      String string0 = productMppromocionales0.getCodProvider();\n      assertEquals(\"[D\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test34()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      String string0 = productMppromocionales0.getExistenceCelta();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test35()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"[D\", \"[D\", \"[D\", \"[D\", \"nlRm4!f\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\");\n      productMppromocionales0.setReference(\"\");\n      assertEquals(\"\", productMppromocionales0.getPacking());\n  }\n\n  @Test(timeout = 4000)\n  public void test36()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"[D\", \"[D\", \"[D\", \"[D\", \"nlRm4!f\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\");\n      productMppromocionales0.setTitle(\"9h+dB2tJ\");\n      assertEquals(\"\", productMppromocionales0.getExistence());\n  }\n\n  @Test(timeout = 4000)\n  public void test37()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"[D\", \"[D\", \"[D\", \"[D\", \"nlRm4!f\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\");\n      String string0 = productMppromocionales0.getTitle();\n      assertEquals(\"[D\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test38()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      String string0 = productMppromocionales0.getArea();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test39()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      String string0 = productMppromocionales0.getBounds();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test40()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales(\"[D\", \"[D\", \"[D\", \"[D\", \"nlRm4!f\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\");\n      String string0 = productMppromocionales0.getReference();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test41()  throws Throwable  {\n      ProductMppromocionales productMppromocionales0 = new ProductMppromocionales();\n      String string0 = productMppromocionales0.getExistenceFontibon();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 15:39:26 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ProductMppromocionales_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ProductMppromocionales\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmplqal_6dh\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ProductMppromocionales_ESTest_scaffolding.class.getClassLoader() ,\n      \"ProductMppromocionales\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ProductMppromocionales_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ProductMppromocionales\"\n    );\n  }\n}\n", "class_idx": 185}
{"class_name": "Ejemplo142", "java_source": "public class Ejemplo142 {\n\n  public static int multiplica(int a, int b) {\n    int resultado;\n\n    if (b == 1) resultado = a;\n    else resultado = a + multiplica(a, b - 1);\n\n    return resultado;\n  }\n\n  public static void main(String[] args) {\n    int a, b;\n\n    a = 4;\n    b = 7;\n\n    System.out.println(multiplica(a, b));\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Ejemplo142 \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static multiplica : (II)I \n    .code stack 4 locals 3 \nL0:     iload_1 \nL1:     iconst_1 \nL2:     if_icmpne L10 \nL5:     iload_0 \nL6:     istore_2 \nL7:     goto L20 \n\n        .stack same \nL10:    iload_0 \nL11:    iload_0 \nL12:    iload_1 \nL13:    iconst_1 \nL14:    isub \nL15:    invokestatic Method Ejemplo142 multiplica (II)I \nL18:    iadd \nL19:    istore_2 \n\n        .stack append Integer \nL20:    iload_2 \nL21:    ireturn \nL22:    \n        .linenumbertable \n            L0 9 \n            L5 10 \n            L10 12 \n            L20 14 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 3 locals 3 \nL0:     iconst_4 \nL1:     istore_1 \nL2:     bipush 7 \nL4:     istore_2 \nL5:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL8:     iload_1 \nL9:     iload_2 \nL10:    invokestatic Method Ejemplo142 multiplica (II)I \nL13:    invokevirtual Method java/io/PrintStream println (I)V \nL16:    return \nL17:    \n        .linenumbertable \n            L0 20 \n            L2 21 \n            L5 23 \n            L16 24 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Ejemplo142.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 19:43:51 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Ejemplo142_ESTest extends Ejemplo142_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Ejemplo142.main((String[]) null);\n      Ejemplo142.main((String[]) null);\n      Ejemplo142 ejemplo142_0 = new Ejemplo142();\n      assertNotNull(ejemplo142_0);\n      \n      Ejemplo142.main((String[]) null);\n      Ejemplo142.main((String[]) null);\n      Ejemplo142.main((String[]) null);\n      Ejemplo142.main((String[]) null);\n      Ejemplo142.main((String[]) null);\n      Ejemplo142.main((String[]) null);\n      Ejemplo142.main((String[]) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Ejemplo142 ejemplo142_0 = new Ejemplo142();\n      assertNotNull(ejemplo142_0);\n      \n      String[] stringArray0 = new String[8];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"jiz<6%'}3;Y.7a^\";\n      stringArray0[2] = \"%%RxhY.53|\";\n      stringArray0[3] = \"T>P$\";\n      stringArray0[4] = \"sT<Wl] #Lw|\";\n      stringArray0[5] = \"v^=&H56fm,9I\";\n      stringArray0[6] = \"\";\n      stringArray0[7] = \"qny>S_j!5!k;}YxW \";\n      Ejemplo142.main(stringArray0);\n      assertEquals(8, stringArray0.length);\n      \n      Ejemplo142.main((String[]) null);\n      Ejemplo142.main((String[]) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Ejemplo142 ejemplo142_0 = new Ejemplo142();\n      assertNotNull(ejemplo142_0);\n      \n      String[] stringArray0 = new String[5];\n      stringArray0[0] = \"R3~b\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"3Uv/3Y? W\u007fL\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \"\";\n      Ejemplo142.main(stringArray0);\n      assertEquals(5, stringArray0.length);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 19:43:51 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Ejemplo142_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Ejemplo142\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp633wj7td\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Ejemplo142_ESTest_scaffolding.class.getClassLoader() ,\n      \"Ejemplo142\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Ejemplo142_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Ejemplo142\"\n    );\n  }\n}\n", "class_idx": 186}
{"class_name": "Person", "java_source": "import java.util.ArrayList;\n\npublic class Person {\n  private ArrayList<Integer> friends;\n  private int personID;\n  private String info;\n\n  public String getInfo() {\n    return info;\n  }\n\n  public void setInfo(String info) {\n    this.info = info;\n  }\n\n  public int[] getFriends() {\n    int[] temp = new int[friends.size()];\n    for (int i = 0; i < temp.length; i++) {\n      temp[i] = friends.get(i);\n    }\n    return temp;\n  }\n\n  public int getID() {\n    return personID;\n  }\n\n  public void addFriend(int id) {\n    friends.add(id);\n  }\n\n  public Person(int id) {\n    this.personID = id;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Person \n.super java/lang/Object \n.field private friends Ljava/util/ArrayList; .fieldattributes \n    .signature Ljava/util/ArrayList<Ljava/lang/Integer;>; \n.end fieldattributes \n.field private personID I \n.field private info Ljava/lang/String; \n\n.method public getInfo : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Person info Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 10 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setInfo : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Person info Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 12 \n            L5 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFriends : ()[I \n    .code stack 4 locals 3 \nL0:     aload_0 \nL1:     getfield Field Person friends Ljava/util/ArrayList; \nL4:     invokevirtual Method java/util/ArrayList size ()I \nL7:     newarray int \nL9:     astore_1 \nL10:    iconst_0 \nL11:    istore_2 \n\n        .stack append Object [I Integer \nL12:    iload_2 \nL13:    aload_1 \nL14:    arraylength \nL15:    if_icmpge L41 \nL18:    aload_1 \nL19:    iload_2 \nL20:    aload_0 \nL21:    getfield Field Person friends Ljava/util/ArrayList; \nL24:    iload_2 \nL25:    invokevirtual Method java/util/ArrayList get (I)Ljava/lang/Object; \nL28:    checkcast java/lang/Integer \nL31:    invokevirtual Method java/lang/Integer intValue ()I \nL34:    iastore \nL35:    iinc 2 1 \nL38:    goto L12 \n\n        .stack chop 1 \nL41:    aload_1 \nL42:    areturn \nL43:    \n        .linenumbertable \n            L0 16 \n            L10 17 \n            L18 18 \n            L35 17 \n            L41 20 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getID : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Person personID I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 22 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public addFriend : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field Person friends Ljava/util/ArrayList; \nL4:     iload_1 \nL5:     invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL8:     invokevirtual Method java/util/ArrayList add (Ljava/lang/Object;)Z \nL11:    pop \nL12:    return \nL13:    \n        .linenumbertable \n            L0 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field Person personID I \nL9:     return \nL10:    \n        .linenumbertable \n            L0 25 \n            L4 26 \n            L9 27 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Person.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 01:12:31 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Person_ESTest extends Person_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Person person0 = new Person((-18969));\n      // Undeclared exception!\n      try { \n        person0.addFriend(12317);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"Person\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Person person0 = new Person((-6));\n      // Undeclared exception!\n      try { \n        person0.getFriends();\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"Person\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Person person0 = new Person((-18969));\n      person0.setInfo(\"{hW$Y.!4]iUdtiNBC\");\n      person0.getInfo();\n      assertEquals((-18969), person0.getID());\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Person person0 = new Person(20270);\n      person0.setInfo(\"\");\n      person0.getInfo();\n      assertEquals(20270, person0.getID());\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Person person0 = new Person(0);\n      int int0 = person0.getID();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Person person0 = new Person(26051);\n      int int0 = person0.getID();\n      assertEquals(26051, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      Person person0 = new Person(0);\n      person0.getInfo();\n      assertEquals(0, person0.getID());\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      Person person0 = new Person((-6));\n      int int0 = person0.getID();\n      assertEquals((-6), int0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 01:12:31 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Person_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Person\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp3sr6vfaw\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Person_ESTest_scaffolding.class.getClassLoader() ,\n      \"Person\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Person_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Person\"\n    );\n  }\n}\n", "class_idx": 187}
{"class_name": "Lexer", "java_source": "/* Copyright 2015 Miko\u0142aj Olszewski\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport java.io.*;\n\npublic class Lexer {\n\n  public static final int INVALID = -2;\n  public static final int END = -1;\n\n  public static final int NONE = 0;\n\n  public static final int VARIABLE = 1;\n  public static final int NUMBER = 2;\n\n  public static final int LEFT = 10;\n  public static final int RIGHT = 11;\n\n  public static final int AND = 21;\n  public static final int OR = 22;\n\n  public static final int EQUAL = 31;\n  public static final int NOTEQUAL = 32;\n\n  public static final int LESS = 41;\n  public static final int LESSOREQUAL = 42;\n\n  public static final int GREATER = 51;\n  public static final int GREATEROREQUAL = 52;\n\n  public static final String AND_LITERAL = \"AND\";\n  public static final String OR_LITERAL = \"OR\";\n\n  private final StreamTokenizer tokenizer;\n\n  private int prevToken = NONE;\n\n  private Object value;\n\n  public Lexer(InputStream inputStream) {\n    tokenizer = new StreamTokenizer(new BufferedReader(new InputStreamReader(inputStream)));\n\n    tokenizer.resetSyntax();\n    tokenizer.wordChars('a', 'z');\n    tokenizer.wordChars('A', 'Z');\n    tokenizer.whitespaceChars('\\u0000', ' ');\n\n    char[] ordinaryChars = new char[] {'(', ')', '<', '=', '>', '!'};\n    for (char ordinaryChar : ordinaryChars) tokenizer.ordinaryChar(ordinaryChar);\n\n    tokenizer.parseNumbers();\n    tokenizer.eolIsSignificant(true);\n  }\n\n  public int nextToken() {\n    value = null;\n    try {\n      switch (tokenizer.nextToken()) {\n        case StreamTokenizer.TT_EOF:\n        case StreamTokenizer.TT_EOL:\n          prevToken = END;\n          break;\n        case StreamTokenizer.TT_WORD:\n          if (tokenizer.sval.equalsIgnoreCase(AND_LITERAL)) {\n            prevToken = AND;\n          } else if (tokenizer.sval.equalsIgnoreCase(OR_LITERAL)) {\n            prevToken = OR;\n          } else {\n            prevToken = VARIABLE;\n            value = tokenizer.sval;\n          }\n          break;\n        case StreamTokenizer.TT_NUMBER:\n          prevToken = NUMBER;\n          value = tokenizer.nval;\n          break;\n        case '(':\n          prevToken = LEFT;\n          break;\n        case ')':\n          prevToken = RIGHT;\n          break;\n        case '=':\n          prevToken = EQUAL;\n          break;\n        case '!':\n          prevToken = nextTokenIs('=', NOTEQUAL, INVALID);\n          break;\n        case '>':\n          prevToken = nextTokenIs('=', GREATEROREQUAL, GREATER);\n          break;\n        case '<':\n          prevToken = nextTokenIs('=', LESSOREQUAL, LESS);\n          break;\n        default:\n          prevToken = INVALID;\n      }\n    } catch (IOException e) {\n      prevToken = END;\n    }\n    return prevToken;\n  }\n\n  private int nextTokenIs(int tokenToCompare, int compoundTokenIfTrue, int tokenIfFalse)\n      throws IOException {\n    if (tokenizer.nextToken() == tokenToCompare) return compoundTokenIfTrue;\n    tokenizer.pushBack();\n    return tokenIfFalse;\n  }\n\n  public void pushBack() {\n    tokenizer.pushBack();\n  }\n\n  public Object getValue() {\n    return value;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Lexer \n.super java/lang/Object \n.field public static final INVALID I = -2 \n.field public static final END I = -1 \n.field public static final NONE I = 0 \n.field public static final VARIABLE I = 1 \n.field public static final NUMBER I = 2 \n.field public static final LEFT I = 10 \n.field public static final RIGHT I = 11 \n.field public static final AND I = 21 \n.field public static final OR I = 22 \n.field public static final EQUAL I = 31 \n.field public static final NOTEQUAL I = 32 \n.field public static final LESS I = 41 \n.field public static final LESSOREQUAL I = 42 \n.field public static final GREATER I = 51 \n.field public static final GREATEROREQUAL I = 52 \n.field public static final AND_LITERAL Ljava/lang/String; = 'AND' \n.field public static final OR_LITERAL Ljava/lang/String; = 'OR' \n.field private final tokenizer Ljava/io/StreamTokenizer; \n.field private prevToken I \n.field private value Ljava/lang/Object; \n\n.method public <init> : (Ljava/io/InputStream;)V \n    .code stack 8 locals 7 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iconst_0 \nL6:     putfield Field Lexer prevToken I \nL9:     aload_0 \nL10:    new java/io/StreamTokenizer \nL13:    dup \nL14:    new java/io/BufferedReader \nL17:    dup \nL18:    new java/io/InputStreamReader \nL21:    dup \nL22:    aload_1 \nL23:    invokespecial Method java/io/InputStreamReader <init> (Ljava/io/InputStream;)V \nL26:    invokespecial Method java/io/BufferedReader <init> (Ljava/io/Reader;)V \nL29:    invokespecial Method java/io/StreamTokenizer <init> (Ljava/io/Reader;)V \nL32:    putfield Field Lexer tokenizer Ljava/io/StreamTokenizer; \nL35:    aload_0 \nL36:    getfield Field Lexer tokenizer Ljava/io/StreamTokenizer; \nL39:    invokevirtual Method java/io/StreamTokenizer resetSyntax ()V \nL42:    aload_0 \nL43:    getfield Field Lexer tokenizer Ljava/io/StreamTokenizer; \nL46:    bipush 97 \nL48:    bipush 122 \nL50:    invokevirtual Method java/io/StreamTokenizer wordChars (II)V \nL53:    aload_0 \nL54:    getfield Field Lexer tokenizer Ljava/io/StreamTokenizer; \nL57:    bipush 65 \nL59:    bipush 90 \nL61:    invokevirtual Method java/io/StreamTokenizer wordChars (II)V \nL64:    aload_0 \nL65:    getfield Field Lexer tokenizer Ljava/io/StreamTokenizer; \nL68:    iconst_0 \nL69:    bipush 32 \nL71:    invokevirtual Method java/io/StreamTokenizer whitespaceChars (II)V \nL74:    bipush 6 \nL76:    newarray char \nL78:    dup \nL79:    iconst_0 \nL80:    bipush 40 \nL82:    castore \nL83:    dup \nL84:    iconst_1 \nL85:    bipush 41 \nL87:    castore \nL88:    dup \nL89:    iconst_2 \nL90:    bipush 60 \nL92:    castore \nL93:    dup \nL94:    iconst_3 \nL95:    bipush 61 \nL97:    castore \nL98:    dup \nL99:    iconst_4 \nL100:   bipush 62 \nL102:   castore \nL103:   dup \nL104:   iconst_5 \nL105:   bipush 33 \nL107:   castore \nL108:   astore_2 \nL109:   aload_2 \nL110:   astore_3 \nL111:   aload_3 \nL112:   arraylength \nL113:   istore 4 \nL115:   iconst_0 \nL116:   istore 5 \n\n        .stack full \n            locals Object Lexer Object java/io/InputStream Object [C Object [C Integer Integer \n            stack \n        .end stack \nL118:   iload 5 \nL120:   iload 4 \nL122:   if_icmpge L146 \nL125:   aload_3 \nL126:   iload 5 \nL128:   caload \nL129:   istore 6 \nL131:   aload_0 \nL132:   getfield Field Lexer tokenizer Ljava/io/StreamTokenizer; \nL135:   iload 6 \nL137:   invokevirtual Method java/io/StreamTokenizer ordinaryChar (I)V \nL140:   iinc 5 1 \nL143:   goto L118 \n\n        .stack chop 3 \nL146:   aload_0 \nL147:   getfield Field Lexer tokenizer Ljava/io/StreamTokenizer; \nL150:   invokevirtual Method java/io/StreamTokenizer parseNumbers ()V \nL153:   aload_0 \nL154:   getfield Field Lexer tokenizer Ljava/io/StreamTokenizer; \nL157:   iconst_1 \nL158:   invokevirtual Method java/io/StreamTokenizer eolIsSignificant (Z)V \nL161:   return \nL162:   \n        .linenumbertable \n            L0 54 \n            L4 50 \n            L9 55 \n            L35 57 \n            L42 58 \n            L53 59 \n            L64 60 \n            L74 62 \n            L109 63 \n            L131 64 \n            L140 63 \n            L146 66 \n            L153 67 \n            L161 68 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public nextToken : ()I \n    .code stack 5 locals 2 \nL0:     aload_0 \nL1:     aconst_null \nL2:     putfield Field Lexer value Ljava/lang/Object; \n        .catch java/io/IOException from L5 to L285 using L288 \nL5:     aload_0 \nL6:     getfield Field Lexer tokenizer Ljava/io/StreamTokenizer; \nL9:     invokevirtual Method java/io/StreamTokenizer nextToken ()I \nL12:    lookupswitch \n            -3 : L112 \n            -2 : L179 \n            -1 : L104 \n            10 : L104 \n            33 : L228 \n            40 : L201 \n            41 : L210 \n            60 : L262 \n            61 : L219 \n            62 : L245 \n            default : L279 \n\n\n        .stack same_extended \nL104:   aload_0 \nL105:   iconst_m1 \nL106:   putfield Field Lexer prevToken I \nL109:   goto L285 \n\n        .stack same \nL112:   aload_0 \nL113:   getfield Field Lexer tokenizer Ljava/io/StreamTokenizer; \nL116:   getfield Field java/io/StreamTokenizer sval Ljava/lang/String; \nL119:   ldc 'AND' \nL121:   invokevirtual Method java/lang/String equalsIgnoreCase (Ljava/lang/String;)Z \nL124:   ifeq L136 \nL127:   aload_0 \nL128:   bipush 21 \nL130:   putfield Field Lexer prevToken I \nL133:   goto L285 \n\n        .stack same \nL136:   aload_0 \nL137:   getfield Field Lexer tokenizer Ljava/io/StreamTokenizer; \nL140:   getfield Field java/io/StreamTokenizer sval Ljava/lang/String; \nL143:   ldc 'OR' \nL145:   invokevirtual Method java/lang/String equalsIgnoreCase (Ljava/lang/String;)Z \nL148:   ifeq L160 \nL151:   aload_0 \nL152:   bipush 22 \nL154:   putfield Field Lexer prevToken I \nL157:   goto L285 \n\n        .stack same \nL160:   aload_0 \nL161:   iconst_1 \nL162:   putfield Field Lexer prevToken I \nL165:   aload_0 \nL166:   aload_0 \nL167:   getfield Field Lexer tokenizer Ljava/io/StreamTokenizer; \nL170:   getfield Field java/io/StreamTokenizer sval Ljava/lang/String; \nL173:   putfield Field Lexer value Ljava/lang/Object; \nL176:   goto L285 \n\n        .stack same \nL179:   aload_0 \nL180:   iconst_2 \nL181:   putfield Field Lexer prevToken I \nL184:   aload_0 \nL185:   aload_0 \nL186:   getfield Field Lexer tokenizer Ljava/io/StreamTokenizer; \nL189:   getfield Field java/io/StreamTokenizer nval D \nL192:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL195:   putfield Field Lexer value Ljava/lang/Object; \nL198:   goto L285 \n\n        .stack same \nL201:   aload_0 \nL202:   bipush 10 \nL204:   putfield Field Lexer prevToken I \nL207:   goto L285 \n\n        .stack same \nL210:   aload_0 \nL211:   bipush 11 \nL213:   putfield Field Lexer prevToken I \nL216:   goto L285 \n\n        .stack same \nL219:   aload_0 \nL220:   bipush 31 \nL222:   putfield Field Lexer prevToken I \nL225:   goto L285 \n\n        .stack same \nL228:   aload_0 \nL229:   aload_0 \nL230:   bipush 61 \nL232:   bipush 32 \nL234:   bipush -2 \nL236:   invokespecial Method Lexer nextTokenIs (III)I \nL239:   putfield Field Lexer prevToken I \nL242:   goto L285 \n\n        .stack same \nL245:   aload_0 \nL246:   aload_0 \nL247:   bipush 61 \nL249:   bipush 52 \nL251:   bipush 51 \nL253:   invokespecial Method Lexer nextTokenIs (III)I \nL256:   putfield Field Lexer prevToken I \nL259:   goto L285 \n\n        .stack same \nL262:   aload_0 \nL263:   aload_0 \nL264:   bipush 61 \nL266:   bipush 42 \nL268:   bipush 41 \nL270:   invokespecial Method Lexer nextTokenIs (III)I \nL273:   putfield Field Lexer prevToken I \nL276:   goto L285 \n\n        .stack same \nL279:   aload_0 \nL280:   bipush -2 \nL282:   putfield Field Lexer prevToken I \n\n        .stack same \nL285:   goto L294 \n\n        .stack stack_1 Object java/io/IOException \nL288:   astore_1 \nL289:   aload_0 \nL290:   iconst_m1 \nL291:   putfield Field Lexer prevToken I \n\n        .stack same \nL294:   aload_0 \nL295:   getfield Field Lexer prevToken I \nL298:   ireturn \nL299:   \n        .linenumbertable \n            L0 71 \n            L5 73 \n            L104 76 \n            L109 77 \n            L112 79 \n            L127 80 \n            L136 81 \n            L151 82 \n            L160 84 \n            L165 85 \n            L176 87 \n            L179 89 \n            L184 90 \n            L198 91 \n            L201 93 \n            L207 94 \n            L210 96 \n            L216 97 \n            L219 99 \n            L225 100 \n            L228 102 \n            L242 103 \n            L245 105 \n            L259 106 \n            L262 108 \n            L276 109 \n            L279 111 \n            L285 115 \n            L288 113 \n            L289 114 \n            L294 116 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private nextTokenIs : (III)I \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     getfield Field Lexer tokenizer Ljava/io/StreamTokenizer; \nL4:     invokevirtual Method java/io/StreamTokenizer nextToken ()I \nL7:     iload_1 \nL8:     if_icmpne L13 \nL11:    iload_2 \nL12:    ireturn \n\n        .stack same \nL13:    aload_0 \nL14:    getfield Field Lexer tokenizer Ljava/io/StreamTokenizer; \nL17:    invokevirtual Method java/io/StreamTokenizer pushBack ()V \nL20:    iload_3 \nL21:    ireturn \nL22:    \n        .linenumbertable \n            L0 120 \n            L11 121 \n            L13 122 \n            L20 123 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/IOException \n.end method \n\n.method public pushBack : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Lexer tokenizer Ljava/io/StreamTokenizer; \nL4:     invokevirtual Method java/io/StreamTokenizer pushBack ()V \nL7:     return \nL8:     \n        .linenumbertable \n            L0 127 \n            L7 128 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getValue : ()Ljava/lang/Object; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Lexer value Ljava/lang/Object; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 131 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Lexer.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 00:09:13 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.io.BufferedInputStream;\nimport java.io.ByteArrayInputStream;\nimport java.io.DataInputStream;\nimport java.io.FileDescriptor;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.io.MockFileInputStream;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Lexer_ESTest extends Lexer_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      FileDescriptor fileDescriptor0 = new FileDescriptor();\n      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);\n      Lexer lexer0 = new Lexer(bufferedInputStream0);\n      int int0 = lexer0.nextToken();\n      assertEquals((-1), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      byte[] byteArray0 = new byte[2];\n      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n      Lexer lexer0 = new Lexer(byteArrayInputStream0);\n      int int0 = lexer0.nextToken();\n      assertEquals((-1), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      byte[] byteArray0 = new byte[2];\n      byteArray0[0] = (byte) (-1);\n      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n      Lexer lexer0 = new Lexer(byteArrayInputStream0);\n      int int0 = lexer0.nextToken();\n      assertEquals(1, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      byte[] byteArray0 = new byte[2];\n      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n      Lexer lexer0 = new Lexer(byteArrayInputStream0);\n      Object object0 = lexer0.getValue();\n      assertNull(object0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      byte[] byteArray0 = new byte[9];\n      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-20154), (byte)21);\n      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);\n      Lexer lexer0 = new Lexer(dataInputStream0);\n      lexer0.pushBack();\n      assertEquals(21, Lexer.AND);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 00:09:13 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Lexer_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Lexer\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp36u1gzcz\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Lexer_ESTest_scaffolding.class.getClassLoader() ,\n      \"Lexer\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Lexer_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Lexer\"\n    );\n  }\n}\n", "class_idx": 188}
{"class_name": "JAASGroup", "java_source": "// ========================================================================\n// Copyright (c) 2002-2009 Mort Bay Consulting Pty. Ltd.\n// ------------------------------------------------------------------------\n// All rights reserved. This program and the accompanying materials\n// are made available under the terms of the Eclipse Public License v1.0\n// and Apache License v2.0 which accompanies this distribution.\n// The Eclipse Public License is available at\n// http://www.eclipse.org/legal/epl-v10.html\n// The Apache License v2.0 is available at\n// http://www.opensource.org/licenses/apache2.0.php\n// You may elect to redistribute this code under either of these licenses.\n// ========================================================================\n\nimport java.security.Principal;\nimport java.security.acl.Group;\nimport java.util.Enumeration;\nimport java.util.HashSet;\nimport java.util.Iterator;\n\npublic class JAASGroup implements Group {\n  public static final String ROLES = \"__roles__\";\n\n  private String _name = null;\n  private HashSet _members = null;\n\n  public JAASGroup(String n) {\n    this._name = n;\n    this._members = new HashSet();\n  }\n\n  /* ------------------------------------------------------------ */\n  /**\n   * @param principal <description>\n   * @return <description>\n   */\n  public synchronized boolean addMember(Principal principal) {\n    return _members.add(principal);\n  }\n\n  /**\n   * @param principal <description>\n   * @return <description>\n   */\n  public synchronized boolean removeMember(Principal principal) {\n    return _members.remove(principal);\n  }\n\n  /**\n   * @param principal <description>\n   * @return <description>\n   */\n  public boolean isMember(Principal principal) {\n    return _members.contains(principal);\n  }\n\n  /**\n   * @return <description>\n   */\n  public Enumeration members() {\n\n    class MembersEnumeration implements Enumeration {\n      private Iterator itor;\n\n      public MembersEnumeration(Iterator itor) {\n        this.itor = itor;\n      }\n\n      public boolean hasMoreElements() {\n        return this.itor.hasNext();\n      }\n\n      public Object nextElement() {\n        return this.itor.next();\n      }\n    }\n\n    return new MembersEnumeration(_members.iterator());\n  }\n\n  /**\n   * @return <description>\n   */\n  public int hashCode() {\n    return getName().hashCode();\n  }\n\n  /**\n   * @param object <description>\n   * @return <description>\n   */\n  public boolean equals(Object object) {\n    if (!(object instanceof JAASGroup)) return false;\n\n    return ((JAASGroup) object).getName().equals(getName());\n  }\n\n  /**\n   * @return <description>\n   */\n  public String toString() {\n    return getName();\n  }\n\n  /**\n   * @return <description>\n   */\n  public String getName() {\n\n    return _name;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super JAASGroup \n.super java/lang/Object \n.implements java/security/acl/Group \n.field public static final ROLES Ljava/lang/String; = '__roles__' \n.field private _name Ljava/lang/String; \n.field private _members Ljava/util/HashSet; \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aconst_null \nL6:     putfield Field JAASGroup _name Ljava/lang/String; \nL9:     aload_0 \nL10:    aconst_null \nL11:    putfield Field JAASGroup _members Ljava/util/HashSet; \nL14:    aload_0 \nL15:    aload_1 \nL16:    putfield Field JAASGroup _name Ljava/lang/String; \nL19:    aload_0 \nL20:    new java/util/HashSet \nL23:    dup \nL24:    invokespecial Method java/util/HashSet <init> ()V \nL27:    putfield Field JAASGroup _members Ljava/util/HashSet; \nL30:    return \nL31:    \n        .linenumbertable \n            L0 33 \n            L4 27 \n            L9 28 \n            L14 34 \n            L19 35 \n            L30 36 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public synchronized addMember : (Ljava/security/Principal;)Z \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field JAASGroup _members Ljava/util/HashSet; \nL4:     aload_1 \nL5:     invokevirtual Method java/util/HashSet add (Ljava/lang/Object;)Z \nL8:     ireturn \nL9:     \n        .linenumbertable \n            L0 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public synchronized removeMember : (Ljava/security/Principal;)Z \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field JAASGroup _members Ljava/util/HashSet; \nL4:     aload_1 \nL5:     invokevirtual Method java/util/HashSet remove (Ljava/lang/Object;)Z \nL8:     ireturn \nL9:     \n        .linenumbertable \n            L0 56 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public isMember : (Ljava/security/Principal;)Z \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field JAASGroup _members Ljava/util/HashSet; \nL4:     aload_1 \nL5:     invokevirtual Method java/util/HashSet contains (Ljava/lang/Object;)Z \nL8:     ireturn \nL9:     \n        .linenumbertable \n            L0 66 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public members : ()Ljava/util/Enumeration; \n    .code stack 4 locals 1 \nL0:     new JAASGroup$1MembersEnumeration \nL3:     dup \nL4:     aload_0 \nL5:     aload_0 \nL6:     getfield Field JAASGroup _members Ljava/util/HashSet; \nL9:     invokevirtual Method java/util/HashSet iterator ()Ljava/util/Iterator; \nL12:    invokespecial Method JAASGroup$1MembersEnumeration <init> (LJAASGroup;Ljava/util/Iterator;)V \nL15:    areturn \nL16:    \n        .linenumbertable \n            L0 100 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public hashCode : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokevirtual Method JAASGroup getName ()Ljava/lang/String; \nL4:     invokevirtual Method java/lang/String hashCode ()I \nL7:     ireturn \nL8:     \n        .linenumbertable \n            L0 110 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public equals : (Ljava/lang/Object;)Z \n    .code stack 2 locals 2 \nL0:     aload_1 \nL1:     instanceof JAASGroup \nL4:     ifne L9 \nL7:     iconst_0 \nL8:     ireturn \n\n        .stack same \nL9:     aload_1 \nL10:    checkcast JAASGroup \nL13:    invokevirtual Method JAASGroup getName ()Ljava/lang/String; \nL16:    aload_0 \nL17:    invokevirtual Method JAASGroup getName ()Ljava/lang/String; \nL20:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL23:    ireturn \nL24:    \n        .linenumbertable \n            L0 122 \n            L7 123 \n            L9 125 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokevirtual Method JAASGroup getName ()Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 134 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field JAASGroup _name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 144 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'JAASGroup.java' \n.innerclasses \n    JAASGroup$1MembersEnumeration [0] MembersEnumeration \n.end innerclasses \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 03:19:27 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class JAASGroup_ESTest extends JAASGroup_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      JAASGroup jAASGroup0 = new JAASGroup((String) null);\n      String string0 = jAASGroup0.toString();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      JAASGroup jAASGroup0 = new JAASGroup(\"\");\n      String string0 = jAASGroup0.toString();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      JAASGroup jAASGroup0 = new JAASGroup(\";p)0IQ4hIN~/Sjl4a\u007f\");\n      boolean boolean0 = jAASGroup0.addMember(jAASGroup0);\n      boolean boolean1 = jAASGroup0.isMember(jAASGroup0);\n      assertTrue(boolean1 == boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      JAASGroup jAASGroup0 = new JAASGroup((String) null);\n      String string0 = jAASGroup0.getName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      JAASGroup jAASGroup0 = new JAASGroup(\"\");\n      String string0 = jAASGroup0.getName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      JAASGroup jAASGroup0 = new JAASGroup(\";p)0IQ4hIN~/Sjl4a\u007f\");\n      jAASGroup0.addMember(jAASGroup0);\n      boolean boolean0 = jAASGroup0.addMember(jAASGroup0);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      JAASGroup jAASGroup0 = new JAASGroup(\"c/4\");\n      boolean boolean0 = jAASGroup0.equals(jAASGroup0);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      JAASGroup jAASGroup0 = new JAASGroup(\"c/4\");\n      String string0 = jAASGroup0.getName();\n      assertEquals(\"c/4\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      JAASGroup jAASGroup0 = new JAASGroup(\"c/4\");\n      jAASGroup0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      JAASGroup jAASGroup0 = new JAASGroup(\"3Clz\");\n      boolean boolean0 = jAASGroup0.equals(\"3Clz\");\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      JAASGroup jAASGroup0 = new JAASGroup(\"3Clz\");\n      JAASGroup jAASGroup1 = new JAASGroup(\"3Clz\");\n      jAASGroup0.addMember(jAASGroup1);\n      boolean boolean0 = jAASGroup0.removeMember(jAASGroup0);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      JAASGroup jAASGroup0 = new JAASGroup(\"3Clz\");\n      // Undeclared exception!\n      try { \n        jAASGroup0.members();\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // JAASGroup$1MembersEnumeration\n         //\n         verifyException(\"JAASGroup\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      JAASGroup jAASGroup0 = new JAASGroup(\"HZe1|an]\");\n      String string0 = jAASGroup0.toString();\n      assertEquals(\"HZe1|an]\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      JAASGroup jAASGroup0 = new JAASGroup(\"3Clz\");\n      boolean boolean0 = jAASGroup0.removeMember(jAASGroup0);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      JAASGroup jAASGroup0 = new JAASGroup(\"3Clz\");\n      boolean boolean0 = jAASGroup0.isMember(jAASGroup0);\n      assertFalse(boolean0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 03:19:27 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class JAASGroup_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"JAASGroup\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpi2xh8u_3\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JAASGroup_ESTest_scaffolding.class.getClassLoader() ,\n      \"JAASGroup\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JAASGroup_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"JAASGroup\"\n    );\n  }\n}\n", "class_idx": 189}
{"class_name": "ImplementationNotFoundException", "java_source": "/*\n *-----------------------------------------------------------------------------\n * pc4ide\n *\n * Copyright 2017 Jakub Knetl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *-----------------------------------------------------------------------------\n */\n\n/**\n * This exception indicates, that implementation of PerfCake component cannot be found.\n *\n * @author Jakub Knetl\n */\npublic class ImplementationNotFoundException extends ClassNotFoundException {\n\n  public ImplementationNotFoundException(String s) {\n    super(s);\n  }\n\n  public ImplementationNotFoundException(String s, Throwable ex) {\n    super(s, ex);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ImplementationNotFoundException \n.super java/lang/ClassNotFoundException \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/ClassNotFoundException <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 31 \n            L5 32 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/Throwable;)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     aload_2 \nL3:     invokespecial Method java/lang/ClassNotFoundException <init> (Ljava/lang/String;Ljava/lang/Throwable;)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 35 \n            L6 36 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ImplementationNotFoundException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 21:36:47 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ImplementationNotFoundException_ESTest extends ImplementationNotFoundException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ImplementationNotFoundException implementationNotFoundException0 = new ImplementationNotFoundException(\"\");\n      ImplementationNotFoundException implementationNotFoundException1 = new ImplementationNotFoundException(\"\", implementationNotFoundException0);\n      assertEquals(\"\", implementationNotFoundException1.getMessage());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 21:36:47 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ImplementationNotFoundException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ImplementationNotFoundException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp0kh0wq67\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ImplementationNotFoundException_ESTest_scaffolding.class.getClassLoader() ,\n      \"ImplementationNotFoundException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ImplementationNotFoundException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ImplementationNotFoundException\"\n    );\n  }\n}\n", "class_idx": 190}
{"class_name": "ModMetadata", "java_source": "public class ModMetadata {\n  private String _modName;\n  private String _modTag;\n  private String _desc;\n  private String _version;\n  private String _url;\n  private String[] _authors;\n\n  public ModMetadata(String modName) {\n    _modName = modName;\n  }\n\n  public void setAuthors(String[] authors) {\n    this._authors = authors;\n  }\n\n  public void setURL(String URL) {\n    this._url = URL;\n  }\n\n  public void setVersion(String version) {\n    this._version = version;\n  }\n\n  public void setDesc(String desc) {\n    this._desc = desc;\n  }\n\n  public void setTag(String tag) {\n    this._modTag = tag;\n  }\n\n  public String getModName() {\n    return _modName;\n  }\n\n  public String getModTag() {\n    return _modTag;\n  }\n\n  public String getDesc() {\n    return _desc;\n  }\n\n  public String getVersion() {\n    return _version;\n  }\n\n  public String getUrl() {\n    return _url;\n  }\n\n  public String[] getAuthors() {\n    return _authors;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ModMetadata \n.super java/lang/Object \n.field private _modName Ljava/lang/String; \n.field private _modTag Ljava/lang/String; \n.field private _desc Ljava/lang/String; \n.field private _version Ljava/lang/String; \n.field private _url Ljava/lang/String; \n.field private _authors [Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field ModMetadata _modName Ljava/lang/String; \nL9:     return \nL10:    \n        .linenumbertable \n            L0 13 \n            L4 14 \n            L9 15 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setAuthors : ([Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ModMetadata _authors [Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 19 \n            L5 20 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setURL : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ModMetadata _url Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 24 \n            L5 25 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setVersion : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ModMetadata _version Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 29 \n            L5 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setDesc : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ModMetadata _desc Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 34 \n            L5 35 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setTag : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ModMetadata _modTag Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 39 \n            L5 40 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getModName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ModMetadata _modName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 44 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getModTag : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ModMetadata _modTag Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 49 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getDesc : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ModMetadata _desc Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 54 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getVersion : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ModMetadata _version Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 59 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getUrl : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ModMetadata _url Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 64 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getAuthors : ()[Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ModMetadata _authors [Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 69 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ModMetadata.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 11:43:39 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ModMetadata_ESTest extends ModMetadata_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata(\"+in}3u^.Xj\");\n      modMetadata0.setVersion(\"\");\n      String string0 = modMetadata0.getVersion();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata(\"f!\");\n      modMetadata0.setURL(\"f!\");\n      String string0 = modMetadata0.getUrl();\n      assertEquals(\"f!\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata((String) null);\n      modMetadata0.setURL(\"\");\n      String string0 = modMetadata0.getUrl();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata(\"f!\");\n      modMetadata0.setTag(\"\");\n      String string0 = modMetadata0.getModTag();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata((String) null);\n      String string0 = modMetadata0.getModName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata(\"\");\n      String string0 = modMetadata0.getModName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata(\"\");\n      modMetadata0.setDesc(\"\");\n      String string0 = modMetadata0.getDesc();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata((String) null);\n      String[] stringArray0 = new String[8];\n      modMetadata0.setAuthors(stringArray0);\n      String[] stringArray1 = modMetadata0.getAuthors();\n      assertSame(stringArray1, stringArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata(\"f!\");\n      modMetadata0.setTag(\"f!\");\n      String string0 = modMetadata0.getModTag();\n      assertEquals(\"f!\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata(\"f!\");\n      String string0 = modMetadata0.getModName();\n      assertEquals(\"f!\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata(\"f!\");\n      String string0 = modMetadata0.getUrl();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata(\"f!\");\n      modMetadata0.setDesc(\"3Njys@kni9)P(xqX^\");\n      String string0 = modMetadata0.getDesc();\n      assertEquals(\"3Njys@kni9)P(xqX^\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata(\"f!\");\n      String[] stringArray0 = new String[0];\n      modMetadata0.setAuthors(stringArray0);\n      String[] stringArray1 = modMetadata0.getAuthors();\n      assertSame(stringArray1, stringArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata(\"f!\");\n      String string0 = modMetadata0.getDesc();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata(\"f!\");\n      String[] stringArray0 = modMetadata0.getAuthors();\n      assertNull(stringArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata(\"f!\");\n      modMetadata0.setVersion(\",6%C~3B3H&\");\n      String string0 = modMetadata0.getVersion();\n      assertEquals(\",6%C~3B3H&\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata(\"f!\");\n      String string0 = modMetadata0.getVersion();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      ModMetadata modMetadata0 = new ModMetadata(\"f!\");\n      String string0 = modMetadata0.getModTag();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 11:43:39 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ModMetadata_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ModMetadata\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp8wj0aqus\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ModMetadata_ESTest_scaffolding.class.getClassLoader() ,\n      \"ModMetadata\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ModMetadata_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ModMetadata\"\n    );\n  }\n}\n", "class_idx": 191}
{"class_name": "ConfigReader", "java_source": "// Package to read config file - Robin Nandi 06/05/2015\n\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Properties;\n\npublic class ConfigReader {\n\n  private Properties prop = new Properties();\n\n  public void readConfig() throws IOException {\n\n    String configFileName = \"config.properties\";\n\n    InputStream inputStream = getClass().getClassLoader().getResourceAsStream(configFileName);\n\n    if (inputStream != null) {\n      prop.load(inputStream);\n    } else {\n      throw new FileNotFoundException(\n          \"property file '\" + configFileName + \"' not found in the classpath\");\n    }\n  }\n\n  public String getPropertyValue(String propertyName) {\n\n    String result = \"\";\n\n    result = prop.getProperty(propertyName);\n\n    return result;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ConfigReader \n.super java/lang/Object \n.field private prop Ljava/util/Properties; \n\n.method public <init> : ()V \n    .code stack 3 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     new java/util/Properties \nL8:     dup \nL9:     invokespecial Method java/util/Properties <init> ()V \nL12:    putfield Field ConfigReader prop Ljava/util/Properties; \nL15:    return \nL16:    \n        .linenumbertable \n            L0 10 \n            L4 12 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public readConfig : ()V \n    .code stack 4 locals 3 \nL0:     ldc 'config.properties' \nL2:     astore_1 \nL3:     aload_0 \nL4:     invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL7:     invokevirtual Method java/lang/Class getClassLoader ()Ljava/lang/ClassLoader; \nL10:    aload_1 \nL11:    invokevirtual Method java/lang/ClassLoader getResourceAsStream (Ljava/lang/String;)Ljava/io/InputStream; \nL14:    astore_2 \nL15:    aload_2 \nL16:    ifnull L30 \nL19:    aload_0 \nL20:    getfield Field ConfigReader prop Ljava/util/Properties; \nL23:    aload_2 \nL24:    invokevirtual Method java/util/Properties load (Ljava/io/InputStream;)V \nL27:    goto L62 \n\n        .stack append Object java/lang/String Object java/io/InputStream \nL30:    new java/io/FileNotFoundException \nL33:    dup \nL34:    new java/lang/StringBuilder \nL37:    dup \nL38:    invokespecial Method java/lang/StringBuilder <init> ()V \nL41:    ldc \"property file '\" \nL43:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL46:    aload_1 \nL47:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL50:    ldc \"' not found in the classpath\" \nL52:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL55:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL58:    invokespecial Method java/io/FileNotFoundException <init> (Ljava/lang/String;)V \nL61:    athrow \n\n        .stack same \nL62:    return \nL63:    \n        .linenumbertable \n            L0 16 \n            L3 18 \n            L15 20 \n            L19 21 \n            L30 23 \n            L62 26 \n        .end linenumbertable \n    .end code \n    .exceptions java/io/IOException \n.end method \n\n.method public getPropertyValue : (Ljava/lang/String;)Ljava/lang/String; \n    .code stack 2 locals 3 \nL0:     ldc '' \nL2:     astore_2 \nL3:     aload_0 \nL4:     getfield Field ConfigReader prop Ljava/util/Properties; \nL7:     aload_1 \nL8:     invokevirtual Method java/util/Properties getProperty (Ljava/lang/String;)Ljava/lang/String; \nL11:    astore_2 \nL12:    aload_2 \nL13:    areturn \nL14:    \n        .linenumbertable \n            L0 30 \n            L3 32 \n            L12 34 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ConfigReader.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 05:51:33 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.io.FileNotFoundException;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ConfigReader_ESTest extends ConfigReader_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ConfigReader configReader0 = new ConfigReader();\n      try { \n        configReader0.readConfig();\n        fail(\"Expecting exception: FileNotFoundException\");\n      \n      } catch(FileNotFoundException e) {\n         //\n         // property file 'config.properties' not found in the classpath\n         //\n         verifyException(\"ConfigReader\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      ConfigReader configReader0 = new ConfigReader();\n      String string0 = configReader0.getPropertyValue(\" h*6X*v~kK -\");\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 05:51:33 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ConfigReader_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ConfigReader\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmprevp028t\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ConfigReader_ESTest_scaffolding.class.getClassLoader() ,\n      \"ConfigReader\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ConfigReader_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ConfigReader\"\n    );\n  }\n}\n", "class_idx": 192}
{"class_name": "Instance", "java_source": "class Instance {\n  private Runnable runnable;\n  private Long time;\n\n  public Instance(final Runnable runnable, final Long time) {\n    this.runnable = runnable;\n    this.time = time;\n  }\n\n  public Runnable getRunnable() {\n    return this.runnable;\n  }\n\n  public Long getTime() {\n    return this.time;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class super Instance \n.super java/lang/Object \n.field private runnable Ljava/lang/Runnable; \n.field private time Ljava/lang/Long; \n\n.method public <init> : (Ljava/lang/Runnable;Ljava/lang/Long;)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field Instance runnable Ljava/lang/Runnable; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field Instance time Ljava/lang/Long; \nL14:    return \nL15:    \n        .linenumbertable \n            L0 8 \n            L4 9 \n            L9 10 \n            L14 11 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getRunnable : ()Ljava/lang/Runnable; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Instance runnable Ljava/lang/Runnable; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 14 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getTime : ()Ljava/lang/Long; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Instance time Ljava/lang/Long; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 18 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Instance.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 02:15:02 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.lang.MockThread;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Instance_ESTest extends Instance_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Thread thread0 = MockThread.currentThread();\n      Instance instance0 = new Instance(thread0, (Long) null);\n      Long long0 = instance0.getTime();\n      assertNull(long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Thread thread0 = MockThread.currentThread();\n      Long long0 = new Long(14234L);\n      Instance instance0 = new Instance(thread0, long0);\n      Long long1 = instance0.getTime();\n      assertEquals(14234L, (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      MockThread mockThread0 = new MockThread(\"IpD't5KjiZg'\u007f#btqv\");\n      Long long0 = new Long(0L);\n      Instance instance0 = new Instance(mockThread0, long0);\n      Long long1 = instance0.getTime();\n      assertEquals(0L, (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Thread thread0 = MockThread.currentThread();\n      Long long0 = new Long((-79241L));\n      Instance instance0 = new Instance(thread0, long0);\n      Long long1 = instance0.getTime();\n      assertEquals((-79241L), (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Long long0 = new Long(70552L);\n      Instance instance0 = new Instance((Runnable) null, long0);\n      Runnable runnable0 = instance0.getRunnable();\n      assertNull(runnable0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      MockThread mockThread0 = new MockThread();\n      Long long0 = new Long(40682L);\n      Instance instance0 = new Instance(mockThread0, long0);\n      MockThread mockThread1 = (MockThread)instance0.getRunnable();\n      //  // Unstable assertion: assertFalse(mockThread1.isDaemon());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 02:15:02 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Instance_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Instance\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp_w9901h5\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Instance_ESTest_scaffolding.class.getClassLoader() ,\n      \"Instance\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Instance_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Instance\"\n    );\n  }\n}\n", "class_idx": 193}
{"class_name": "Multiply99Table1", "java_source": "public class Multiply99Table1 {\n\n  public static void main(String[] args) throws NumberFormatException {\n    // TODO Auto-generated method stub\n    String[] arr = {\"\u5341\", \"\u4e00\", \"\u4e8c\", \"\u4e09\", \"\u56db\", \"\u4e94\", \"\u516d\", \"\u4e03\", \"\u516b\", \"\u4e5d\"};\n\n    for (double i = 1; i <= 9; i++) {\n      for (double j = 1; j <= i; j++) {\n\n        double k = i * j;\n        if (k < 10) {\n          System.out.print(arr[(int) j] + arr[(int) i] + \"\u5f97\" + arr[(int) (i * j)]);\n        } else if (k > 10) {\n          String k1 = String.valueOf(k).toString().substring(0, 1);\n          String k2 = String.valueOf(k).toString().substring(1, 2);\n\n          System.out.print(\n              arr[(int) j]\n                  + arr[(int) i]\n                  + arr[Integer.valueOf(k1.trim())]\n                  + arr[Integer.valueOf(k2.trim())]);\n        }\n        System.out.print(\"\\t\");\n      }\n      System.out.println();\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Multiply99Table1 \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 2 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 7 locals 10 \nL0:     bipush 10 \nL2:     anewarray java/lang/String \nL5:     dup \nL6:     iconst_0 \nL7:     ldc '\u5341' \nL9:     aastore \nL10:    dup \nL11:    iconst_1 \nL12:    ldc '\u4e00' \nL14:    aastore \nL15:    dup \nL16:    iconst_2 \nL17:    ldc '\u4e8c' \nL19:    aastore \nL20:    dup \nL21:    iconst_3 \nL22:    ldc '\u4e09' \nL24:    aastore \nL25:    dup \nL26:    iconst_4 \nL27:    ldc '\u56db' \nL29:    aastore \nL30:    dup \nL31:    iconst_5 \nL32:    ldc '\u4e94' \nL34:    aastore \nL35:    dup \nL36:    bipush 6 \nL38:    ldc '\u516d' \nL40:    aastore \nL41:    dup \nL42:    bipush 7 \nL44:    ldc '\u4e03' \nL46:    aastore \nL47:    dup \nL48:    bipush 8 \nL50:    ldc '\u516b' \nL52:    aastore \nL53:    dup \nL54:    bipush 9 \nL56:    ldc '\u4e5d' \nL58:    aastore \nL59:    astore_1 \nL60:    dconst_1 \nL61:    dstore_2 \n\n        .stack append Object [Ljava/lang/String; Double \nL62:    dload_2 \nL63:    ldc2_w +9.0 \nL66:    dcmpg \nL67:    ifgt L276 \nL70:    dconst_1 \nL71:    dstore 4 \n\n        .stack append Double \nL73:    dload 4 \nL75:    dload_2 \nL76:    dcmpg \nL77:    ifgt L263 \nL80:    dload_2 \nL81:    dload 4 \nL83:    dmul \nL84:    dstore 6 \nL86:    dload 6 \nL88:    ldc2_w +10.0 \nL91:    dcmpg \nL92:    ifge L144 \nL95:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL98:    new java/lang/StringBuilder \nL101:   dup \nL102:   invokespecial Method java/lang/StringBuilder <init> ()V \nL105:   aload_1 \nL106:   dload 4 \nL108:   d2i \nL109:   aaload \nL110:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL113:   aload_1 \nL114:   dload_2 \nL115:   d2i \nL116:   aaload \nL117:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL120:   ldc '\u5f97' \nL122:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL125:   aload_1 \nL126:   dload_2 \nL127:   dload 4 \nL129:   dmul \nL130:   d2i \nL131:   aaload \nL132:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL135:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL138:   invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \nL141:   goto L246 \n\n        .stack append Double \nL144:   dload 6 \nL146:   ldc2_w +10.0 \nL149:   dcmpl \nL150:   ifle L246 \nL153:   dload 6 \nL155:   invokestatic Method java/lang/String valueOf (D)Ljava/lang/String; \nL158:   invokevirtual Method java/lang/String toString ()Ljava/lang/String; \nL161:   iconst_0 \nL162:   iconst_1 \nL163:   invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL166:   astore 8 \nL168:   dload 6 \nL170:   invokestatic Method java/lang/String valueOf (D)Ljava/lang/String; \nL173:   invokevirtual Method java/lang/String toString ()Ljava/lang/String; \nL176:   iconst_1 \nL177:   iconst_2 \nL178:   invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL181:   astore 9 \nL183:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL186:   new java/lang/StringBuilder \nL189:   dup \nL190:   invokespecial Method java/lang/StringBuilder <init> ()V \nL193:   aload_1 \nL194:   dload 4 \nL196:   d2i \nL197:   aaload \nL198:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL201:   aload_1 \nL202:   dload_2 \nL203:   d2i \nL204:   aaload \nL205:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL208:   aload_1 \nL209:   aload 8 \nL211:   invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL214:   invokestatic Method java/lang/Integer valueOf (Ljava/lang/String;)Ljava/lang/Integer; \nL217:   invokevirtual Method java/lang/Integer intValue ()I \nL220:   aaload \nL221:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL224:   aload_1 \nL225:   aload 9 \nL227:   invokevirtual Method java/lang/String trim ()Ljava/lang/String; \nL230:   invokestatic Method java/lang/Integer valueOf (Ljava/lang/String;)Ljava/lang/Integer; \nL233:   invokevirtual Method java/lang/Integer intValue ()I \nL236:   aaload \nL237:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL240:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL243:   invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \n\n        .stack same_extended \nL246:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL249:   ldc '\\t' \nL251:   invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \nL254:   dload 4 \nL256:   dconst_1 \nL257:   dadd \nL258:   dstore 4 \nL260:   goto L73 \n\n        .stack chop 2 \nL263:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL266:   invokevirtual Method java/io/PrintStream println ()V \nL269:   dload_2 \nL270:   dconst_1 \nL271:   dadd \nL272:   dstore_2 \nL273:   goto L62 \n\n        .stack chop 1 \nL276:   return \nL277:   \n        .linenumbertable \n            L0 6 \n            L60 8 \n            L70 10 \n            L80 13 \n            L86 14 \n            L95 16 \n            L144 18 \n            L153 20 \n            L168 21 \n            L183 23 \n            L246 26 \n            L254 10 \n            L263 28 \n            L269 8 \n            L276 30 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/NumberFormatException \n.end method \n.sourcefile 'Multiply99Table1.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 17:58:05 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Multiply99Table1_ESTest extends Multiply99Table1_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Multiply99Table1.main((String[]) null);\n      Multiply99Table1 multiply99Table1_0 = new Multiply99Table1();\n      Multiply99Table1.main((String[]) null);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 17:58:05 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Multiply99Table1_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Multiply99Table1\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp8898m2ky\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Multiply99Table1_ESTest_scaffolding.class.getClassLoader() ,\n      \"Multiply99Table1\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Multiply99Table1_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Multiply99Table1\"\n    );\n  }\n}\n", "class_idx": 194}
{"class_name": "Melissa", "java_source": "public class Melissa {\n\n  int num1;\n}\n", "jasm_code": ".version 52 0 \n.class public super Melissa \n.super java/lang/Object \n.field num1 I \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Melissa.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 07:27:20 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Melissa_ESTest extends Melissa_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Melissa melissa0 = new Melissa();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 07:27:20 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Melissa_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Melissa\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpujft3yoj\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Melissa_ESTest_scaffolding.class.getClassLoader() ,\n      \"Melissa\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Melissa_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Melissa\"\n    );\n  }\n}\n", "class_idx": 195}
{"class_name": "BookBean", "java_source": "public abstract class BookBean {}\n", "jasm_code": ".version 52 0 \n.class public super abstract BookBean \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'BookBean.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 06:46:47 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class BookBean_ESTest extends BookBean_ESTest_scaffolding {\n  @Test\n  public void notGeneratedAnyTest() {\n    // EvoSuite did not generate any tests\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 06:46:47 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class BookBean_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"BookBean\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    /*No java.lang.System property to set*/\n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BookBean_ESTest_scaffolding.class.getClassLoader() ,\n      \"BookBean\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BookBean_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"BookBean\"\n    );\n  }\n}\n", "class_idx": 196}
{"class_name": "XSDateTimeCustomBinder", "java_source": "import java.time.LocalDateTime;\n\npublic class XSDateTimeCustomBinder {\n\n  public static LocalDateTime parseDateTime(String s) {\n    if (s == null) {\n      return null;\n    }\n    return LocalDateTime.parse(s);\n  }\n\n  public static String printDateTime(LocalDateTime dateTime) {\n    if (dateTime == null) {\n      return null;\n    }\n    return dateTime.toString();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super XSDateTimeCustomBinder \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static parseDateTime : (Ljava/lang/String;)Ljava/time/LocalDateTime; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     ifnonnull L6 \nL4:     aconst_null \nL5:     areturn \n\n        .stack same \nL6:     aload_0 \nL7:     invokestatic Method java/time/LocalDateTime parse (Ljava/lang/CharSequence;)Ljava/time/LocalDateTime; \nL10:    areturn \nL11:    \n        .linenumbertable \n            L0 8 \n            L4 9 \n            L6 11 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static printDateTime : (Ljava/time/LocalDateTime;)Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     ifnonnull L6 \nL4:     aconst_null \nL5:     areturn \n\n        .stack same \nL6:     aload_0 \nL7:     invokevirtual Method java/time/LocalDateTime toString ()Ljava/lang/String; \nL10:    areturn \nL11:    \n        .linenumbertable \n            L0 15 \n            L4 16 \n            L6 18 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'XSDateTimeCustomBinder.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 08:20:19 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.time.LocalDateTime;\nimport java.time.ZonedDateTime;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.time.MockLocalDateTime;\nimport org.evosuite.runtime.mock.java.time.MockZonedDateTime;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class XSDateTimeCustomBinder_ESTest extends XSDateTimeCustomBinder_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      LocalDateTime localDateTime0 = XSDateTimeCustomBinder.parseDateTime(\"2014-02-14T20:21:21.320\");\n      assertNotNull(localDateTime0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      String string0 = XSDateTimeCustomBinder.printDateTime((LocalDateTime) null);\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();\n      LocalDateTime localDateTime0 = MockLocalDateTime.from(zonedDateTime0);\n      String string0 = XSDateTimeCustomBinder.printDateTime(localDateTime0);\n      assertEquals(\"2014-02-14T20:21:21.320\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      LocalDateTime localDateTime0 = XSDateTimeCustomBinder.parseDateTime((String) null);\n      assertNull(localDateTime0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      XSDateTimeCustomBinder xSDateTimeCustomBinder0 = new XSDateTimeCustomBinder();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 08:20:19 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class XSDateTimeCustomBinder_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"XSDateTimeCustomBinder\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp06f2ezus\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(XSDateTimeCustomBinder_ESTest_scaffolding.class.getClassLoader() ,\n      \"XSDateTimeCustomBinder\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(XSDateTimeCustomBinder_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"XSDateTimeCustomBinder\"\n    );\n  }\n}\n", "class_idx": 197}
{"class_name": "MediaUploadCompleteRequest", "java_source": "import java.io.Serializable;\n\npublic class MediaUploadCompleteRequest implements Serializable {\n\n  private final String url;\n  private final String parentDocumentId;\n  private final String name;\n\n  public MediaUploadCompleteRequest(String url, String parentDocumentId, String name) {\n    this.url = url;\n    this.parentDocumentId = parentDocumentId;\n    this.name = name;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public String getParentDocumentId() {\n    return parentDocumentId;\n  }\n\n  public String getUrl() {\n    return url;\n  }\n\n  @Override\n  public String toString() {\n    return \"MediaUploadCompleteRequest{\"\n        + \"url='\"\n        + url\n        + '\\''\n        + \", parentDocumentId='\"\n        + parentDocumentId\n        + '\\''\n        + \", name='\"\n        + name\n        + '\\''\n        + '}';\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super MediaUploadCompleteRequest \n.super java/lang/Object \n.implements java/io/Serializable \n.field private final url Ljava/lang/String; \n.field private final parentDocumentId Ljava/lang/String; \n.field private final name Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field MediaUploadCompleteRequest url Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field MediaUploadCompleteRequest parentDocumentId Ljava/lang/String; \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field MediaUploadCompleteRequest name Ljava/lang/String; \nL19:    return \nL20:    \n        .linenumbertable \n            L0 12 \n            L4 13 \n            L9 14 \n            L14 15 \n            L19 16 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field MediaUploadCompleteRequest name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 19 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getParentDocumentId : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field MediaUploadCompleteRequest parentDocumentId Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getUrl : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field MediaUploadCompleteRequest url Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 27 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     ldc \"MediaUploadCompleteRequest{url='\" \nL9:     invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL12:    aload_0 \nL13:    getfield Field MediaUploadCompleteRequest url Ljava/lang/String; \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 39 \nL21:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL24:    ldc \", parentDocumentId='\" \nL26:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL29:    aload_0 \nL30:    getfield Field MediaUploadCompleteRequest parentDocumentId Ljava/lang/String; \nL33:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL36:    bipush 39 \nL38:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL41:    ldc \", name='\" \nL43:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL46:    aload_0 \nL47:    getfield Field MediaUploadCompleteRequest name Ljava/lang/String; \nL50:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL53:    bipush 39 \nL55:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL58:    bipush 125 \nL60:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL63:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL66:    areturn \nL67:    \n        .linenumbertable \n            L0 32 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'MediaUploadCompleteRequest.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 23:01:26 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class MediaUploadCompleteRequest_ESTest extends MediaUploadCompleteRequest_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      MediaUploadCompleteRequest mediaUploadCompleteRequest0 = new MediaUploadCompleteRequest((String) null, (String) null, \"\");\n      String string0 = mediaUploadCompleteRequest0.getUrl();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      MediaUploadCompleteRequest mediaUploadCompleteRequest0 = new MediaUploadCompleteRequest(\">!~i@j:*&;Fx\", (String) null, \">!~i@j:*&;Fx\");\n      String string0 = mediaUploadCompleteRequest0.getUrl();\n      assertEquals(\">!~i@j:*&;Fx\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      MediaUploadCompleteRequest mediaUploadCompleteRequest0 = new MediaUploadCompleteRequest(\">!~i@j:*&;Fx\", (String) null, \">!~i@j:*&;Fx\");\n      String string0 = mediaUploadCompleteRequest0.getParentDocumentId();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      MediaUploadCompleteRequest mediaUploadCompleteRequest0 = new MediaUploadCompleteRequest(\">nS${uD~tEw\", \">nS${uD~tEw\", \">nS${uD~tEw\");\n      String string0 = mediaUploadCompleteRequest0.getParentDocumentId();\n      assertEquals(\">nS${uD~tEw\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      MediaUploadCompleteRequest mediaUploadCompleteRequest0 = new MediaUploadCompleteRequest(\"bd'7\", \"bd'7\", \"bd'7\");\n      String string0 = mediaUploadCompleteRequest0.getName();\n      assertEquals(\"bd'7\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      MediaUploadCompleteRequest mediaUploadCompleteRequest0 = new MediaUploadCompleteRequest(\"\", \"\", \"\");\n      String string0 = mediaUploadCompleteRequest0.getName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      MediaUploadCompleteRequest mediaUploadCompleteRequest0 = new MediaUploadCompleteRequest(\"\", \"\", (String) null);\n      String string0 = mediaUploadCompleteRequest0.getParentDocumentId();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      MediaUploadCompleteRequest mediaUploadCompleteRequest0 = new MediaUploadCompleteRequest(\"\", \"\", (String) null);\n      String string0 = mediaUploadCompleteRequest0.toString();\n      assertEquals(\"MediaUploadCompleteRequest{url='', parentDocumentId='', name='null'}\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      MediaUploadCompleteRequest mediaUploadCompleteRequest0 = new MediaUploadCompleteRequest(\"\", \"\", (String) null);\n      String string0 = mediaUploadCompleteRequest0.getName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test9()  throws Throwable  {\n      MediaUploadCompleteRequest mediaUploadCompleteRequest0 = new MediaUploadCompleteRequest(\"\", \"\", (String) null);\n      String string0 = mediaUploadCompleteRequest0.getUrl();\n      assertEquals(\"\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 23:01:26 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class MediaUploadCompleteRequest_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"MediaUploadCompleteRequest\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp5sdmarm8\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MediaUploadCompleteRequest_ESTest_scaffolding.class.getClassLoader() ,\n      \"MediaUploadCompleteRequest\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MediaUploadCompleteRequest_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"MediaUploadCompleteRequest\"\n    );\n  }\n}\n", "class_idx": 198}
{"class_name": "AuthenticationBean", "java_source": "public class AuthenticationBean {\n\n  private String message;\n\n  public AuthenticationBean(String message) {\n    this.message = message;\n  }\n\n  public String getMessage() {\n    return message;\n  }\n\n  public void setMessage(String message) {\n    this.message = message;\n  }\n\n  @Override\n  public String toString() {\n    return String.format(\"HelloWorldBean [message=%s]\", message);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super AuthenticationBean \n.super java/lang/Object \n.field private message Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field AuthenticationBean message Ljava/lang/String; \nL9:     return \nL10:    \n        .linenumbertable \n            L0 7 \n            L4 8 \n            L9 9 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getMessage : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field AuthenticationBean message Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 12 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setMessage : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field AuthenticationBean message Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 16 \n            L5 17 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 5 locals 1 \nL0:     ldc 'HelloWorldBean [message=%s]' \nL2:     iconst_1 \nL3:     anewarray java/lang/Object \nL6:     dup \nL7:     iconst_0 \nL8:     aload_0 \nL9:     getfield Field AuthenticationBean message Ljava/lang/String; \nL12:    aastore \nL13:    invokestatic Method java/lang/String format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; \nL16:    areturn \nL17:    \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'AuthenticationBean.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 11:47:18 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class AuthenticationBean_ESTest extends AuthenticationBean_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      AuthenticationBean authenticationBean0 = new AuthenticationBean(\"Fk'k6Hoz\");\n      authenticationBean0.getMessage();\n      authenticationBean0.toString();\n      String string0 = authenticationBean0.getMessage();\n      assertEquals(\"Fk'k6Hoz\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      AuthenticationBean authenticationBean0 = new AuthenticationBean((String) null);\n      String string0 = authenticationBean0.getMessage();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      AuthenticationBean authenticationBean0 = new AuthenticationBean(\"p@inJo~ke\");\n      authenticationBean0.setMessage(\"\");\n      String string0 = authenticationBean0.getMessage();\n      assertEquals(\"\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 11:47:18 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class AuthenticationBean_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"AuthenticationBean\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpef9eqhmi\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AuthenticationBean_ESTest_scaffolding.class.getClassLoader() ,\n      \"AuthenticationBean\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AuthenticationBean_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"AuthenticationBean\"\n    );\n  }\n}\n", "class_idx": 199}
{"class_name": "JobExecutionResult", "java_source": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport java.util.Map;\n\npublic class JobExecutionResult {\n\n  private long netRuntime;\n  private Map<String, Object> accumulatorResults;\n\n  public JobExecutionResult(long netRuntime, Map<String, Object> accumulators) {\n    this.netRuntime = netRuntime;\n    this.accumulatorResults = accumulators;\n  }\n\n  public long getNetRuntime() {\n    return this.netRuntime;\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  public <T> T getAccumulatorResult(String accumulatorName) {\n    return (T) this.accumulatorResults.get(accumulatorName);\n  }\n\n  public Map<String, Object> getAllAccumulatorResults() {\n    return this.accumulatorResults;\n  }\n\n  /**\n   * @param accumulatorName Name of the counter\n   * @return Result of the counter, or null if the counter does not exist\n   */\n  public Integer getIntCounterResult(String accumulatorName) {\n    Object result = this.accumulatorResults.get(accumulatorName);\n    if (result == null) {\n      return null;\n    }\n    if (!(result instanceof Integer)) {\n      throw new ClassCastException(\n          \"Requested result of the accumulator '\"\n              + accumulatorName\n              + \"' should be Integer but has type \"\n              + result.getClass());\n    }\n    return (Integer) result;\n  }\n\n  // TODO Create convenience methods for the other shipped accumulator types\n\n}\n", "jasm_code": ".version 52 0 \n.class public super JobExecutionResult \n.super java/lang/Object \n.field private netRuntime J \n.field private accumulatorResults Ljava/util/Map; .fieldattributes \n    .signature Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>; \n.end fieldattributes \n\n.method public <init> : (JLjava/util/Map;)V \n    .code stack 3 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     lload_1 \nL6:     putfield Field JobExecutionResult netRuntime J \nL9:     aload_0 \nL10:    aload_3 \nL11:    putfield Field JobExecutionResult accumulatorResults Ljava/util/Map; \nL14:    return \nL15:    \n        .linenumbertable \n            L0 29 \n            L4 30 \n            L9 31 \n            L14 32 \n        .end linenumbertable \n    .end code \n    .signature (JLjava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)V \n.end method \n\n.method public getNetRuntime : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field JobExecutionResult netRuntime J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 35 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getAccumulatorResult : (Ljava/lang/String;)Ljava/lang/Object; \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field JobExecutionResult accumulatorResults Ljava/util/Map; \nL4:     aload_1 \nL5:     invokeinterface InterfaceMethod java/util/Map get (Ljava/lang/Object;)Ljava/lang/Object; 2 \nL10:    areturn \nL11:    \n        .linenumbertable \n            L0 40 \n        .end linenumbertable \n    .end code \n    .signature '<T:Ljava/lang/Object;>(Ljava/lang/String;)TT;' \n.end method \n\n.method public getAllAccumulatorResults : ()Ljava/util/Map; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field JobExecutionResult accumulatorResults Ljava/util/Map; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 44 \n        .end linenumbertable \n    .end code \n    .signature ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>; \n.end method \n\n.method public getIntCounterResult : (Ljava/lang/String;)Ljava/lang/Integer; \n    .code stack 4 locals 3 \nL0:     aload_0 \nL1:     getfield Field JobExecutionResult accumulatorResults Ljava/util/Map; \nL4:     aload_1 \nL5:     invokeinterface InterfaceMethod java/util/Map get (Ljava/lang/Object;)Ljava/lang/Object; 2 \nL10:    astore_2 \nL11:    aload_2 \nL12:    ifnonnull L17 \nL15:    aconst_null \nL16:    areturn \n\n        .stack append Object java/lang/Object \nL17:    aload_2 \nL18:    instanceof java/lang/Integer \nL21:    ifne L63 \nL24:    new java/lang/ClassCastException \nL27:    dup \nL28:    new java/lang/StringBuilder \nL31:    dup \nL32:    invokespecial Method java/lang/StringBuilder <init> ()V \nL35:    ldc \"Requested result of the accumulator '\" \nL37:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL40:    aload_1 \nL41:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL44:    ldc \"' should be Integer but has type \" \nL46:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL49:    aload_2 \nL50:    invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL53:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/Object;)Ljava/lang/StringBuilder; \nL56:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL59:    invokespecial Method java/lang/ClassCastException <init> (Ljava/lang/String;)V \nL62:    athrow \n\n        .stack same \nL63:    aload_2 \nL64:    checkcast java/lang/Integer \nL67:    areturn \nL68:    \n        .linenumbertable \n            L0 53 \n            L11 54 \n            L15 55 \n            L17 57 \n            L24 58 \n            L50 59 \n            L63 61 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'JobExecutionResult.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 20:15:52 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class JobExecutionResult_ESTest extends JobExecutionResult_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n      hashMap0.put(\"\", \"\");\n      JobExecutionResult jobExecutionResult0 = new JobExecutionResult((-108327L), hashMap0);\n      // Undeclared exception!\n      try { \n        jobExecutionResult0.getIntCounterResult(\"\");\n        fail(\"Expecting exception: ClassCastException\");\n      \n      } catch(ClassCastException e) {\n         //\n         // Requested result of the accumulator '' should be Integer but has type class java.lang.String\n         //\n         verifyException(\"JobExecutionResult\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n      JobExecutionResult jobExecutionResult0 = new JobExecutionResult(34111L, hashMap0);\n      long long0 = jobExecutionResult0.getNetRuntime();\n      assertEquals(34111L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n      JobExecutionResult jobExecutionResult0 = new JobExecutionResult((-108327L), hashMap0);\n      long long0 = jobExecutionResult0.getNetRuntime();\n      assertEquals((-108327L), long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n      JobExecutionResult jobExecutionResult0 = new JobExecutionResult(34111L, hashMap0);\n      Integer integer0 = new Integer((-1));\n      hashMap0.put(\"\", integer0);\n      jobExecutionResult0.getIntCounterResult(\"\");\n      Integer integer1 = jobExecutionResult0.getIntCounterResult(\"\");\n      assertNotNull(integer1);\n      \n      long long0 = jobExecutionResult0.getNetRuntime();\n      assertEquals(34111L, long0);\n      \n      jobExecutionResult0.getIntCounterResult((String) null);\n      assertEquals(34111L, jobExecutionResult0.getNetRuntime());\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>(71833, 71833);\n      JobExecutionResult jobExecutionResult0 = new JobExecutionResult(100987L, hashMap0);\n      Integer integer0 = new Integer(0);\n      hashMap0.put(\"\", integer0);\n      Integer integer1 = jobExecutionResult0.getIntCounterResult(\"\");\n      assertNotNull(integer1);\n      assertEquals(100987L, jobExecutionResult0.getNetRuntime());\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n      JobExecutionResult jobExecutionResult0 = new JobExecutionResult(0L, hashMap0);\n      Integer integer0 = new Integer(26180);\n      hashMap0.put(\"\", integer0);\n      Integer integer1 = jobExecutionResult0.getIntCounterResult(\"\");\n      assertEquals(26180, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      JobExecutionResult jobExecutionResult0 = new JobExecutionResult(34128L, (Map<String, Object>) null);\n      jobExecutionResult0.getAllAccumulatorResults();\n      assertEquals(34128L, jobExecutionResult0.getNetRuntime());\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n      Integer integer0 = new Integer(16790);\n      hashMap0.put(\"\u007f=#][U\\\"q+\", integer0);\n      JobExecutionResult jobExecutionResult0 = new JobExecutionResult(0L, hashMap0);\n      Map<String, Object> map0 = jobExecutionResult0.getAllAccumulatorResults();\n      assertFalse(map0.isEmpty());\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n      Integer integer0 = new Integer(16790);\n      hashMap0.put(\"\u007f=#][U\\\"q+\", integer0);\n      JobExecutionResult jobExecutionResult0 = new JobExecutionResult(0L, hashMap0);\n      Integer integer1 = jobExecutionResult0.getAccumulatorResult(\"\u007f=#][U\\\"q+\");\n      assertEquals(16790, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n      JobExecutionResult jobExecutionResult0 = new JobExecutionResult(0L, hashMap0);\n      long long0 = jobExecutionResult0.getNetRuntime();\n      assertEquals(0L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n      JobExecutionResult jobExecutionResult0 = new JobExecutionResult(0L, hashMap0);\n      Map<String, Object> map0 = jobExecutionResult0.getAllAccumulatorResults();\n      assertTrue(map0.isEmpty());\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n      JobExecutionResult jobExecutionResult0 = new JobExecutionResult(0L, hashMap0);\n      Integer integer0 = jobExecutionResult0.getAccumulatorResult(\"\u007f=#][U\\\"q+\");\n      assertNull(integer0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 20:15:52 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class JobExecutionResult_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"JobExecutionResult\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpo1x5bj04\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JobExecutionResult_ESTest_scaffolding.class.getClassLoader() ,\n      \"JobExecutionResult\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JobExecutionResult_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"JobExecutionResult\"\n    );\n  }\n}\n", "class_idx": 200}
{"class_name": "ConstClass", "java_source": "/** Created with IntelliJ IDEA. Author: xiongjinteng@gmail.com Date: 2017/1/28 Time: 17:28 */\npublic class ConstClass {\n\n  static {\n    System.out.println(\"ConstClass init\");\n  }\n\n  static final String HELLOWORLD = \"hello world\";\n}\n\nclass ConstClassTest {\n  public static void main(String[] args) {\n    System.out.println(ConstClass.HELLOWORLD); // \u8c03\u7528\u7c7b\u5e38\u91cf\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ConstClass \n.super java/lang/Object \n.field static final HELLOWORLD Ljava/lang/String; = 'hello world' \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 9 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 2 locals 0 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     ldc 'ConstClass init' \nL5:     invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL8:     return \nL9:     \n        .linenumbertable \n            L0 12 \n            L8 13 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ConstClass.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 01:44:09 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ConstClass_ESTest extends ConstClass_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ConstClass constClass0 = new ConstClass();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 01:44:09 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ConstClass_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ConstClass\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpiitrhsll\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ConstClass_ESTest_scaffolding.class.getClassLoader() ,\n      \"ConstClass\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ConstClass_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ConstClass\"\n    );\n  }\n}\n", "class_idx": 201}
{"class_name": "FoodItem", "java_source": "public class FoodItem {\n  String name;\n  double calories;\n  double portionSize;\n  String portionUnits;\n  String code;\n\n  public FoodItem(\n      String name, double calories, double portionSize, String portionUnits, String code) {\n    this.name = name;\n    this.calories = calories;\n    this.portionSize = portionSize;\n    this.portionUnits = portionUnits;\n    this.code = code;\n  }\n\n  public String toString() {\n    return name\n        + \": \"\n        + calories\n        + \" calories (\"\n        + portionSize\n        + \" \"\n        + portionUnits\n        + \") #: \"\n        + code;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super FoodItem \n.super java/lang/Object \n.field name Ljava/lang/String; \n.field calories D \n.field portionSize D \n.field portionUnits Ljava/lang/String; \n.field code Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/String;DDLjava/lang/String;Ljava/lang/String;)V \n    .code stack 3 locals 8 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field FoodItem name Ljava/lang/String; \nL9:     aload_0 \nL10:    dload_2 \nL11:    putfield Field FoodItem calories D \nL14:    aload_0 \nL15:    dload 4 \nL17:    putfield Field FoodItem portionSize D \nL20:    aload_0 \nL21:    aload 6 \nL23:    putfield Field FoodItem portionUnits Ljava/lang/String; \nL26:    aload_0 \nL27:    aload 7 \nL29:    putfield Field FoodItem code Ljava/lang/String; \nL32:    return \nL33:    \n        .linenumbertable \n            L0 11 \n            L4 12 \n            L9 13 \n            L14 14 \n            L20 15 \n            L26 16 \n            L32 17 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 3 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     aload_0 \nL8:     getfield Field FoodItem name Ljava/lang/String; \nL11:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL14:    ldc ': ' \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    aload_0 \nL20:    getfield Field FoodItem calories D \nL23:    invokevirtual Method java/lang/StringBuilder append (D)Ljava/lang/StringBuilder; \nL26:    ldc ' calories (' \nL28:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL31:    aload_0 \nL32:    getfield Field FoodItem portionSize D \nL35:    invokevirtual Method java/lang/StringBuilder append (D)Ljava/lang/StringBuilder; \nL38:    ldc ' ' \nL40:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL43:    aload_0 \nL44:    getfield Field FoodItem portionUnits Ljava/lang/String; \nL47:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL50:    ldc ') #: ' \nL52:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL55:    aload_0 \nL56:    getfield Field FoodItem code Ljava/lang/String; \nL59:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL62:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL65:    areturn \nL66:    \n        .linenumbertable \n            L0 20 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'FoodItem.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 17:44:16 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class FoodItem_ESTest extends FoodItem_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      FoodItem foodItem0 = new FoodItem(\"&5t-SH9-Ipf\", 0.0, 0.0, \"&5t-SH9-Ipf\", \"&5t-SH9-Ipf\");\n      String string0 = foodItem0.toString();\n      assertEquals(\"&5t-SH9-Ipf: 0.0 calories (0.0 &5t-SH9-Ipf) #: &5t-SH9-Ipf\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 17:44:16 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class FoodItem_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"FoodItem\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpx9kf993v\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FoodItem_ESTest_scaffolding.class.getClassLoader() ,\n      \"FoodItem\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FoodItem_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"FoodItem\"\n    );\n  }\n}\n", "class_idx": 202}
{"class_name": "DeleteObjectTaggingResult", "java_source": "/*\n * Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n\n/** Contains all the information returned from performing a {@link DeleteObjectTaggingRequest}. */\npublic class DeleteObjectTaggingResult {\n  private String versionId;\n\n  /**\n   * @return The version of the object whose tags were deleted.\n   */\n  public String getVersionId() {\n    return versionId;\n  }\n\n  /**\n   * Set the version of the object whose tags were deleted.\n   *\n   * @param versionId The object version.\n   */\n  public void setVersionId(String versionId) {\n    this.versionId = versionId;\n  }\n\n  /**\n   * Set the version of the object whose tags were deleted.\n   *\n   * @param versionId The object version.\n   * @return This object for chaining.\n   */\n  public DeleteObjectTaggingResult withVersionId(String versionId) {\n    setVersionId(versionId);\n    return this;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super DeleteObjectTaggingResult \n.super java/lang/Object \n.field private versionId Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getVersionId : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DeleteObjectTaggingResult versionId Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setVersionId : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DeleteObjectTaggingResult versionId Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 38 \n            L5 39 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public withVersionId : (Ljava/lang/String;)LDeleteObjectTaggingResult; \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokevirtual Method DeleteObjectTaggingResult setVersionId (Ljava/lang/String;)V \nL5:     aload_0 \nL6:     areturn \nL7:     \n        .linenumbertable \n            L0 50 \n            L5 51 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'DeleteObjectTaggingResult.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 00:07:20 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class DeleteObjectTaggingResult_ESTest extends DeleteObjectTaggingResult_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      DeleteObjectTaggingResult deleteObjectTaggingResult0 = new DeleteObjectTaggingResult();\n      DeleteObjectTaggingResult deleteObjectTaggingResult1 = deleteObjectTaggingResult0.withVersionId(\"\");\n      String string0 = deleteObjectTaggingResult1.getVersionId();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      DeleteObjectTaggingResult deleteObjectTaggingResult0 = new DeleteObjectTaggingResult();\n      deleteObjectTaggingResult0.setVersionId(\"%(^aO $tsB%|C4<3\\\"\");\n      String string0 = deleteObjectTaggingResult0.getVersionId();\n      assertEquals(\"%(^aO $tsB%|C4<3\\\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      DeleteObjectTaggingResult deleteObjectTaggingResult0 = new DeleteObjectTaggingResult();\n      String string0 = deleteObjectTaggingResult0.getVersionId();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 00:07:20 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class DeleteObjectTaggingResult_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"DeleteObjectTaggingResult\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpyqztyjts\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DeleteObjectTaggingResult_ESTest_scaffolding.class.getClassLoader() ,\n      \"DeleteObjectTaggingResult\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DeleteObjectTaggingResult_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"DeleteObjectTaggingResult\"\n    );\n  }\n}\n", "class_idx": 203}
{"class_name": "CommitLogInterruptedException", "java_source": "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n * agreements. See the NOTICE file distributed with this work for additional information regarding\n * copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n * copy of the License at\n *\n * <p>http://www.apache.org/licenses/LICENSE-2.0\n *\n * <p>Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport java.io.IOException;\n\npublic class CommitLogInterruptedException extends IOException {\n  private static final long serialVersionUID = -8867068941023961744L;\n}\n", "jasm_code": ".version 52 0 \n.class public super CommitLogInterruptedException \n.super java/io/IOException \n.field private static final serialVersionUID J = -8867068941023961744L \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/io/IOException <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 22 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'CommitLogInterruptedException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 20:44:17 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CommitLogInterruptedException_ESTest extends CommitLogInterruptedException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      CommitLogInterruptedException commitLogInterruptedException0 = new CommitLogInterruptedException();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 20:44:17 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class CommitLogInterruptedException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CommitLogInterruptedException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpjsfy4zt4\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CommitLogInterruptedException_ESTest_scaffolding.class.getClassLoader() ,\n      \"CommitLogInterruptedException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CommitLogInterruptedException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CommitLogInterruptedException\"\n    );\n  }\n}\n", "class_idx": 204}
{"class_name": "InvalidVappException", "java_source": "/**\n * Copyright 2014 Telefonica Investigaci\u00f3n y Desarrollo, S.A.U <br>\n * This file is part of FI-WARE project.\n *\n * <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License.\n *\n * <p>You may obtain a copy of the License at:<br>\n * <br>\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * <p>Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied.\n *\n * <p>See the License for the specific language governing permissions and limitations under the\n * License.\n *\n * <p>For those usages not covered by the Apache version 2.0 License please contact with\n * opensource@tid.es\n */\n\n/**\n * @author jesus.movilla\n */\npublic class InvalidVappException extends Exception {\n\n  public InvalidVappException(String msg) {\n    super(msg);\n  }\n\n  public InvalidVappException(Throwable e) {\n    super(e);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super InvalidVappException \n.super java/lang/Exception \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 33 \n            L5 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/Throwable;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception <init> (Ljava/lang/Throwable;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 37 \n            L5 38 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'InvalidVappException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 15:47:22 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class InvalidVappException_ESTest extends InvalidVappException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      InvalidVappException invalidVappException0 = new InvalidVappException(\"j%OtBozD=O(&!F\u007fh^\");\n      InvalidVappException invalidVappException1 = new InvalidVappException(invalidVappException0);\n      assertFalse(invalidVappException1.equals((Object)invalidVappException0));\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 15:47:22 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class InvalidVappException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"InvalidVappException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpa_kxkiux\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(InvalidVappException_ESTest_scaffolding.class.getClassLoader() ,\n      \"InvalidVappException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(InvalidVappException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"InvalidVappException\"\n    );\n  }\n}\n", "class_idx": 205}
{"class_name": "SelfShouNumber", "java_source": "import java.util.Scanner;\n\npublic class SelfShouNumber {\n  private static Scanner sc;\n\n  public static void main(String[] args) {\n    sc = new Scanner(System.in);\n    int N = sc.nextInt();\n    System.out.println(calcAutomorphicNumbers(N));\n  }\n\n  private static int calcAutomorphicNumbers(int n) {\n    int count = 0;\n\n    for (int i = 0; i <= n; i++) {\n      String originalString = String.valueOf(i);\n      String squareString = String.valueOf((i * i));\n      String sub =\n          squareString.substring(\n              squareString.length() - originalString.length(), squareString.length());\n      if (sub.equals(originalString)) {\n        count++;\n      }\n    }\n    return count;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super SelfShouNumber \n.super java/lang/Object \n.field private static sc Ljava/util/Scanner; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     new java/util/Scanner \nL3:     dup \nL4:     getstatic Field java/lang/System in Ljava/io/InputStream; \nL7:     invokespecial Method java/util/Scanner <init> (Ljava/io/InputStream;)V \nL10:    putstatic Field SelfShouNumber sc Ljava/util/Scanner; \nL13:    getstatic Field SelfShouNumber sc Ljava/util/Scanner; \nL16:    invokevirtual Method java/util/Scanner nextInt ()I \nL19:    istore_1 \nL20:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL23:    iload_1 \nL24:    invokestatic Method SelfShouNumber calcAutomorphicNumbers (I)I \nL27:    invokevirtual Method java/io/PrintStream println (I)V \nL30:    return \nL31:    \n        .linenumbertable \n            L0 8 \n            L13 9 \n            L20 10 \n            L30 11 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private static calcAutomorphicNumbers : (I)I \n    .code stack 3 locals 6 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iconst_0 \nL3:     istore_2 \n\n        .stack append Integer Integer \nL4:     iload_2 \nL5:     iload_0 \nL6:     if_icmpgt L62 \nL9:     iload_2 \nL10:    invokestatic Method java/lang/String valueOf (I)Ljava/lang/String; \nL13:    astore_3 \nL14:    iload_2 \nL15:    iload_2 \nL16:    imul \nL17:    invokestatic Method java/lang/String valueOf (I)Ljava/lang/String; \nL20:    astore 4 \nL22:    aload 4 \nL24:    aload 4 \nL26:    invokevirtual Method java/lang/String length ()I \nL29:    aload_3 \nL30:    invokevirtual Method java/lang/String length ()I \nL33:    isub \nL34:    aload 4 \nL36:    invokevirtual Method java/lang/String length ()I \nL39:    invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL42:    astore 5 \nL44:    aload 5 \nL46:    aload_3 \nL47:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL50:    ifeq L56 \nL53:    iinc 1 1 \n\n        .stack same \nL56:    iinc 2 1 \nL59:    goto L4 \n\n        .stack chop 1 \nL62:    iload_1 \nL63:    ireturn \nL64:    \n        .linenumbertable \n            L0 13 \n            L2 15 \n            L9 16 \n            L14 17 \n            L22 18 \n            L44 19 \n            L53 20 \n            L56 15 \n            L62 23 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'SelfShouNumber.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 21:39:11 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.util.NoSuchElementException;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.util.SystemInUtil;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class SelfShouNumber_ESTest extends SelfShouNumber_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      SelfShouNumber selfShouNumber0 = new SelfShouNumber();\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      // Undeclared exception!\n      try { \n        SelfShouNumber.main((String[]) null);\n        fail(\"Expecting exception: NoSuchElementException\");\n      \n      } catch(NoSuchElementException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"java.util.Scanner\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      SystemInUtil.addInputLine((String) null);\n      SystemInUtil.addInputLine(\"5 C6 Ll}g@X%GB\");\n      SelfShouNumber selfShouNumber0 = new SelfShouNumber();\n      String[] stringArray0 = new String[4];\n      stringArray0[0] = \"SelfShouNumber\";\n      stringArray0[1] = \"oy<'>m6(.\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \")Ek\";\n      SelfShouNumber.main(stringArray0);\n      String[] stringArray1 = new String[6];\n      // Undeclared exception!\n      try { \n        SelfShouNumber.main(stringArray1);\n        fail(\"Expecting exception: NoSuchElementException\");\n      \n      } catch(NoSuchElementException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"java.util.Scanner\", e);\n      }\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 21:39:11 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class SelfShouNumber_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"SelfShouNumber\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n    org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp6zj09wh8\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SelfShouNumber_ESTest_scaffolding.class.getClassLoader() ,\n      \"SelfShouNumber\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SelfShouNumber_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"SelfShouNumber\"\n    );\n  }\n}\n", "class_idx": 206}
{"class_name": "Solution", "java_source": "import java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.PriorityQueue;\n\npublic class Solution {\n  public int scheduleCourse(int[][] courses) {\n    // sort by the closed on day\n    Arrays.sort(courses, Comparator.comparingInt(a -> a[1]));\n\n    PriorityQueue<Integer> queue = new PriorityQueue<>((o1, o2) -> Integer.compare(o2, o1));\n    int timeSoFar = 0;\n    for (int[] course : courses) {\n      timeSoFar += course[0];\n      queue.add(course[0]);\n      if (course[1] < timeSoFar) {\n        timeSoFar -= queue.poll();\n      }\n    }\n    return queue.size();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Solution \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 7 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public scheduleCourse : ([[I)I \n    .code stack 3 locals 8 \nL0:     aload_1 \nL1:     invokedynamic [id2] \nL6:     invokestatic InterfaceMethod java/util/Comparator comparingInt (Ljava/util/function/ToIntFunction;)Ljava/util/Comparator; \nL9:     invokestatic Method java/util/Arrays sort ([Ljava/lang/Object;Ljava/util/Comparator;)V \nL12:    new java/util/PriorityQueue \nL15:    dup \nL16:    invokedynamic [id6] \nL21:    invokespecial Method java/util/PriorityQueue <init> (Ljava/util/Comparator;)V \nL24:    astore_2 \nL25:    iconst_0 \nL26:    istore_3 \nL27:    aload_1 \nL28:    astore 4 \nL30:    aload 4 \nL32:    arraylength \nL33:    istore 5 \nL35:    iconst_0 \nL36:    istore 6 \n\n        .stack full \n            locals Object Solution Object [[I Object java/util/PriorityQueue Integer Object [[I Integer Integer \n            stack \n        .end stack \nL38:    iload 6 \nL40:    iload 5 \nL42:    if_icmpge L98 \nL45:    aload 4 \nL47:    iload 6 \nL49:    aaload \nL50:    astore 7 \nL52:    iload_3 \nL53:    aload 7 \nL55:    iconst_0 \nL56:    iaload \nL57:    iadd \nL58:    istore_3 \nL59:    aload_2 \nL60:    aload 7 \nL62:    iconst_0 \nL63:    iaload \nL64:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL67:    invokevirtual Method java/util/PriorityQueue add (Ljava/lang/Object;)Z \nL70:    pop \nL71:    aload 7 \nL73:    iconst_1 \nL74:    iaload \nL75:    iload_3 \nL76:    if_icmpge L92 \nL79:    iload_3 \nL80:    aload_2 \nL81:    invokevirtual Method java/util/PriorityQueue poll ()Ljava/lang/Object; \nL84:    checkcast java/lang/Integer \nL87:    invokevirtual Method java/lang/Integer intValue ()I \nL90:    isub \nL91:    istore_3 \n\n        .stack same \nL92:    iinc 6 1 \nL95:    goto L38 \n\n        .stack chop 3 \nL98:    aload_2 \nL99:    invokevirtual Method java/util/PriorityQueue size ()I \nL102:   ireturn \nL103:   \n        .linenumbertable \n            L0 10 \n            L12 12 \n            L25 13 \n            L27 14 \n            L52 15 \n            L59 16 \n            L71 17 \n            L79 18 \n            L92 14 \n            L98 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private static synthetic lambda$scheduleCourse$1 : (Ljava/lang/Integer;Ljava/lang/Integer;)I \n    .code stack 2 locals 2 \nL0:     aload_1 \nL1:     invokevirtual Method java/lang/Integer intValue ()I \nL4:     aload_0 \nL5:     invokevirtual Method java/lang/Integer intValue ()I \nL8:     invokestatic Method java/lang/Integer compare (II)I \nL11:    ireturn \nL12:    \n        .linenumbertable \n            L0 12 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private static synthetic lambda$scheduleCourse$0 : ([I)I \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     iconst_1 \nL2:     iaload \nL3:     ireturn \nL4:     \n        .linenumbertable \n            L0 10 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Solution.java' \n.innerclasses \n    java/lang/invoke/MethodHandles$Lookup java/lang/invoke/MethodHandles Lookup public static final \n.end innerclasses \n.const [id2] = InvokeDynamic invokeStatic Method java/lang/invoke/LambdaMetafactory metafactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite; MethodType (Ljava/lang/Object;)I MethodHandle invokeStatic Method Solution lambda$scheduleCourse$0 ([I)I MethodType ([I)I : applyAsInt ()Ljava/util/function/ToIntFunction; \n.const [id6] = InvokeDynamic invokeStatic Method java/lang/invoke/LambdaMetafactory metafactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite; MethodType (Ljava/lang/Object;Ljava/lang/Object;)I MethodHandle invokeStatic Method Solution lambda$scheduleCourse$1 (Ljava/lang/Integer;Ljava/lang/Integer;)I MethodType (Ljava/lang/Integer;Ljava/lang/Integer;)I : compare ()Ljava/util/Comparator; \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 12:35:54 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Solution_ESTest extends Solution_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Solution solution0 = new Solution();\n      int[][] intArray0 = new int[1][7];\n      int[] intArray1 = new int[2];\n      intArray1[0] = (-39552);\n      intArray0[0] = intArray1;\n      int int0 = solution0.scheduleCourse(intArray0);\n      assertEquals(1, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Solution solution0 = new Solution();\n      int[][] intArray0 = new int[1][9];\n      int[] intArray1 = new int[4];\n      intArray1[0] = 9519;\n      intArray0[0] = intArray1;\n      int int0 = solution0.scheduleCourse(intArray0);\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Solution solution0 = new Solution();\n      int[][] intArray0 = new int[1][6];\n      int[] intArray1 = new int[6];\n      intArray1[1] = (-1);\n      intArray0[0] = intArray1;\n      int int0 = solution0.scheduleCourse(intArray0);\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Solution solution0 = new Solution();\n      int[][] intArray0 = new int[1][6];\n      int int0 = solution0.scheduleCourse(intArray0);\n      assertEquals(1, int0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 12:35:54 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Solution_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Solution\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmppbm3xm_c\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Solution_ESTest_scaffolding.class.getClassLoader() ,\n      \"Solution\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Solution_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Solution\"\n    );\n  }\n}\n", "class_idx": 207}
{"class_name": "SGFont", "java_source": "/**\n * VSGC-3929 : compiler generating wrong checkcast.\n *\n * @subtest\n */\npublic class SGFont {\n  public float getAscent() {\n    return 1.0F;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super SGFont \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 7 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getAscent : ()F \n    .code stack 1 locals 1 \nL0:     fconst_1 \nL1:     freturn \nL2:     \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'SGFont.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 01:35:04 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class SGFont_ESTest extends SGFont_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      SGFont sGFont0 = new SGFont();\n      float float0 = sGFont0.getAscent();\n      assertEquals(1.0F, float0, 0.01F);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 01:35:04 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class SGFont_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"SGFont\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpygx7vs71\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SGFont_ESTest_scaffolding.class.getClassLoader() ,\n      \"SGFont\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SGFont_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"SGFont\"\n    );\n  }\n}\n", "class_idx": 208}
{"class_name": "BuildConfig", "java_source": "/** Automatically generated file. DO NOT MODIFY */\npublic final class BuildConfig {\n  public static final boolean DEBUG = true;\n}\n", "jasm_code": ".version 52 0 \n.class public final super BuildConfig \n.super java/lang/Object \n.field public static final DEBUG Z = 1 \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 4 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'BuildConfig.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 04:16:55 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class BuildConfig_ESTest extends BuildConfig_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      BuildConfig buildConfig0 = new BuildConfig();\n      assertTrue(BuildConfig.DEBUG);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 04:16:55 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class BuildConfig_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"BuildConfig\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpmuuacdd4\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BuildConfig_ESTest_scaffolding.class.getClassLoader() ,\n      \"BuildConfig\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BuildConfig_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"BuildConfig\"\n    );\n  }\n}\n", "class_idx": 209}
{"class_name": "MainClass", "java_source": "/*\n * Copyright (c) 2012-2018 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation\n */\n\npublic class MainClass {\n\n  public static void main(String[] args) {\n    // write your code here\n    String string = \"I love this game!\";\n    System.out.println(string);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super MainClass \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 14 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     ldc 'I love this game!' \nL2:     astore_1 \nL3:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL6:     aload_1 \nL7:     invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL10:    return \nL11:    \n        .linenumbertable \n            L0 18 \n            L3 19 \n            L10 22 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'MainClass.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 14:54:23 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class MainClass_ESTest extends MainClass_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      MainClass mainClass0 = new MainClass();\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      String[] stringArray0 = new String[4];\n      MainClass.main(stringArray0);\n      assertEquals(4, stringArray0.length);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 14:54:23 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class MainClass_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"MainClass\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpks_2t4n6\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MainClass_ESTest_scaffolding.class.getClassLoader() ,\n      \"MainClass\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MainClass_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"MainClass\"\n    );\n  }\n}\n", "class_idx": 210}
{"class_name": "AbstractIsSerializable", "java_source": "import java.io.Serializable;\n\npublic abstract class AbstractIsSerializable implements Serializable {\n\n  private static final long serialVersionUID = 1L;\n}\n", "jasm_code": ".version 52 0 \n.class public super abstract AbstractIsSerializable \n.super java/lang/Object \n.implements java/io/Serializable \n.field private static final serialVersionUID J = 1L \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'AbstractIsSerializable.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 11:21:23 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class AbstractIsSerializable_ESTest extends AbstractIsSerializable_ESTest_scaffolding {\n  @Test\n  public void notGeneratedAnyTest() {\n    // EvoSuite did not generate any tests\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 11:21:23 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class AbstractIsSerializable_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"AbstractIsSerializable\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    /*No java.lang.System property to set*/\n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractIsSerializable_ESTest_scaffolding.class.getClassLoader() ,\n      \"AbstractIsSerializable\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractIsSerializable_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"AbstractIsSerializable\"\n    );\n  }\n}\n", "class_idx": 211}
{"class_name": "Customer", "java_source": "public class Customer {\n\n  private String name;\n  private boolean greeted = false;\n\n  public Customer(String name) {\n    this.name = name;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public boolean isGreeted() {\n    return greeted;\n  }\n\n  public void setGreeted(boolean greeted) {\n    this.greeted = greeted;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Customer \n.super java/lang/Object \n.field private name Ljava/lang/String; \n.field private greeted Z \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iconst_0 \nL6:     putfield Field Customer greeted Z \nL9:     aload_0 \nL10:    aload_1 \nL11:    putfield Field Customer name Ljava/lang/String; \nL14:    return \nL15:    \n        .linenumbertable \n            L0 8 \n            L4 6 \n            L9 9 \n            L14 10 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Customer name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Customer name Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 17 \n            L5 18 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public isGreeted : ()Z \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Customer greeted Z \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setGreeted : (Z)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field Customer greeted Z \nL5:     return \nL6:     \n        .linenumbertable \n            L0 25 \n            L5 26 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Customer.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 09:49:03 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Customer_ESTest extends Customer_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Customer customer0 = new Customer(\"b\u007f|F%)9\");\n      assertFalse(customer0.isGreeted());\n      \n      customer0.setGreeted(true);\n      boolean boolean0 = customer0.isGreeted();\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Customer customer0 = new Customer((String) null);\n      customer0.getName();\n      assertFalse(customer0.isGreeted());\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Customer customer0 = new Customer(\"b\u007f|F%)9\");\n      customer0.setName(\"\");\n      customer0.getName();\n      assertFalse(customer0.isGreeted());\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Customer customer0 = new Customer(\"b\u007f|F%)9\");\n      boolean boolean0 = customer0.isGreeted();\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Customer customer0 = new Customer(\"b\u007f|F%)9\");\n      customer0.getName();\n      assertFalse(customer0.isGreeted());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 09:49:03 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Customer_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Customer\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpky4fg78z\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Customer_ESTest_scaffolding.class.getClassLoader() ,\n      \"Customer\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Customer_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Customer\"\n    );\n  }\n}\n", "class_idx": 212}
{"class_name": "PrettyMemoryUtils", "java_source": "/**\n * Copyright (c) 2005-2012 https://github.com/zhangkaitao\n *\n * <p>Licensed under the Apache License, Version 2.0 (the \"License\");\n */\n\n/**\n * User: Zhang Kaitao\n *\n * <p>Date: 13-6-2 \u4e0a\u53486:48\n *\n * <p>Version: 1.0\n */\npublic class PrettyMemoryUtils {\n\n  private static final int UNIT = 1024;\n\n  /**\n   * @param byteSize \u5b57\u8282\n   * @return\n   */\n  public static String prettyByteSize(long byteSize) {\n\n    double size = 1.0 * byteSize;\n\n    String type = \"B\";\n    if ((int) Math.floor(size / UNIT) <= 0) { // \u4e0d\u8db31KB\n      type = \"B\";\n      return format(size, type);\n    }\n\n    size = size / UNIT;\n    if ((int) Math.floor(size / UNIT) <= 0) { // \u4e0d\u8db31MB\n      type = \"KB\";\n      return format(size, type);\n    }\n\n    size = size / UNIT;\n    if ((int) Math.floor(size / UNIT) <= 0) { // \u4e0d\u8db31GB\n      type = \"MB\";\n      return format(size, type);\n    }\n\n    size = size / UNIT;\n    if ((int) Math.floor(size / UNIT) <= 0) { // \u4e0d\u8db31TB\n      type = \"GB\";\n      return format(size, type);\n    }\n\n    size = size / UNIT;\n    if ((int) Math.floor(size / UNIT) <= 0) { // \u4e0d\u8db31PB\n      type = \"TB\";\n      return format(size, type);\n    }\n\n    size = size / UNIT;\n    if ((int) Math.floor(size / UNIT) <= 0) {\n      type = \"PB\";\n      return format(size, type);\n    }\n    return \">PB\";\n  }\n\n  private static String format(double size, String type) {\n    int precision = 0;\n\n    if (size * 1000 % 10 > 0) {\n      precision = 3;\n    } else if (size * 100 % 10 > 0) {\n      precision = 2;\n    } else if (size * 10 % 10 > 0) {\n      precision = 1;\n    } else {\n      precision = 0;\n    }\n\n    String formatStr = \"%.\" + precision + \"f\";\n\n    if (\"KB\".equals(type)) {\n      return String.format(formatStr, (size)) + \"KB\";\n    } else if (\"MB\".equals(type)) {\n      return String.format(formatStr, (size)) + \"MB\";\n    } else if (\"GB\".equals(type)) {\n      return String.format(formatStr, (size)) + \"GB\";\n    } else if (\"TB\".equals(type)) {\n      return String.format(formatStr, (size)) + \"TB\";\n    } else if (\"PB\".equals(type)) {\n      return String.format(formatStr, (size)) + \"PB\";\n    }\n    return String.format(formatStr, (size)) + \"B\";\n  }\n\n  public static void main(String[] args) {\n    System.out.println(PrettyMemoryUtils.prettyByteSize(1023));\n    System.out.println(PrettyMemoryUtils.prettyByteSize(1L * UNIT));\n    System.out.println(PrettyMemoryUtils.prettyByteSize(1L * UNIT * UNIT));\n    System.out.println(PrettyMemoryUtils.prettyByteSize(1L * UNIT * 1023));\n    System.out.println(PrettyMemoryUtils.prettyByteSize(1L * 1023 * 1023 * 1023));\n    System.out.println(PrettyMemoryUtils.prettyByteSize(1L * UNIT * UNIT * UNIT));\n    System.out.println(PrettyMemoryUtils.prettyByteSize(1L * UNIT * UNIT * UNIT * UNIT));\n    System.out.println(PrettyMemoryUtils.prettyByteSize(1L * UNIT * UNIT * UNIT * UNIT * UNIT));\n    System.out.println(\n        PrettyMemoryUtils.prettyByteSize(1L * UNIT * UNIT * UNIT * UNIT * UNIT * UNIT));\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super PrettyMemoryUtils \n.super java/lang/Object \n.field private static final UNIT I = 1024 \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static prettyByteSize : (J)Ljava/lang/String; \n    .code stack 4 locals 5 \nL0:     dconst_1 \nL1:     lload_0 \nL2:     l2d \nL3:     dmul \nL4:     dstore_2 \nL5:     ldc 'B' \nL7:     astore 4 \nL9:     dload_2 \nL10:    ldc2_w +1024.0 \nL13:    ddiv \nL14:    invokestatic Method java/lang/Math floor (D)D \nL17:    d2i \nL18:    ifgt L32 \nL21:    ldc 'B' \nL23:    astore 4 \nL25:    dload_2 \nL26:    aload 4 \nL28:    invokestatic Method PrettyMemoryUtils format (DLjava/lang/String;)Ljava/lang/String; \nL31:    areturn \n\n        .stack append Double Object java/lang/String \nL32:    dload_2 \nL33:    ldc2_w +1024.0 \nL36:    ddiv \nL37:    dstore_2 \nL38:    dload_2 \nL39:    ldc2_w +1024.0 \nL42:    ddiv \nL43:    invokestatic Method java/lang/Math floor (D)D \nL46:    d2i \nL47:    ifgt L61 \nL50:    ldc 'KB' \nL52:    astore 4 \nL54:    dload_2 \nL55:    aload 4 \nL57:    invokestatic Method PrettyMemoryUtils format (DLjava/lang/String;)Ljava/lang/String; \nL60:    areturn \n\n        .stack same \nL61:    dload_2 \nL62:    ldc2_w +1024.0 \nL65:    ddiv \nL66:    dstore_2 \nL67:    dload_2 \nL68:    ldc2_w +1024.0 \nL71:    ddiv \nL72:    invokestatic Method java/lang/Math floor (D)D \nL75:    d2i \nL76:    ifgt L90 \nL79:    ldc 'MB' \nL81:    astore 4 \nL83:    dload_2 \nL84:    aload 4 \nL86:    invokestatic Method PrettyMemoryUtils format (DLjava/lang/String;)Ljava/lang/String; \nL89:    areturn \n\n        .stack same \nL90:    dload_2 \nL91:    ldc2_w +1024.0 \nL94:    ddiv \nL95:    dstore_2 \nL96:    dload_2 \nL97:    ldc2_w +1024.0 \nL100:   ddiv \nL101:   invokestatic Method java/lang/Math floor (D)D \nL104:   d2i \nL105:   ifgt L119 \nL108:   ldc 'GB' \nL110:   astore 4 \nL112:   dload_2 \nL113:   aload 4 \nL115:   invokestatic Method PrettyMemoryUtils format (DLjava/lang/String;)Ljava/lang/String; \nL118:   areturn \n\n        .stack same \nL119:   dload_2 \nL120:   ldc2_w +1024.0 \nL123:   ddiv \nL124:   dstore_2 \nL125:   dload_2 \nL126:   ldc2_w +1024.0 \nL129:   ddiv \nL130:   invokestatic Method java/lang/Math floor (D)D \nL133:   d2i \nL134:   ifgt L148 \nL137:   ldc 'TB' \nL139:   astore 4 \nL141:   dload_2 \nL142:   aload 4 \nL144:   invokestatic Method PrettyMemoryUtils format (DLjava/lang/String;)Ljava/lang/String; \nL147:   areturn \n\n        .stack same \nL148:   dload_2 \nL149:   ldc2_w +1024.0 \nL152:   ddiv \nL153:   dstore_2 \nL154:   dload_2 \nL155:   ldc2_w +1024.0 \nL158:   ddiv \nL159:   invokestatic Method java/lang/Math floor (D)D \nL162:   d2i \nL163:   ifgt L177 \nL166:   ldc 'PB' \nL168:   astore 4 \nL170:   dload_2 \nL171:   aload 4 \nL173:   invokestatic Method PrettyMemoryUtils format (DLjava/lang/String;)Ljava/lang/String; \nL176:   areturn \n\n        .stack same \nL177:   ldc '>PB' \nL179:   areturn \nL180:   \n        .linenumbertable \n            L0 23 \n            L5 25 \n            L9 26 \n            L21 27 \n            L25 28 \n            L32 31 \n            L38 32 \n            L50 33 \n            L54 34 \n            L61 37 \n            L67 38 \n            L79 39 \n            L83 40 \n            L90 43 \n            L96 44 \n            L108 45 \n            L112 46 \n            L119 49 \n            L125 50 \n            L137 51 \n            L141 52 \n            L148 55 \n            L154 56 \n            L166 57 \n            L170 58 \n            L177 60 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private static format : (DLjava/lang/String;)Ljava/lang/String; \n    .code stack 7 locals 5 \nL0:     iconst_0 \nL1:     istore_3 \nL2:     dload_0 \nL3:     ldc2_w +1000.0 \nL6:     dmul \nL7:     ldc2_w +10.0 \nL10:    drem \nL11:    dconst_0 \nL12:    dcmpl \nL13:    ifle L21 \nL16:    iconst_3 \nL17:    istore_3 \nL18:    goto L61 \n\n        .stack append Integer \nL21:    dload_0 \nL22:    ldc2_w +100.0 \nL25:    dmul \nL26:    ldc2_w +10.0 \nL29:    drem \nL30:    dconst_0 \nL31:    dcmpl \nL32:    ifle L40 \nL35:    iconst_2 \nL36:    istore_3 \nL37:    goto L61 \n\n        .stack same \nL40:    dload_0 \nL41:    ldc2_w +10.0 \nL44:    dmul \nL45:    ldc2_w +10.0 \nL48:    drem \nL49:    dconst_0 \nL50:    dcmpl \nL51:    ifle L59 \nL54:    iconst_1 \nL55:    istore_3 \nL56:    goto L61 \n\n        .stack same \nL59:    iconst_0 \nL60:    istore_3 \n\n        .stack same \nL61:    new java/lang/StringBuilder \nL64:    dup \nL65:    invokespecial Method java/lang/StringBuilder <init> ()V \nL68:    ldc '%.' \nL70:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL73:    iload_3 \nL74:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL77:    ldc 'f' \nL79:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL82:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL85:    astore 4 \nL87:    ldc 'KB' \nL89:    aload_2 \nL90:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL93:    ifeq L131 \nL96:    new java/lang/StringBuilder \nL99:    dup \nL100:   invokespecial Method java/lang/StringBuilder <init> ()V \nL103:   aload 4 \nL105:   iconst_1 \nL106:   anewarray java/lang/Object \nL109:   dup \nL110:   iconst_0 \nL111:   dload_0 \nL112:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL115:   aastore \nL116:   invokestatic Method java/lang/String format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; \nL119:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL122:   ldc 'KB' \nL124:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL127:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL130:   areturn \n\n        .stack append Object java/lang/String \nL131:   ldc 'MB' \nL133:   aload_2 \nL134:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL137:   ifeq L175 \nL140:   new java/lang/StringBuilder \nL143:   dup \nL144:   invokespecial Method java/lang/StringBuilder <init> ()V \nL147:   aload 4 \nL149:   iconst_1 \nL150:   anewarray java/lang/Object \nL153:   dup \nL154:   iconst_0 \nL155:   dload_0 \nL156:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL159:   aastore \nL160:   invokestatic Method java/lang/String format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; \nL163:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL166:   ldc 'MB' \nL168:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL171:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL174:   areturn \n\n        .stack same \nL175:   ldc 'GB' \nL177:   aload_2 \nL178:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL181:   ifeq L219 \nL184:   new java/lang/StringBuilder \nL187:   dup \nL188:   invokespecial Method java/lang/StringBuilder <init> ()V \nL191:   aload 4 \nL193:   iconst_1 \nL194:   anewarray java/lang/Object \nL197:   dup \nL198:   iconst_0 \nL199:   dload_0 \nL200:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL203:   aastore \nL204:   invokestatic Method java/lang/String format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; \nL207:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL210:   ldc 'GB' \nL212:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL215:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL218:   areturn \n\n        .stack same \nL219:   ldc 'TB' \nL221:   aload_2 \nL222:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL225:   ifeq L263 \nL228:   new java/lang/StringBuilder \nL231:   dup \nL232:   invokespecial Method java/lang/StringBuilder <init> ()V \nL235:   aload 4 \nL237:   iconst_1 \nL238:   anewarray java/lang/Object \nL241:   dup \nL242:   iconst_0 \nL243:   dload_0 \nL244:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL247:   aastore \nL248:   invokestatic Method java/lang/String format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; \nL251:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL254:   ldc 'TB' \nL256:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL259:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL262:   areturn \n\n        .stack same \nL263:   ldc 'PB' \nL265:   aload_2 \nL266:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL269:   ifeq L307 \nL272:   new java/lang/StringBuilder \nL275:   dup \nL276:   invokespecial Method java/lang/StringBuilder <init> ()V \nL279:   aload 4 \nL281:   iconst_1 \nL282:   anewarray java/lang/Object \nL285:   dup \nL286:   iconst_0 \nL287:   dload_0 \nL288:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL291:   aastore \nL292:   invokestatic Method java/lang/String format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; \nL295:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL298:   ldc 'PB' \nL300:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL303:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL306:   areturn \n\n        .stack same \nL307:   new java/lang/StringBuilder \nL310:   dup \nL311:   invokespecial Method java/lang/StringBuilder <init> ()V \nL314:   aload 4 \nL316:   iconst_1 \nL317:   anewarray java/lang/Object \nL320:   dup \nL321:   iconst_0 \nL322:   dload_0 \nL323:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL326:   aastore \nL327:   invokestatic Method java/lang/String format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; \nL330:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL333:   ldc 'B' \nL335:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL338:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL341:   areturn \nL342:   \n        .linenumbertable \n            L0 64 \n            L2 66 \n            L16 67 \n            L21 68 \n            L35 69 \n            L40 70 \n            L54 71 \n            L59 73 \n            L61 76 \n            L87 78 \n            L96 79 \n            L131 80 \n            L140 81 \n            L175 82 \n            L184 83 \n            L219 84 \n            L228 85 \n            L263 86 \n            L272 87 \n            L307 89 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     ldc2_w 1023L \nL6:     invokestatic Method PrettyMemoryUtils prettyByteSize (J)Ljava/lang/String; \nL9:     invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL12:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL15:    ldc2_w 1024L \nL18:    invokestatic Method PrettyMemoryUtils prettyByteSize (J)Ljava/lang/String; \nL21:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL24:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL27:    ldc2_w 1048576L \nL30:    invokestatic Method PrettyMemoryUtils prettyByteSize (J)Ljava/lang/String; \nL33:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL36:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL39:    ldc2_w 1047552L \nL42:    invokestatic Method PrettyMemoryUtils prettyByteSize (J)Ljava/lang/String; \nL45:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL48:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL51:    ldc2_w 1070599167L \nL54:    invokestatic Method PrettyMemoryUtils prettyByteSize (J)Ljava/lang/String; \nL57:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL60:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL63:    ldc2_w 1073741824L \nL66:    invokestatic Method PrettyMemoryUtils prettyByteSize (J)Ljava/lang/String; \nL69:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL72:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL75:    ldc2_w 1099511627776L \nL78:    invokestatic Method PrettyMemoryUtils prettyByteSize (J)Ljava/lang/String; \nL81:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL84:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL87:    ldc2_w 1125899906842624L \nL90:    invokestatic Method PrettyMemoryUtils prettyByteSize (J)Ljava/lang/String; \nL93:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL96:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL99:    ldc2_w 1152921504606846976L \nL102:   invokestatic Method PrettyMemoryUtils prettyByteSize (J)Ljava/lang/String; \nL105:   invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL108:   return \nL109:   \n        .linenumbertable \n            L0 93 \n            L12 94 \n            L24 95 \n            L36 96 \n            L48 97 \n            L60 98 \n            L72 99 \n            L84 100 \n            L96 101 \n            L108 102 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'PrettyMemoryUtils.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 08:41:44 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class PrettyMemoryUtils_ESTest extends PrettyMemoryUtils_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String[] stringArray0 = new String[1];\n      PrettyMemoryUtils.main(stringArray0);\n      PrettyMemoryUtils.prettyByteSize(2542L);\n      String string0 = PrettyMemoryUtils.prettyByteSize(0L);\n      assertEquals(\"0B\", string0);\n      \n      String string1 = PrettyMemoryUtils.prettyByteSize((-52806L));\n      assertEquals(\"-52806B\", string1);\n      \n      PrettyMemoryUtils.main((String[]) null);\n      String string2 = PrettyMemoryUtils.prettyByteSize(26212L);\n      assertEquals(\"25.598KB\", string2);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      String[] stringArray0 = new String[1];\n      PrettyMemoryUtils.main(stringArray0);\n      PrettyMemoryUtils.main((String[]) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      PrettyMemoryUtils.prettyByteSize(2542L);\n      PrettyMemoryUtils.main((String[]) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      String string0 = PrettyMemoryUtils.prettyByteSize(1099511627776L);\n      assertEquals(\"1TB\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      String string0 = PrettyMemoryUtils.prettyByteSize(1073741824L);\n      assertEquals(\"1GB\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      String string0 = PrettyMemoryUtils.prettyByteSize(1125899906842624L);\n      assertEquals(\"1PB\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      String string0 = PrettyMemoryUtils.prettyByteSize(1070599167L);\n      assertEquals(\"1021.003MB\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      PrettyMemoryUtils prettyMemoryUtils0 = new PrettyMemoryUtils();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 08:41:44 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class PrettyMemoryUtils_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"PrettyMemoryUtils\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpcqgfgqk6\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(PrettyMemoryUtils_ESTest_scaffolding.class.getClassLoader() ,\n      \"PrettyMemoryUtils\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(PrettyMemoryUtils_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"PrettyMemoryUtils\"\n    );\n  }\n}\n", "class_idx": 213}
{"class_name": "LuckyPermutation", "java_source": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\n/** Created by sundas on 2/28/2018. */\npublic class LuckyPermutation {\n\n  // https://www.hackerearth.com/practice/algorithms/graphs/hamiltonian-path/practice-problems/algorithm/micro-and-permutations/\n\n  /*\n    Micro is having a graph having N vertices numbered from 1 to N and M edges. All the edges are bidirectional. Micro wants to find out the number of lucky permutations in the graph.\n  A permutation of the vertices [v1,v2,v3,....,vn] is called lucky permutation, if for every vertex vi, where 1?i?N?1, there is an edge between vi and vi+1. Help Micro find out the number of lucky permutations in the graph.\n\n  Input:\n  First line consists of two space separated integers denoting N and M.\n  M lines follow each consisting of two space separated integers X and Y denoting there is an edge between vertices numbered X and Y.\n\n  Output:\n  Print the number of lucky permutations in the graph.\n\n  Constraints:\n  1?N?10\n  1?M?100\n  1?X,Y?N\n\n  SAMPLE INPUT\n  3 2\n  1 2\n  2 3\n  SAMPLE OUTPUT\n  2\n  Explanation\n  The two possible lucky permutations are 1-2-3 and 3-2-1.\n     */\n\n  /**\n   * @return\n   */\n  public static int countLuckyPermutation(int[][] edgeMatrix) {\n    int luckyPermutation = 0;\n    /*int[] inputVector = new int[edgeMatrix[0].length];\n    Integer[] converted = Arrays.stream(inputVector).boxed().toArray(Integer[]::new);*/\n    Integer[] converted = new Integer[edgeMatrix[0].length];\n    for (int i = 0; i < edgeMatrix[0].length; i++) {\n      converted[i] = i;\n    }\n    List<List<Integer>> allPermutations = generatePermutations(converted);\n    List<List<Integer>> permutationsOfLengthN = new ArrayList<>();\n    for (List<Integer> perm : allPermutations) {\n      if (perm.size() == edgeMatrix[0].length) {\n        permutationsOfLengthN.add(perm);\n      }\n    }\n    // System.out.println(permutationsOfLengthN);\n    for (List<Integer> perm : permutationsOfLengthN) {\n      boolean isLucky = true;\n      for (int i = 1; i < perm.size(); i++) {\n        if (edgeMatrix[perm.get(i)][perm.get(i - 1)] != 1) {\n          isLucky = false;\n          break;\n        }\n      }\n      if (isLucky) {\n        luckyPermutation++;\n      }\n    }\n    return luckyPermutation;\n  }\n\n  /**\n   * @param inputVector\n   * @return\n   */\n  public static List<List<Integer>> generatePermutations(Integer[] inputVector) {\n    List<Integer> workingVector = new ArrayList<>(Arrays.asList(inputVector));\n    // System.out.println(workingVector);\n    // for(int i = 0 ; i < workingVector.size() ; i++) {\n    List<List<Integer>> permutations = generatePermutationsRecursive(workingVector);\n    // }\n    return permutations;\n  }\n\n  /**\n   * @param workingVector\n   * @return\n   */\n  public static List<List<Integer>> generatePermutationsRecursive(List<Integer> workingVector) {\n    // System.out.println(workingVector);\n    /*\n    This is the base case I am adding a sort of an identifier so that this can be used at higher levels\n     */\n    if (workingVector.size() == 0) {\n      List<List<Integer>> baseCasePermutations = new ArrayList<>();\n      List<Integer> basecase = new ArrayList<>();\n      basecase.add(Integer.MIN_VALUE);\n      baseCasePermutations.add(basecase);\n      return baseCasePermutations;\n    }\n    List<List<Integer>> permutations = new ArrayList<>();\n    // Remove first element\n    Integer current = workingVector.remove(0);\n    List<List<Integer>> childPermutations = generatePermutationsRecursive(workingVector);\n    // System.out.println(childPermutations);\n    if (childPermutations.size() > 0) {\n      for (List<Integer> permutation : childPermutations) {\n        // System.out.println(permutation);\n        /*\n        Just append teh current to the list\n         */\n        if (permutation.size() == 1 && permutation.get(0) == Integer.MIN_VALUE) {\n          List<Integer> currentStage = new ArrayList<>();\n          currentStage.add(current);\n          permutations.add(currentStage);\n        } else {\n          /*\n          Append current to all indexes\n           */\n          for (int i = 0; i <= permutation.size(); i++) {\n            List<Integer> permutationAtThisLevel = new ArrayList<>(permutation);\n            permutationAtThisLevel.add(i, current);\n            permutations.add(permutationAtThisLevel);\n          }\n          // permutations.addAll(childPermutations);\n        }\n      }\n      permutations.addAll(childPermutations);\n      // System.out.println(permutations);\n    }\n    return permutations;\n  }\n\n  /**\n   * @param args\n   */\n  public static void main(String[] args) {\n    /*Scanner scanner = new Scanner(System.in);\n    int noOfVertices = scanner.nextInt();\n    int numberOfEdges = scanner.nextInt();\n    //This matrix will be used to check if path exists\n    int[][] edgeMatrix = new int[noOfVertices][noOfVertices];\n    for(int i = 0; i < numberOfEdges ; i++){\n      int source = scanner.nextInt();\n      int target = scanner.nextInt();\n      edgeMatrix[source - 1][target - 1] = 1;\n      edgeMatrix[target - 1][source - 1] = 1;\n    }\n    System.out.println(countLuckyPermutation(edgeMatrix));*/\n    /*Integer[]  inputVector = new Integer[]{1,2,3,4};\n    List<List<Integer>> permutations = generatePermutations(inputVector);\n    System.out.println(permutations.size());\n    System.out.println(permutations);*/\n    Scanner scanner = new Scanner(System.in);\n    int noOfVertices = scanner.nextInt();\n    int numberOfEdges = scanner.nextInt();\n    // This matrix will be used to check if path exists\n    int[][] edgeMatrix = new int[noOfVertices][noOfVertices];\n    for (int i = 0; i < numberOfEdges; i++) {\n      int source = scanner.nextInt();\n      int target = scanner.nextInt();\n      edgeMatrix[source - 1][target - 1] = 1;\n      edgeMatrix[target - 1][source - 1] = 1;\n    }\n    System.out.println(countLuckyPermutation(edgeMatrix));\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super LuckyPermutation \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static countLuckyPermutation : ([[I)I \n    .code stack 4 locals 9 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     aload_0 \nL3:     iconst_0 \nL4:     aaload \nL5:     arraylength \nL6:     anewarray java/lang/Integer \nL9:     astore_2 \nL10:    iconst_0 \nL11:    istore_3 \n\n        .stack append Integer Object [Ljava/lang/Integer; Integer \nL12:    iload_3 \nL13:    aload_0 \nL14:    iconst_0 \nL15:    aaload \nL16:    arraylength \nL17:    if_icmpge L33 \nL20:    aload_2 \nL21:    iload_3 \nL22:    iload_3 \nL23:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL26:    aastore \nL27:    iinc 3 1 \nL30:    goto L12 \n\n        .stack chop 1 \nL33:    aload_2 \nL34:    invokestatic Method LuckyPermutation generatePermutations ([Ljava/lang/Integer;)Ljava/util/List; \nL37:    astore_3 \nL38:    new java/util/ArrayList \nL41:    dup \nL42:    invokespecial Method java/util/ArrayList <init> ()V \nL45:    astore 4 \nL47:    aload_3 \nL48:    invokeinterface InterfaceMethod java/util/List iterator ()Ljava/util/Iterator; 1 \nL53:    astore 5 \n\n        .stack append Object java/util/List Object java/util/List Object java/util/Iterator \nL55:    aload 5 \nL57:    invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL62:    ifeq L104 \nL65:    aload 5 \nL67:    invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL72:    checkcast java/util/List \nL75:    astore 6 \nL77:    aload 6 \nL79:    invokeinterface InterfaceMethod java/util/List size ()I 1 \nL84:    aload_0 \nL85:    iconst_0 \nL86:    aaload \nL87:    arraylength \nL88:    if_icmpne L101 \nL91:    aload 4 \nL93:    aload 6 \nL95:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL100:   pop \n\n        .stack same \nL101:   goto L55 \n\n        .stack chop 1 \nL104:   aload 4 \nL106:   invokeinterface InterfaceMethod java/util/List iterator ()Ljava/util/Iterator; 1 \nL111:   astore 5 \n\n        .stack append Object java/util/Iterator \nL113:   aload 5 \nL115:   invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL120:   ifeq L215 \nL123:   aload 5 \nL125:   invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL130:   checkcast java/util/List \nL133:   astore 6 \nL135:   iconst_1 \nL136:   istore 7 \nL138:   iconst_1 \nL139:   istore 8 \n\n        .stack append Object java/util/List Integer Integer \nL141:   iload 8 \nL143:   aload 6 \nL145:   invokeinterface InterfaceMethod java/util/List size ()I 1 \nL150:   if_icmpge L204 \nL153:   aload_0 \nL154:   aload 6 \nL156:   iload 8 \nL158:   invokeinterface InterfaceMethod java/util/List get (I)Ljava/lang/Object; 2 \nL163:   checkcast java/lang/Integer \nL166:   invokevirtual Method java/lang/Integer intValue ()I \nL169:   aaload \nL170:   aload 6 \nL172:   iload 8 \nL174:   iconst_1 \nL175:   isub \nL176:   invokeinterface InterfaceMethod java/util/List get (I)Ljava/lang/Object; 2 \nL181:   checkcast java/lang/Integer \nL184:   invokevirtual Method java/lang/Integer intValue ()I \nL187:   iaload \nL188:   iconst_1 \nL189:   if_icmpeq L198 \nL192:   iconst_0 \nL193:   istore 7 \nL195:   goto L204 \n\n        .stack same \nL198:   iinc 8 1 \nL201:   goto L141 \n\n        .stack chop 1 \nL204:   iload 7 \nL206:   ifeq L212 \nL209:   iinc 1 1 \n\n        .stack chop 2 \nL212:   goto L113 \n\n        .stack chop 1 \nL215:   iload_1 \nL216:   ireturn \nL217:   \n        .linenumbertable \n            L0 48 \n            L2 51 \n            L10 52 \n            L20 53 \n            L27 52 \n            L33 55 \n            L38 56 \n            L47 57 \n            L77 58 \n            L91 59 \n            L101 61 \n            L104 63 \n            L135 64 \n            L138 65 \n            L153 66 \n            L192 67 \n            L195 68 \n            L198 65 \n            L204 71 \n            L209 72 \n            L212 74 \n            L215 75 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static generatePermutations : ([Ljava/lang/Integer;)Ljava/util/List; \n    .code stack 3 locals 3 \nL0:     new java/util/ArrayList \nL3:     dup \nL4:     aload_0 \nL5:     invokestatic Method java/util/Arrays asList ([Ljava/lang/Object;)Ljava/util/List; \nL8:     invokespecial Method java/util/ArrayList <init> (Ljava/util/Collection;)V \nL11:    astore_1 \nL12:    aload_1 \nL13:    invokestatic Method LuckyPermutation generatePermutationsRecursive (Ljava/util/List;)Ljava/util/List; \nL16:    astore_2 \nL17:    aload_2 \nL18:    areturn \nL19:    \n        .linenumbertable \n            L0 85 \n            L12 88 \n            L17 90 \n        .end linenumbertable \n    .end code \n    .signature ([Ljava/lang/Integer;)Ljava/util/List<Ljava/util/List<Ljava/lang/Integer;>;>; \n.end method \n\n.method public static generatePermutationsRecursive : (Ljava/util/List;)Ljava/util/List; \n    .code stack 3 locals 8 \nL0:     aload_0 \nL1:     invokeinterface InterfaceMethod java/util/List size ()I 1 \nL6:     ifne L47 \nL9:     new java/util/ArrayList \nL12:    dup \nL13:    invokespecial Method java/util/ArrayList <init> ()V \nL16:    astore_1 \nL17:    new java/util/ArrayList \nL20:    dup \nL21:    invokespecial Method java/util/ArrayList <init> ()V \nL24:    astore_2 \nL25:    aload_2 \nL26:    ldc -2147483648 \nL28:    invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL31:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL36:    pop \nL37:    aload_1 \nL38:    aload_2 \nL39:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL44:    pop \nL45:    aload_1 \nL46:    areturn \n\n        .stack same \nL47:    new java/util/ArrayList \nL50:    dup \nL51:    invokespecial Method java/util/ArrayList <init> ()V \nL54:    astore_1 \nL55:    aload_0 \nL56:    iconst_0 \nL57:    invokeinterface InterfaceMethod java/util/List remove (I)Ljava/lang/Object; 2 \nL62:    checkcast java/lang/Integer \nL65:    astore_2 \nL66:    aload_0 \nL67:    invokestatic Method LuckyPermutation generatePermutationsRecursive (Ljava/util/List;)Ljava/util/List; \nL70:    astore_3 \nL71:    aload_3 \nL72:    invokeinterface InterfaceMethod java/util/List size ()I 1 \nL77:    ifle L232 \nL80:    aload_3 \nL81:    invokeinterface InterfaceMethod java/util/List iterator ()Ljava/util/Iterator; 1 \nL86:    astore 4 \n\n        .stack full \n            locals Object java/util/List Object java/util/List Object java/lang/Integer Object java/util/List Object java/util/Iterator \n            stack \n        .end stack \nL88:    aload 4 \nL90:    invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL95:    ifeq L224 \nL98:    aload 4 \nL100:   invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL105:   checkcast java/util/List \nL108:   astore 5 \nL110:   aload 5 \nL112:   invokeinterface InterfaceMethod java/util/List size ()I 1 \nL117:   iconst_1 \nL118:   if_icmpne L170 \nL121:   aload 5 \nL123:   iconst_0 \nL124:   invokeinterface InterfaceMethod java/util/List get (I)Ljava/lang/Object; 2 \nL129:   checkcast java/lang/Integer \nL132:   invokevirtual Method java/lang/Integer intValue ()I \nL135:   ldc -2147483648 \nL137:   if_icmpne L170 \nL140:   new java/util/ArrayList \nL143:   dup \nL144:   invokespecial Method java/util/ArrayList <init> ()V \nL147:   astore 6 \nL149:   aload 6 \nL151:   aload_2 \nL152:   invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL157:   pop \nL158:   aload_1 \nL159:   aload 6 \nL161:   invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL166:   pop \nL167:   goto L221 \n\n        .stack append Object java/util/List \nL170:   iconst_0 \nL171:   istore 6 \n\n        .stack append Integer \nL173:   iload 6 \nL175:   aload 5 \nL177:   invokeinterface InterfaceMethod java/util/List size ()I 1 \nL182:   if_icmpgt L221 \nL185:   new java/util/ArrayList \nL188:   dup \nL189:   aload 5 \nL191:   invokespecial Method java/util/ArrayList <init> (Ljava/util/Collection;)V \nL194:   astore 7 \nL196:   aload 7 \nL198:   iload 6 \nL200:   aload_2 \nL201:   invokeinterface InterfaceMethod java/util/List add (ILjava/lang/Object;)V 3 \nL206:   aload_1 \nL207:   aload 7 \nL209:   invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL214:   pop \nL215:   iinc 6 1 \nL218:   goto L173 \n\n        .stack chop 2 \nL221:   goto L88 \n\n        .stack chop 1 \nL224:   aload_1 \nL225:   aload_3 \nL226:   invokeinterface InterfaceMethod java/util/List addAll (Ljava/util/Collection;)Z 2 \nL231:   pop \n\n        .stack same \nL232:   aload_1 \nL233:   areturn \nL234:   \n        .linenumbertable \n            L0 103 \n            L9 104 \n            L17 105 \n            L25 106 \n            L37 107 \n            L45 108 \n            L47 110 \n            L55 112 \n            L66 113 \n            L71 115 \n            L80 116 \n            L110 121 \n            L140 122 \n            L149 123 \n            L158 124 \n            L167 125 \n            L170 129 \n            L185 130 \n            L196 131 \n            L206 132 \n            L215 129 \n            L221 136 \n            L224 137 \n            L232 140 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/util/List<Ljava/lang/Integer;>;)Ljava/util/List<Ljava/util/List<Ljava/lang/Integer;>;>; \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 3 locals 8 \nL0:     new java/util/Scanner \nL3:     dup \nL4:     getstatic Field java/lang/System in Ljava/io/InputStream; \nL7:     invokespecial Method java/util/Scanner <init> (Ljava/io/InputStream;)V \nL10:    astore_1 \nL11:    aload_1 \nL12:    invokevirtual Method java/util/Scanner nextInt ()I \nL15:    istore_2 \nL16:    aload_1 \nL17:    invokevirtual Method java/util/Scanner nextInt ()I \nL20:    istore_3 \nL21:    iload_2 \nL22:    iload_2 \nL23:    multianewarray [[I 2 \nL27:    astore 4 \nL29:    iconst_0 \nL30:    istore 5 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object java/util/Scanner Integer Integer Object [[I Integer \n            stack \n        .end stack \nL32:    iload 5 \nL34:    iload_3 \nL35:    if_icmpge L82 \nL38:    aload_1 \nL39:    invokevirtual Method java/util/Scanner nextInt ()I \nL42:    istore 6 \nL44:    aload_1 \nL45:    invokevirtual Method java/util/Scanner nextInt ()I \nL48:    istore 7 \nL50:    aload 4 \nL52:    iload 6 \nL54:    iconst_1 \nL55:    isub \nL56:    aaload \nL57:    iload 7 \nL59:    iconst_1 \nL60:    isub \nL61:    iconst_1 \nL62:    iastore \nL63:    aload 4 \nL65:    iload 7 \nL67:    iconst_1 \nL68:    isub \nL69:    aaload \nL70:    iload 6 \nL72:    iconst_1 \nL73:    isub \nL74:    iconst_1 \nL75:    iastore \nL76:    iinc 5 1 \nL79:    goto L32 \n\n        .stack chop 1 \nL82:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL85:    aload 4 \nL87:    invokestatic Method LuckyPermutation countLuckyPermutation ([[I)I \nL90:    invokevirtual Method java/io/PrintStream println (I)V \nL93:    return \nL94:    \n        .linenumbertable \n            L0 165 \n            L11 166 \n            L16 167 \n            L21 169 \n            L29 170 \n            L38 171 \n            L44 172 \n            L50 173 \n            L63 174 \n            L76 170 \n            L82 176 \n            L93 177 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'LuckyPermutation.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 13:24:17 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.util.LinkedList;\nimport java.util.NoSuchElementException;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class LuckyPermutation_ESTest extends LuckyPermutation_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Integer[] integerArray0 = new Integer[0];\n      LuckyPermutation.generatePermutations(integerArray0);\n      int[][] intArray0 = new int[5][8];\n      int[] intArray1 = new int[1];\n      intArray1[0] = 48751;\n      intArray0[0] = intArray1;\n      int[] intArray2 = new int[0];\n      intArray0[1] = intArray2;\n      int[] intArray3 = new int[7];\n      intArray3[0] = Integer.MIN_VALUE;\n      intArray3[1] = 48751;\n      intArray3[2] = 48751;\n      intArray3[3] = 48751;\n      intArray3[4] = 48751;\n      intArray3[5] = 48751;\n      intArray3[6] = 48751;\n      intArray0[2] = intArray3;\n      int[] intArray4 = new int[4];\n      intArray4[0] = Integer.MIN_VALUE;\n      intArray4[1] = 48751;\n      intArray4[2] = 48751;\n      intArray4[3] = 48751;\n      intArray0[3] = intArray4;\n      int[] intArray5 = new int[0];\n      intArray0[4] = intArray5;\n      int int0 = LuckyPermutation.countLuckyPermutation(intArray0);\n      assertEquals(2, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Integer[] integerArray0 = new Integer[5];\n      Integer integer0 = new Integer(18540);\n      integerArray0[0] = integer0;\n      Integer integer1 = new Integer((int) integerArray0[0]);\n      integerArray0[1] = integer1;\n      Integer integer2 = new Integer(96642);\n      integerArray0[2] = integer2;\n      Integer.getInteger(\"^AG$opB|Z[Q!yfV\", (-14052));\n      Integer integer3 = new Integer((int) integerArray0[0]);\n      integerArray0[3] = integer3;\n      Integer integer4 = new Integer((int) integerArray0[0]);\n      Integer.getInteger(\"2S0}RT2B7Yu#MCPI7X\");\n      // Undeclared exception!\n      try { \n        Integer.divideUnsigned((-3166), 0);\n        fail(\"Expecting exception: ArithmeticException\");\n      \n      } catch(ArithmeticException e) {\n         //\n         // / by zero\n         //\n         verifyException(\"java.lang.Integer\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      LuckyPermutation luckyPermutation0 = new LuckyPermutation();\n      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n      LuckyPermutation.generatePermutationsRecursive(linkedList0);\n      String[] stringArray0 = new String[0];\n      // Undeclared exception!\n      try { \n        LuckyPermutation.main(stringArray0);\n        fail(\"Expecting exception: NoSuchElementException\");\n      \n      } catch(NoSuchElementException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"java.util.Scanner\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      LuckyPermutation luckyPermutation0 = new LuckyPermutation();\n      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n      Integer integer0 = new Integer((-5055));\n      linkedList0.add(integer0);\n      LuckyPermutation.generatePermutationsRecursive(linkedList0);\n      Integer[] integerArray0 = new Integer[6];\n      integerArray0[0] = integer0;\n      integerArray0[1] = integer0;\n      integerArray0[2] = integer0;\n      integerArray0[3] = integer0;\n      integerArray0[4] = integer0;\n      integerArray0[5] = integer0;\n      LuckyPermutation.generatePermutations(integerArray0);\n      int[][] intArray0 = new int[3][7];\n      int[] intArray1 = new int[3];\n      intArray1[0] = (int) integerArray0[4];\n      intArray1[1] = (int) integerArray0[1];\n      intArray1[2] = (int) integerArray0[0];\n      intArray0[0] = intArray1;\n      int[] intArray2 = new int[2];\n      intArray2[0] = (int) integerArray0[5];\n      intArray2[1] = (int) integerArray0[1];\n      intArray0[1] = intArray2;\n      int[] intArray3 = new int[7];\n      intArray3[0] = (-5055);\n      intArray3[1] = (int) integerArray0[0];\n      intArray3[2] = (int) integerArray0[5];\n      intArray3[3] = (int) integerArray0[2];\n      intArray3[4] = (-5055);\n      intArray3[5] = (int) integerArray0[3];\n      intArray3[6] = (int) integerArray0[3];\n      intArray0[2] = intArray3;\n      // Undeclared exception!\n      try { \n        LuckyPermutation.countLuckyPermutation(intArray0);\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // 2\n         //\n         verifyException(\"LuckyPermutation\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      LuckyPermutation luckyPermutation0 = new LuckyPermutation();\n      int[][] intArray0 = new int[7][5];\n      int[] intArray1 = new int[3];\n      intArray1[0] = 11862;\n      intArray1[1] = 0;\n      intArray1[2] = (-35032);\n      intArray0[0] = intArray1;\n      int[] intArray2 = new int[5];\n      intArray2[0] = 0;\n      intArray2[1] = 0;\n      intArray2[2] = 11862;\n      intArray2[3] = 11862;\n      intArray2[4] = (-35032);\n      intArray0[1] = intArray2;\n      int[] intArray3 = new int[6];\n      intArray3[0] = 11862;\n      intArray3[1] = 0;\n      intArray3[2] = (-35032);\n      intArray3[3] = (-35032);\n      intArray3[4] = (-73480);\n      intArray3[5] = 11862;\n      intArray0[2] = intArray3;\n      int[] intArray4 = new int[7];\n      intArray4[0] = 0;\n      intArray4[1] = (-35668);\n      intArray4[2] = 0;\n      intArray4[3] = (-73480);\n      intArray4[4] = 11862;\n      intArray4[5] = 0;\n      intArray4[6] = 11862;\n      intArray0[3] = intArray4;\n      int[] intArray5 = new int[5];\n      intArray5[0] = 0;\n      intArray5[1] = (-35668);\n      intArray5[2] = (-35032);\n      intArray5[3] = (-73480);\n      intArray5[4] = (-35032);\n      intArray0[4] = intArray5;\n      int[] intArray6 = new int[8];\n      intArray6[0] = (-73480);\n      intArray6[1] = (-35668);\n      intArray6[2] = 0;\n      intArray6[3] = 11862;\n      intArray6[4] = (-35032);\n      intArray6[5] = (-35668);\n      intArray6[6] = 11862;\n      intArray6[7] = (-73480);\n      intArray0[5] = intArray6;\n      int[] intArray7 = new int[6];\n      intArray7[0] = 11862;\n      intArray7[1] = 0;\n      intArray7[2] = (-73480);\n      intArray7[3] = (-35668);\n      intArray7[4] = 11862;\n      intArray7[5] = (-35668);\n      intArray0[6] = intArray7;\n      LuckyPermutation.countLuckyPermutation(intArray0);\n      String[] stringArray0 = new String[2];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"\";\n      // Undeclared exception!\n      try { \n        LuckyPermutation.main(stringArray0);\n        fail(\"Expecting exception: NoSuchElementException\");\n      \n      } catch(NoSuchElementException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"java.util.Scanner\", e);\n      }\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 13:24:17 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class LuckyPermutation_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"LuckyPermutation\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n    org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpfzg3k046\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(LuckyPermutation_ESTest_scaffolding.class.getClassLoader() ,\n      \"LuckyPermutation\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(LuckyPermutation_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"LuckyPermutation\"\n    );\n  }\n}\n", "class_idx": 214}
{"class_name": "Command", "java_source": "public class Command {\n  private int id = 0;\n  private String name;\n\n  public Command() {}\n\n  public Command(int id, String name) {\n    this.id = id;\n    this.name = name;\n  }\n\n  public int getId() {\n    return id;\n  }\n\n  public void setId(int id) {\n    this.id = id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  @Override\n  public String toString() {\n    return \"Command{\" + \"id=\" + id + \", name='\" + name + '\\'' + '}';\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Command \n.super java/lang/Object \n.field private id I \n.field private name Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iconst_0 \nL6:     putfield Field Command id I \nL9:     return \nL10:    \n        .linenumbertable \n            L0 7 \n            L4 4 \n            L9 8 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (ILjava/lang/String;)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iconst_0 \nL6:     putfield Field Command id I \nL9:     aload_0 \nL10:    iload_1 \nL11:    putfield Field Command id I \nL14:    aload_0 \nL15:    aload_2 \nL16:    putfield Field Command name Ljava/lang/String; \nL19:    return \nL20:    \n        .linenumbertable \n            L0 10 \n            L4 4 \n            L9 11 \n            L14 12 \n            L19 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getId : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Command id I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 16 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setId : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field Command id I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 20 \n            L5 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Command name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Command name Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 28 \n            L5 29 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     ldc 'Command{id=' \nL9:     invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL12:    aload_0 \nL13:    getfield Field Command id I \nL16:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL19:    ldc \", name='\" \nL21:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL24:    aload_0 \nL25:    getfield Field Command name Ljava/lang/String; \nL28:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL31:    bipush 39 \nL33:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL36:    bipush 125 \nL38:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL41:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL44:    areturn \nL45:    \n        .linenumbertable \n            L0 33 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Command.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 13:38:58 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Command_ESTest extends Command_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Command command0 = new Command((-7150), (String) null);\n      command0.setName(\"Command\");\n      command0.getName();\n      assertEquals((-7150), command0.getId());\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Command command0 = new Command(1, \"\");\n      command0.getName();\n      assertEquals(1, command0.getId());\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Command command0 = new Command((-19550), (String) null);\n      command0.setId(0);\n      int int0 = command0.getId();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Command command0 = new Command(1, \"\");\n      int int0 = command0.getId();\n      assertEquals(1, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Command command0 = new Command(1, \"\");\n      String string0 = command0.toString();\n      assertEquals(\"Command{id=1, name=''}\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Command command0 = new Command((-46), (String) null);\n      int int0 = command0.getId();\n      assertEquals((-46), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      Command command0 = new Command((-46), (String) null);\n      command0.getName();\n      assertEquals((-46), command0.getId());\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      Command command0 = new Command();\n      assertEquals(0, command0.getId());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 13:38:58 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Command_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Command\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpolagmr3o\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Command_ESTest_scaffolding.class.getClassLoader() ,\n      \"Command\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Command_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Command\"\n    );\n  }\n}\n", "class_idx": 215}
{"class_name": "PowerOfFour", "java_source": "public class PowerOfFour {\n  public boolean isPowerOfFour(int num) {\n    while (num != 0 && num % 4 == 0) num /= 4;\n    return num == 1;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super PowerOfFour \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 1 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public isPowerOfFour : (I)Z \n    .code stack 2 locals 2 \n\n        .stack same \nL0:     iload_1 \nL1:     ifeq L17 \nL4:     iload_1 \nL5:     iconst_4 \nL6:     irem \nL7:     ifne L17 \nL10:    iload_1 \nL11:    iconst_4 \nL12:    idiv \nL13:    istore_1 \nL14:    goto L0 \n\n        .stack same \nL17:    iload_1 \nL18:    iconst_1 \nL19:    if_icmpne L26 \nL22:    iconst_1 \nL23:    goto L27 \n\n        .stack same \nL26:    iconst_0 \n\n        .stack stack_1 Integer \nL27:    ireturn \nL28:    \n        .linenumbertable \n            L0 3 \n            L17 4 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'PowerOfFour.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 18:42:03 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class PowerOfFour_ESTest extends PowerOfFour_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      PowerOfFour powerOfFour0 = new PowerOfFour();\n      powerOfFour0.isPowerOfFour(4);\n      powerOfFour0.isPowerOfFour(4);\n      boolean boolean0 = powerOfFour0.isPowerOfFour(4);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      PowerOfFour powerOfFour0 = new PowerOfFour();\n      boolean boolean0 = powerOfFour0.isPowerOfFour(0);\n      assertFalse(boolean0);\n      \n      powerOfFour0.isPowerOfFour(0);\n      boolean boolean1 = powerOfFour0.isPowerOfFour(0);\n      assertFalse(boolean1);\n      \n      powerOfFour0.isPowerOfFour((-27710));\n      boolean boolean2 = powerOfFour0.isPowerOfFour((-27710));\n      assertFalse(boolean2);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      PowerOfFour powerOfFour0 = new PowerOfFour();\n      powerOfFour0.isPowerOfFour(17968);\n      powerOfFour0.isPowerOfFour((-1));\n      powerOfFour0.isPowerOfFour((-1));\n      powerOfFour0.isPowerOfFour(17968);\n      powerOfFour0.isPowerOfFour(17968);\n      powerOfFour0.isPowerOfFour(1);\n      powerOfFour0.isPowerOfFour(1);\n      powerOfFour0.isPowerOfFour((-1));\n      powerOfFour0.isPowerOfFour((-1));\n      powerOfFour0.isPowerOfFour(4915);\n      powerOfFour0.isPowerOfFour((-1));\n      powerOfFour0.isPowerOfFour(19349);\n      powerOfFour0.isPowerOfFour(0);\n      powerOfFour0.isPowerOfFour(0);\n      powerOfFour0.isPowerOfFour(2534);\n      boolean boolean0 = powerOfFour0.isPowerOfFour(4);\n      assertTrue(boolean0);\n      \n      powerOfFour0.isPowerOfFour(4915);\n      powerOfFour0.isPowerOfFour(19349);\n      powerOfFour0.isPowerOfFour(0);\n      powerOfFour0.isPowerOfFour(2534);\n      powerOfFour0.isPowerOfFour(17968);\n      boolean boolean1 = powerOfFour0.isPowerOfFour(0);\n      assertFalse(boolean1);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      PowerOfFour powerOfFour0 = new PowerOfFour();\n      powerOfFour0.isPowerOfFour(8470);\n      powerOfFour0.isPowerOfFour((-43425));\n      powerOfFour0.isPowerOfFour(8470);\n      boolean boolean0 = powerOfFour0.isPowerOfFour(8470);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      PowerOfFour powerOfFour0 = new PowerOfFour();\n      boolean boolean0 = powerOfFour0.isPowerOfFour((-1));\n      assertFalse(boolean0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 18:42:03 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class PowerOfFour_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"PowerOfFour\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpc1bfaekp\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(PowerOfFour_ESTest_scaffolding.class.getClassLoader() ,\n      \"PowerOfFour\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(PowerOfFour_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"PowerOfFour\"\n    );\n  }\n}\n", "class_idx": 216}
{"class_name": "DataStore", "java_source": "/*\n * Copyright 2015 Richard Thurston.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport java.util.UUID;\n\n/**\n * @author Richard Thurston\n */\npublic class DataStore implements Comparable<DataStore> {\n\n  private String dataStoreId;\n  private String name;\n  private String serviceId;\n  private String type;\n  private String environment;\n\n  public DataStore(String name, String serviceId, String type, String environment) {\n    this.dataStoreId = UUID.randomUUID().toString();\n    this.name = name;\n    this.serviceId = serviceId;\n    this.type = type;\n    this.environment = environment;\n  }\n\n  public String getDataStoreId() {\n    return dataStoreId;\n  }\n\n  public void setDataStoreId(String dataStoreId) {\n    this.dataStoreId = dataStoreId;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getServiceId() {\n    return serviceId;\n  }\n\n  public void setServiceId(String serviceId) {\n    this.serviceId = serviceId;\n  }\n\n  public String getType() {\n    return type;\n  }\n\n  public void setType(String type) {\n    this.type = type;\n  }\n\n  public String getEnvironment() {\n    return environment;\n  }\n\n  public void setEnvironment(String environment) {\n    this.environment = environment;\n  }\n\n  @Override\n  public int compareTo(DataStore o) {\n    return name.compareTo(o.name);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super DataStore \n.super java/lang/Object \n.implements java/lang/Comparable \n.field private dataStoreId Ljava/lang/String; \n.field private name Ljava/lang/String; \n.field private serviceId Ljava/lang/String; \n.field private type Ljava/lang/String; \n.field private environment Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 2 locals 5 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     invokestatic Method java/util/UUID randomUUID ()Ljava/util/UUID; \nL8:     invokevirtual Method java/util/UUID toString ()Ljava/lang/String; \nL11:    putfield Field DataStore dataStoreId Ljava/lang/String; \nL14:    aload_0 \nL15:    aload_1 \nL16:    putfield Field DataStore name Ljava/lang/String; \nL19:    aload_0 \nL20:    aload_2 \nL21:    putfield Field DataStore serviceId Ljava/lang/String; \nL24:    aload_0 \nL25:    aload_3 \nL26:    putfield Field DataStore type Ljava/lang/String; \nL29:    aload_0 \nL30:    aload 4 \nL32:    putfield Field DataStore environment Ljava/lang/String; \nL35:    return \nL36:    \n        .linenumbertable \n            L0 33 \n            L4 34 \n            L14 35 \n            L19 36 \n            L24 37 \n            L29 38 \n            L35 39 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getDataStoreId : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataStore dataStoreId Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 42 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setDataStoreId : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DataStore dataStoreId Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 46 \n            L5 47 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataStore name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 50 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DataStore name Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 54 \n            L5 55 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getServiceId : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataStore serviceId Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 58 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setServiceId : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DataStore serviceId Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 62 \n            L5 63 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getType : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataStore type Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 66 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setType : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DataStore type Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 70 \n            L5 71 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getEnvironment : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataStore environment Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 74 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setEnvironment : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DataStore environment Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 78 \n            L5 79 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public compareTo : (LDataStore;)I \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field DataStore name Ljava/lang/String; \nL4:     aload_1 \nL5:     getfield Field DataStore name Ljava/lang/String; \nL8:     invokevirtual Method java/lang/String compareTo (Ljava/lang/String;)I \nL11:    ireturn \nL12:    \n        .linenumbertable \n            L0 83 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public bridge synthetic compareTo : (Ljava/lang/Object;)I \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     checkcast DataStore \nL5:     invokevirtual Method DataStore compareTo (LDataStore;)I \nL8:     ireturn \nL9:     \n        .linenumbertable \n            L0 25 \n        .end linenumbertable \n    .end code \n.end method \n.signature Ljava/lang/Object;Ljava/lang/Comparable<LDataStore;>; \n.sourcefile 'DataStore.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 14:18:11 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class DataStore_ESTest extends DataStore_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\"DataStore\", (String) null, (String) null, \"DataStore\");\n      String string0 = dataStore0.getType();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\"lQdEf\", \"0 3|Qy $K6_+H\u007f#yU~X\", \"0E\", \"0@3\u007fS\");\n      String string0 = dataStore0.getType();\n      assertEquals(\"0E\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      DataStore dataStore0 = new DataStore((String) null, (String) null, (String) null, (String) null);\n      String string0 = dataStore0.getServiceId();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\"hQ`o6'(oD+b?}1Ek\", \".;DF\", (String) null, \" tO\");\n      String string0 = dataStore0.getServiceId();\n      assertEquals(\".;DF\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\"SI'\", (String) null, (String) null, \"\");\n      String string0 = dataStore0.getName();\n      assertEquals(\"SI'\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      DataStore dataStore0 = new DataStore((String) null, (String) null, (String) null, (String) null);\n      dataStore0.setName(\"\");\n      String string0 = dataStore0.getName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      DataStore dataStore0 = new DataStore((String) null, (String) null, (String) null, (String) null);\n      String string0 = dataStore0.getEnvironment();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\" o T,@\", \"pg\", \"\", \"DataStore\");\n      String string0 = dataStore0.getEnvironment();\n      assertEquals(\"DataStore\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\"lwLq]hFz7\", \"lwLq]hFz7\", \"lwLq]hFz7\", \")qfntf9\\\"wBw~\");\n      dataStore0.setDataStoreId((String) null);\n      String string0 = dataStore0.getDataStoreId();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\" o T,@\", \"pg\", \"\", \"DataStore\");\n      dataStore0.setDataStoreId(\"\");\n      String string0 = dataStore0.getDataStoreId();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\"Gg\", \"\", \"4zj]T2#ffUw/hOF'Uw}\", \"4zj]T2#ffUw/hOF'Uw}\");\n      DataStore dataStore1 = new DataStore(\"\", \"Q)V>H!vPY\\\"aIDS\", \"Q)V>H!vPY\\\"aIDS\", \"\");\n      int int0 = dataStore0.compareTo(dataStore1);\n      assertEquals(2, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\"\", \"Y@3#7}i5&R/ED=n\", \"\", \"He`[dhN)Vd3o T\");\n      DataStore dataStore1 = new DataStore(\"He`[dhN)Vd3o T\", (String) null, \"Y@3#7}i5&R/ED=n\", \"\");\n      int int0 = dataStore0.compareTo(dataStore1);\n      assertEquals((-14), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\"\", \"\", \"\", \"\");\n      String string0 = dataStore0.getEnvironment();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\"\", \"\", \"\", \"\");\n      String string0 = dataStore0.getType();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      DataStore dataStore0 = new DataStore((String) null, (String) null, (String) null, (String) null);\n      String string0 = dataStore0.getName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\"\", \"\", \"\", \"\");\n      dataStore0.setType(\"\");\n      assertEquals(\"\", dataStore0.getType());\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\"\", \"\", \"\", \"\");\n      String string0 = dataStore0.getServiceId();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\"\", \"\", \"\", \"\");\n      dataStore0.setEnvironment(\"?wPyL}a3_z\");\n      assertEquals(\"\", dataStore0.getServiceId());\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\"\", \"\", \"\", \"\");\n      dataStore0.setServiceId(\"\");\n      assertEquals(\"00000000-0100-4000-8200-000003000000\", dataStore0.getDataStoreId());\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\"\", \"\", \"\", \"\");\n      String string0 = dataStore0.getDataStoreId();\n      assertEquals(\"00000000-0100-4000-8200-000003000000\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      DataStore dataStore0 = new DataStore(\"\", \"\", \"\", \"\");\n      int int0 = dataStore0.compareTo(dataStore0);\n      assertEquals(0, int0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 14:18:11 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class DataStore_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"DataStore\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpxb3lr1aj\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DataStore_ESTest_scaffolding.class.getClassLoader() ,\n      \"DataStore\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DataStore_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"DataStore\"\n    );\n  }\n}\n", "class_idx": 217}
{"class_name": "Solution", "java_source": "/*\nAuthor:     King, wangjingui@outlook.com\nDate:       Dec 25, 2014\nProblem:    Edit Distance\nDifficulty: Medium\nSource:     https://oj.leetcode.com/problems/edit-distance/\nNotes:\nGiven two words word1 and word2, find the minimum number of steps required to convert word1 to word2. (each operation is counted as 1 step.)\nYou have the following 3 operations permitted on a word:\na) Insert a character\nb) Delete a character\nc) Replace a character\n\nSolution: Dynamic Programming.\n          1. Time: O(mn) Space: O(mn)\n          2. Time: O(mn) Space: O(n);\n*/\npublic class Solution {\n  public int minDistance_1(String word1, String word2) {\n    if (word1 == word2) return 0;\n    int len1 = word1.length();\n    int len2 = word2.length();\n    int[][] dp = new int[len1 + 1][len2 + 1];\n\n    for (int i = 0; i <= len1; i++) dp[i][0] = i;\n    for (int i = 0; i <= len2; i++) dp[0][i] = i;\n\n    for (int i = 1; i <= len1; i++) {\n      for (int j = 1; j <= len2; j++) {\n        if (word1.charAt(i - 1) == word2.charAt(j - 1)) dp[i][j] = dp[i - 1][j - 1];\n        else {\n          dp[i][j] = Math.min(dp[i - 1][j], Math.min(dp[i][j - 1], dp[i - 1][j - 1])) + 1;\n        }\n      }\n    }\n    return dp[len1][len2];\n  }\n\n  public int minDistance(String word1, String word2) {\n    if (word1 == word2) return 0;\n    int len1 = word1.length();\n    int len2 = word2.length();\n    int[] dp = new int[len2 + 1];\n\n    for (int i = 0; i <= len2; i++) dp[i] = i;\n\n    for (int i = 1; i <= len1; i++) {\n      int upperLeftBak = dp[0];\n      dp[0] = i;\n      for (int j = 1; j <= len2; j++) {\n        int upperLeft = upperLeftBak;\n        upperLeftBak = dp[j];\n        if (word1.charAt(i - 1) == word2.charAt(j - 1)) dp[j] = upperLeft;\n        else {\n          dp[j] = Math.min(dp[j], Math.min(dp[j - 1], upperLeft)) + 1;\n        }\n      }\n    }\n    return dp[len2];\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Solution \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 18 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public minDistance_1 : (Ljava/lang/String;Ljava/lang/String;)I \n    .code stack 7 locals 8 \nL0:     aload_1 \nL1:     aload_2 \nL2:     if_acmpne L7 \nL5:     iconst_0 \nL6:     ireturn \n\n        .stack same \nL7:     aload_1 \nL8:     invokevirtual Method java/lang/String length ()I \nL11:    istore_3 \nL12:    aload_2 \nL13:    invokevirtual Method java/lang/String length ()I \nL16:    istore 4 \nL18:    iload_3 \nL19:    iconst_1 \nL20:    iadd \nL21:    iload 4 \nL23:    iconst_1 \nL24:    iadd \nL25:    multianewarray [[I 2 \nL29:    astore 5 \nL31:    iconst_0 \nL32:    istore 6 \n\n        .stack full \n            locals Object Solution Object java/lang/String Object java/lang/String Integer Integer Object [[I Integer \n            stack \n        .end stack \nL34:    iload 6 \nL36:    iload_3 \nL37:    if_icmpgt L55 \nL40:    aload 5 \nL42:    iload 6 \nL44:    aaload \nL45:    iconst_0 \nL46:    iload 6 \nL48:    iastore \nL49:    iinc 6 1 \nL52:    goto L34 \n\n        .stack chop 1 \nL55:    iconst_0 \nL56:    istore 6 \n\n        .stack append Integer \nL58:    iload 6 \nL60:    iload 4 \nL62:    if_icmpgt L80 \nL65:    aload 5 \nL67:    iconst_0 \nL68:    aaload \nL69:    iload 6 \nL71:    iload 6 \nL73:    iastore \nL74:    iinc 6 1 \nL77:    goto L58 \n\n        .stack chop 1 \nL80:    iconst_1 \nL81:    istore 6 \n\n        .stack append Integer \nL83:    iload 6 \nL85:    iload_3 \nL86:    if_icmpgt L201 \nL89:    iconst_1 \nL90:    istore 7 \n\n        .stack append Integer \nL92:    iload 7 \nL94:    iload 4 \nL96:    if_icmpgt L195 \nL99:    aload_1 \nL100:   iload 6 \nL102:   iconst_1 \nL103:   isub \nL104:   invokevirtual Method java/lang/String charAt (I)C \nL107:   aload_2 \nL108:   iload 7 \nL110:   iconst_1 \nL111:   isub \nL112:   invokevirtual Method java/lang/String charAt (I)C \nL115:   if_icmpne L141 \nL118:   aload 5 \nL120:   iload 6 \nL122:   aaload \nL123:   iload 7 \nL125:   aload 5 \nL127:   iload 6 \nL129:   iconst_1 \nL130:   isub \nL131:   aaload \nL132:   iload 7 \nL134:   iconst_1 \nL135:   isub \nL136:   iaload \nL137:   iastore \nL138:   goto L189 \n\n        .stack same \nL141:   aload 5 \nL143:   iload 6 \nL145:   aaload \nL146:   iload 7 \nL148:   aload 5 \nL150:   iload 6 \nL152:   iconst_1 \nL153:   isub \nL154:   aaload \nL155:   iload 7 \nL157:   iaload \nL158:   aload 5 \nL160:   iload 6 \nL162:   aaload \nL163:   iload 7 \nL165:   iconst_1 \nL166:   isub \nL167:   iaload \nL168:   aload 5 \nL170:   iload 6 \nL172:   iconst_1 \nL173:   isub \nL174:   aaload \nL175:   iload 7 \nL177:   iconst_1 \nL178:   isub \nL179:   iaload \nL180:   invokestatic Method java/lang/Math min (II)I \nL183:   invokestatic Method java/lang/Math min (II)I \nL186:   iconst_1 \nL187:   iadd \nL188:   iastore \n\n        .stack same \nL189:   iinc 7 1 \nL192:   goto L92 \n\n        .stack chop 1 \nL195:   iinc 6 1 \nL198:   goto L83 \n\n        .stack chop 1 \nL201:   aload 5 \nL203:   iload_3 \nL204:   aaload \nL205:   iload 4 \nL207:   iaload \nL208:   ireturn \nL209:   \n        .linenumbertable \n            L0 20 \n            L7 21 \n            L12 22 \n            L18 23 \n            L31 25 \n            L40 26 \n            L49 25 \n            L55 27 \n            L65 28 \n            L74 27 \n            L80 30 \n            L89 31 \n            L99 32 \n            L141 34 \n            L189 31 \n            L195 30 \n            L201 38 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public minDistance : (Ljava/lang/String;Ljava/lang/String;)I \n    .code stack 6 locals 10 \nL0:     aload_1 \nL1:     aload_2 \nL2:     if_acmpne L7 \nL5:     iconst_0 \nL6:     ireturn \n\n        .stack same \nL7:     aload_1 \nL8:     invokevirtual Method java/lang/String length ()I \nL11:    istore_3 \nL12:    aload_2 \nL13:    invokevirtual Method java/lang/String length ()I \nL16:    istore 4 \nL18:    iload 4 \nL20:    iconst_1 \nL21:    iadd \nL22:    newarray int \nL24:    astore 5 \nL26:    iconst_0 \nL27:    istore 6 \n\n        .stack full \n            locals Object Solution Object java/lang/String Object java/lang/String Integer Integer Object [I Integer \n            stack \n        .end stack \nL29:    iload 6 \nL31:    iload 4 \nL33:    if_icmpgt L49 \nL36:    aload 5 \nL38:    iload 6 \nL40:    iload 6 \nL42:    iastore \nL43:    iinc 6 1 \nL46:    goto L29 \n\n        .stack chop 1 \nL49:    iconst_1 \nL50:    istore 6 \n\n        .stack append Integer \nL52:    iload 6 \nL54:    iload_3 \nL55:    if_icmpgt L159 \nL58:    aload 5 \nL60:    iconst_0 \nL61:    iaload \nL62:    istore 7 \nL64:    aload 5 \nL66:    iconst_0 \nL67:    iload 6 \nL69:    iastore \nL70:    iconst_1 \nL71:    istore 8 \n\n        .stack append Integer Integer \nL73:    iload 8 \nL75:    iload 4 \nL77:    if_icmpgt L153 \nL80:    iload 7 \nL82:    istore 9 \nL84:    aload 5 \nL86:    iload 8 \nL88:    iaload \nL89:    istore 7 \nL91:    aload_1 \nL92:    iload 6 \nL94:    iconst_1 \nL95:    isub \nL96:    invokevirtual Method java/lang/String charAt (I)C \nL99:    aload_2 \nL100:   iload 8 \nL102:   iconst_1 \nL103:   isub \nL104:   invokevirtual Method java/lang/String charAt (I)C \nL107:   if_icmpne L120 \nL110:   aload 5 \nL112:   iload 8 \nL114:   iload 9 \nL116:   iastore \nL117:   goto L147 \n\n        .stack append Integer \nL120:   aload 5 \nL122:   iload 8 \nL124:   aload 5 \nL126:   iload 8 \nL128:   iaload \nL129:   aload 5 \nL131:   iload 8 \nL133:   iconst_1 \nL134:   isub \nL135:   iaload \nL136:   iload 9 \nL138:   invokestatic Method java/lang/Math min (II)I \nL141:   invokestatic Method java/lang/Math min (II)I \nL144:   iconst_1 \nL145:   iadd \nL146:   iastore \n\n        .stack chop 1 \nL147:   iinc 8 1 \nL150:   goto L73 \n\n        .stack chop 2 \nL153:   iinc 6 1 \nL156:   goto L52 \n\n        .stack chop 1 \nL159:   aload 5 \nL161:   iload 4 \nL163:   iaload \nL164:   ireturn \nL165:   \n        .linenumbertable \n            L0 41 \n            L7 42 \n            L12 43 \n            L18 44 \n            L26 46 \n            L36 47 \n            L43 46 \n            L49 49 \n            L58 50 \n            L64 51 \n            L70 52 \n            L80 53 \n            L84 54 \n            L91 55 \n            L120 57 \n            L147 52 \n            L153 49 \n            L159 61 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Solution.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 19:46:52 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Solution_ESTest extends Solution_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Solution solution0 = new Solution();\n      solution0.minDistance_1(\"\", \"N*M4H\");\n      int int0 = solution0.minDistance(\"N*M4H\", \"\");\n      assertEquals(5, int0);\n      \n      solution0.minDistance_1(\"N*M4H\", \"\");\n      solution0.minDistance_1(\"\", \"\");\n      solution0.minDistance_1(\"\", \"[)wN6K-\");\n      int int1 = solution0.minDistance(\"N*M4H\", \"[)wN6K-\");\n      int int2 = solution0.minDistance(\":]ds\", \"N*M4H\");\n      solution0.minDistance(\"\", \"N*M4H\");\n      int int3 = solution0.minDistance_1(\"[)wN6K-\", \"\");\n      assertTrue(int3 == int1);\n      \n      solution0.minDistance(\"\", \"\");\n      int int4 = solution0.minDistance_1(\":]ds\", \"N*M4H\");\n      assertTrue(int4 == int2);\n      \n      solution0.minDistance(\":]ds\", \"\");\n      solution0.minDistance_1(\"\", \"[)wN6K-\");\n      solution0.minDistance(\":]ds\", \"\");\n      int int5 = solution0.minDistance(\"\", \"3l/V;|W_a\");\n      assertEquals(9, int5);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Solution solution0 = new Solution();\n      int int0 = solution0.minDistance(\"r<ky/TN_E~~a7$%wx\", \"r<ky/TN_E~~a7$%wx\");\n      solution0.minDistance(\"r<ky/TN_E~~a7$%wx\", \"r<ky/TN_E~~a7$%wx\");\n      solution0.minDistance(\"\", \"\");\n      solution0.minDistance(\"r<ky/TN_E~~a7$%wx\", \"r<ky/TN_E~~a7$%wx\");\n      int int1 = solution0.minDistance_1(\"\", \"\");\n      assertTrue(int1 == int0);\n      \n      int int2 = solution0.minDistance(\"\", \"nj@$ bpGT\");\n      assertEquals(9, int2);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String string0 = null;\n      solution0.minDistance((String) null, (String) null);\n      String string1 = \"b}2zijG^\";\n      // Undeclared exception!\n      try { \n        solution0.minDistance(\"b}2zijG^\", (String) null);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Solution solution0 = new Solution();\n      solution0.minDistance_1((String) null, (String) null);\n      // Undeclared exception!\n      try { \n        solution0.minDistance_1(\"zqR&]>\", (String) null);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Solution solution0 = new Solution();\n      solution0.minDistance(\"\", \"\");\n      solution0.minDistance(\"\", \"\");\n      solution0.minDistance(\"\", \"\");\n      solution0.minDistance_1(\"\", \"\");\n      solution0.minDistance(\"\", \"\");\n      solution0.minDistance_1(\"\", \"\");\n      solution0.minDistance(\"\", \"\");\n      solution0.minDistance(\"8pT&t0m:n@i};sl|Z}\", \"\");\n      int int0 = solution0.minDistance(\"\", \"\");\n      int int1 = solution0.minDistance_1(\"Solution\", \"\");\n      assertEquals(8, int1);\n      \n      solution0.minDistance_1(\"\", \"\");\n      int int2 = solution0.minDistance(\"\", \"\");\n      assertTrue(int2 == int0);\n      \n      int int3 = solution0.minDistance(\"AMe:_69rY:T(\", \"\");\n      assertEquals(12, int3);\n      \n      int int4 = solution0.minDistance_1(\"\", \"Nh{zP:=@m%L5cmH\");\n      assertEquals(15, int4);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String string0 = \"Solution\";\n      solution0.minDistance(\"Solution\", \"Solution\");\n      solution0.minDistance_1(\"Solution\", \"Solution\");\n      String string1 = null;\n      String string2 = \"\";\n      // Undeclared exception!\n      try { \n        solution0.minDistance_1((String) null, \"\");\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String string0 = \"n!S>;@rC\";\n      solution0.minDistance_1(\"n!S>;@rC\", \"n!S>;@rC\");\n      String string1 = \"pXn& oV\";\n      String string2 = \"thvbzPpvyw\";\n      solution0.minDistance_1(\"pXn& oV\", \"thvbzPpvyw\");\n      String string3 = null;\n      // Undeclared exception!\n      try { \n        solution0.minDistance_1((String) null, \"pXn& oV\");\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String string0 = null;\n      // Undeclared exception!\n      try { \n        solution0.minDistance(\"\", (String) null);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      Solution solution0 = new Solution();\n      solution0.minDistance_1(\"\", \"\");\n      int int0 = solution0.minDistance(\"\", \"\");\n      solution0.minDistance_1(\"\", \"\");\n      int int1 = solution0.minDistance_1(\"\", \"\");\n      assertTrue(int1 == int0);\n      \n      solution0.minDistance_1(\"]q$x\", \"\");\n      solution0.minDistance(\"|[zP[)IiI>t<y_5`\", \"\");\n      int int2 = solution0.minDistance_1(\"Solution\", \"Solution\");\n      assertEquals(0, int2);\n      \n      int int3 = solution0.minDistance(\"|[zP[)IiI>t<y_5`\", \"m/AY8i~YmH==GB 8\");\n      solution0.minDistance_1(\"nHN_Q;(y\u007fW\", \"]q$x\");\n      int int4 = solution0.minDistance(\"n?zuF4J_9\", \"\");\n      assertEquals(9, int4);\n      \n      solution0.minDistance(\"\", \"\");\n      solution0.minDistance_1(\"n?zuF4J_9\", \"Solution\");\n      solution0.minDistance(\"\", \"s5-m2Py!7#:\");\n      int int5 = solution0.minDistance_1(\"\", \"|[zP[)IiI>t<y_5`\");\n      assertTrue(int5 == int3);\n      \n      int int6 = solution0.minDistance_1(\"DI1 ]Wt/J#xr\\\"KE;$DS\", \"Qxi#=+FiAz~\");\n      assertEquals(18, int6);\n      \n      int int7 = solution0.minDistance(\"\", \"Solution\");\n      int int8 = solution0.minDistance_1(\"n?zuF4J_9\", \"Solution\");\n      assertTrue(int8 == int7);\n      assertEquals(8, int8);\n  }\n\n  @Test(timeout = 4000)\n  public void test9()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String string0 = \"\";\n      String string1 = null;\n      // Undeclared exception!\n      try { \n        solution0.minDistance(\"\", (String) null);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n      }\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 19:46:52 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Solution_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Solution\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpk12s0htz\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Solution_ESTest_scaffolding.class.getClassLoader() ,\n      \"Solution\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Solution_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Solution\"\n    );\n  }\n}\n", "class_idx": 218}
{"class_name": "NewSpecExample19", "java_source": "/*\n * jaspex-mls: a Java Software Speculative Parallelization Framework\n * Copyright (C) 2015 Ivo Anjo <ivo.anjo@ist.utl.pt>\n *\n * This file is part of jaspex-mls.\n *\n * jaspex-mls is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * jaspex-mls is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with jaspex-mls.  If not, see <http://www.gnu.org/licenses/>.\n */\n\npublic class NewSpecExample19 {\n  private NewSpecExample19() {}\n\n  static int doA() {\n    return 0;\n  }\n\n  @SuppressWarnings(\"unused\")\n  static void doSomething() {\n    int k = 0;\n    for (int i = doA(); k < 10; i++, k++) {\n      for (int j = 0; j > 0; j++) {\n        int kp = 0;\n        for (int ip = doA(); kp < 10; ip++, kp++) {\n          for (int jp = 0; jp > 0; jp++) {}\n          System.out.print(\",\");\n        }\n      }\n      System.out.print(\".\");\n    }\n  }\n\n  public static void main(String[] args) {\n    doSomething();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super NewSpecExample19 \n.super java/lang/Object \n\n.method private <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static doA : ()I \n    .code stack 1 locals 0 \nL0:     iconst_0 \nL1:     ireturn \nL2:     \n        .linenumbertable \n            L0 26 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static doSomething : ()V \n    .code stack 2 locals 6 \nL0:     iconst_0 \nL1:     istore_0 \nL2:     invokestatic Method NewSpecExample19 doA ()I \nL5:     istore_1 \n\n        .stack append Integer Integer \nL6:     iload_0 \nL7:     bipush 10 \nL9:     if_icmpge L85 \nL12:    iconst_0 \nL13:    istore_2 \n\n        .stack append Integer \nL14:    iload_2 \nL15:    ifle L68 \nL18:    iconst_0 \nL19:    istore_3 \nL20:    invokestatic Method NewSpecExample19 doA ()I \nL23:    istore 4 \n\n        .stack append Integer Integer \nL25:    iload_3 \nL26:    bipush 10 \nL28:    if_icmpge L62 \nL31:    iconst_0 \nL32:    istore 5 \n\n        .stack append Integer \nL34:    iload 5 \nL36:    ifle L45 \nL39:    iinc 5 1 \nL42:    goto L34 \n\n        .stack chop 1 \nL45:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL48:    ldc ',' \nL50:    invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \nL53:    iinc 4 1 \nL56:    iinc 3 1 \nL59:    goto L25 \n\n        .stack chop 2 \nL62:    iinc 2 1 \nL65:    goto L14 \n\n        .stack chop 1 \nL68:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL71:    ldc '.' \nL73:    invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \nL76:    iinc 1 1 \nL79:    iinc 0 1 \nL82:    goto L6 \n\n        .stack chop 1 \nL85:    return \nL86:    \n        .linenumbertable \n            L0 30 \n            L2 31 \n            L12 32 \n            L18 33 \n            L20 34 \n            L31 35 \n            L45 36 \n            L53 34 \n            L62 32 \n            L68 39 \n            L76 31 \n            L85 41 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 0 locals 1 \nL0:     invokestatic Method NewSpecExample19 doSomething ()V \nL3:     return \nL4:     \n        .linenumbertable \n            L0 44 \n            L3 45 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'NewSpecExample19.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 16:49:02 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class NewSpecExample19_ESTest extends NewSpecExample19_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      NewSpecExample19.doSomething();\n      NewSpecExample19.doSomething();\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      int int0 = NewSpecExample19.doA();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      String[] stringArray0 = new String[9];\n      NewSpecExample19.main(stringArray0);\n      assertEquals(9, stringArray0.length);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 16:49:02 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class NewSpecExample19_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"NewSpecExample19\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp0c_1nswv\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NewSpecExample19_ESTest_scaffolding.class.getClassLoader() ,\n      \"NewSpecExample19\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NewSpecExample19_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"NewSpecExample19\"\n    );\n  }\n}\n", "class_idx": 219}
{"class_name": "CacheItem", "java_source": "/**\n * @author:xingchaowang\n * @date: 2016/8/17.\n */\npublic class CacheItem {\n  private String id;\n  private String name;\n  private String pinyin;\n  private String chineseName;\n\n  public CacheItem() {}\n\n  public CacheItem(String id, String name, String pinyin) {\n    this.id = id;\n    this.name = name;\n    this.pinyin = pinyin;\n  }\n\n  public CacheItem(String id, String name, String pinyin, String chineseName) {\n    this.id = id;\n    this.name = name;\n    this.pinyin = pinyin;\n    this.chineseName = chineseName;\n  }\n\n  public String getId() {\n    return id;\n  }\n\n  public void setId(String id) {\n    this.id = id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getPinyin() {\n    return pinyin;\n  }\n\n  public void setPinyin(String pinyin) {\n    this.pinyin = pinyin;\n  }\n\n  public String getChineseName() {\n    return chineseName;\n  }\n\n  public void setChineseName(String chineseName) {\n    this.chineseName = chineseName;\n  }\n\n  @Override\n  public String toString() {\n    StringBuilder result = new StringBuilder(64);\n    result.append((id == null ? \"\" : id));\n    result.append(name == null ? \"\" : name);\n    result.append(pinyin == null ? \"\" : pinyin);\n    result.append(chineseName == null ? \"\" : chineseName);\n    return result.toString();\n  }\n\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof CacheItem)) return false;\n\n    CacheItem cacheItem = (CacheItem) o;\n\n    if (id != null ? !id.equals(cacheItem.id) : cacheItem.id != null) return false;\n    if (name != null ? !name.equals(cacheItem.name) : cacheItem.name != null) return false;\n    if (pinyin != null ? !pinyin.equals(cacheItem.pinyin) : cacheItem.pinyin != null) return false;\n    return chineseName != null\n        ? chineseName.equals(cacheItem.chineseName)\n        : cacheItem.chineseName == null;\n  }\n\n  @Override\n  public int hashCode() {\n    int result = id != null ? id.hashCode() : 0;\n    result = 31 * result + (name != null ? name.hashCode() : 0);\n    result = 31 * result + (pinyin != null ? pinyin.hashCode() : 0);\n    result = 31 * result + (chineseName != null ? chineseName.hashCode() : 0);\n    return result;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super CacheItem \n.super java/lang/Object \n.field private id Ljava/lang/String; \n.field private name Ljava/lang/String; \n.field private pinyin Ljava/lang/String; \n.field private chineseName Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 13 \n            L4 14 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field CacheItem id Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field CacheItem name Ljava/lang/String; \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field CacheItem pinyin Ljava/lang/String; \nL19:    return \nL20:    \n        .linenumbertable \n            L0 16 \n            L4 17 \n            L9 18 \n            L14 19 \n            L19 20 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 2 locals 5 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field CacheItem id Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field CacheItem name Ljava/lang/String; \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field CacheItem pinyin Ljava/lang/String; \nL19:    aload_0 \nL20:    aload 4 \nL22:    putfield Field CacheItem chineseName Ljava/lang/String; \nL25:    return \nL26:    \n        .linenumbertable \n            L0 22 \n            L4 23 \n            L9 24 \n            L14 25 \n            L19 26 \n            L25 27 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getId : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field CacheItem id Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setId : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field CacheItem id Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 34 \n            L5 35 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field CacheItem name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 38 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field CacheItem name Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 42 \n            L5 43 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPinyin : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field CacheItem pinyin Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPinyin : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field CacheItem pinyin Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 50 \n            L5 51 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getChineseName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field CacheItem chineseName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 54 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setChineseName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field CacheItem chineseName Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 58 \n            L5 59 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 3 locals 2 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     bipush 64 \nL6:     invokespecial Method java/lang/StringBuilder <init> (I)V \nL9:     astore_1 \nL10:    aload_1 \nL11:    aload_0 \nL12:    getfield Field CacheItem id Ljava/lang/String; \nL15:    ifnonnull L23 \nL18:    ldc '' \nL20:    goto L27 \n\n        .stack full \n            locals Object CacheItem Object java/lang/StringBuilder \n            stack Object java/lang/StringBuilder \n        .end stack \nL23:    aload_0 \nL24:    getfield Field CacheItem id Ljava/lang/String; \n\n        .stack full \n            locals Object CacheItem Object java/lang/StringBuilder \n            stack Object java/lang/StringBuilder Object java/lang/String \n        .end stack \nL27:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL30:    pop \nL31:    aload_1 \nL32:    aload_0 \nL33:    getfield Field CacheItem name Ljava/lang/String; \nL36:    ifnonnull L44 \nL39:    ldc '' \nL41:    goto L48 \n\n        .stack stack_1 Object java/lang/StringBuilder \nL44:    aload_0 \nL45:    getfield Field CacheItem name Ljava/lang/String; \n\n        .stack full \n            locals Object CacheItem Object java/lang/StringBuilder \n            stack Object java/lang/StringBuilder Object java/lang/String \n        .end stack \nL48:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL51:    pop \nL52:    aload_1 \nL53:    aload_0 \nL54:    getfield Field CacheItem pinyin Ljava/lang/String; \nL57:    ifnonnull L65 \nL60:    ldc '' \nL62:    goto L69 \n\n        .stack stack_1 Object java/lang/StringBuilder \nL65:    aload_0 \nL66:    getfield Field CacheItem pinyin Ljava/lang/String; \n\n        .stack full \n            locals Object CacheItem Object java/lang/StringBuilder \n            stack Object java/lang/StringBuilder Object java/lang/String \n        .end stack \nL69:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL72:    pop \nL73:    aload_1 \nL74:    aload_0 \nL75:    getfield Field CacheItem chineseName Ljava/lang/String; \nL78:    ifnonnull L86 \nL81:    ldc '' \nL83:    goto L90 \n\n        .stack stack_1 Object java/lang/StringBuilder \nL86:    aload_0 \nL87:    getfield Field CacheItem chineseName Ljava/lang/String; \n\n        .stack full \n            locals Object CacheItem Object java/lang/StringBuilder \n            stack Object java/lang/StringBuilder Object java/lang/String \n        .end stack \nL90:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL93:    pop \nL94:    aload_1 \nL95:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL98:    areturn \nL99:    \n        .linenumbertable \n            L0 63 \n            L10 64 \n            L31 65 \n            L52 66 \n            L73 67 \n            L94 68 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public equals : (Ljava/lang/Object;)Z \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     if_acmpne L7 \nL5:     iconst_1 \nL6:     ireturn \n\n        .stack same \nL7:     aload_1 \nL8:     instanceof CacheItem \nL11:    ifne L16 \nL14:    iconst_0 \nL15:    ireturn \n\n        .stack same \nL16:    aload_1 \nL17:    checkcast CacheItem \nL20:    astore_2 \nL21:    aload_0 \nL22:    getfield Field CacheItem id Ljava/lang/String; \nL25:    ifnull L45 \nL28:    aload_0 \nL29:    getfield Field CacheItem id Ljava/lang/String; \nL32:    aload_2 \nL33:    getfield Field CacheItem id Ljava/lang/String; \nL36:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL39:    ifne L54 \nL42:    goto L52 \n\n        .stack append Object CacheItem \nL45:    aload_2 \nL46:    getfield Field CacheItem id Ljava/lang/String; \nL49:    ifnull L54 \n\n        .stack same \nL52:    iconst_0 \nL53:    ireturn \n\n        .stack same \nL54:    aload_0 \nL55:    getfield Field CacheItem name Ljava/lang/String; \nL58:    ifnull L78 \nL61:    aload_0 \nL62:    getfield Field CacheItem name Ljava/lang/String; \nL65:    aload_2 \nL66:    getfield Field CacheItem name Ljava/lang/String; \nL69:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL72:    ifne L87 \nL75:    goto L85 \n\n        .stack same \nL78:    aload_2 \nL79:    getfield Field CacheItem name Ljava/lang/String; \nL82:    ifnull L87 \n\n        .stack same \nL85:    iconst_0 \nL86:    ireturn \n\n        .stack same \nL87:    aload_0 \nL88:    getfield Field CacheItem pinyin Ljava/lang/String; \nL91:    ifnull L111 \nL94:    aload_0 \nL95:    getfield Field CacheItem pinyin Ljava/lang/String; \nL98:    aload_2 \nL99:    getfield Field CacheItem pinyin Ljava/lang/String; \nL102:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL105:   ifne L120 \nL108:   goto L118 \n\n        .stack same \nL111:   aload_2 \nL112:   getfield Field CacheItem pinyin Ljava/lang/String; \nL115:   ifnull L120 \n\n        .stack same \nL118:   iconst_0 \nL119:   ireturn \n\n        .stack same \nL120:   aload_0 \nL121:   getfield Field CacheItem chineseName Ljava/lang/String; \nL124:   ifnull L141 \nL127:   aload_0 \nL128:   getfield Field CacheItem chineseName Ljava/lang/String; \nL131:   aload_2 \nL132:   getfield Field CacheItem chineseName Ljava/lang/String; \nL135:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL138:   goto L153 \n\n        .stack same \nL141:   aload_2 \nL142:   getfield Field CacheItem chineseName Ljava/lang/String; \nL145:   ifnonnull L152 \nL148:   iconst_1 \nL149:   goto L153 \n\n        .stack same \nL152:   iconst_0 \n\n        .stack stack_1 Integer \nL153:   ireturn \nL154:   \n        .linenumbertable \n            L0 74 \n            L7 75 \n            L16 77 \n            L21 79 \n            L54 80 \n            L87 81 \n            L120 82 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public hashCode : ()I \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field CacheItem id Ljava/lang/String; \nL4:     ifnull L17 \nL7:     aload_0 \nL8:     getfield Field CacheItem id Ljava/lang/String; \nL11:    invokevirtual Method java/lang/String hashCode ()I \nL14:    goto L18 \n\n        .stack same \nL17:    iconst_0 \n\n        .stack stack_1 Integer \nL18:    istore_1 \nL19:    bipush 31 \nL21:    iload_1 \nL22:    imul \nL23:    aload_0 \nL24:    getfield Field CacheItem name Ljava/lang/String; \nL27:    ifnull L40 \nL30:    aload_0 \nL31:    getfield Field CacheItem name Ljava/lang/String; \nL34:    invokevirtual Method java/lang/String hashCode ()I \nL37:    goto L41 \n\n        .stack full \n            locals Object CacheItem Integer \n            stack Integer \n        .end stack \nL40:    iconst_0 \n\n        .stack full \n            locals Object CacheItem Integer \n            stack Integer Integer \n        .end stack \nL41:    iadd \nL42:    istore_1 \nL43:    bipush 31 \nL45:    iload_1 \nL46:    imul \nL47:    aload_0 \nL48:    getfield Field CacheItem pinyin Ljava/lang/String; \nL51:    ifnull L64 \nL54:    aload_0 \nL55:    getfield Field CacheItem pinyin Ljava/lang/String; \nL58:    invokevirtual Method java/lang/String hashCode ()I \nL61:    goto L65 \n\n        .stack stack_1 Integer \nL64:    iconst_0 \n\n        .stack full \n            locals Object CacheItem Integer \n            stack Integer Integer \n        .end stack \nL65:    iadd \nL66:    istore_1 \nL67:    bipush 31 \nL69:    iload_1 \nL70:    imul \nL71:    aload_0 \nL72:    getfield Field CacheItem chineseName Ljava/lang/String; \nL75:    ifnull L88 \nL78:    aload_0 \nL79:    getfield Field CacheItem chineseName Ljava/lang/String; \nL82:    invokevirtual Method java/lang/String hashCode ()I \nL85:    goto L89 \n\n        .stack stack_1 Integer \nL88:    iconst_0 \n\n        .stack full \n            locals Object CacheItem Integer \n            stack Integer Integer \n        .end stack \nL89:    iadd \nL90:    istore_1 \nL91:    iload_1 \nL92:    ireturn \nL93:    \n        .linenumbertable \n            L0 88 \n            L19 89 \n            L43 90 \n            L67 91 \n            L91 92 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'CacheItem.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 22:59:05 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CacheItem_ESTest extends CacheItem_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem();\n      cacheItem0.setChineseName(\"CacheItem\");\n      cacheItem0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"CacheItem\", \"\u007fIVqc27Jz.\", \"CacheItem\", \"\");\n      cacheItem0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"\", \"\", \"\");\n      cacheItem0.setPinyin(\"[/=`-{iH9n$ZF5 `\");\n      String string0 = cacheItem0.getPinyin();\n      assertEquals(\"[/=`-{iH9n$ZF5 `\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"\", \"\", \"\");\n      cacheItem0.getPinyin();\n      cacheItem0.setPinyin(\"\");\n      cacheItem0.toString();\n      cacheItem0.setPinyin((String) null);\n      String string0 = cacheItem0.getPinyin();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"6Z`b\", \"6Z`b\", (String) null, \"6Z`b\");\n      cacheItem0.setName((String) null);\n      String string0 = cacheItem0.getName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"\", \"\", \"\");\n      String string0 = cacheItem0.getName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem();\n      String string0 = cacheItem0.getId();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem();\n      cacheItem0.setId(\"\");\n      String string0 = cacheItem0.getId();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"\", \"\", \"\", \"\");\n      String string0 = cacheItem0.getChineseName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem((String) null, (String) null, (String) null);\n      cacheItem0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"\", \"\", \"\", \"\");\n      CacheItem cacheItem1 = new CacheItem(\"\", \"L*zFMF`\", \"\", \"\");\n      assertFalse(cacheItem1.equals((Object)cacheItem0));\n      \n      cacheItem1.setName(\"\");\n      boolean boolean0 = cacheItem0.equals(cacheItem1);\n      assertTrue(cacheItem1.equals((Object)cacheItem0));\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem();\n      CacheItem cacheItem1 = new CacheItem((String) null, (String) null, (String) null);\n      cacheItem1.setId(\"\");\n      boolean boolean0 = cacheItem0.equals(cacheItem1);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"\", \"\", \"\");\n      CacheItem cacheItem1 = new CacheItem(\"\", \"\", \"FXRXKgiPvK\u007fSdFmMR\");\n      boolean boolean0 = cacheItem0.equals(cacheItem1);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"\", \"\", \"\");\n      cacheItem0.setId((String) null);\n      CacheItem cacheItem1 = new CacheItem();\n      boolean boolean0 = cacheItem0.equals(cacheItem1);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"6Z`b\", \"6Z`b\", (String) null, \"6Z`b\");\n      Object object0 = new Object();\n      boolean boolean0 = cacheItem0.equals(object0);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"\", \"\", \"\", \"\");\n      boolean boolean0 = cacheItem0.equals(cacheItem0);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"6Z`b\", \"6Z`b\", (String) null, \"6Z`b\");\n      CacheItem cacheItem1 = new CacheItem((String) null, (String) null, (String) null);\n      boolean boolean0 = cacheItem0.equals(cacheItem1);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem((String) null, (String) null, (String) null);\n      String string0 = cacheItem0.toString();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"6Z`b\", \"6Z`b\", (String) null, \"6Z`b\");\n      String string0 = cacheItem0.toString();\n      assertEquals(\"6Z`b6Z`b6Z`b\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"I<fSeCk^3v0/\", \"I<fSeCk^3v0/\", \"I<fSeCk^3v0/\");\n      String string0 = cacheItem0.getChineseName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"I<fSeCk^3v0/\", \"I<fSeCk^3v0/\", \"I<fSeCk^3v0/\");\n      cacheItem0.setChineseName(\"ii5}j:6dZ\u007f!s\");\n      String string0 = cacheItem0.getChineseName();\n      assertEquals(\"ii5}j:6dZ\u007f!s\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"I<fSeCk^3v0/\", \"I<fSeCk^3v0/\", \"I<fSeCk^3v0/\");\n      String string0 = cacheItem0.getId();\n      assertEquals(\"I<fSeCk^3v0/\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test22()  throws Throwable  {\n      CacheItem cacheItem0 = new CacheItem(\"6Z`b\", \"6Z`b\", (String) null, \"6Z`b\");\n      String string0 = cacheItem0.getName();\n      assertEquals(\"6Z`b\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 22:59:05 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class CacheItem_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CacheItem\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpux0cn5tu\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CacheItem_ESTest_scaffolding.class.getClassLoader() ,\n      \"CacheItem\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CacheItem_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CacheItem\"\n    );\n  }\n}\n", "class_idx": 220}
{"class_name": "Production2405", "java_source": "public class Production2405 {\n\n  private String property0;\n\n  public String getProperty0() {\n    return property0;\n  }\n\n  public void setProperty0(String value) {\n    property0 = value;\n  }\n\n  private String property1;\n\n  public String getProperty1() {\n    return property1;\n  }\n\n  public void setProperty1(String value) {\n    property1 = value;\n  }\n\n  private String property2;\n\n  public String getProperty2() {\n    return property2;\n  }\n\n  public void setProperty2(String value) {\n    property2 = value;\n  }\n\n  private String property3;\n\n  public String getProperty3() {\n    return property3;\n  }\n\n  public void setProperty3(String value) {\n    property3 = value;\n  }\n\n  private String property4;\n\n  public String getProperty4() {\n    return property4;\n  }\n\n  public void setProperty4(String value) {\n    property4 = value;\n  }\n\n  private String property5;\n\n  public String getProperty5() {\n    return property5;\n  }\n\n  public void setProperty5(String value) {\n    property5 = value;\n  }\n\n  private String property6;\n\n  public String getProperty6() {\n    return property6;\n  }\n\n  public void setProperty6(String value) {\n    property6 = value;\n  }\n\n  private String property7;\n\n  public String getProperty7() {\n    return property7;\n  }\n\n  public void setProperty7(String value) {\n    property7 = value;\n  }\n\n  private String property8;\n\n  public String getProperty8() {\n    return property8;\n  }\n\n  public void setProperty8(String value) {\n    property8 = value;\n  }\n\n  private String property9;\n\n  public String getProperty9() {\n    return property9;\n  }\n\n  public void setProperty9(String value) {\n    property9 = value;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Production2405 \n.super java/lang/Object \n.field private property0 Ljava/lang/String; \n.field private property1 Ljava/lang/String; \n.field private property2 Ljava/lang/String; \n.field private property3 Ljava/lang/String; \n.field private property4 Ljava/lang/String; \n.field private property5 Ljava/lang/String; \n.field private property6 Ljava/lang/String; \n.field private property7 Ljava/lang/String; \n.field private property8 Ljava/lang/String; \n.field private property9 Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty0 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production2405 property0 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty0 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production2405 property0 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 12 \n            L5 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty1 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production2405 property1 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 18 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty1 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production2405 property1 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 22 \n            L5 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty2 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production2405 property2 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty2 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production2405 property2 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 32 \n            L5 33 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty3 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production2405 property3 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 38 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty3 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production2405 property3 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 42 \n            L5 43 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty4 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production2405 property4 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 48 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty4 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production2405 property4 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 52 \n            L5 53 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty5 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production2405 property5 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 58 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty5 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production2405 property5 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 62 \n            L5 63 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty6 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production2405 property6 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 68 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty6 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production2405 property6 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 72 \n            L5 73 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty7 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production2405 property7 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 78 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty7 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production2405 property7 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 82 \n            L5 83 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty8 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production2405 property8 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 88 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty8 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production2405 property8 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 92 \n            L5 93 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getProperty9 : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Production2405 property9 Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 98 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setProperty9 : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Production2405 property9 Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 102 \n            L5 103 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Production2405.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 14:15:25 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Production2405_ESTest extends Production2405_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty9(\"a:&E\");\n      String string0 = production2405_0.getProperty9();\n      assertEquals(\"a:&E\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty8(\"usq)Q\u007fnWUIPdN__\");\n      String string0 = production2405_0.getProperty8();\n      assertEquals(\"usq)Q\u007fnWUIPdN__\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty7(\"Os#&NB\\\"2n d)>9cf\");\n      String string0 = production2405_0.getProperty7();\n      assertEquals(\"Os#&NB\\\"2n d)>9cf\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty7(\"\");\n      String string0 = production2405_0.getProperty7();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty6(\"[c`AzDogF8uL9sjA6b.\");\n      String string0 = production2405_0.getProperty6();\n      assertEquals(\"[c`AzDogF8uL9sjA6b.\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty6(\"\");\n      String string0 = production2405_0.getProperty6();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty5(\"r\");\n      String string0 = production2405_0.getProperty5();\n      assertEquals(\"r\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty5(\"\");\n      String string0 = production2405_0.getProperty5();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty4(\":\\\"?\");\n      String string0 = production2405_0.getProperty4();\n      assertEquals(\":\\\"?\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty3(\"usq)Q\u007fnWUIPdN__\");\n      String string0 = production2405_0.getProperty3();\n      assertEquals(\"usq)Q\u007fnWUIPdN__\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty2(\"4{@] }}MB0&\");\n      String string0 = production2405_0.getProperty2();\n      assertEquals(\"4{@] }}MB0&\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty1(\"!\\\")LYTaJ1_!}1)J35v]\");\n      String string0 = production2405_0.getProperty1();\n      assertEquals(\"!\\\")LYTaJ1_!}1)J35v]\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty1(\"\");\n      String string0 = production2405_0.getProperty1();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty0(\"FZqU=\");\n      String string0 = production2405_0.getProperty0();\n      assertEquals(\"FZqU=\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      String string0 = production2405_0.getProperty8();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      String string0 = production2405_0.getProperty3();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty0(\"\");\n      String string0 = production2405_0.getProperty0();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      String string0 = production2405_0.getProperty9();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      String string0 = production2405_0.getProperty4();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      String string0 = production2405_0.getProperty1();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty4(\"\");\n      String string0 = production2405_0.getProperty4();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty2(\"\");\n      String string0 = production2405_0.getProperty2();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test22()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty9(\"\");\n      String string0 = production2405_0.getProperty9();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test23()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      String string0 = production2405_0.getProperty0();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test24()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      String string0 = production2405_0.getProperty6();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test25()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      String string0 = production2405_0.getProperty5();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test26()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty8(\"\");\n      String string0 = production2405_0.getProperty8();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test27()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      production2405_0.setProperty3(\"\");\n      String string0 = production2405_0.getProperty3();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test28()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      String string0 = production2405_0.getProperty2();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test29()  throws Throwable  {\n      Production2405 production2405_0 = new Production2405();\n      String string0 = production2405_0.getProperty7();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 14:15:25 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Production2405_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Production2405\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp0lpffjrk\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Production2405_ESTest_scaffolding.class.getClassLoader() ,\n      \"Production2405\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Production2405_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Production2405\"\n    );\n  }\n}\n", "class_idx": 221}
{"class_name": "JSONException", "java_source": "/**\n * The JSONException is thrown by the JSON.org classes when things are amiss.\n *\n * @author JSON.org\n * @version 2008-09-18\n */\npublic class JSONException extends Exception {\n\n  /** */\n  private static final long serialVersionUID = 0;\n\n  private Throwable cause;\n\n  /**\n   * Constructs a JSONException with an explanatory message.\n   *\n   * @param message Detail about the reason for the exception.\n   */\n  public JSONException(String message) {\n    super(message);\n  }\n\n  public JSONException(Throwable t) {\n    super(t.getMessage());\n    this.cause = t;\n  }\n\n  public Throwable getCause() {\n    return this.cause;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super JSONException \n.super java/lang/Exception \n.field private static final serialVersionUID J = 0L \n.field private cause Ljava/lang/Throwable; \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 23 \n            L5 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/Throwable;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokevirtual Method java/lang/Throwable getMessage ()Ljava/lang/String; \nL5:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL8:     aload_0 \nL9:     aload_1 \nL10:    putfield Field JSONException cause Ljava/lang/Throwable; \nL13:    return \nL14:    \n        .linenumbertable \n            L0 27 \n            L8 28 \n            L13 29 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCause : ()Ljava/lang/Throwable; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field JSONException cause Ljava/lang/Throwable; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 32 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'JSONException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 19:19:20 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.lang.MockThrowable;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class JSONException_ESTest extends JSONException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      JSONException jSONException0 = new JSONException(\"\");\n      MockThrowable mockThrowable0 = new MockThrowable(\"\", jSONException0);\n      JSONException jSONException1 = new JSONException(mockThrowable0);\n      Throwable throwable0 = jSONException1.getCause();\n      assertSame(mockThrowable0, throwable0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      JSONException jSONException0 = new JSONException(\"\");\n      Throwable throwable0 = jSONException0.getCause();\n      assertNull(throwable0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 19:19:20 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class JSONException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"JSONException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpgqas0chj\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JSONException_ESTest_scaffolding.class.getClassLoader() ,\n      \"JSONException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JSONException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"JSONException\"\n    );\n  }\n}\n", "class_idx": 222}
{"class_name": "ArrayAddition", "java_source": "public class ArrayAddition {\n\n  public int[] add(int arr1[], int arr2[]) {\n    int l = Math.max(arr1.length, arr2.length);\n    int[] result = new int[l];\n    int c = 0;\n    int i = arr1.length - 1;\n    int j = arr2.length - 1;\n    int r = 0;\n    l--;\n    while (i >= 0 && j >= 0) {\n      r = arr1[i--] + arr2[j--] + c;\n      c = r / 10;\n      result[l--] = r % 10;\n    }\n    while (i >= 0) {\n      r = arr1[i--] + c;\n      c = r / 10;\n      result[l--] = r % 10;\n    }\n    while (j >= 0) {\n      r = arr2[j--] + c;\n      c = r / 10;\n      result[l--] = r % 10;\n    }\n    if (c != 0) {\n      int[] newResult = new int[result.length + 1];\n      for (int t = newResult.length - 1; t > 0; t--) {\n        newResult[t] = result[t - 1];\n      }\n      newResult[0] = c;\n      return newResult;\n    }\n    return result;\n  }\n\n  public static void main(String args[]) {\n\n    int arr1[] = {9, 9, 9, 9, 9, 9, 9};\n    int arr2[] = {1, 6, 8, 2, 6, 7};\n    ArrayAddition aa = new ArrayAddition();\n    int result[] = aa.add(arr1, arr2);\n    for (int i = 0; i < result.length; i++) {\n      System.out.print(\" \" + result[i]);\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ArrayAddition \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public add : ([I[I)[I \n    .code stack 5 locals 11 \nL0:     aload_1 \nL1:     arraylength \nL2:     aload_2 \nL3:     arraylength \nL4:     invokestatic Method java/lang/Math max (II)I \nL7:     istore_3 \nL8:     iload_3 \nL9:     newarray int \nL11:    astore 4 \nL13:    iconst_0 \nL14:    istore 5 \nL16:    aload_1 \nL17:    arraylength \nL18:    iconst_1 \nL19:    isub \nL20:    istore 6 \nL22:    aload_2 \nL23:    arraylength \nL24:    iconst_1 \nL25:    isub \nL26:    istore 7 \nL28:    iconst_0 \nL29:    istore 8 \nL31:    iinc 3 -1 \n\n        .stack full \n            locals Object ArrayAddition Object [I Object [I Integer Object [I Integer Integer Integer Integer \n            stack \n        .end stack \nL34:    iload 6 \nL36:    iflt L86 \nL39:    iload 7 \nL41:    iflt L86 \nL44:    aload_1 \nL45:    iload 6 \nL47:    iinc 6 -1 \nL50:    iaload \nL51:    aload_2 \nL52:    iload 7 \nL54:    iinc 7 -1 \nL57:    iaload \nL58:    iadd \nL59:    iload 5 \nL61:    iadd \nL62:    istore 8 \nL64:    iload 8 \nL66:    bipush 10 \nL68:    idiv \nL69:    istore 5 \nL71:    aload 4 \nL73:    iload_3 \nL74:    iinc 3 -1 \nL77:    iload 8 \nL79:    bipush 10 \nL81:    irem \nL82:    iastore \nL83:    goto L34 \n\n        .stack same \nL86:    iload 6 \nL88:    iflt L125 \nL91:    aload_1 \nL92:    iload 6 \nL94:    iinc 6 -1 \nL97:    iaload \nL98:    iload 5 \nL100:   iadd \nL101:   istore 8 \nL103:   iload 8 \nL105:   bipush 10 \nL107:   idiv \nL108:   istore 5 \nL110:   aload 4 \nL112:   iload_3 \nL113:   iinc 3 -1 \nL116:   iload 8 \nL118:   bipush 10 \nL120:   irem \nL121:   iastore \nL122:   goto L86 \n\n        .stack same \nL125:   iload 7 \nL127:   iflt L164 \nL130:   aload_2 \nL131:   iload 7 \nL133:   iinc 7 -1 \nL136:   iaload \nL137:   iload 5 \nL139:   iadd \nL140:   istore 8 \nL142:   iload 8 \nL144:   bipush 10 \nL146:   idiv \nL147:   istore 5 \nL149:   aload 4 \nL151:   iload_3 \nL152:   iinc 3 -1 \nL155:   iload 8 \nL157:   bipush 10 \nL159:   irem \nL160:   iastore \nL161:   goto L125 \n\n        .stack same \nL164:   iload 5 \nL166:   ifeq L217 \nL169:   aload 4 \nL171:   arraylength \nL172:   iconst_1 \nL173:   iadd \nL174:   newarray int \nL176:   astore 9 \nL178:   aload 9 \nL180:   arraylength \nL181:   iconst_1 \nL182:   isub \nL183:   istore 10 \n\n        .stack append Object [I Integer \nL185:   iload 10 \nL187:   ifle L208 \nL190:   aload 9 \nL192:   iload 10 \nL194:   aload 4 \nL196:   iload 10 \nL198:   iconst_1 \nL199:   isub \nL200:   iaload \nL201:   iastore \nL202:   iinc 10 -1 \nL205:   goto L185 \n\n        .stack chop 1 \nL208:   aload 9 \nL210:   iconst_0 \nL211:   iload 5 \nL213:   iastore \nL214:   aload 9 \nL216:   areturn \n\n        .stack chop 1 \nL217:   aload 4 \nL219:   areturn \nL220:   \n        .linenumbertable \n            L0 6 \n            L8 7 \n            L13 8 \n            L16 9 \n            L22 10 \n            L28 11 \n            L31 12 \n            L34 13 \n            L44 14 \n            L64 15 \n            L71 16 \n            L86 18 \n            L91 19 \n            L103 20 \n            L110 21 \n            L125 23 \n            L130 24 \n            L142 25 \n            L149 26 \n            L164 28 \n            L169 29 \n            L178 30 \n            L190 31 \n            L202 30 \n            L208 33 \n            L214 34 \n            L217 36 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 4 locals 6 \nL0:     bipush 7 \nL2:     newarray int \nL4:     dup \nL5:     iconst_0 \nL6:     bipush 9 \nL8:     iastore \nL9:     dup \nL10:    iconst_1 \nL11:    bipush 9 \nL13:    iastore \nL14:    dup \nL15:    iconst_2 \nL16:    bipush 9 \nL18:    iastore \nL19:    dup \nL20:    iconst_3 \nL21:    bipush 9 \nL23:    iastore \nL24:    dup \nL25:    iconst_4 \nL26:    bipush 9 \nL28:    iastore \nL29:    dup \nL30:    iconst_5 \nL31:    bipush 9 \nL33:    iastore \nL34:    dup \nL35:    bipush 6 \nL37:    bipush 9 \nL39:    iastore \nL40:    astore_1 \nL41:    bipush 6 \nL43:    newarray int \nL45:    dup \nL46:    iconst_0 \nL47:    iconst_1 \nL48:    iastore \nL49:    dup \nL50:    iconst_1 \nL51:    bipush 6 \nL53:    iastore \nL54:    dup \nL55:    iconst_2 \nL56:    bipush 8 \nL58:    iastore \nL59:    dup \nL60:    iconst_3 \nL61:    iconst_2 \nL62:    iastore \nL63:    dup \nL64:    iconst_4 \nL65:    bipush 6 \nL67:    iastore \nL68:    dup \nL69:    iconst_5 \nL70:    bipush 7 \nL72:    iastore \nL73:    astore_2 \nL74:    new ArrayAddition \nL77:    dup \nL78:    invokespecial Method ArrayAddition <init> ()V \nL81:    astore_3 \nL82:    aload_3 \nL83:    aload_1 \nL84:    aload_2 \nL85:    invokevirtual Method ArrayAddition add ([I[I)[I \nL88:    astore 4 \nL90:    iconst_0 \nL91:    istore 5 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object [I Object [I Object ArrayAddition Object [I Integer \n            stack \n        .end stack \nL93:    iload 5 \nL95:    aload 4 \nL97:    arraylength \nL98:    if_icmpge L136 \nL101:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL104:   new java/lang/StringBuilder \nL107:   dup \nL108:   invokespecial Method java/lang/StringBuilder <init> ()V \nL111:   ldc ' ' \nL113:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL116:   aload 4 \nL118:   iload 5 \nL120:   iaload \nL121:   invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL124:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL127:   invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \nL130:   iinc 5 1 \nL133:   goto L93 \n\n        .stack chop 1 \nL136:   return \nL137:   \n        .linenumbertable \n            L0 41 \n            L41 42 \n            L74 43 \n            L82 44 \n            L90 45 \n            L101 46 \n            L130 45 \n            L136 48 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ArrayAddition.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 00:28:22 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ArrayAddition_ESTest extends ArrayAddition_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ArrayAddition arrayAddition0 = new ArrayAddition();\n      int[] intArray0 = new int[7];\n      intArray0[0] = (-1);\n      intArray0[1] = (-96063);\n      intArray0[2] = 4;\n      intArray0[3] = (-12443);\n      intArray0[4] = 0;\n      intArray0[5] = (-74085);\n      intArray0[6] = (-26444);\n      arrayAddition0.add(intArray0, intArray0);\n      int[] intArray1 = new int[9];\n      intArray1[0] = 0;\n      intArray1[1] = (-1);\n      intArray1[2] = (-96063);\n      intArray1[3] = (-74085);\n      intArray1[4] = 0;\n      intArray1[5] = (-42032);\n      intArray1[6] = (-74085);\n      intArray1[7] = (-96063);\n      intArray1[8] = (-96063);\n      int[] intArray2 = arrayAddition0.add(intArray0, intArray1);\n      assertArrayEquals(new int[] {(-113), (-1), (-5), (-2), (-4), (-6), (-7), (-4), (-8), (-7)}, intArray2);\n      assertEquals(10, intArray2.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      String[] stringArray0 = new String[0];\n      ArrayAddition.main(stringArray0);\n      String[] stringArray1 = new String[4];\n      stringArray1[0] = \"\";\n      stringArray1[1] = \"v9jh%vF~j,qC*\";\n      stringArray1[2] = \"\";\n      stringArray1[3] = \"\";\n      ArrayAddition.main(stringArray1);\n      ArrayAddition.main(stringArray1);\n      ArrayAddition.main(stringArray1);\n      ArrayAddition arrayAddition0 = new ArrayAddition();\n      int[] intArray0 = new int[9];\n      intArray0[0] = 0;\n      intArray0[1] = (-10925);\n      intArray0[2] = 9362;\n      intArray0[3] = (-108565);\n      intArray0[4] = (-1);\n      intArray0[5] = 0;\n      intArray0[6] = (-1);\n      intArray0[7] = 0;\n      intArray0[8] = (-1);\n      int[] intArray1 = arrayAddition0.add(intArray0, intArray0);\n      assertEquals(10, intArray1.length);\n      assertArrayEquals(new int[] {(-221), (-4), (-8), (-9), 0, (-2), 0, (-2), 0, (-2)}, intArray1);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      ArrayAddition arrayAddition0 = new ArrayAddition();\n      int[] intArray0 = new int[8];\n      intArray0[0] = 0;\n      String[] stringArray0 = new String[6];\n      stringArray0[0] = \"9XayEg$D9MQ=fD:s4\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \"%`}WF4\";\n      stringArray0[5] = \" \";\n      ArrayAddition.main(stringArray0);\n      intArray0[1] = 1;\n      intArray0[2] = 8;\n      intArray0[3] = 7;\n      intArray0[4] = 14908;\n      intArray0[5] = 4;\n      intArray0[6] = 0;\n      intArray0[7] = 33621;\n      int[] intArray1 = new int[4];\n      intArray1[0] = 1;\n      intArray1[1] = 8;\n      intArray1[2] = (-12763);\n      intArray1[3] = 4;\n      arrayAddition0.add(intArray0, intArray1);\n      int[] intArray2 = new int[9];\n      intArray2[0] = 14908;\n      intArray2[1] = 1;\n      intArray2[2] = (-1);\n      intArray2[3] = 0;\n      intArray2[4] = 0;\n      intArray2[5] = 33621;\n      intArray2[6] = 7;\n      intArray2[7] = 0;\n      intArray2[8] = 4;\n      // Undeclared exception!\n      try { \n        arrayAddition0.add(intArray2, (int[]) null);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"ArrayAddition\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      ArrayAddition arrayAddition0 = new ArrayAddition();\n      int[] intArray0 = new int[1];\n      intArray0[0] = 15623;\n      int[] intArray1 = arrayAddition0.add(intArray0, intArray0);\n      assertArrayEquals(new int[] {3124, 6}, intArray1);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      String[] stringArray0 = new String[2];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"B&:|x8JIVT/-zZ9bU~h\";\n      ArrayAddition.main(stringArray0);\n      ArrayAddition arrayAddition0 = new ArrayAddition();\n      ArrayAddition.main(stringArray0);\n      ArrayAddition.main(stringArray0);\n      ArrayAddition.main(stringArray0);\n      ArrayAddition.main(stringArray0);\n      ArrayAddition.main(stringArray0);\n      ArrayAddition.main(stringArray0);\n      int[] intArray0 = new int[0];\n      int[] intArray1 = arrayAddition0.add(intArray0, intArray0);\n      ArrayAddition.main(stringArray0);\n      arrayAddition0.add(intArray1, intArray1);\n      int[] intArray2 = arrayAddition0.add(intArray1, intArray1);\n      ArrayAddition.main(stringArray0);\n      ArrayAddition.main(stringArray0);\n      int[] intArray3 = arrayAddition0.add(intArray0, intArray2);\n      assertEquals(0, intArray2.length);\n      assertArrayEquals(new int[] {}, intArray3);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      ArrayAddition arrayAddition0 = new ArrayAddition();\n      ArrayAddition.main((String[]) null);\n      ArrayAddition.main((String[]) null);\n      ArrayAddition.main((String[]) null);\n      ArrayAddition.main((String[]) null);\n      int[] intArray0 = new int[1];\n      intArray0[0] = 4763;\n      int[] intArray1 = arrayAddition0.add(intArray0, intArray0);\n      int[] intArray2 = arrayAddition0.add(intArray0, intArray1);\n      ArrayAddition.main((String[]) null);\n      ArrayAddition.main((String[]) null);\n      int[] intArray3 = arrayAddition0.add(intArray0, intArray1);\n      ArrayAddition.main((String[]) null);\n      arrayAddition0.add(intArray3, intArray2);\n      String[] stringArray0 = new String[6];\n      stringArray0[0] = \"\";\n      String[] stringArray1 = new String[8];\n      stringArray1[0] = \"\";\n      stringArray1[1] = \"\";\n      stringArray1[2] = \"\";\n      stringArray1[3] = \"Q2wiMJ}mG\\\"nc~Fq5\";\n      stringArray1[4] = \"\";\n      stringArray1[5] = \"\";\n      stringArray1[6] = \"\";\n      stringArray1[7] = \"\";\n      ArrayAddition.main(stringArray1);\n      stringArray0[1] = \"\";\n      stringArray0[2] = \" \";\n      stringArray0[3] = \"ON<g%c^}\";\n      stringArray0[4] = \"R?ETYPlTf.p\";\n      stringArray0[5] = \"/y5@C/izXwwbMW\";\n      ArrayAddition.main(stringArray0);\n      arrayAddition0.add(intArray3, intArray1);\n      ArrayAddition.main(stringArray0);\n      ArrayAddition.main((String[]) null);\n      arrayAddition0.add(intArray2, intArray0);\n      ArrayAddition.main((String[]) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      ArrayAddition arrayAddition0 = new ArrayAddition();\n      int[] intArray0 = new int[2];\n      intArray0[0] = 6;\n      intArray0[1] = 0;\n      int[] intArray1 = arrayAddition0.add(intArray0, intArray0);\n      assertArrayEquals(new int[] {1, 2, 0}, intArray1);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      ArrayAddition arrayAddition0 = new ArrayAddition();\n      int[] intArray0 = new int[0];\n      int[] intArray1 = arrayAddition0.add(intArray0, intArray0);\n      int[] intArray2 = arrayAddition0.add(intArray1, intArray0);\n      assertEquals(0, intArray2.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      String[] stringArray0 = new String[8];\n      stringArray0[0] = \"X-r,Z64i\";\n      stringArray0[1] = \"\\\"[\";\n      stringArray0[2] = \"d_x.h~P*kY&7\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \"@2`z;QL&%j\";\n      stringArray0[5] = \"b^l_ `:8@`CJo`a\";\n      stringArray0[6] = \"\";\n      stringArray0[7] = \"w_d(&hLDY:6jP\";\n      ArrayAddition.main(stringArray0);\n      assertEquals(8, stringArray0.length);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 00:28:22 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ArrayAddition_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ArrayAddition\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpanglcd38\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ArrayAddition_ESTest_scaffolding.class.getClassLoader() ,\n      \"ArrayAddition\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ArrayAddition_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ArrayAddition\"\n    );\n  }\n}\n", "class_idx": 223}
{"class_name": "NumbOperand", "java_source": "/**\n * @author Tomas Misko\n */\npublic class NumbOperand {\n\n  private int cislo;\n  private char operand;\n\n  public NumbOperand(char operand, int cislo) {\n    this.cislo = cislo;\n    this.operand = operand;\n  }\n\n  public char getOperand() {\n    return this.operand;\n  }\n\n  public int getCislo() {\n    return this.cislo;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super NumbOperand \n.super java/lang/Object \n.field private cislo I \n.field private operand C \n\n.method public <init> : (CI)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_2 \nL6:     putfield Field NumbOperand cislo I \nL9:     aload_0 \nL10:    iload_1 \nL11:    putfield Field NumbOperand operand C \nL14:    return \nL15:    \n        .linenumbertable \n            L0 12 \n            L4 13 \n            L9 14 \n            L14 15 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getOperand : ()C \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field NumbOperand operand C \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 18 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCislo : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field NumbOperand cislo I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 22 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'NumbOperand.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 11:25:54 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class NumbOperand_ESTest extends NumbOperand_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      NumbOperand numbOperand0 = new NumbOperand('$', 0);\n      char char0 = numbOperand0.getOperand();\n      assertEquals('$', char0);\n      assertEquals(0, numbOperand0.getCislo());\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      NumbOperand numbOperand0 = new NumbOperand('7', 58871);\n      char char0 = numbOperand0.getOperand();\n      assertEquals(58871, numbOperand0.getCislo());\n      assertEquals('7', char0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      NumbOperand numbOperand0 = new NumbOperand('?', 0);\n      int int0 = numbOperand0.getCislo();\n      assertEquals(0, int0);\n      assertEquals('?', numbOperand0.getOperand());\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      NumbOperand numbOperand0 = new NumbOperand('y', (-4668));\n      int int0 = numbOperand0.getCislo();\n      assertEquals('y', numbOperand0.getOperand());\n      assertEquals((-4668), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      NumbOperand numbOperand0 = new NumbOperand('S', 18393);\n      char char0 = numbOperand0.getOperand();\n      assertEquals('S', char0);\n      assertEquals(18393, numbOperand0.getCislo());\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      NumbOperand numbOperand0 = new NumbOperand('S', 18393);\n      int int0 = numbOperand0.getCislo();\n      assertEquals('S', numbOperand0.getOperand());\n      assertEquals(18393, int0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 11:25:54 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class NumbOperand_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"NumbOperand\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp_wlpx78l\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NumbOperand_ESTest_scaffolding.class.getClassLoader() ,\n      \"NumbOperand\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NumbOperand_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"NumbOperand\"\n    );\n  }\n}\n", "class_idx": 224}
{"class_name": "Subroutine", "java_source": "/*\n * Javassist, a Java-bytecode translator toolkit.\n * Copyright (C) 1999- Shigeru Chiba. All Rights Reserved.\n *\n * The contents of this file are subject to the Mozilla Public License Version\n * 1.1 (the \"License\"); you may not use this file except in compliance with\n * the License.  Alternatively, the contents of this file may be used under\n * the terms of the GNU Lesser General Public License Version 2.1 or later,\n * or the Apache License Version 2.0.\n *\n * Software distributed under the License is distributed on an \"AS IS\" basis,\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n * for the specific language governing rights and limitations under the\n * License.\n */\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\n\n/**\n * Represents a nested method subroutine (marked by JSR and RET).\n *\n * @author Jason T. Greene\n */\npublic class Subroutine {\n  // private Set callers = new HashSet();\n  private List callers = new ArrayList();\n  private Set access = new HashSet();\n  private int start;\n\n  public Subroutine(int start, int caller) {\n    this.start = start;\n    callers.add(new Integer(caller));\n  }\n\n  public void addCaller(int caller) {\n    callers.add(new Integer(caller));\n  }\n\n  public int start() {\n    return start;\n  }\n\n  public void access(int index) {\n    access.add(new Integer(index));\n  }\n\n  public boolean isAccessed(int index) {\n    return access.contains(new Integer(index));\n  }\n\n  public Collection accessed() {\n    return access;\n  }\n\n  public Collection callers() {\n    return callers;\n  }\n\n  public String toString() {\n    return \"start = \" + start + \" callers = \" + callers.toString();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Subroutine \n.super java/lang/Object \n.field private callers Ljava/util/List; \n.field private access Ljava/util/Set; \n.field private start I \n\n.method public <init> : (II)V \n    .code stack 4 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     new java/util/ArrayList \nL8:     dup \nL9:     invokespecial Method java/util/ArrayList <init> ()V \nL12:    putfield Field Subroutine callers Ljava/util/List; \nL15:    aload_0 \nL16:    new java/util/HashSet \nL19:    dup \nL20:    invokespecial Method java/util/HashSet <init> ()V \nL23:    putfield Field Subroutine access Ljava/util/Set; \nL26:    aload_0 \nL27:    iload_1 \nL28:    putfield Field Subroutine start I \nL31:    aload_0 \nL32:    getfield Field Subroutine callers Ljava/util/List; \nL35:    new java/lang/Integer \nL38:    dup \nL39:    iload_2 \nL40:    invokespecial Method java/lang/Integer <init> (I)V \nL43:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL48:    pop \nL49:    return \nL50:    \n        .linenumbertable \n            L0 35 \n            L4 31 \n            L15 32 \n            L26 36 \n            L31 37 \n            L49 38 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public addCaller : (I)V \n    .code stack 4 locals 2 \nL0:     aload_0 \nL1:     getfield Field Subroutine callers Ljava/util/List; \nL4:     new java/lang/Integer \nL7:     dup \nL8:     iload_1 \nL9:     invokespecial Method java/lang/Integer <init> (I)V \nL12:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL17:    pop \nL18:    return \nL19:    \n        .linenumbertable \n            L0 41 \n            L18 42 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public start : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Subroutine start I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 45 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public access : (I)V \n    .code stack 4 locals 2 \nL0:     aload_0 \nL1:     getfield Field Subroutine access Ljava/util/Set; \nL4:     new java/lang/Integer \nL7:     dup \nL8:     iload_1 \nL9:     invokespecial Method java/lang/Integer <init> (I)V \nL12:    invokeinterface InterfaceMethod java/util/Set add (Ljava/lang/Object;)Z 2 \nL17:    pop \nL18:    return \nL19:    \n        .linenumbertable \n            L0 49 \n            L18 50 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public isAccessed : (I)Z \n    .code stack 4 locals 2 \nL0:     aload_0 \nL1:     getfield Field Subroutine access Ljava/util/Set; \nL4:     new java/lang/Integer \nL7:     dup \nL8:     iload_1 \nL9:     invokespecial Method java/lang/Integer <init> (I)V \nL12:    invokeinterface InterfaceMethod java/util/Set contains (Ljava/lang/Object;)Z 2 \nL17:    ireturn \nL18:    \n        .linenumbertable \n            L0 53 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public accessed : ()Ljava/util/Collection; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Subroutine access Ljava/util/Set; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 57 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public callers : ()Ljava/util/Collection; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Subroutine callers Ljava/util/List; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 61 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     ldc 'start = ' \nL9:     invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL12:    aload_0 \nL13:    getfield Field Subroutine start I \nL16:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL19:    ldc ' callers = ' \nL21:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL24:    aload_0 \nL25:    getfield Field Subroutine callers Ljava/util/List; \nL28:    invokevirtual Method java/lang/Object toString ()Ljava/lang/String; \nL31:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL34:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL37:    areturn \nL38:    \n        .linenumbertable \n            L0 65 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Subroutine.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 21:33:33 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Subroutine_ESTest extends Subroutine_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Subroutine subroutine0 = new Subroutine(22663, 22663);\n      int int0 = subroutine0.start();\n      assertEquals(22663, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Subroutine subroutine0 = new Subroutine((-10710), (-10710));\n      int int0 = subroutine0.start();\n      assertEquals((-10710), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Subroutine subroutine0 = new Subroutine(0, 0);\n      boolean boolean0 = subroutine0.isAccessed(0);\n      assertEquals(0, subroutine0.start());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Subroutine subroutine0 = new Subroutine(0, 0);\n      subroutine0.addCaller((-33480));\n      assertEquals(0, subroutine0.start());\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Subroutine subroutine0 = new Subroutine(0, 0);\n      subroutine0.callers();\n      assertEquals(0, subroutine0.start());\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Subroutine subroutine0 = new Subroutine(0, 0);\n      int int0 = subroutine0.start();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      Subroutine subroutine0 = new Subroutine((-61347), (-61347));\n      subroutine0.access((-61347));\n      boolean boolean0 = subroutine0.isAccessed((-61347));\n      assertTrue(boolean0);\n      assertEquals((-61347), subroutine0.start());\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      Subroutine subroutine0 = new Subroutine(34997, 34997);\n      subroutine0.toString();\n      assertEquals(34997, subroutine0.start());\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      Subroutine subroutine0 = new Subroutine(22663, 22663);\n      subroutine0.accessed();\n      assertEquals(22663, subroutine0.start());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 21:33:33 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Subroutine_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Subroutine\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpm2zuo463\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Subroutine_ESTest_scaffolding.class.getClassLoader() ,\n      \"Subroutine\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Subroutine_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Subroutine\"\n    );\n  }\n}\n", "class_idx": 225}
{"class_name": "StackQTest", "java_source": "public class StackQTest {\n\n  public void maxValidParenthesis() {}\n}\n", "jasm_code": ".version 52 0 \n.class public super StackQTest \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public maxValidParenthesis : ()V \n    .code stack 0 locals 1 \nL0:     return \nL1:     \n        .linenumbertable \n            L0 7 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'StackQTest.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 17:23:11 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class StackQTest_ESTest extends StackQTest_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      StackQTest stackQTest0 = new StackQTest();\n      stackQTest0.maxValidParenthesis();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 17:23:11 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class StackQTest_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"StackQTest\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp_zztvgko\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StackQTest_ESTest_scaffolding.class.getClassLoader() ,\n      \"StackQTest\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StackQTest_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"StackQTest\"\n    );\n  }\n}\n", "class_idx": 226}
{"class_name": "Usuario", "java_source": "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n/**\n * @author Enrique\n */\npublic class Usuario {}\n", "jasm_code": ".version 52 0 \n.class public super Usuario \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 12 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Usuario.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 04:14:40 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Usuario_ESTest extends Usuario_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Usuario usuario0 = new Usuario();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 04:14:40 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Usuario_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Usuario\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpp9wo55yb\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Usuario_ESTest_scaffolding.class.getClassLoader() ,\n      \"Usuario\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Usuario_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Usuario\"\n    );\n  }\n}\n", "class_idx": 227}
{"class_name": "BusinessException", "java_source": "/**\n * \u4e1a\u52a1\u5f02\u5e38\u57fa\u7c7b.\n *\n * @author bird\n */\n@SuppressWarnings(\"serial\")\npublic class BusinessException extends RuntimeException {\n\n  public BusinessException() {}\n\n  public BusinessException(String message) {\n    super(message);\n  }\n\n  public BusinessException(String message, Throwable cause) {\n    super(message, cause);\n  }\n\n  public BusinessException(Throwable cause) {\n    super(cause);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super BusinessException \n.super java/lang/RuntimeException \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/RuntimeException <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 12 \n            L4 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 16 \n            L5 17 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/Throwable;)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     aload_2 \nL3:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;Ljava/lang/Throwable;)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 20 \n            L6 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/Throwable;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/Throwable;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 24 \n            L5 25 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'BusinessException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 01:09:20 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.lang.MockThrowable;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class BusinessException_ESTest extends BusinessException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      BusinessException businessException0 = new BusinessException(\"\");\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      MockThrowable mockThrowable0 = new MockThrowable(\"\");\n      BusinessException businessException0 = new BusinessException(mockThrowable0);\n      BusinessException businessException1 = new BusinessException(\"\", businessException0);\n      assertFalse(businessException1.equals((Object)businessException0));\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      BusinessException businessException0 = new BusinessException();\n      BusinessException businessException1 = new BusinessException(businessException0);\n      assertFalse(businessException1.equals((Object)businessException0));\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 01:09:20 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class BusinessException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"BusinessException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpif4_jx33\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BusinessException_ESTest_scaffolding.class.getClassLoader() ,\n      \"BusinessException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BusinessException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"BusinessException\"\n    );\n  }\n}\n", "class_idx": 228}
{"class_name": "APIProps", "java_source": "public class APIProps {\n  private APIProps() {}\n\n  public static final String GA_API_URL = \"http://api.gameanalytics.com/\";\n  public static final String GA_API_VERSION = \"1\";\n\n  public static final int PUSH_INTERVAL_SECONDS = 10;\n\n  public static final String VERSION = \"1.3\";\n}\n", "jasm_code": ".version 52 0 \n.class public super APIProps \n.super java/lang/Object \n.field public static final GA_API_URL Ljava/lang/String; = 'http://api.gameanalytics.com/' \n.field public static final GA_API_VERSION Ljava/lang/String; = '1' \n.field public static final PUSH_INTERVAL_SECONDS I = 10 \n.field public static final VERSION Ljava/lang/String; = '1.3' \n\n.method private <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 4 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'APIProps.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 06:43:17 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class APIProps_ESTest extends APIProps_ESTest_scaffolding {\n  @Test\n  public void notGeneratedAnyTest() {\n    // EvoSuite did not generate any tests\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 06:43:17 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class APIProps_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"APIProps\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    /*No java.lang.System property to set*/\n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(APIProps_ESTest_scaffolding.class.getClassLoader() ,\n      \"APIProps\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(APIProps_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"APIProps\"\n    );\n  }\n}\n", "class_idx": 229}
{"class_name": "ModuleAdapterTestConfig", "java_source": "/******************************************************************************\n * Copyright (C) 2006-2012  IFS Institute for Software and others\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Original authors:\n *     Dennis Hunziker\n *     Ueli Kistler\n * Contributors:\n *     Fabio Zadrozny <fabiofz@gmail.com> - initial implementation\n ******************************************************************************/\n/*\n * Copyright (C) 2006, 2007  Dennis Hunziker, Ueli Kistler\n */\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class ModuleAdapterTestConfig {\n\n  List<String> resolveNames = new ArrayList<String>();\n}\n", "jasm_code": ".version 52 0 \n.class public super ModuleAdapterTestConfig \n.super java/lang/Object \n.field resolveNames Ljava/util/List; .fieldattributes \n    .signature Ljava/util/List<Ljava/lang/String;>; \n.end fieldattributes \n\n.method public <init> : ()V \n    .code stack 3 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     new java/util/ArrayList \nL8:     dup \nL9:     invokespecial Method java/util/ArrayList <init> ()V \nL12:    putfield Field ModuleAdapterTestConfig resolveNames Ljava/util/List; \nL15:    return \nL16:    \n        .linenumbertable \n            L0 24 \n            L4 26 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ModuleAdapterTestConfig.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 10:50:49 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ModuleAdapterTestConfig_ESTest extends ModuleAdapterTestConfig_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ModuleAdapterTestConfig moduleAdapterTestConfig0 = new ModuleAdapterTestConfig();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 10:50:49 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ModuleAdapterTestConfig_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ModuleAdapterTestConfig\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp0jkt61up\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ModuleAdapterTestConfig_ESTest_scaffolding.class.getClassLoader() ,\n      \"ModuleAdapterTestConfig\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ModuleAdapterTestConfig_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ModuleAdapterTestConfig\"\n    );\n  }\n}\n", "class_idx": 230}
{"class_name": "Solution", "java_source": "import java.util.Scanner;\n\n/** */\npublic class Solution {\n\n  private static boolean isPrime(int n) {\n    boolean res = true;\n\n    if (n == 1) {\n      res = false;\n    } else {\n      for (int i = 2; i * i <= n; i++) {\n        if (n % i == 0) {\n          res = false;\n          break;\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * @param args\n   */\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    int n;\n    int arr[];\n\n    n = sc.nextInt();\n    arr = new int[n];\n    for (int i = 0; i < n; i++) {\n      arr[i] = sc.nextInt();\n    }\n    sc.close();\n\n    for (int i = 0; i < n; i++) {\n      if (Solution.isPrime(arr[i])) {\n        System.out.println(\"Prime\");\n      } else {\n        System.out.println(\"Not prime\");\n      }\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Solution \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private static isPrime : (I)Z \n    .code stack 2 locals 3 \nL0:     iconst_1 \nL1:     istore_1 \nL2:     iload_0 \nL3:     iconst_1 \nL4:     if_icmpne L12 \nL7:     iconst_0 \nL8:     istore_1 \nL9:     goto L38 \n\n        .stack append Integer \nL12:    iconst_2 \nL13:    istore_2 \n\n        .stack append Integer \nL14:    iload_2 \nL15:    iload_2 \nL16:    imul \nL17:    iload_0 \nL18:    if_icmpgt L38 \nL21:    iload_0 \nL22:    iload_2 \nL23:    irem \nL24:    ifne L32 \nL27:    iconst_0 \nL28:    istore_1 \nL29:    goto L38 \n\n        .stack same \nL32:    iinc 2 1 \nL35:    goto L14 \n\n        .stack chop 1 \nL38:    iload_1 \nL39:    ireturn \nL40:    \n        .linenumbertable \n            L0 11 \n            L2 13 \n            L7 14 \n            L12 16 \n            L21 17 \n            L27 18 \n            L29 19 \n            L32 16 \n            L38 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 3 locals 5 \nL0:     new java/util/Scanner \nL3:     dup \nL4:     getstatic Field java/lang/System in Ljava/io/InputStream; \nL7:     invokespecial Method java/util/Scanner <init> (Ljava/io/InputStream;)V \nL10:    astore_1 \nL11:    aload_1 \nL12:    invokevirtual Method java/util/Scanner nextInt ()I \nL15:    istore_2 \nL16:    iload_2 \nL17:    newarray int \nL19:    astore_3 \nL20:    iconst_0 \nL21:    istore 4 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object java/util/Scanner Integer Object [I Integer \n            stack \n        .end stack \nL23:    iload 4 \nL25:    iload_2 \nL26:    if_icmpge L43 \nL29:    aload_3 \nL30:    iload 4 \nL32:    aload_1 \nL33:    invokevirtual Method java/util/Scanner nextInt ()I \nL36:    iastore \nL37:    iinc 4 1 \nL40:    goto L23 \n\n        .stack chop 1 \nL43:    aload_1 \nL44:    invokevirtual Method java/util/Scanner close ()V \nL47:    iconst_0 \nL48:    istore 4 \n\n        .stack append Integer \nL50:    iload 4 \nL52:    iload_2 \nL53:    if_icmpge L91 \nL56:    aload_3 \nL57:    iload 4 \nL59:    iaload \nL60:    invokestatic Method Solution isPrime (I)Z \nL63:    ifeq L77 \nL66:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL69:    ldc 'Prime' \nL71:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL74:    goto L85 \n\n        .stack same \nL77:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL80:    ldc 'Not prime' \nL82:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \n\n        .stack same \nL85:    iinc 4 1 \nL88:    goto L50 \n\n        .stack chop 1 \nL91:    return \nL92:    \n        .linenumbertable \n            L0 31 \n            L11 35 \n            L16 36 \n            L20 37 \n            L29 38 \n            L37 37 \n            L43 40 \n            L47 42 \n            L56 43 \n            L66 44 \n            L77 46 \n            L85 42 \n            L91 49 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Solution.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 07:27:35 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.util.NoSuchElementException;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.util.SystemInUtil;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Solution_ESTest extends Solution_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      SystemInUtil.addInputLine(\"1\");\n      String[] stringArray0 = new String[6];\n      SystemInUtil.addInputLine(\"1\");\n      Solution.main(stringArray0);\n      // Undeclared exception!\n      try { \n        Solution.main(stringArray0);\n        fail(\"Expecting exception: NoSuchElementException\");\n      \n      } catch(NoSuchElementException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"java.util.Scanner\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      SystemInUtil.addInputLine(\"1\");\n      SystemInUtil.addInputLine(\"1\");\n      Solution.main((String[]) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Solution solution0 = new Solution();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 07:27:35 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Solution_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Solution\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n    org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp62try0hd\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Solution_ESTest_scaffolding.class.getClassLoader() ,\n      \"Solution\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Solution_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Solution\"\n    );\n  }\n}\n", "class_idx": 231}
{"class_name": "SetAttributeSubIfcVertexLoop", "java_source": "/******************************************************************************\n * Copyright (C) 2009-2017  BIMserver.org\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see {@literal<http://www.gnu.org/licenses/>}.\n *****************************************************************************/\n\npublic class SetAttributeSubIfcVertexLoop {\n  // fields\n  private Object object;\n  private String attributeName;\n  private String attributeNewValue;\n\n  // constructors\n  public SetAttributeSubIfcVertexLoop() {}\n\n  public SetAttributeSubIfcVertexLoop(\n      Object object, String attributeName, String attributeNewValue) {\n    this.object = object;\n    this.attributeName = attributeName;\n    this.attributeNewValue = attributeNewValue;\n  }\n\n  // methods\n  public Object getObject() {\n    return object;\n  }\n\n  public void setObject(Object object) {\n    this.object = object;\n  }\n\n  public String getAttributeName() {\n    return attributeName;\n  }\n\n  public void setAttributeName(String attributeName) {\n    this.attributeName = attributeName;\n  }\n\n  public String getAttributeNewValue() {\n    return attributeNewValue;\n  }\n\n  public void setAttributeNewValue(String attributeNewValue) {\n    this.attributeNewValue = attributeNewValue;\n  }\n\n  public void setAttribute() {\n    if (attributeName.equals(\"LoopVertex\")) {\n      // 1NoEList\n      // 1void\n      // 1IfcVertex\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super SetAttributeSubIfcVertexLoop \n.super java/lang/Object \n.field private object Ljava/lang/Object; \n.field private attributeName Ljava/lang/String; \n.field private attributeNewValue Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 27 \n            L4 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field SetAttributeSubIfcVertexLoop object Ljava/lang/Object; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field SetAttributeSubIfcVertexLoop attributeName Ljava/lang/String; \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field SetAttributeSubIfcVertexLoop attributeNewValue Ljava/lang/String; \nL19:    return \nL20:    \n        .linenumbertable \n            L0 30 \n            L4 31 \n            L9 32 \n            L14 33 \n            L19 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getObject : ()Ljava/lang/Object; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SetAttributeSubIfcVertexLoop object Ljava/lang/Object; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 38 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setObject : (Ljava/lang/Object;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field SetAttributeSubIfcVertexLoop object Ljava/lang/Object; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 42 \n            L5 43 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getAttributeName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SetAttributeSubIfcVertexLoop attributeName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setAttributeName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field SetAttributeSubIfcVertexLoop attributeName Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 50 \n            L5 51 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getAttributeNewValue : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SetAttributeSubIfcVertexLoop attributeNewValue Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 54 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setAttributeNewValue : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field SetAttributeSubIfcVertexLoop attributeNewValue Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 58 \n            L5 59 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setAttribute : ()V \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field SetAttributeSubIfcVertexLoop attributeName Ljava/lang/String; \nL4:     ldc 'LoopVertex' \nL6:     invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL9:     ifeq L12 \n\n        .stack same \nL12:    return \nL13:    \n        .linenumbertable \n            L0 62 \n            L12 67 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'SetAttributeSubIfcVertexLoop.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 18:33:22 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class SetAttributeSubIfcVertexLoop_ESTest extends SetAttributeSubIfcVertexLoop_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      SetAttributeSubIfcVertexLoop setAttributeSubIfcVertexLoop0 = new SetAttributeSubIfcVertexLoop();\n      Object object0 = setAttributeSubIfcVertexLoop0.getObject();\n      assertNull(object0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      SetAttributeSubIfcVertexLoop setAttributeSubIfcVertexLoop0 = new SetAttributeSubIfcVertexLoop();\n      setAttributeSubIfcVertexLoop0.setAttributeNewValue(\"rDdCpBmF%~i!+4<@%\");\n      String string0 = setAttributeSubIfcVertexLoop0.getAttributeNewValue();\n      assertEquals(\"rDdCpBmF%~i!+4<@%\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      SetAttributeSubIfcVertexLoop setAttributeSubIfcVertexLoop0 = new SetAttributeSubIfcVertexLoop();\n      setAttributeSubIfcVertexLoop0.setAttributeNewValue(\"\");\n      String string0 = setAttributeSubIfcVertexLoop0.getAttributeNewValue();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      SetAttributeSubIfcVertexLoop setAttributeSubIfcVertexLoop0 = new SetAttributeSubIfcVertexLoop();\n      String string0 = setAttributeSubIfcVertexLoop0.getAttributeName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      SetAttributeSubIfcVertexLoop setAttributeSubIfcVertexLoop0 = new SetAttributeSubIfcVertexLoop((Object) null, \"LoopVertex\", \"LoopVertex\");\n      String string0 = setAttributeSubIfcVertexLoop0.getAttributeName();\n      assertEquals(\"LoopVertex\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      SetAttributeSubIfcVertexLoop setAttributeSubIfcVertexLoop0 = new SetAttributeSubIfcVertexLoop((Object) null, \"LoopVertex\", \"LoopVertex\");\n      setAttributeSubIfcVertexLoop0.setAttribute();\n      assertEquals(\"LoopVertex\", setAttributeSubIfcVertexLoop0.getAttributeName());\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      Object object0 = new Object();\n      SetAttributeSubIfcVertexLoop setAttributeSubIfcVertexLoop0 = new SetAttributeSubIfcVertexLoop(object0, \"\", \"\");\n      String string0 = setAttributeSubIfcVertexLoop0.getAttributeName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Object object0 = new Object();\n      SetAttributeSubIfcVertexLoop setAttributeSubIfcVertexLoop0 = new SetAttributeSubIfcVertexLoop(object0, \"\", \"\");\n      Object object1 = setAttributeSubIfcVertexLoop0.getObject();\n      assertSame(object1, object0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      SetAttributeSubIfcVertexLoop setAttributeSubIfcVertexLoop0 = new SetAttributeSubIfcVertexLoop();\n      setAttributeSubIfcVertexLoop0.setAttributeName(\"LoopVe!tex\");\n      setAttributeSubIfcVertexLoop0.setAttribute();\n      assertEquals(\"LoopVe!tex\", setAttributeSubIfcVertexLoop0.getAttributeName());\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      SetAttributeSubIfcVertexLoop setAttributeSubIfcVertexLoop0 = new SetAttributeSubIfcVertexLoop();\n      String string0 = setAttributeSubIfcVertexLoop0.getAttributeNewValue();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      SetAttributeSubIfcVertexLoop setAttributeSubIfcVertexLoop0 = new SetAttributeSubIfcVertexLoop();\n      setAttributeSubIfcVertexLoop0.setObject(\"=Dej\");\n      assertNull(setAttributeSubIfcVertexLoop0.getAttributeName());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 18:33:22 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class SetAttributeSubIfcVertexLoop_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"SetAttributeSubIfcVertexLoop\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpgmfe342i\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SetAttributeSubIfcVertexLoop_ESTest_scaffolding.class.getClassLoader() ,\n      \"SetAttributeSubIfcVertexLoop\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SetAttributeSubIfcVertexLoop_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"SetAttributeSubIfcVertexLoop\"\n    );\n  }\n}\n", "class_idx": 232}
{"class_name": "DecimalMetadata", "java_source": "public class DecimalMetadata {\n  private final int precision;\n  private final int scale;\n\n  public DecimalMetadata(int precision, int scale) {\n    this.precision = precision;\n    this.scale = scale;\n  }\n\n  public int getPrecision() {\n    return precision;\n  }\n\n  public int getScale() {\n    return scale;\n  }\n\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DecimalMetadata that = (DecimalMetadata) o;\n\n    if (precision != that.precision) return false;\n    if (scale != that.scale) return false;\n\n    return true;\n  }\n\n  @Override\n  public int hashCode() {\n    int result = precision;\n    result = 31 * result + scale;\n    return result;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super DecimalMetadata \n.super java/lang/Object \n.field private final precision I \n.field private final scale I \n\n.method public <init> : (II)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field DecimalMetadata precision I \nL9:     aload_0 \nL10:    iload_2 \nL11:    putfield Field DecimalMetadata scale I \nL14:    return \nL15:    \n        .linenumbertable \n            L0 7 \n            L4 8 \n            L9 9 \n            L14 10 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPrecision : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DecimalMetadata precision I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getScale : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DecimalMetadata scale I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 17 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public equals : (Ljava/lang/Object;)Z \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     if_acmpne L7 \nL5:     iconst_1 \nL6:     ireturn \n\n        .stack same \nL7:     aload_1 \nL8:     ifnull L22 \nL11:    aload_0 \nL12:    invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL15:    aload_1 \nL16:    invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL19:    if_acmpeq L24 \n\n        .stack same \nL22:    iconst_0 \nL23:    ireturn \n\n        .stack same \nL24:    aload_1 \nL25:    checkcast DecimalMetadata \nL28:    astore_2 \nL29:    aload_0 \nL30:    getfield Field DecimalMetadata precision I \nL33:    aload_2 \nL34:    getfield Field DecimalMetadata precision I \nL37:    if_icmpeq L42 \nL40:    iconst_0 \nL41:    ireturn \n\n        .stack append Object DecimalMetadata \nL42:    aload_0 \nL43:    getfield Field DecimalMetadata scale I \nL46:    aload_2 \nL47:    getfield Field DecimalMetadata scale I \nL50:    if_icmpeq L55 \nL53:    iconst_0 \nL54:    ireturn \n\n        .stack same \nL55:    iconst_1 \nL56:    ireturn \nL57:    \n        .linenumbertable \n            L0 22 \n            L7 23 \n            L24 25 \n            L29 27 \n            L42 28 \n            L55 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public hashCode : ()I \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field DecimalMetadata precision I \nL4:     istore_1 \nL5:     bipush 31 \nL7:     iload_1 \nL8:     imul \nL9:     aload_0 \nL10:    getfield Field DecimalMetadata scale I \nL13:    iadd \nL14:    istore_1 \nL15:    iload_1 \nL16:    ireturn \nL17:    \n        .linenumbertable \n            L0 35 \n            L5 36 \n            L15 37 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'DecimalMetadata.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 09:11:45 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class DecimalMetadata_ESTest extends DecimalMetadata_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      DecimalMetadata decimalMetadata0 = new DecimalMetadata(0, 0);\n      DecimalMetadata decimalMetadata1 = new DecimalMetadata(0, 31);\n      boolean boolean0 = decimalMetadata1.equals(decimalMetadata0);\n      assertEquals(31, decimalMetadata1.getScale());\n      assertFalse(boolean0);\n      assertFalse(decimalMetadata0.equals((Object)decimalMetadata1));\n      assertEquals(0, decimalMetadata1.getPrecision());\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      DecimalMetadata decimalMetadata0 = new DecimalMetadata((-26813), (-49));\n      DecimalMetadata decimalMetadata1 = new DecimalMetadata((-70250), 0);\n      boolean boolean0 = decimalMetadata0.equals(decimalMetadata1);\n      assertFalse(boolean0);\n      assertEquals((-49), decimalMetadata0.getScale());\n      assertEquals((-70250), decimalMetadata1.getPrecision());\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      DecimalMetadata decimalMetadata0 = new DecimalMetadata((-70250), 0);\n      int int0 = decimalMetadata0.getScale();\n      assertEquals(0, int0);\n      assertEquals((-70250), decimalMetadata0.getPrecision());\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      DecimalMetadata decimalMetadata0 = new DecimalMetadata((-21706), (-21706));\n      int int0 = decimalMetadata0.getScale();\n      assertEquals((-21706), int0);\n      assertEquals((-21706), decimalMetadata0.getPrecision());\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      DecimalMetadata decimalMetadata0 = new DecimalMetadata(0, 0);\n      int int0 = decimalMetadata0.getPrecision();\n      assertEquals(0, int0);\n      assertEquals(0, decimalMetadata0.getScale());\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      DecimalMetadata decimalMetadata0 = new DecimalMetadata((-36048), 78713);\n      int int0 = decimalMetadata0.getPrecision();\n      assertEquals(78713, decimalMetadata0.getScale());\n      assertEquals((-36048), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      DecimalMetadata decimalMetadata0 = new DecimalMetadata(0, 0);\n      DecimalMetadata decimalMetadata1 = new DecimalMetadata(0, 31);\n      boolean boolean0 = decimalMetadata0.equals(decimalMetadata1);\n      assertFalse(decimalMetadata1.equals((Object)decimalMetadata0));\n      assertEquals(0, decimalMetadata1.getPrecision());\n      assertFalse(boolean0);\n      assertEquals(31, decimalMetadata1.getScale());\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      DecimalMetadata decimalMetadata0 = new DecimalMetadata(35814, 35814);\n      DecimalMetadata decimalMetadata1 = new DecimalMetadata(61525, 35814);\n      boolean boolean0 = decimalMetadata0.equals(decimalMetadata1);\n      assertFalse(boolean0);\n      assertFalse(decimalMetadata1.equals((Object)decimalMetadata0));\n      assertEquals(61525, decimalMetadata1.getPrecision());\n      assertEquals(35814, decimalMetadata1.getScale());\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      DecimalMetadata decimalMetadata0 = new DecimalMetadata(31, 31);\n      DecimalMetadata decimalMetadata1 = new DecimalMetadata(31, 31);\n      boolean boolean0 = decimalMetadata0.equals(decimalMetadata1);\n      assertTrue(boolean0);\n      assertEquals(31, decimalMetadata1.getPrecision());\n      assertEquals(31, decimalMetadata1.getScale());\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      DecimalMetadata decimalMetadata0 = new DecimalMetadata(35814, 35814);\n      boolean boolean0 = decimalMetadata0.equals((Object) null);\n      assertEquals(35814, decimalMetadata0.getScale());\n      assertEquals(35814, decimalMetadata0.getPrecision());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      DecimalMetadata decimalMetadata0 = new DecimalMetadata(31, 31);\n      boolean boolean0 = decimalMetadata0.equals(decimalMetadata0);\n      assertEquals(31, decimalMetadata0.getPrecision());\n      assertEquals(31, decimalMetadata0.getScale());\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      DecimalMetadata decimalMetadata0 = new DecimalMetadata(1, 1);\n      Object object0 = new Object();\n      boolean boolean0 = decimalMetadata0.equals(object0);\n      assertEquals(1, decimalMetadata0.getPrecision());\n      assertEquals(1, decimalMetadata0.getScale());\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      DecimalMetadata decimalMetadata0 = new DecimalMetadata(31, 31);\n      decimalMetadata0.hashCode();\n      assertEquals(31, decimalMetadata0.getPrecision());\n      assertEquals(31, decimalMetadata0.getScale());\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      DecimalMetadata decimalMetadata0 = new DecimalMetadata(25142, 25142);\n      int int0 = decimalMetadata0.getPrecision();\n      assertEquals(25142, int0);\n      assertEquals(25142, decimalMetadata0.getScale());\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      DecimalMetadata decimalMetadata0 = new DecimalMetadata(25142, 25142);\n      int int0 = decimalMetadata0.getScale();\n      assertEquals(25142, int0);\n      assertEquals(25142, decimalMetadata0.getPrecision());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 09:11:45 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class DecimalMetadata_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"DecimalMetadata\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpya_xqapv\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DecimalMetadata_ESTest_scaffolding.class.getClassLoader() ,\n      \"DecimalMetadata\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DecimalMetadata_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"DecimalMetadata\"\n    );\n  }\n}\n", "class_idx": 233}
{"class_name": "None", "java_source": "/**\n * Object that represents no value.\n *\n * @author Tony He\n */\npublic class None {\n\n  private static final None INSTANCE = new None();\n\n  private None() {}\n\n  public static None none() {\n    return INSTANCE;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super None \n.super java/lang/Object \n.field private static final INSTANCE LNone; \n\n.method private <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 12 \n            L4 14 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static none : ()LNone; \n    .code stack 1 locals 0 \nL0:     getstatic Field None INSTANCE LNone; \nL3:     areturn \nL4:     \n        .linenumbertable \n            L0 17 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 2 locals 0 \nL0:     new None \nL3:     dup \nL4:     invokespecial Method None <init> ()V \nL7:     putstatic Field None INSTANCE LNone; \nL10:    return \nL11:    \n        .linenumbertable \n            L0 10 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'None.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 12:38:04 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class None_ESTest extends None_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      None none0 = None.none();\n      assertNotNull(none0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 12:38:04 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class None_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"None\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmppazjae12\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(None_ESTest_scaffolding.class.getClassLoader() ,\n      \"None\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(None_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"None\"\n    );\n  }\n}\n", "class_idx": 234}
{"class_name": "GenerationException", "java_source": "/**\n * Copyright (c) 2012 Lightbox\n *\n * <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of the License at\n *\n * <p>http://www.apache.org/licenses/LICENSE-2.0\n *\n * <p>Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * GenerationException\n *\n * @author Fabien Devos\n */\n@SuppressWarnings(\"serial\")\npublic class GenerationException extends Exception {\n  /** Used to tag logs */\n  @SuppressWarnings(\"unused\")\n  private static final String TAG = \"GenerationException\";\n\n  /** Constructor. */\n  public GenerationException(Throwable t) {\n    super(t);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super GenerationException \n.super java/lang/Exception \n.field private static final TAG Ljava/lang/String; = 'GenerationException' \n\n.method public <init> : (Ljava/lang/Throwable;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception <init> (Ljava/lang/Throwable;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 32 \n            L5 33 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'GenerationException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 21:59:44 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.lang.MockThrowable;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class GenerationException_ESTest extends GenerationException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      MockThrowable mockThrowable0 = new MockThrowable(\"'!sl_ybF-}+\\\"c28<\u007fy\");\n      GenerationException generationException0 = new GenerationException(mockThrowable0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 21:59:44 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class GenerationException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"GenerationException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpvmgztpjm\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(GenerationException_ESTest_scaffolding.class.getClassLoader() ,\n      \"GenerationException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(GenerationException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"GenerationException\"\n    );\n  }\n}\n", "class_idx": 235}
{"class_name": "BaseApi", "java_source": "/**\n * Copyright Maxpower Inc Finland (2014)\n *\n * <p>This file is part of RedditEngine.\n *\n * <p>RedditEngine is free software: you can redistribute it and/or modify it under the terms of the\n * GNU Lesser General Public License as published by the Free Software Foundation, either version 3\n * of the License, or (at your option) any later version.\n *\n * <p>RedditEngine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * <p>You should have received a copy of the GNU Lesser General Public License along with\n * RedditEngine. If not, see <http://www.gnu.org/licenses/>.\n */\npublic abstract class BaseApi {}\n", "jasm_code": ".version 52 0 \n.class public super abstract BaseApi \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'BaseApi.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 12:58:49 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class BaseApi_ESTest extends BaseApi_ESTest_scaffolding {\n  @Test\n  public void notGeneratedAnyTest() {\n    // EvoSuite did not generate any tests\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 12:58:49 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class BaseApi_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"BaseApi\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    /*No java.lang.System property to set*/\n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BaseApi_ESTest_scaffolding.class.getClassLoader() ,\n      \"BaseApi\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BaseApi_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"BaseApi\"\n    );\n  }\n}\n", "class_idx": 236}
{"class_name": "Message", "java_source": "/** Created by tick on 4/7/15. */\npublic class Message {\n  public int flight_id;\n  public String text;\n  public int time;\n\n  public Message(int flight_id, String text, int time) {\n    this.flight_id = flight_id;\n    this.text = text;\n    this.time = time;\n  }\n\n  @Override\n  public String toString() {\n    return \"MessageResponse{\"\n        + \"flight_id=\"\n        + flight_id\n        + \", text='\"\n        + text\n        + '\\''\n        + \", time='\"\n        + time\n        + '\\''\n        + '}';\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Message \n.super java/lang/Object \n.field public flight_id I \n.field public text Ljava/lang/String; \n.field public time I \n\n.method public <init> : (ILjava/lang/String;I)V \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field Message flight_id I \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field Message text Ljava/lang/String; \nL14:    aload_0 \nL15:    iload_3 \nL16:    putfield Field Message time I \nL19:    return \nL20:    \n        .linenumbertable \n            L0 11 \n            L4 12 \n            L9 13 \n            L14 14 \n            L19 15 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     ldc 'MessageResponse{flight_id=' \nL9:     invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL12:    aload_0 \nL13:    getfield Field Message flight_id I \nL16:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL19:    ldc \", text='\" \nL21:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL24:    aload_0 \nL25:    getfield Field Message text Ljava/lang/String; \nL28:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL31:    bipush 39 \nL33:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL36:    ldc \", time='\" \nL38:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL41:    aload_0 \nL42:    getfield Field Message time I \nL45:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL48:    bipush 39 \nL50:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL53:    bipush 125 \nL55:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL58:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL61:    areturn \nL62:    \n        .linenumbertable \n            L0 19 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Message.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 06:13:08 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Message_ESTest extends Message_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Message message0 = new Message(0, \"Lt*Ro#E5H;N>\", 0);\n      String string0 = message0.toString();\n      assertEquals(\"MessageResponse{flight_id=0, text='Lt*Ro#E5H;N>', time='0'}\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 06:13:08 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Message_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Message\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpgfmsava0\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Message_ESTest_scaffolding.class.getClassLoader() ,\n      \"Message\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Message_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Message\"\n    );\n  }\n}\n", "class_idx": 237}
{"class_name": "DataModel", "java_source": "public class DataModel {\n\n  private String ID;\n  private String Date;\n  private String startTime;\n  private String endTime;\n  private String startPoint; // \u8d77\u59cb\u6c34\u51c6\u70b9\n  private String endPoint; // \u7ec8\u6b62\u6c34\u51c6\u70b9\n  private String manCodeOne;\n  private String manCodeTwo;\n  private String manCodeThree;\n  private int isUpload;\n  private int measureType; // \u6d4b\u91cf\u7c7b\u578b\uff08\u4e2d\u5e73\uff1f\uff09\n  //\tprivate Boolean isAgainMeasure;//\u662f\u4e0d\u662f\u590d\u6d4b\n  private String oneOrTwoMeasure; // \u4e00\u5e73\u8fd8\u662f\u4e8c\u5e73\n  private Boolean flag; // \u6d4b\u91cf\u5b8c\u4e3atrue\uff0c\u672a\u6d4b\u91cf\u5b8c\u4e3afalse\n\n  public String getID() {\n    return ID;\n  }\n\n  public void setID(String iD) {\n    ID = iD;\n  }\n\n  public String getDate() {\n    return Date;\n  }\n\n  public void setDate(String date) {\n    Date = date;\n  }\n\n  public String getStartTime() {\n    return startTime;\n  }\n\n  public void setStartTime(String startTime) {\n    this.startTime = startTime;\n  }\n\n  public String getEndTime() {\n    return endTime;\n  }\n\n  public void setEndTime(String endTime) {\n    this.endTime = endTime;\n  }\n\n  public String getStartPoint() {\n    return startPoint;\n  }\n\n  public void setStartPoint(String startPoint) {\n    this.startPoint = startPoint;\n  }\n\n  public String getEndPoint() {\n    return endPoint;\n  }\n\n  public void setEndPoint(String endPoint) {\n    this.endPoint = endPoint;\n  }\n\n  public String getManCodeOne() {\n    return manCodeOne;\n  }\n\n  public void setManCodeOne(String manCodeOne) {\n    this.manCodeOne = manCodeOne;\n  }\n\n  public String getManCodeTwo() {\n    return manCodeTwo;\n  }\n\n  public void setManCodeTwo(String manCodeTwo) {\n    this.manCodeTwo = manCodeTwo;\n  }\n\n  public String getManCodeThree() {\n    return manCodeThree;\n  }\n\n  public void setManCodeThree(String manCodeThree) {\n    this.manCodeThree = manCodeThree;\n  }\n\n  public int getMeasureType() {\n    return measureType;\n  }\n\n  public void setMeasureType(int measureType) {\n    this.measureType = measureType;\n  }\n\n  public String getOneOrTwoMeasure() {\n    return oneOrTwoMeasure;\n  }\n\n  public void setOneOrTwoMeasure(String oneOrTwoMeasure) {\n    this.oneOrTwoMeasure = oneOrTwoMeasure;\n  }\n\n  public Boolean getFlag() {\n    return flag;\n  }\n\n  public void setFlag(Boolean flag) {\n    this.flag = flag;\n  }\n\n  public int getIsUpload() {\n    return isUpload;\n  }\n\n  public void setIsUpload(int isUpload) {\n    this.isUpload = isUpload;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super DataModel \n.super java/lang/Object \n.field private ID Ljava/lang/String; \n.field private Date Ljava/lang/String; \n.field private startTime Ljava/lang/String; \n.field private endTime Ljava/lang/String; \n.field private startPoint Ljava/lang/String; \n.field private endPoint Ljava/lang/String; \n.field private manCodeOne Ljava/lang/String; \n.field private manCodeTwo Ljava/lang/String; \n.field private manCodeThree Ljava/lang/String; \n.field private isUpload I \n.field private measureType I \n.field private oneOrTwoMeasure Ljava/lang/String; \n.field private flag Ljava/lang/Boolean; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getID : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataModel ID Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 22 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setID : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DataModel ID Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 25 \n            L5 26 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getDate : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataModel Date Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 28 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setDate : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DataModel Date Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 31 \n            L5 32 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getStartTime : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataModel startTime Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setStartTime : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DataModel startTime Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 37 \n            L5 38 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getEndTime : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataModel endTime Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 40 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setEndTime : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DataModel endTime Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 43 \n            L5 44 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getStartPoint : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataModel startPoint Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setStartPoint : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DataModel startPoint Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 49 \n            L5 50 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getEndPoint : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataModel endPoint Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 52 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setEndPoint : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DataModel endPoint Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 55 \n            L5 56 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getManCodeOne : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataModel manCodeOne Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 58 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setManCodeOne : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DataModel manCodeOne Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 61 \n            L5 62 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getManCodeTwo : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataModel manCodeTwo Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 64 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setManCodeTwo : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DataModel manCodeTwo Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 67 \n            L5 68 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getManCodeThree : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataModel manCodeThree Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 70 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setManCodeThree : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DataModel manCodeThree Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 73 \n            L5 74 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getMeasureType : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataModel measureType I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 76 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setMeasureType : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field DataModel measureType I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 79 \n            L5 80 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getOneOrTwoMeasure : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataModel oneOrTwoMeasure Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 83 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setOneOrTwoMeasure : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DataModel oneOrTwoMeasure Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 86 \n            L5 87 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFlag : ()Ljava/lang/Boolean; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataModel flag Ljava/lang/Boolean; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 89 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setFlag : (Ljava/lang/Boolean;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field DataModel flag Ljava/lang/Boolean; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 92 \n            L5 93 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getIsUpload : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field DataModel isUpload I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 95 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setIsUpload : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field DataModel isUpload I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 98 \n            L5 99 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'DataModel.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 04:43:06 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class DataModel_ESTest extends DataModel_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setStartTime(\"u<\u007fZ<qE:{p'a>\");\n      String string0 = dataModel0.getStartTime();\n      assertEquals(\"u<\u007fZ<qE:{p'a>\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setStartTime(\"\");\n      String string0 = dataModel0.getStartTime();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setStartPoint(\"(2su(Ls&=}YN\");\n      String string0 = dataModel0.getStartPoint();\n      assertEquals(\"(2su(Ls&=}YN\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setStartPoint(\"\");\n      String string0 = dataModel0.getStartPoint();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setOneOrTwoMeasure(\"yY*8[Yiqogjn1\");\n      String string0 = dataModel0.getOneOrTwoMeasure();\n      assertEquals(\"yY*8[Yiqogjn1\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setOneOrTwoMeasure(\"\");\n      String string0 = dataModel0.getOneOrTwoMeasure();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setMeasureType(1);\n      int int0 = dataModel0.getMeasureType();\n      assertEquals(1, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setMeasureType((-48881));\n      int int0 = dataModel0.getMeasureType();\n      assertEquals((-48881), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setManCodeTwo(\"(2su(Ls&=}YN\");\n      String string0 = dataModel0.getManCodeTwo();\n      assertEquals(\"(2su(Ls&=}YN\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setManCodeThree(\"DataModel\");\n      String string0 = dataModel0.getManCodeThree();\n      assertEquals(\"DataModel\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setManCodeOne(\"\");\n      String string0 = dataModel0.getManCodeOne();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setIsUpload(1);\n      int int0 = dataModel0.getIsUpload();\n      assertEquals(1, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setIsUpload((-66994));\n      int int0 = dataModel0.getIsUpload();\n      assertEquals((-66994), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setID(\"(2su(Ls&=}YN\");\n      String string0 = dataModel0.getID();\n      assertEquals(\"(2su(Ls&=}YN\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      Boolean boolean0 = Boolean.TRUE;\n      dataModel0.setFlag(boolean0);\n      Boolean boolean1 = dataModel0.getFlag();\n      assertTrue(boolean1);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      Boolean boolean0 = new Boolean(\"rAy3:{%+7`z&vSOEX9\u007f\");\n      dataModel0.setFlag(boolean0);\n      Boolean boolean1 = dataModel0.getFlag();\n      assertFalse(boolean1);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setEndTime(\"S3\");\n      String string0 = dataModel0.getEndTime();\n      assertEquals(\"S3\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setEndPoint(\"v} \");\n      String string0 = dataModel0.getEndPoint();\n      assertEquals(\"v} \", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setDate(\"u<\u007fZ<qE:{p'a>\");\n      String string0 = dataModel0.getDate();\n      assertEquals(\"u<\u007fZ<qE:{p'a>\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setDate(\"\");\n      String string0 = dataModel0.getDate();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setManCodeThree(\"\");\n      String string0 = dataModel0.getManCodeThree();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setEndPoint(\"\");\n      String string0 = dataModel0.getEndPoint();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test22()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      String string0 = dataModel0.getOneOrTwoMeasure();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test23()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setManCodeOne(\"DataModel\");\n      String string0 = dataModel0.getManCodeOne();\n      assertEquals(\"DataModel\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test24()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setID(\"\");\n      String string0 = dataModel0.getID();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test25()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      Boolean boolean0 = dataModel0.getFlag();\n      assertNull(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test26()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      int int0 = dataModel0.getIsUpload();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test27()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      String string0 = dataModel0.getEndPoint();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test28()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      String string0 = dataModel0.getManCodeThree();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test29()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      String string0 = dataModel0.getEndTime();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test30()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      String string0 = dataModel0.getDate();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test31()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setManCodeTwo(\"\");\n      String string0 = dataModel0.getManCodeTwo();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test32()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      String string0 = dataModel0.getManCodeTwo();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test33()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      String string0 = dataModel0.getManCodeOne();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test34()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      dataModel0.setEndTime(\"\");\n      String string0 = dataModel0.getEndTime();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test35()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      String string0 = dataModel0.getStartTime();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test36()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      int int0 = dataModel0.getMeasureType();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test37()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      String string0 = dataModel0.getStartPoint();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test38()  throws Throwable  {\n      DataModel dataModel0 = new DataModel();\n      String string0 = dataModel0.getID();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 04:43:06 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class DataModel_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"DataModel\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp74v4gvui\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DataModel_ESTest_scaffolding.class.getClassLoader() ,\n      \"DataModel\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DataModel_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"DataModel\"\n    );\n  }\n}\n", "class_idx": 238}
{"class_name": "StringTools", "java_source": "/** Created by oukingtim */\npublic class StringTools {\n\n  /**\n   * \u5c06\u9a7c\u5cf0\u5f0f\u547d\u540d\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u4e0b\u5212\u7ebf\u5927\u5199\u65b9\u5f0f\u3002\u5982\u679c\u8f6c\u6362\u524d\u7684\u9a7c\u5cf0\u5f0f\u547d\u540d\u7684\u5b57\u7b26\u4e32\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002</br> \u4f8b\u5982\uff1aHelloWorld->HELLO_WORLD\n   *\n   * @param name \u8f6c\u6362\u524d\u7684\u9a7c\u5cf0\u5f0f\u547d\u540d\u7684\u5b57\u7b26\u4e32\n   * @return \u8f6c\u6362\u540e\u4e0b\u5212\u7ebf\u5927\u5199\u65b9\u5f0f\u547d\u540d\u7684\u5b57\u7b26\u4e32\n   */\n  public static String underscoreName(String name) {\n    StringBuilder result = new StringBuilder();\n    if (name != null && name.length() > 0) {\n      // \u5c06\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5904\u7406\u6210\u5927\u5199\n      result.append(name.substring(0, 1).toUpperCase());\n      // \u5faa\u73af\u5904\u7406\u5176\u4f59\u5b57\u7b26\n      for (int i = 1; i < name.length(); i++) {\n        String s = name.substring(i, i + 1);\n        // \u5728\u5927\u5199\u5b57\u6bcd\u524d\u6dfb\u52a0\u4e0b\u5212\u7ebf\n        if (s.equals(s.toUpperCase()) && !Character.isDigit(s.charAt(0))) {\n          result.append(\"_\");\n        }\n        // \u5176\u4ed6\u5b57\u7b26\u76f4\u63a5\u8f6c\u6210\u5927\u5199\n        result.append(s.toUpperCase());\n      }\n    }\n    return result.toString();\n  }\n\n  /**\n   * \u5c06\u4e0b\u5212\u7ebf\u5927\u5199\u65b9\u5f0f\u547d\u540d\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u9a7c\u5cf0\u5f0f\u3002\u5982\u679c\u8f6c\u6362\u524d\u7684\u4e0b\u5212\u7ebf\u5927\u5199\u65b9\u5f0f\u547d\u540d\u7684\u5b57\u7b26\u4e32\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002</br> \u4f8b\u5982\uff1aHELLO_WORLD->HelloWorld\n   *\n   * @param name \u8f6c\u6362\u524d\u7684\u4e0b\u5212\u7ebf\u5927\u5199\u65b9\u5f0f\u547d\u540d\u7684\u5b57\u7b26\u4e32\n   * @return \u8f6c\u6362\u540e\u7684\u9a7c\u5cf0\u5f0f\u547d\u540d\u7684\u5b57\u7b26\u4e32\n   */\n  public static String camelName(String name) {\n    StringBuilder result = new StringBuilder();\n    // \u5feb\u901f\u68c0\u67e5\n    if (name == null || name.isEmpty()) {\n      // \u6ca1\u5fc5\u8981\u8f6c\u6362\n      return \"\";\n    } else if (!name.contains(\"_\")) {\n      // \u4e0d\u542b\u4e0b\u5212\u7ebf\uff0c\u4ec5\u5c06\u9996\u5b57\u6bcd\u5c0f\u5199\n      return name.substring(0, 1).toLowerCase() + name.substring(1);\n    }\n    // \u7528\u4e0b\u5212\u7ebf\u5c06\u539f\u59cb\u5b57\u7b26\u4e32\u5206\u5272\n    String camels[] = name.split(\"_\");\n    for (String camel : camels) {\n      // \u8df3\u8fc7\u539f\u59cb\u5b57\u7b26\u4e32\u4e2d\u5f00\u5934\u3001\u7ed3\u5c3e\u7684\u4e0b\u6362\u7ebf\u6216\u53cc\u91cd\u4e0b\u5212\u7ebf\n      if (camel.isEmpty()) {\n        continue;\n      }\n      // \u5904\u7406\u771f\u6b63\u7684\u9a7c\u5cf0\u7247\u6bb5\n      if (result.length() == 0) {\n        // \u7b2c\u4e00\u4e2a\u9a7c\u5cf0\u7247\u6bb5\uff0c\u5168\u90e8\u5b57\u6bcd\u90fd\u5c0f\u5199\n        result.append(camel.toLowerCase());\n      } else {\n        // \u5176\u4ed6\u7684\u9a7c\u5cf0\u7247\u6bb5\uff0c\u9996\u5b57\u6bcd\u5927\u5199\n        result.append(camel.substring(0, 1).toUpperCase());\n        result.append(camel.substring(1).toLowerCase());\n      }\n    }\n    return result.toString();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super StringTools \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static underscoreName : (Ljava/lang/String;)Ljava/lang/String; \n    .code stack 4 locals 4 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     astore_1 \nL8:     aload_0 \nL9:     ifnull L96 \nL12:    aload_0 \nL13:    invokevirtual Method java/lang/String length ()I \nL16:    ifle L96 \nL19:    aload_1 \nL20:    aload_0 \nL21:    iconst_0 \nL22:    iconst_1 \nL23:    invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL26:    invokevirtual Method java/lang/String toUpperCase ()Ljava/lang/String; \nL29:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL32:    pop \nL33:    iconst_1 \nL34:    istore_2 \n\n        .stack append Object java/lang/StringBuilder Integer \nL35:    iload_2 \nL36:    aload_0 \nL37:    invokevirtual Method java/lang/String length ()I \nL40:    if_icmpge L96 \nL43:    aload_0 \nL44:    iload_2 \nL45:    iload_2 \nL46:    iconst_1 \nL47:    iadd \nL48:    invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL51:    astore_3 \nL52:    aload_3 \nL53:    aload_3 \nL54:    invokevirtual Method java/lang/String toUpperCase ()Ljava/lang/String; \nL57:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL60:    ifeq L81 \nL63:    aload_3 \nL64:    iconst_0 \nL65:    invokevirtual Method java/lang/String charAt (I)C \nL68:    invokestatic Method java/lang/Character isDigit (C)Z \nL71:    ifne L81 \nL74:    aload_1 \nL75:    ldc '_' \nL77:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL80:    pop \n\n        .stack append Object java/lang/String \nL81:    aload_1 \nL82:    aload_3 \nL83:    invokevirtual Method java/lang/String toUpperCase ()Ljava/lang/String; \nL86:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL89:    pop \nL90:    iinc 2 1 \nL93:    goto L35 \n\n        .stack chop 2 \nL96:    aload_1 \nL97:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL100:   areturn \nL101:   \n        .linenumbertable \n            L0 15 \n            L8 16 \n            L19 18 \n            L33 20 \n            L43 21 \n            L52 23 \n            L74 24 \n            L81 27 \n            L90 20 \n            L96 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static camelName : (Ljava/lang/String;)Ljava/lang/String; \n    .code stack 4 locals 7 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     astore_1 \nL8:     aload_0 \nL9:     ifnull L19 \nL12:    aload_0 \nL13:    invokevirtual Method java/lang/String isEmpty ()Z \nL16:    ifeq L22 \n\n        .stack append Object java/lang/StringBuilder \nL19:    ldc '' \nL21:    areturn \n\n        .stack same \nL22:    aload_0 \nL23:    ldc '_' \nL25:    invokevirtual Method java/lang/String contains (Ljava/lang/CharSequence;)Z \nL28:    ifne L62 \nL31:    new java/lang/StringBuilder \nL34:    dup \nL35:    invokespecial Method java/lang/StringBuilder <init> ()V \nL38:    aload_0 \nL39:    iconst_0 \nL40:    iconst_1 \nL41:    invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL44:    invokevirtual Method java/lang/String toLowerCase ()Ljava/lang/String; \nL47:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL50:    aload_0 \nL51:    iconst_1 \nL52:    invokevirtual Method java/lang/String substring (I)Ljava/lang/String; \nL55:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL58:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL61:    areturn \n\n        .stack same \nL62:    aload_0 \nL63:    ldc '_' \nL65:    invokevirtual Method java/lang/String split (Ljava/lang/String;)[Ljava/lang/String; \nL68:    astore_2 \nL69:    aload_2 \nL70:    astore_3 \nL71:    aload_3 \nL72:    arraylength \nL73:    istore 4 \nL75:    iconst_0 \nL76:    istore 5 \n\n        .stack full \n            locals Object java/lang/String Object java/lang/StringBuilder Object [Ljava/lang/String; Object [Ljava/lang/String; Integer Integer \n            stack \n        .end stack \nL78:    iload 5 \nL80:    iload 4 \nL82:    if_icmpge L157 \nL85:    aload_3 \nL86:    iload 5 \nL88:    aaload \nL89:    astore 6 \nL91:    aload 6 \nL93:    invokevirtual Method java/lang/String isEmpty ()Z \nL96:    ifeq L102 \nL99:    goto L151 \n\n        .stack append Object java/lang/String \nL102:   aload_1 \nL103:   invokevirtual Method java/lang/StringBuilder length ()I \nL106:   ifne L122 \nL109:   aload_1 \nL110:   aload 6 \nL112:   invokevirtual Method java/lang/String toLowerCase ()Ljava/lang/String; \nL115:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL118:   pop \nL119:   goto L151 \n\n        .stack same \nL122:   aload_1 \nL123:   aload 6 \nL125:   iconst_0 \nL126:   iconst_1 \nL127:   invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL130:   invokevirtual Method java/lang/String toUpperCase ()Ljava/lang/String; \nL133:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL136:   pop \nL137:   aload_1 \nL138:   aload 6 \nL140:   iconst_1 \nL141:   invokevirtual Method java/lang/String substring (I)Ljava/lang/String; \nL144:   invokevirtual Method java/lang/String toLowerCase ()Ljava/lang/String; \nL147:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL150:   pop \n\n        .stack chop 1 \nL151:   iinc 5 1 \nL154:   goto L78 \n\n        .stack chop 3 \nL157:   aload_1 \nL158:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL161:   areturn \nL162:   \n        .linenumbertable \n            L0 40 \n            L8 42 \n            L19 44 \n            L22 45 \n            L31 47 \n            L62 50 \n            L69 51 \n            L91 53 \n            L99 54 \n            L102 57 \n            L109 59 \n            L122 62 \n            L137 63 \n            L151 51 \n            L157 66 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'StringTools.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 21:20:20 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class StringTools_ESTest extends StringTools_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      StringTools.camelName(\"\");\n      StringTools.underscoreName((String) null);\n      StringTools.underscoreName((String) null);\n      StringTools stringTools0 = new StringTools();\n      StringTools.camelName(\"\");\n      StringTools.camelName(\"^H/_I}\");\n      StringTools.underscoreName((String) null);\n      StringTools.underscoreName(\"]\");\n      StringTools.camelName(\"\");\n      StringTools.camelName(\"^h/I}\");\n      String string0 = StringTools.camelName(\"^h/I}\");\n      StringTools.camelName(\"gv<Q\");\n      StringTools.camelName(\"gv<Q\");\n      StringTools.underscoreName(\"^h/I}\");\n      StringTools.camelName((String) null);\n      StringTools.underscoreName(\"^h/I}\");\n      StringTools.camelName(\"^h/I}\");\n      StringTools.camelName((String) null);\n      StringTools.camelName(\"^H/_I}\");\n      StringTools.underscoreName(\"<`a\\\"^r\");\n      StringTools.underscoreName(\"^H_/_I_}\");\n      StringTools.underscoreName(\"^h/I}\");\n      StringTools.camelName(\"^h/I}\");\n      StringTools.underscoreName(\"q~cH!,\");\n      String string1 = StringTools.camelName(\"^H/_I}\");\n      assertTrue(string1.equals((Object)string0));\n      \n      StringTools.camelName((String) null);\n      StringTools.camelName(\"<_`A_\\\"_^R\");\n      String string2 = StringTools.camelName(\"^_H___/___I___}\");\n      assertEquals(\"^H/I}\", string2);\n      \n      String string3 = StringTools.underscoreName(\"]Ph7_SG:\");\n      assertEquals(\"]_PH7___S_G_:\", string3);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      StringTools stringTools0 = new StringTools();\n      StringTools.underscoreName((String) null);\n      StringTools.camelName(\"\");\n      StringTools.camelName(\"\");\n      StringTools.camelName(\"\");\n      StringTools.underscoreName(\"\");\n      String string0 = StringTools.underscoreName(\"p=ROM.p;Oa\");\n      String string1 = StringTools.camelName(\"p+> S*\");\n      assertEquals(\"p+> S*\", string1);\n      \n      StringTools.underscoreName(\"\");\n      StringTools.camelName(\"\");\n      StringTools.camelName(\"\");\n      StringTools.camelName(\"\");\n      StringTools.underscoreName(\"%\\\"N|iq>1U\u007ffca2Un>\");\n      StringTools.underscoreName(\"StringTools\");\n      StringTools.underscoreName(\"\");\n      String string2 = StringTools.underscoreName(\"^+'hS*/\");\n      assertEquals(\"^_+_'H_S_*_/\", string2);\n      \n      StringTools.underscoreName(\"'6X`GF\");\n      String string3 = StringTools.underscoreName(\"\");\n      assertFalse(string3.equals((Object)string0));\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      StringTools.camelName(\"\");\n      StringTools.camelName(\"\");\n      StringTools.underscoreName(\"\");\n      StringTools.camelName((String) null);\n      StringTools.underscoreName(\"\");\n      StringTools.underscoreName((String) null);\n      StringTools.camelName(\"\");\n      String string0 = StringTools.camelName(\"rbFyP7x\\\"~%AYb*lZc\");\n      assertEquals(\"rbFyP7x\\\"~%AYb*lZc\", string0);\n      \n      StringTools stringTools0 = new StringTools();\n      String string1 = StringTools.underscoreName(\"!RfytB3Fh/#DHk[\");\n      assertEquals(\"!_RFYT_B3_FH_/_#_D_HK_[\", string1);\n      \n      StringTools.underscoreName(\"\");\n      StringTools.underscoreName(\"\");\n      String string2 = StringTools.camelName(\"\");\n      assertFalse(string2.equals((Object)string1));\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      StringTools.camelName(\"es#G9Dc&bJ4;6Za1U\");\n      StringTools.underscoreName(\"^5LBf4IZN\");\n      StringTools.camelName(\"+uBl/|f#!21*.F*@F\");\n      StringTools.underscoreName(\"\");\n      StringTools stringTools0 = new StringTools();\n      String string0 = StringTools.camelName(\"+uBl/|f#!21*.F*@F\");\n      assertEquals(\"+uBl/|f#!21*.F*@F\", string0);\n      \n      StringTools.camelName((String) null);\n      String string1 = StringTools.underscoreName(\"es#G9Dc&bJ4;6Za1U\");\n      assertEquals(\"ES_#_G9_DC_&B_J4_;6_ZA1_U\", string1);\n      \n      String string2 = StringTools.camelName(\"\");\n      assertFalse(string2.equals((Object)string1));\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      String string0 = StringTools.underscoreName(\"EoUEB:C\\\"/\u007fAl;]\");\n      assertEquals(\"EO_U_E_B_:_C_\\\"_/_\u007f_AL_;_]\", string0);\n      \n      StringTools.underscoreName((String) null);\n      StringTools stringTools0 = new StringTools();\n      String string1 = StringTools.camelName(\"EoUEB:C\\\"/\u007fAl;]\");\n      assertEquals(\"eoUEB:C\\\"/\u007fAl;]\", string1);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      StringTools stringTools0 = new StringTools();\n      StringTools.underscoreName(\"B3DCzhrJS]\");\n      String string0 = StringTools.underscoreName(\"hOuq{MP1k)4{j[5bq05\");\n      StringTools.underscoreName(\".s4d2DW~Y\");\n      StringTools.camelName(\"Tzf~y?LsHF\");\n      String string1 = StringTools.camelName(\"fi )N\");\n      assertEquals(\"fi )N\", string1);\n      \n      String string2 = StringTools.underscoreName(\"Tzf~y?LsHF\");\n      assertEquals(\"TZF_~Y_?_LS_H_F\", string2);\n      \n      StringTools.underscoreName(\"\");\n      StringTools.underscoreName(\"\");\n      StringTools.underscoreName(\"\");\n      StringTools.underscoreName(\"\");\n      StringTools.camelName(\"\");\n      String string3 = StringTools.camelName(\"\");\n      assertFalse(string3.equals((Object)string0));\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      StringTools stringTools0 = new StringTools();\n      StringTools.camelName(\"}V3g9k#zJ5O6%*Qnv\");\n      StringTools.camelName(\"L\");\n      StringTools.camelName(\"StringTools\");\n      StringTools.camelName(\"Vkyp$T6)`\");\n      StringTools.underscoreName(\"\");\n      StringTools.camelName(\"pvCUj\u007ff${35qm(a\");\n      StringTools.underscoreName(\"FrSV5Re\");\n      StringTools.underscoreName(\"\");\n      StringTools.underscoreName(\"\");\n      StringTools.camelName(\"\");\n      StringTools.underscoreName(\"\");\n      StringTools.underscoreName(\"\");\n      StringTools.underscoreName(\"/s+4`\");\n      StringTools.underscoreName(\"\");\n      StringTools.underscoreName(\"\");\n      StringTools.underscoreName((String) null);\n      String string0 = StringTools.camelName(\"|YjD0v)q\");\n      assertEquals(\"|YjD0v)q\", string0);\n      \n      String string1 = StringTools.underscoreName(\"StringTools\");\n      assertEquals(\"STRING_TOOLS\", string1);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      StringTools.camelName(\"tjD*:O#p7f\");\n      StringTools.camelName(\"tjD*:O#p7f\");\n      StringTools.underscoreName(\"tjD*:O#p7f\");\n      StringTools.underscoreName(\"tjD*:O#p7f\");\n      StringTools.camelName(\"tjD*:O#p7f\");\n      String string0 = StringTools.camelName(\"TJ_D_*_:_O_#P7F\");\n      StringTools.underscoreName(\"-E.8ARC9`@*veJl|4\");\n      StringTools.camelName(\"tjD*:O#p7f\");\n      StringTools.camelName(\"Jfd\");\n      StringTools.underscoreName(\"tjD*:O#p7f\");\n      StringTools.underscoreName(\"9;$yzlDO-ml\");\n      StringTools stringTools0 = new StringTools();\n      StringTools.camelName(\"_\");\n      String string1 = StringTools.underscoreName(\"tjD*:O#p7f\");\n      assertEquals(\"TJ_D_*_:_O_#P7F\", string1);\n      \n      StringTools.camelName(\"\");\n      StringTools.underscoreName(\"\");\n      String string2 = StringTools.camelName(\"tjD*:O#p7f\");\n      assertEquals(\"tjD*:O#p7f\", string2);\n      assertTrue(string2.equals((Object)string0));\n      \n      String string3 = StringTools.underscoreName((String) null);\n      assertFalse(string3.equals((Object)string0));\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      StringTools stringTools0 = new StringTools();\n      StringTools.camelName(\"\\\"O5 eDE:\");\n      StringTools.camelName(\"\");\n      String string0 = StringTools.underscoreName(\"-z0zd:d~9;{\\\"~\");\n      assertEquals(\"-Z0ZD_:D_~9_;_{_\\\"_~\", string0);\n      \n      String string1 = StringTools.camelName(\"\u007f[F@\u007f3c&_!$_W2\");\n      assertEquals(\"\u007f[f@\u007f3c&!$W2\", string1);\n      \n      StringTools.camelName(\"\\\"O5 eDE:\");\n      StringTools.underscoreName(\"\");\n      StringTools.underscoreName(\"\u007f[f@\u007f3c&!$W2\");\n      String string2 = StringTools.camelName(\"\\\"O5 eDE:\");\n      assertEquals(\"\\\"O5 eDE:\", string2);\n      \n      StringTools.underscoreName(\" o:?.1yI\u007fq\");\n      StringTools.underscoreName(\"P|tg<?3@:/-uW]\");\n      StringTools.camelName(\"\");\n      String string3 = StringTools.camelName(\"\");\n      assertFalse(string3.equals((Object)string1));\n  }\n\n  @Test(timeout = 4000)\n  public void test9()  throws Throwable  {\n      StringTools.camelName((String) null);\n      StringTools.underscoreName(\"\");\n      StringTools stringTools0 = new StringTools();\n      String string0 = StringTools.camelName(\"StringTools\");\n      assertEquals(\"stringTools\", string0);\n      \n      String string1 = StringTools.camelName(\"z{0]J\u007fi_It:P\");\n      assertEquals(\"z{0]j\u007fiIt:p\", string1);\n      \n      StringTools.camelName(\"S+%v\");\n      StringTools.underscoreName(\"\");\n      StringTools.underscoreName(\"\");\n      StringTools.camelName(\"\");\n      String string2 = StringTools.camelName((String) null);\n      assertFalse(string2.equals((Object)string1));\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 21:20:20 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class StringTools_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"StringTools\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpxh02mj3u\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StringTools_ESTest_scaffolding.class.getClassLoader() ,\n      \"StringTools\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StringTools_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"StringTools\"\n    );\n  }\n}\n", "class_idx": 239}
{"class_name": "TestScheduledExecutorService2", "java_source": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.ScheduledExecutorService;\nimport java.util.concurrent.TimeUnit;\n\npublic class TestScheduledExecutorService2 {\n\n  public static void main(String[] args) {\n    final List<String> mailList = new ArrayList<String>();\n    final List<String> smsList = new ArrayList<String>();\n    final List<String> faxList = new ArrayList<String>();\n\n    mailList.add(\" mail-zhaoqian@qq.com\");\n    mailList.add(\" mail-zhaoqian@foxmail.com\");\n    mailList.add(\" mail-zhaoqian@163.com\");\n    mailList.add(\" mail-zhaoqian@126.com\");\n    mailList.add(\" mail-zhaoqian@gmail.com\");\n\n    smsList.add(\" sms-110\");\n    smsList.add(\" sms-120\");\n    smsList.add(\" sms-119\");\n\n    faxList.add(\" fax-11122233\");\n    faxList.add(\" fax-00099988\");\n\n    ScheduledExecutorService execService = Executors.newScheduledThreadPool(3);\n    //\t\texecService.scheduleWithFixedDelay(new Runnable() {\n    //\n    //\t\t\t@Override\n    //\t\t\tpublic void run() {\n    //\t\t\t\tfor ( int i=0;i<mailList.size();i++ )\n    //\t\t\t\t{\n    //\t\t\t\t\tSystem.out.println(\"\u4efb\u52a1Mail\uff1a\" +\n    // Thread.currentThread().getName()+\"---\"+mailList.get(i)+\"\u65f6\u95f4\u4e3a\uff1a \" + System.currentTimeMillis());\n    //\t\t\t\t\tmailList.remove(i);\n    //\t\t\t\t}\n    //\t\t\t}\n    //\t\t}, 2, 2, TimeUnit.SECONDS);\n    //\n    execService.scheduleWithFixedDelay(\n        new Runnable() {\n\n          public void run() {\n            List<String> smsList = new ArrayList<String>();\n            smsList.add(\" sms-110\");\n            for (int i = 0; i < smsList.size(); i++) {\n              System.out.println(\n                  \"\u4efb\u52a1Sms\uff1a\"\n                      + Thread.currentThread().getName()\n                      + \"---\"\n                      + smsList.get(i)\n                      + \"\u65f6\u95f4\u4e3a\uff1a \"\n                      + System.currentTimeMillis());\n            }\n          }\n        },\n        2,\n        2,\n        TimeUnit.SECONDS);\n\n    execService.scheduleWithFixedDelay(\n        new Runnable() {\n\n          public void run() {\n            System.out.println(\"begin\");\n            List<String> faxList = new ArrayList<String>();\n            faxList.add(\" fax-11122233\");\n            faxList.add(\" fax-00099988\");\n            for (int i = 0; i < faxList.size(); i++) {\n              System.out.println(\n                  \"\u4efb\u52a1Fax\uff1a\"\n                      + Thread.currentThread().getName()\n                      + \"---\"\n                      + faxList.get(i)\n                      + \"\u65f6\u95f4\u4e3a\uff1a \"\n                      + System.currentTimeMillis());\n            }\n            System.out.println(\"end\");\n          }\n        },\n        2,\n        2,\n        TimeUnit.SECONDS);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super TestScheduledExecutorService2 \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 9 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 7 locals 5 \nL0:     new java/util/ArrayList \nL3:     dup \nL4:     invokespecial Method java/util/ArrayList <init> ()V \nL7:     astore_1 \nL8:     new java/util/ArrayList \nL11:    dup \nL12:    invokespecial Method java/util/ArrayList <init> ()V \nL15:    astore_2 \nL16:    new java/util/ArrayList \nL19:    dup \nL20:    invokespecial Method java/util/ArrayList <init> ()V \nL23:    astore_3 \nL24:    aload_1 \nL25:    ldc ' mail-zhaoqian@qq.com' \nL27:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL32:    pop \nL33:    aload_1 \nL34:    ldc ' mail-zhaoqian@foxmail.com' \nL36:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL41:    pop \nL42:    aload_1 \nL43:    ldc ' mail-zhaoqian@163.com' \nL45:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL50:    pop \nL51:    aload_1 \nL52:    ldc ' mail-zhaoqian@126.com' \nL54:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL59:    pop \nL60:    aload_1 \nL61:    ldc ' mail-zhaoqian@gmail.com' \nL63:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL68:    pop \nL69:    aload_2 \nL70:    ldc ' sms-110' \nL72:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL77:    pop \nL78:    aload_2 \nL79:    ldc ' sms-120' \nL81:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL86:    pop \nL87:    aload_2 \nL88:    ldc ' sms-119' \nL90:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL95:    pop \nL96:    aload_3 \nL97:    ldc ' fax-11122233' \nL99:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL104:   pop \nL105:   aload_3 \nL106:   ldc ' fax-00099988' \nL108:   invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL113:   pop \nL114:   iconst_3 \nL115:   invokestatic Method java/util/concurrent/Executors newScheduledThreadPool (I)Ljava/util/concurrent/ScheduledExecutorService; \nL118:   astore 4 \nL120:   aload 4 \nL122:   new TestScheduledExecutorService2$1 \nL125:   dup \nL126:   invokespecial Method TestScheduledExecutorService2$1 <init> ()V \nL129:   ldc2_w 2L \nL132:   ldc2_w 2L \nL135:   getstatic Field java/util/concurrent/TimeUnit SECONDS Ljava/util/concurrent/TimeUnit; \nL138:   invokeinterface InterfaceMethod java/util/concurrent/ScheduledExecutorService scheduleWithFixedDelay (Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture; 7 \nL143:   pop \nL144:   aload 4 \nL146:   new TestScheduledExecutorService2$2 \nL149:   dup \nL150:   invokespecial Method TestScheduledExecutorService2$2 <init> ()V \nL153:   ldc2_w 2L \nL156:   ldc2_w 2L \nL159:   getstatic Field java/util/concurrent/TimeUnit SECONDS Ljava/util/concurrent/TimeUnit; \nL162:   invokeinterface InterfaceMethod java/util/concurrent/ScheduledExecutorService scheduleWithFixedDelay (Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture; 7 \nL167:   pop \nL168:   return \nL169:   \n        .linenumbertable \n            L0 12 \n            L8 13 \n            L16 14 \n            L24 16 \n            L33 17 \n            L42 18 \n            L51 19 \n            L60 20 \n            L69 22 \n            L78 23 \n            L87 24 \n            L96 26 \n            L105 27 \n            L114 29 \n            L120 42 \n            L144 54 \n            L168 68 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'TestScheduledExecutorService2.java' \n.innerclasses \n    TestScheduledExecutorService2$2 [0] [0] static \n    TestScheduledExecutorService2$1 [0] [0] static \n.end innerclasses \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 05:15:36 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class TestScheduledExecutorService2_ESTest extends TestScheduledExecutorService2_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String[] stringArray0 = new String[0];\n      // Undeclared exception!\n      try { \n        TestScheduledExecutorService2.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // TestScheduledExecutorService2$1\n         //\n         verifyException(\"TestScheduledExecutorService2\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      TestScheduledExecutorService2 testScheduledExecutorService2_0 = new TestScheduledExecutorService2();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 05:15:36 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class TestScheduledExecutorService2_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"TestScheduledExecutorService2\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpj62n7pei\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(TestScheduledExecutorService2_ESTest_scaffolding.class.getClassLoader() ,\n      \"TestScheduledExecutorService2\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(TestScheduledExecutorService2_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"TestScheduledExecutorService2\"\n    );\n  }\n}\n", "class_idx": 240}
{"class_name": "Price", "java_source": "/**\n * @author chenhaipeng\n * @version 1.0\n * @date 2015/10/30 18:07\n */\npublic abstract class Price {\n  public abstract void getPrice();\n}\n", "jasm_code": ".version 52 0 \n.class public super abstract Price \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public abstract getPrice : ()V \n.end method \n.sourcefile 'Price.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 20:00:15 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Price_ESTest extends Price_ESTest_scaffolding {\n  @Test\n  public void notGeneratedAnyTest() {\n    // EvoSuite did not generate any tests\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 20:00:15 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Price_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Price\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    /*No java.lang.System property to set*/\n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Price_ESTest_scaffolding.class.getClassLoader() ,\n      \"Price\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Price_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Price\"\n    );\n  }\n}\n", "class_idx": 241}
{"class_name": "RktLauncherServiceException", "java_source": "/*-\n * -\\-\\-\n * rkt-launcher\n * --\n *\n * --\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * -/-/-\n */\n\npublic class RktLauncherServiceException extends RuntimeException {\n\n  public RktLauncherServiceException(String message, Throwable cause) {\n    super(message, cause);\n  }\n\n  public RktLauncherServiceException(Throwable cause) {\n    super(cause);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super RktLauncherServiceException \n.super java/lang/RuntimeException \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/Throwable;)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     aload_2 \nL3:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;Ljava/lang/Throwable;)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 25 \n            L6 26 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/Throwable;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/Throwable;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 29 \n            L5 30 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'RktLauncherServiceException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 07:12:25 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.lang.MockThrowable;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class RktLauncherServiceException_ESTest extends RktLauncherServiceException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      MockThrowable mockThrowable0 = new MockThrowable();\n      RktLauncherServiceException rktLauncherServiceException0 = new RktLauncherServiceException(mockThrowable0);\n      RktLauncherServiceException rktLauncherServiceException1 = new RktLauncherServiceException((String) null, rktLauncherServiceException0);\n      assertFalse(rktLauncherServiceException1.equals((Object)rktLauncherServiceException0));\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 07:12:25 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class RktLauncherServiceException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"RktLauncherServiceException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpnyb69t9e\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(RktLauncherServiceException_ESTest_scaffolding.class.getClassLoader() ,\n      \"RktLauncherServiceException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(RktLauncherServiceException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"RktLauncherServiceException\"\n    );\n  }\n}\n", "class_idx": 242}
{"class_name": "GCMAlert", "java_source": "import java.io.Serializable;\n\n/** Used for parsing the GCM json payload for the 'alert' type */\npublic class GCMAlert implements Serializable {\n\n  private static final long serialVersionUID = 3906290674499996501L;\n  public boolean silent;\n}\n", "jasm_code": ".version 52 0 \n.class public super GCMAlert \n.super java/lang/Object \n.implements java/io/Serializable \n.field private static final serialVersionUID J = 3906290674499996501L \n.field public silent Z \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'GCMAlert.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 22:15:52 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class GCMAlert_ESTest extends GCMAlert_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      GCMAlert gCMAlert0 = new GCMAlert();\n      assertFalse(gCMAlert0.silent);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 22:15:52 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class GCMAlert_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"GCMAlert\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp2gsk_ras\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(GCMAlert_ESTest_scaffolding.class.getClassLoader() ,\n      \"GCMAlert\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(GCMAlert_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"GCMAlert\"\n    );\n  }\n}\n", "class_idx": 243}
{"class_name": "VideoShuffler", "java_source": "import java.io.File;\nimport java.io.FileFilter;\nimport java.util.*;\n\n/** Author : Aye Maung */\npublic class VideoShuffler {\n  private static final String VLC_EXE = \"C:\\\\Program Files (x86)\\\\VideoLAN\\\\VLC\\\\vlc.exe\";\n  private static final List<String> extensions =\n      Arrays.asList(\"avi\", \"wmv\", \"mp4\", \"mkv\", \"rmvb\", \"mpg\");\n\n  private static VideoShuffler instance = new VideoShuffler();\n\n  public static VideoShuffler getInstance() {\n    return instance;\n  }\n\n  public void openRandomVideo(String directoryPath) {\n    try {\n      File root = new File(directoryPath);\n      if (root == null || !root.isDirectory()) {\n        System.err.println(directoryPath + \" is not a folder\");\n        return;\n      }\n\n      System.out.println(\"Root Folder : \" + root.getAbsolutePath());\n      List<File> allInFolder = listFilesUnder(root);\n      if (allInFolder.isEmpty()) {\n        return;\n      }\n\n      System.out.println(\"Total files : \" + allInFolder.size());\n      Collections.shuffle(allInFolder);\n      File fileOpened = allInFolder.get(0);\n\n      ProcessBuilder pb = new ProcessBuilder(VLC_EXE, fileOpened.getAbsolutePath());\n      pb.start();\n\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n\n  private VideoShuffler() {}\n\n  private List<File> listFilesUnder(final File folder) {\n    List<File> retList = new ArrayList<>();\n    File[] eligibleFiles =\n        folder.listFiles(\n            new FileFilter() {\n              @Override\n              public boolean accept(File pathname) {\n                String[] splitName = pathname.getAbsolutePath().split(\"\\\\.\");\n                String ext = splitName[splitName.length - 1];\n                return pathname.isDirectory() || extensions.contains(ext);\n              }\n            });\n\n    for (final File fileEntry : eligibleFiles) {\n      if (fileEntry.isDirectory()) {\n        retList.addAll(listFilesUnder(fileEntry));\n      } else {\n        retList.add(fileEntry);\n      }\n    }\n\n    return retList;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super VideoShuffler \n.super java/lang/Object \n.field private static final VLC_EXE Ljava/lang/String; = 'C:\\\\Program Files (x86)\\\\VideoLAN\\\\VLC\\\\vlc.exe' \n.field private static final extensions Ljava/util/List; .fieldattributes \n    .signature Ljava/util/List<Ljava/lang/String;>; \n.end fieldattributes \n.field private static instance LVideoShuffler; \n\n.method public static getInstance : ()LVideoShuffler; \n    .code stack 1 locals 0 \nL0:     getstatic Field VideoShuffler instance LVideoShuffler; \nL3:     areturn \nL4:     \n        .linenumbertable \n            L0 15 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public openRandomVideo : (Ljava/lang/String;)V \n    .code stack 6 locals 6 \n        .catch java/lang/Exception from L0 to L45 using L171 \nL0:     new java/io/File \nL3:     dup \nL4:     aload_1 \nL5:     invokespecial Method java/io/File <init> (Ljava/lang/String;)V \nL8:     astore_2 \nL9:     aload_2 \nL10:    ifnull L20 \nL13:    aload_2 \nL14:    invokevirtual Method java/io/File isDirectory ()Z \nL17:    ifne L46 \n\n        .stack append Object java/io/File \nL20:    getstatic Field java/lang/System err Ljava/io/PrintStream; \nL23:    new java/lang/StringBuilder \nL26:    dup \nL27:    invokespecial Method java/lang/StringBuilder <init> ()V \nL30:    aload_1 \nL31:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL34:    ldc ' is not a folder' \nL36:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL39:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL42:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL45:    return \n        .catch java/lang/Exception from L46 to L89 using L171 \n\n        .stack same \nL46:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL49:    new java/lang/StringBuilder \nL52:    dup \nL53:    invokespecial Method java/lang/StringBuilder <init> ()V \nL56:    ldc 'Root Folder : ' \nL58:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL61:    aload_2 \nL62:    invokevirtual Method java/io/File getAbsolutePath ()Ljava/lang/String; \nL65:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL68:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL71:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL74:    aload_0 \nL75:    aload_2 \nL76:    invokespecial Method VideoShuffler listFilesUnder (Ljava/io/File;)Ljava/util/List; \nL79:    astore_3 \nL80:    aload_3 \nL81:    invokeinterface InterfaceMethod java/util/List isEmpty ()Z 1 \nL86:    ifeq L90 \nL89:    return \n        .catch java/lang/Exception from L90 to L168 using L171 \n\n        .stack append Object java/util/List \nL90:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL93:    new java/lang/StringBuilder \nL96:    dup \nL97:    invokespecial Method java/lang/StringBuilder <init> ()V \nL100:   ldc 'Total files : ' \nL102:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL105:   aload_3 \nL106:   invokeinterface InterfaceMethod java/util/List size ()I 1 \nL111:   invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL114:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL117:   invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL120:   aload_3 \nL121:   invokestatic Method java/util/Collections shuffle (Ljava/util/List;)V \nL124:   aload_3 \nL125:   iconst_0 \nL126:   invokeinterface InterfaceMethod java/util/List get (I)Ljava/lang/Object; 2 \nL131:   checkcast java/io/File \nL134:   astore 4 \nL136:   new java/lang/ProcessBuilder \nL139:   dup \nL140:   iconst_2 \nL141:   anewarray java/lang/String \nL144:   dup \nL145:   iconst_0 \nL146:   ldc 'C:\\\\Program Files (x86)\\\\VideoLAN\\\\VLC\\\\vlc.exe' \nL148:   aastore \nL149:   dup \nL150:   iconst_1 \nL151:   aload 4 \nL153:   invokevirtual Method java/io/File getAbsolutePath ()Ljava/lang/String; \nL156:   aastore \nL157:   invokespecial Method java/lang/ProcessBuilder <init> ([Ljava/lang/String;)V \nL160:   astore 5 \nL162:   aload 5 \nL164:   invokevirtual Method java/lang/ProcessBuilder start ()Ljava/lang/Process; \nL167:   pop \nL168:   goto L176 \n\n        .stack full \n            locals Object VideoShuffler Object java/lang/String \n            stack Object java/lang/Exception \n        .end stack \nL171:   astore_2 \nL172:   aload_2 \nL173:   invokevirtual Method java/lang/Exception printStackTrace ()V \n\n        .stack same \nL176:   return \nL177:   \n        .linenumbertable \n            L0 20 \n            L9 21 \n            L20 22 \n            L45 23 \n            L46 26 \n            L74 27 \n            L80 28 \n            L89 29 \n            L90 32 \n            L120 33 \n            L124 34 \n            L136 36 \n            L162 37 \n            L168 41 \n            L171 39 \n            L172 40 \n            L176 42 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 44 \n            L4 45 \n        .end linenumbertable \n    .end code \n.end method \n\n.method private listFilesUnder : (Ljava/io/File;)Ljava/util/List; \n    .code stack 4 locals 8 \nL0:     new java/util/ArrayList \nL3:     dup \nL4:     invokespecial Method java/util/ArrayList <init> ()V \nL7:     astore_2 \nL8:     aload_1 \nL9:     new VideoShuffler$1 \nL12:    dup \nL13:    aload_0 \nL14:    invokespecial Method VideoShuffler$1 <init> (LVideoShuffler;)V \nL17:    invokevirtual Method java/io/File listFiles (Ljava/io/FileFilter;)[Ljava/io/File; \nL20:    astore_3 \nL21:    aload_3 \nL22:    astore 4 \nL24:    aload 4 \nL26:    arraylength \nL27:    istore 5 \nL29:    iconst_0 \nL30:    istore 6 \n\n        .stack full \n            locals Object VideoShuffler Object java/io/File Object java/util/List Object [Ljava/io/File; Object [Ljava/io/File; Integer Integer \n            stack \n        .end stack \nL32:    iload 6 \nL34:    iload 5 \nL36:    if_icmpge L85 \nL39:    aload 4 \nL41:    iload 6 \nL43:    aaload \nL44:    astore 7 \nL46:    aload 7 \nL48:    invokevirtual Method java/io/File isDirectory ()Z \nL51:    ifeq L70 \nL54:    aload_2 \nL55:    aload_0 \nL56:    aload 7 \nL58:    invokespecial Method VideoShuffler listFilesUnder (Ljava/io/File;)Ljava/util/List; \nL61:    invokeinterface InterfaceMethod java/util/List addAll (Ljava/util/Collection;)Z 2 \nL66:    pop \nL67:    goto L79 \n\n        .stack append Object java/io/File \nL70:    aload_2 \nL71:    aload 7 \nL73:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL78:    pop \n\n        .stack chop 1 \nL79:    iinc 6 1 \nL82:    goto L32 \n\n        .stack chop 3 \nL85:    aload_2 \nL86:    areturn \nL87:    \n        .linenumbertable \n            L0 48 \n            L8 49 \n            L21 58 \n            L46 59 \n            L54 60 \n            L70 62 \n            L79 58 \n            L85 66 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/io/File;)Ljava/util/List<Ljava/io/File;>; \n.end method \n\n.method static synthetic access$000 : ()Ljava/util/List; \n    .code stack 1 locals 0 \nL0:     getstatic Field VideoShuffler extensions Ljava/util/List; \nL3:     areturn \nL4:     \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 4 locals 0 \nL0:     bipush 6 \nL2:     anewarray java/lang/String \nL5:     dup \nL6:     iconst_0 \nL7:     ldc 'avi' \nL9:     aastore \nL10:    dup \nL11:    iconst_1 \nL12:    ldc 'wmv' \nL14:    aastore \nL15:    dup \nL16:    iconst_2 \nL17:    ldc 'mp4' \nL19:    aastore \nL20:    dup \nL21:    iconst_3 \nL22:    ldc 'mkv' \nL24:    aastore \nL25:    dup \nL26:    iconst_4 \nL27:    ldc 'rmvb' \nL29:    aastore \nL30:    dup \nL31:    iconst_5 \nL32:    ldc 'mpg' \nL34:    aastore \nL35:    invokestatic Method java/util/Arrays asList ([Ljava/lang/Object;)Ljava/util/List; \nL38:    putstatic Field VideoShuffler extensions Ljava/util/List; \nL41:    new VideoShuffler \nL44:    dup \nL45:    invokespecial Method VideoShuffler <init> ()V \nL48:    putstatic Field VideoShuffler instance LVideoShuffler; \nL51:    return \nL52:    \n        .linenumbertable \n            L0 10 \n            L41 12 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'VideoShuffler.java' \n.innerclasses \n    VideoShuffler$1 [0] [0] \n.end innerclasses \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 03:25:12 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class VideoShuffler_ESTest extends VideoShuffler_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      VideoShuffler videoShuffler0 = VideoShuffler.getInstance();\n      videoShuffler0.openRandomVideo((String) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      VideoShuffler videoShuffler0 = VideoShuffler.getInstance();\n      // Undeclared exception!\n      try { \n        videoShuffler0.openRandomVideo(\"\");\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // VideoShuffler$1\n         //\n         verifyException(\"VideoShuffler\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      VideoShuffler videoShuffler0 = VideoShuffler.getInstance();\n      videoShuffler0.openRandomVideo(\"V@Fzg.2v-u3JPQE?h\");\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 03:25:12 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class VideoShuffler_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"VideoShuffler\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp86c4e809\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(VideoShuffler_ESTest_scaffolding.class.getClassLoader() ,\n      \"VideoShuffler\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(VideoShuffler_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"VideoShuffler\"\n    );\n  }\n}\n", "class_idx": 244}
{"class_name": "UnknownKvStateLocation", "java_source": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Thrown if there is no {@link KvStateLocation} found for the requested registration name.\n *\n * <p>This indicates that the requested KvState instance is not registered under this name (yet).\n */\npublic class UnknownKvStateLocation extends Exception {\n\n  private static final long serialVersionUID = 1L;\n\n  public UnknownKvStateLocation(String registrationName) {\n    super(\"No KvStateLocation found for KvState instance with name '\" + registrationName + \"'.\");\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super UnknownKvStateLocation \n.super java/lang/Exception \n.field private static final serialVersionUID J = 1L \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     new java/lang/StringBuilder \nL4:     dup \nL5:     invokespecial Method java/lang/StringBuilder <init> ()V \nL8:     ldc \"No KvStateLocation found for KvState instance with name '\" \nL10:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL13:    aload_1 \nL14:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL17:    ldc \"'.\" \nL19:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL22:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL25:    invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL28:    return \nL29:    \n        .linenumbertable \n            L0 33 \n            L28 34 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'UnknownKvStateLocation.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 08:14:13 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class UnknownKvStateLocation_ESTest extends UnknownKvStateLocation_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      UnknownKvStateLocation unknownKvStateLocation0 = new UnknownKvStateLocation((String) null);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 08:14:13 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class UnknownKvStateLocation_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"UnknownKvStateLocation\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp2azjzwxp\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(UnknownKvStateLocation_ESTest_scaffolding.class.getClassLoader() ,\n      \"UnknownKvStateLocation\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(UnknownKvStateLocation_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"UnknownKvStateLocation\"\n    );\n  }\n}\n", "class_idx": 245}
{"class_name": "QueryStringWithParameters", "java_source": "/*\n * Copyright (C) 2005-2015 ManyDesigns srl.  All rights reserved.\n * http://www.manydesigns.com/\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 3 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\n\nimport java.io.Serializable;\nimport java.util.Arrays;\n\n/*\n * @author Paolo Predonzani     - paolo.predonzani@manydesigns.com\n * @author Angelo Lupo          - angelo.lupo@manydesigns.com\n * @author Giampiero Granatella - giampiero.granatella@manydesigns.com\n * @author Alessio Stalla       - alessio.stalla@manydesigns.com\n */\npublic class QueryStringWithParameters implements Serializable {\n  public static final String copyright = \"Copyright (c) 2005-2015, ManyDesigns srl\";\n\n  protected final String queryString;\n  protected final Object[] parameters;\n\n  public QueryStringWithParameters(String queryString, Object[] parameters) {\n    this.queryString = queryString;\n    this.parameters = parameters;\n  }\n\n  public String getQueryString() {\n    return queryString;\n  }\n\n  public Object[] getParameters() {\n    return parameters;\n  }\n\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    QueryStringWithParameters that = (QueryStringWithParameters) o;\n\n    // Probably incorrect - comparing Object[] arrays with Arrays.equals\n    if (!Arrays.equals(parameters, that.parameters)) return false;\n    if (queryString != null ? !queryString.equals(that.queryString) : that.queryString != null)\n      return false;\n\n    return true;\n  }\n\n  @Override\n  public int hashCode() {\n    int result = queryString != null ? queryString.hashCode() : 0;\n    result = 31 * result + (parameters != null ? Arrays.hashCode(parameters) : 0);\n    return result;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super QueryStringWithParameters \n.super java/lang/Object \n.implements java/io/Serializable \n.field public static final copyright Ljava/lang/String; = 'Copyright (c) 2005-2015, ManyDesigns srl' \n.field protected final queryString Ljava/lang/String; \n.field protected final parameters [Ljava/lang/Object; \n\n.method public <init> : (Ljava/lang/String;[Ljava/lang/Object;)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field QueryStringWithParameters queryString Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field QueryStringWithParameters parameters [Ljava/lang/Object; \nL14:    return \nL15:    \n        .linenumbertable \n            L0 39 \n            L4 40 \n            L9 41 \n            L14 42 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getQueryString : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field QueryStringWithParameters queryString Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 45 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getParameters : ()[Ljava/lang/Object; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field QueryStringWithParameters parameters [Ljava/lang/Object; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 49 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public equals : (Ljava/lang/Object;)Z \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     if_acmpne L7 \nL5:     iconst_1 \nL6:     ireturn \n\n        .stack same \nL7:     aload_1 \nL8:     ifnull L22 \nL11:    aload_0 \nL12:    invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL15:    aload_1 \nL16:    invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL19:    if_acmpeq L24 \n\n        .stack same \nL22:    iconst_0 \nL23:    ireturn \n\n        .stack same \nL24:    aload_1 \nL25:    checkcast QueryStringWithParameters \nL28:    astore_2 \nL29:    aload_0 \nL30:    getfield Field QueryStringWithParameters parameters [Ljava/lang/Object; \nL33:    aload_2 \nL34:    getfield Field QueryStringWithParameters parameters [Ljava/lang/Object; \nL37:    invokestatic Method java/util/Arrays equals ([Ljava/lang/Object;[Ljava/lang/Object;)Z \nL40:    ifne L45 \nL43:    iconst_0 \nL44:    ireturn \n\n        .stack append Object QueryStringWithParameters \nL45:    aload_0 \nL46:    getfield Field QueryStringWithParameters queryString Ljava/lang/String; \nL49:    ifnull L69 \nL52:    aload_0 \nL53:    getfield Field QueryStringWithParameters queryString Ljava/lang/String; \nL56:    aload_2 \nL57:    getfield Field QueryStringWithParameters queryString Ljava/lang/String; \nL60:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL63:    ifne L78 \nL66:    goto L76 \n\n        .stack same \nL69:    aload_2 \nL70:    getfield Field QueryStringWithParameters queryString Ljava/lang/String; \nL73:    ifnull L78 \n\n        .stack same \nL76:    iconst_0 \nL77:    ireturn \n\n        .stack same \nL78:    iconst_1 \nL79:    ireturn \nL80:    \n        .linenumbertable \n            L0 54 \n            L7 55 \n            L24 57 \n            L29 60 \n            L45 61 \n            L78 63 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public hashCode : ()I \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field QueryStringWithParameters queryString Ljava/lang/String; \nL4:     ifnull L17 \nL7:     aload_0 \nL8:     getfield Field QueryStringWithParameters queryString Ljava/lang/String; \nL11:    invokevirtual Method java/lang/String hashCode ()I \nL14:    goto L18 \n\n        .stack same \nL17:    iconst_0 \n\n        .stack stack_1 Integer \nL18:    istore_1 \nL19:    bipush 31 \nL21:    iload_1 \nL22:    imul \nL23:    aload_0 \nL24:    getfield Field QueryStringWithParameters parameters [Ljava/lang/Object; \nL27:    ifnull L40 \nL30:    aload_0 \nL31:    getfield Field QueryStringWithParameters parameters [Ljava/lang/Object; \nL34:    invokestatic Method java/util/Arrays hashCode ([Ljava/lang/Object;)I \nL37:    goto L41 \n\n        .stack full \n            locals Object QueryStringWithParameters Integer \n            stack Integer \n        .end stack \nL40:    iconst_0 \n\n        .stack full \n            locals Object QueryStringWithParameters Integer \n            stack Integer Integer \n        .end stack \nL41:    iadd \nL42:    istore_1 \nL43:    iload_1 \nL44:    ireturn \nL45:    \n        .linenumbertable \n            L0 68 \n            L19 69 \n            L43 70 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'QueryStringWithParameters.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 12:25:10 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class QueryStringWithParameters_ESTest extends QueryStringWithParameters_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      Object[] objectArray0 = new Object[0];\n      QueryStringWithParameters queryStringWithParameters0 = new QueryStringWithParameters(\" ,`,Ncl6v\", objectArray0);\n      String string0 = queryStringWithParameters0.getQueryString();\n      assertEquals(\" ,`,Ncl6v\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      Object[] objectArray0 = new Object[7];\n      QueryStringWithParameters queryStringWithParameters0 = new QueryStringWithParameters(\"\", objectArray0);\n      String string0 = queryStringWithParameters0.getQueryString();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      QueryStringWithParameters queryStringWithParameters0 = new QueryStringWithParameters(\"/l]lN\", (Object[]) null);\n      Object[] objectArray0 = queryStringWithParameters0.getParameters();\n      assertNull(objectArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      QueryStringWithParameters queryStringWithParameters0 = new QueryStringWithParameters(\"a(EP#bI&-EN:4y29qgZ\", (Object[]) null);\n      queryStringWithParameters0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      Object[] objectArray0 = new Object[0];\n      QueryStringWithParameters queryStringWithParameters0 = new QueryStringWithParameters(\"03Vj-_iCN}uL:Aj gk\", objectArray0);\n      queryStringWithParameters0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      Object[] objectArray0 = new Object[0];\n      QueryStringWithParameters queryStringWithParameters0 = new QueryStringWithParameters((String) null, objectArray0);\n      queryStringWithParameters0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      Object[] objectArray0 = new Object[6];\n      QueryStringWithParameters queryStringWithParameters0 = new QueryStringWithParameters((String) null, objectArray0);\n      QueryStringWithParameters queryStringWithParameters1 = new QueryStringWithParameters((String) null, objectArray0);\n      boolean boolean0 = queryStringWithParameters0.equals(queryStringWithParameters1);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Object[] objectArray0 = new Object[0];\n      QueryStringWithParameters queryStringWithParameters0 = new QueryStringWithParameters(\"nz9<z%TfD2\", objectArray0);\n      Object[] objectArray1 = queryStringWithParameters0.getParameters();\n      QueryStringWithParameters queryStringWithParameters1 = new QueryStringWithParameters(\"nz9<z%TfD2\", objectArray1);\n      boolean boolean0 = queryStringWithParameters0.equals(queryStringWithParameters1);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      Object[] objectArray0 = new Object[0];\n      QueryStringWithParameters queryStringWithParameters0 = new QueryStringWithParameters((String) null, objectArray0);\n      QueryStringWithParameters queryStringWithParameters1 = new QueryStringWithParameters(\"03Vj-_iCN}uL:Aj gk\", objectArray0);\n      boolean boolean0 = queryStringWithParameters0.equals(queryStringWithParameters1);\n      assertFalse(queryStringWithParameters1.equals((Object)queryStringWithParameters0));\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      Object[] objectArray0 = new Object[5];\n      objectArray0[0] = (Object) \"\";\n      QueryStringWithParameters queryStringWithParameters0 = new QueryStringWithParameters(\"\", objectArray0);\n      Object[] objectArray1 = new Object[5];\n      QueryStringWithParameters queryStringWithParameters1 = new QueryStringWithParameters(\"Copyright (c) 2005-2015, ManyDesigns srl\", objectArray1);\n      boolean boolean0 = queryStringWithParameters0.equals(queryStringWithParameters1);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      Object[] objectArray0 = new Object[2];\n      QueryStringWithParameters queryStringWithParameters0 = new QueryStringWithParameters(\"A:\", objectArray0);\n      QueryStringWithParameters queryStringWithParameters1 = new QueryStringWithParameters(\"r\", objectArray0);\n      boolean boolean0 = queryStringWithParameters0.equals(queryStringWithParameters1);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Object[] objectArray0 = new Object[2];\n      QueryStringWithParameters queryStringWithParameters0 = new QueryStringWithParameters(\"A:\", objectArray0);\n      boolean boolean0 = queryStringWithParameters0.equals((Object) null);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      Object[] objectArray0 = new Object[7];\n      QueryStringWithParameters queryStringWithParameters0 = new QueryStringWithParameters(\"\", objectArray0);\n      boolean boolean0 = queryStringWithParameters0.equals(queryStringWithParameters0);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      Object[] objectArray0 = new Object[2];\n      QueryStringWithParameters queryStringWithParameters0 = new QueryStringWithParameters(\"A:\", objectArray0);\n      boolean boolean0 = queryStringWithParameters0.equals(\"A:\");\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      Object[] objectArray0 = new Object[7];\n      QueryStringWithParameters queryStringWithParameters0 = new QueryStringWithParameters(\"\", objectArray0);\n      Object[] objectArray1 = queryStringWithParameters0.getParameters();\n      assertEquals(7, objectArray1.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      Object[] objectArray0 = new Object[0];\n      QueryStringWithParameters queryStringWithParameters0 = new QueryStringWithParameters((String) null, objectArray0);\n      String string0 = queryStringWithParameters0.getQueryString();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 12:25:10 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class QueryStringWithParameters_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"QueryStringWithParameters\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpj8i9hw1r\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(QueryStringWithParameters_ESTest_scaffolding.class.getClassLoader() ,\n      \"QueryStringWithParameters\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(QueryStringWithParameters_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"QueryStringWithParameters\"\n    );\n  }\n}\n", "class_idx": 246}
{"class_name": "Strain", "java_source": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.function.Predicate;\n\npublic class Strain {\n\n  public static <T> List<T> keep(List<T> collection, Predicate<T> predicate) {\n    return filter(collection, predicate);\n  }\n\n  public static <T> List<T> discard(List<T> collection, Predicate<T> predicate) {\n    return filter(collection, predicate.negate());\n  }\n\n  public static <T> List<T> filter(List<T> collection, Predicate<T> predicate) {\n    List<T> filteredCollection = new ArrayList<>();\n\n    for (T item : collection) {\n      if (predicate.test(item)) {\n        filteredCollection.add(item);\n      }\n    }\n\n    return filteredCollection;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Strain \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static keep : (Ljava/util/List;Ljava/util/function/Predicate;)Ljava/util/List; \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokestatic Method Strain filter (Ljava/util/List;Ljava/util/function/Predicate;)Ljava/util/List; \nL5:     areturn \nL6:     \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n    .signature '<T:Ljava/lang/Object;>(Ljava/util/List<TT;>;Ljava/util/function/Predicate<TT;>;)Ljava/util/List<TT;>;' \n.end method \n\n.method public static discard : (Ljava/util/List;Ljava/util/function/Predicate;)Ljava/util/List; \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokeinterface InterfaceMethod java/util/function/Predicate negate ()Ljava/util/function/Predicate; 1 \nL7:     invokestatic Method Strain filter (Ljava/util/List;Ljava/util/function/Predicate;)Ljava/util/List; \nL10:    areturn \nL11:    \n        .linenumbertable \n            L0 12 \n        .end linenumbertable \n    .end code \n    .signature '<T:Ljava/lang/Object;>(Ljava/util/List<TT;>;Ljava/util/function/Predicate<TT;>;)Ljava/util/List<TT;>;' \n.end method \n\n.method public static filter : (Ljava/util/List;Ljava/util/function/Predicate;)Ljava/util/List; \n    .code stack 2 locals 5 \nL0:     new java/util/ArrayList \nL3:     dup \nL4:     invokespecial Method java/util/ArrayList <init> ()V \nL7:     astore_2 \nL8:     aload_0 \nL9:     invokeinterface InterfaceMethod java/util/List iterator ()Ljava/util/Iterator; 1 \nL14:    astore_3 \n\n        .stack append Object java/util/List Object java/util/Iterator \nL15:    aload_3 \nL16:    invokeinterface InterfaceMethod java/util/Iterator hasNext ()Z 1 \nL21:    ifeq L55 \nL24:    aload_3 \nL25:    invokeinterface InterfaceMethod java/util/Iterator next ()Ljava/lang/Object; 1 \nL30:    astore 4 \nL32:    aload_1 \nL33:    aload 4 \nL35:    invokeinterface InterfaceMethod java/util/function/Predicate test (Ljava/lang/Object;)Z 2 \nL40:    ifeq L52 \nL43:    aload_2 \nL44:    aload 4 \nL46:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL51:    pop \n\n        .stack same \nL52:    goto L15 \n\n        .stack chop 1 \nL55:    aload_2 \nL56:    areturn \nL57:    \n        .linenumbertable \n            L0 16 \n            L8 18 \n            L32 19 \n            L43 20 \n            L52 22 \n            L55 24 \n        .end linenumbertable \n    .end code \n    .signature '<T:Ljava/lang/Object;>(Ljava/util/List<TT;>;Ljava/util/function/Predicate<TT;>;)Ljava/util/List<TT;>;' \n.end method \n.sourcefile 'Strain.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 00:45:42 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.function.Predicate;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Strain_ESTest extends Strain_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Object object0 = new Object();\n      Predicate<Integer> predicate0 = Predicate.isEqual(object0);\n      LinkedList<Object> linkedList0 = new LinkedList<Object>();\n      Integer integer0 = new Integer((-5338));\n      linkedList0.add((Object) integer0);\n      Predicate<Object> predicate1 = Predicate.isEqual((Object) predicate0);\n      Predicate<Object> predicate2 = predicate1.negate();\n      List<Object> list0 = Strain.keep((List<Object>) linkedList0, predicate2);\n      assertTrue(list0.contains((-5338)));\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      LinkedList<Object> linkedList0 = new LinkedList<Object>();\n      Object object0 = new Object();\n      Object object1 = new Object();\n      linkedList0.add(object1);\n      Predicate<Object> predicate0 = Predicate.isEqual(object0);\n      List<Object> list0 = Strain.filter((List<Object>) linkedList0, predicate0);\n      assertFalse(list0.contains(object1));\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      LinkedList<Object> linkedList0 = new LinkedList<Object>();\n      Object object0 = new Object();\n      linkedList0.add(object0);\n      Predicate<Object> predicate0 = Predicate.isEqual(object0);\n      List<Object> list0 = Strain.filter((List<Object>) linkedList0, predicate0);\n      assertTrue(list0.contains(object0));\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      LinkedList<String> linkedList0 = new LinkedList<String>();\n      Predicate<String> predicate0 = Predicate.isEqual((Object) linkedList0);\n      linkedList0.offer((String) null);\n      List<String> list0 = Strain.keep((List<String>) linkedList0, predicate0);\n      assertTrue(list0.isEmpty());\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      LinkedList<String> linkedList0 = new LinkedList<String>();\n      Predicate<String> predicate0 = Predicate.isEqual((Object) linkedList0);\n      linkedList0.offer((String) null);\n      List<String> list0 = Strain.discard((List<String>) linkedList0, predicate0);\n      assertFalse(list0.isEmpty());\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      LinkedList<String> linkedList0 = new LinkedList<String>();\n      Predicate<String> predicate0 = Predicate.isEqual((Object) linkedList0);\n      List<String> list0 = Strain.discard((List<String>) linkedList0, predicate0);\n      assertEquals(0, list0.size());\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      Strain strain0 = new Strain();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 00:45:42 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Strain_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Strain\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpytdf1e30\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Strain_ESTest_scaffolding.class.getClassLoader() ,\n      \"Strain\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Strain_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Strain\"\n    );\n  }\n}\n", "class_idx": 247}
{"class_name": "Constants", "java_source": "/*\n\n  Derby - Class com.pivotal.gemfirexd.internal.impl.services.locks.Constants\n\n  Licensed to the Apache Software Foundation (ASF) under one or more\n  contributor license agreements.  See the NOTICE file distributed with\n  this work for additional information regarding copyright ownership.\n  The ASF licenses this file to you under the Apache License, Version 2.0\n  (the \"License\"); you may not use this file except in compliance with\n  the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\n/** */\npublic class Constants {\n\n  /** Trace flag to display lock requests, grants and unlocks. */\n  public static final String LOCK_TRACE = \"LockTrace\";\n\n  /** Trace flag to display stack trace of lock calls. */\n  public static final String LOCK_STACK_TRACE = \"LockStackTrace\";\n\n  /**\n   * Trace flag to add thread information to trace info of LockTrace, requires that LockTrace be set\n   * to true.\n   */\n  public static final String LOCK_TRACE_ADD_THREAD_INFO = \"LockTraceAddThreadInfo\";\n\n  static final byte WAITING_LOCK_IN_WAIT = 0;\n  static final byte WAITING_LOCK_GRANT = 1;\n  static final byte WAITING_LOCK_DEADLOCK = 2;\n}\n", "jasm_code": ".version 52 0 \n.class public super Constants \n.super java/lang/Object \n.field public static final LOCK_TRACE Ljava/lang/String; = 'LockTrace' \n.field public static final LOCK_STACK_TRACE Ljava/lang/String; = 'LockStackTrace' \n.field public static final LOCK_TRACE_ADD_THREAD_INFO Ljava/lang/String; = 'LockTraceAddThreadInfo' \n.field static final WAITING_LOCK_IN_WAIT B = 0 \n.field static final WAITING_LOCK_GRANT B = 1 \n.field static final WAITING_LOCK_DEADLOCK B = 2 \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 27 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Constants.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 10:58:34 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Constants_ESTest extends Constants_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Constants constants0 = new Constants();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 10:58:34 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Constants_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Constants\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp30rl4ggn\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Constants_ESTest_scaffolding.class.getClassLoader() ,\n      \"Constants\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Constants_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Constants\"\n    );\n  }\n}\n", "class_idx": 248}
{"class_name": "ConfiurationException", "java_source": "public class ConfiurationException extends Exception {\n\n  private static final long serialVersionUID = 1L;\n\n  public ConfiurationException(String msg) {\n    super(msg);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ConfiurationException \n.super java/lang/Exception \n.field private static final serialVersionUID J = 1L \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 8 \n            L5 9 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ConfiurationException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 15:41:49 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ConfiurationException_ESTest extends ConfiurationException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ConfiurationException confiurationException0 = new ConfiurationException(\"\");\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 15:41:49 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ConfiurationException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ConfiurationException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpbf4u38pe\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ConfiurationException_ESTest_scaffolding.class.getClassLoader() ,\n      \"ConfiurationException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ConfiurationException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ConfiurationException\"\n    );\n  }\n}\n", "class_idx": 249}
{"class_name": "Solution", "java_source": "/**\n * 660. Remove 9\n *\n * <p>Difficulty: Hard\n *\n * <p>Start from integer 1, remove any integer that contains 9 such as 9, 19, 29...\n *\n * <p>So now, you will have a new integer sequence: 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, ...\n *\n * <p>Given a positive integer n, you need to return the n-th integer after removing. Note that 1\n * will be the first integer.\n *\n * <p>Example 1:<br>\n * Input: 9<br>\n * Output: 10\n *\n * <p>Hint: n will not exceed 9 x 10^8.\n */\npublic class Solution {\n  public int newInteger(int n) {\n    int r = 0;\n    int b = 1;\n    while (n != 0) {\n      r = r + (n % 9) * b;\n      n = n / 9;\n      b = b * 10;\n    }\n    return r;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Solution \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 15 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public newInteger : (I)I \n    .code stack 3 locals 4 \nL0:     iconst_0 \nL1:     istore_2 \nL2:     iconst_1 \nL3:     istore_3 \n\n        .stack append Integer Integer \nL4:     iload_1 \nL5:     ifeq L30 \nL8:     iload_2 \nL9:     iload_1 \nL10:    bipush 9 \nL12:    irem \nL13:    iload_3 \nL14:    imul \nL15:    iadd \nL16:    istore_2 \nL17:    iload_1 \nL18:    bipush 9 \nL20:    idiv \nL21:    istore_1 \nL22:    iload_3 \nL23:    bipush 10 \nL25:    imul \nL26:    istore_3 \nL27:    goto L4 \n\n        .stack same \nL30:    iload_2 \nL31:    ireturn \nL32:    \n        .linenumbertable \n            L0 17 \n            L2 18 \n            L4 19 \n            L8 20 \n            L17 21 \n            L22 22 \n            L30 24 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Solution.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 09:15:58 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Solution_ESTest extends Solution_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Solution solution0 = new Solution();\n      int int0 = solution0.newInteger((-18128));\n      assertEquals((-26772), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Solution solution0 = new Solution();\n      int int0 = solution0.newInteger(0);\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Solution solution0 = new Solution();\n      int int0 = solution0.newInteger(9);\n      assertEquals(10, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Solution solution0 = new Solution();\n      int int0 = solution0.newInteger((-92619));\n      assertEquals((-151040), int0);\n      \n      int int1 = solution0.newInteger((-18128));\n      assertEquals((-26772), int1);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 09:15:58 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Solution_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Solution\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp645qpw3q\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Solution_ESTest_scaffolding.class.getClassLoader() ,\n      \"Solution\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Solution_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Solution\"\n    );\n  }\n}\n", "class_idx": 250}
{"class_name": "Fraction", "java_source": "public class Fraction {\n  /*\n   * http://www.cs.berkeley.edu/~jrs/4/lec/15\n   */\n\n  public int zah;\n  public int nen;\n  public int neuZah;\n  public int neuNen;\n  public int reduceNovy;\n\n  public Fraction() {}\n\n  /**\n   * @param zah\n   * @param nen\n   */\n  public Fraction(int zah, int nen) {\n    this.zah = zah;\n    this.nen = nen;\n  }\n\n  @Override\n  public String toString() {\n    return \"Bruch \" + zah + \": \" + nen + \" oder \" + neuZah + \": \" + neuNen;\n  }\n\n  public Fraction multiply(Fraction ob, Fraction ob2) {\n    neuNen = ob.nen * ob2.nen;\n    neuZah = ob.zah * ob2.zah;\n    return new Fraction(neuZah, neuNen);\n  }\n\n  public void reduce() {\n    int divisor = GCD(neuZah, neuNen);\n    neuNen = neuNen / divisor;\n    neuZah = neuZah / divisor;\n    if (neuZah < 0) {\n      neuNen = -neuNen;\n      neuZah = -neuZah;\n    }\n  }\n\n  public int GCD(int neuZah, int neuNen) {\n    if (neuNen == 0) return neuZah;\n    return GCD(neuNen, neuZah % neuNen);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Fraction \n.super java/lang/Object \n.field public zah I \n.field public nen I \n.field public neuZah I \n.field public neuNen I \n.field public reduceNovy I \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 14 \n            L4 16 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (II)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field Fraction zah I \nL9:     aload_0 \nL10:    iload_2 \nL11:    putfield Field Fraction nen I \nL14:    return \nL15:    \n        .linenumbertable \n            L0 22 \n            L4 23 \n            L9 24 \n            L14 25 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     ldc 'Bruch ' \nL9:     invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL12:    aload_0 \nL13:    getfield Field Fraction zah I \nL16:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL19:    ldc ': ' \nL21:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL24:    aload_0 \nL25:    getfield Field Fraction nen I \nL28:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL31:    ldc ' oder ' \nL33:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL36:    aload_0 \nL37:    getfield Field Fraction neuZah I \nL40:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL43:    ldc ': ' \nL45:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL48:    aload_0 \nL49:    getfield Field Fraction neuNen I \nL52:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL55:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL58:    areturn \nL59:    \n        .linenumbertable \n            L0 29 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public multiply : (LFraction;LFraction;)LFraction; \n    .code stack 4 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     getfield Field Fraction nen I \nL5:     aload_2 \nL6:     getfield Field Fraction nen I \nL9:     imul \nL10:    putfield Field Fraction neuNen I \nL13:    aload_0 \nL14:    aload_1 \nL15:    getfield Field Fraction zah I \nL18:    aload_2 \nL19:    getfield Field Fraction zah I \nL22:    imul \nL23:    putfield Field Fraction neuZah I \nL26:    new Fraction \nL29:    dup \nL30:    aload_0 \nL31:    getfield Field Fraction neuZah I \nL34:    aload_0 \nL35:    getfield Field Fraction neuNen I \nL38:    invokespecial Method Fraction <init> (II)V \nL41:    areturn \nL42:    \n        .linenumbertable \n            L0 33 \n            L13 34 \n            L26 35 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public reduce : ()V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     aload_0 \nL2:     getfield Field Fraction neuZah I \nL5:     aload_0 \nL6:     getfield Field Fraction neuNen I \nL9:     invokevirtual Method Fraction GCD (II)I \nL12:    istore_1 \nL13:    aload_0 \nL14:    aload_0 \nL15:    getfield Field Fraction neuNen I \nL18:    iload_1 \nL19:    idiv \nL20:    putfield Field Fraction neuNen I \nL23:    aload_0 \nL24:    aload_0 \nL25:    getfield Field Fraction neuZah I \nL28:    iload_1 \nL29:    idiv \nL30:    putfield Field Fraction neuZah I \nL33:    aload_0 \nL34:    getfield Field Fraction neuZah I \nL37:    ifge L58 \nL40:    aload_0 \nL41:    aload_0 \nL42:    getfield Field Fraction neuNen I \nL45:    ineg \nL46:    putfield Field Fraction neuNen I \nL49:    aload_0 \nL50:    aload_0 \nL51:    getfield Field Fraction neuZah I \nL54:    ineg \nL55:    putfield Field Fraction neuZah I \n\n        .stack append Integer \nL58:    return \nL59:    \n        .linenumbertable \n            L0 39 \n            L13 40 \n            L23 41 \n            L33 42 \n            L40 43 \n            L49 44 \n            L58 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public GCD : (II)I \n    .code stack 4 locals 3 \nL0:     iload_2 \nL1:     ifne L6 \nL4:     iload_1 \nL5:     ireturn \n\n        .stack same \nL6:     aload_0 \nL7:     iload_2 \nL8:     iload_1 \nL9:     iload_2 \nL10:    irem \nL11:    invokevirtual Method Fraction GCD (II)I \nL14:    ireturn \nL15:    \n        .linenumbertable \n            L0 49 \n            L4 50 \n            L6 51 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Fraction.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 21:28:45 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Fraction_ESTest extends Fraction_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Fraction fraction0 = new Fraction((-1), 0);\n      fraction0.toString();\n      fraction0.nen = 21883;\n      Fraction fraction1 = fraction0.multiply(fraction0, fraction0);\n      fraction1.neuZah = 1;\n      fraction1.reduce();\n      Fraction fraction2 = fraction1.multiply(fraction0, fraction0);\n      fraction2.toString();\n      fraction0.toString();\n      fraction1.toString();\n      fraction1.reduce();\n      assertEquals(1, fraction0.neuZah);\n      assertEquals(1, fraction1.neuZah);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Fraction fraction0 = new Fraction();\n      // Undeclared exception!\n      try { \n        fraction0.reduce();\n        fail(\"Expecting exception: ArithmeticException\");\n      \n      } catch(ArithmeticException e) {\n         //\n         // / by zero\n         //\n         verifyException(\"Fraction\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Fraction fraction0 = new Fraction((-1), 0);\n      fraction0.nen = 21883;\n      fraction0.multiply(fraction0, fraction0);\n      fraction0.reduce();\n      assertEquals(478865689, fraction0.neuNen);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Fraction fraction0 = new Fraction();\n      Fraction fraction1 = new Fraction(0, 41851);\n      fraction0.multiply(fraction1, fraction1);\n      assertEquals(1751506201, fraction0.neuNen);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Fraction fraction0 = new Fraction();\n      int int0 = fraction0.GCD(84334, 0);\n      assertEquals(84334, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Fraction fraction0 = new Fraction();\n      int int0 = fraction0.GCD(0, (-6398));\n      assertEquals((-6398), int0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 21:28:45 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Fraction_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Fraction\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpebfg30m4\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Fraction_ESTest_scaffolding.class.getClassLoader() ,\n      \"Fraction\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Fraction_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Fraction\"\n    );\n  }\n}\n", "class_idx": 251}
{"class_name": "Conexion", "java_source": "/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n\nimport java.sql.*;\n\npublic class Conexion {\n  private Connection con;\n  private Statement sentSQL;\n  private ResultSet rst;\n\n  public Conexion()\n      throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException {\n    // cargar el controlador jdbc\n    String controlador = \"com.mysql.jdbc.Driver\";\n    Class.forName(controlador).newInstance();\n    conectar(); // conectar con la fuente de datos\n  }\n\n  public void conectar() throws SQLException {\n    // datos necesarios para la conexion\n    String URL_bd = \"jdbc:mysql://localhost/taller_de_poo\";\n    String usuario = \"root\";\n    String contrasena = \"1507\";\n    // conexion con la bd\n    con = DriverManager.getConnection(URL_bd, usuario, contrasena);\n    // se crea una Statement para asi poder usar sentencias sql\n    sentSQL = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\n  }\n  /*\n      public ResultSet ConectarBD(String usuario, String pass) throws SQLException{\n\n          rst=sentSQL.executeQuery(\"select * from usuario where usuario='aeroslizth' AND password='123';\");\n         return rst;\n      }\n  */\n\n  // metodo para ejecutar sentencias sql\n  public String ejecutar(String sql) throws SQLException {\n    // executeUpdate nos sirve para hacer UPDATE, INSERT y ese tipo de sentencias que modifican la\n    // base de datos\n    // no se necesita devolver algo\n    sentSQL.executeUpdate(sql);\n\n    return \"\";\n  }\n\n  // metodo para ejecutar consultas de sentencias sql en la base de datos\n  public ResultSet consulta(String sql) throws SQLException {\n\n    // executeQuery nos sirve solamente para hacer consultas de la base de datos, solo acepta\n    // sentencias como SELECT\n    // se necesita forzosamente devolver algo, guardar en una variable el resultado de la consulta\n    rst = sentSQL.executeQuery(sql);\n\n    return rst;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Conexion \n.super java/lang/Object \n.field private con Ljava/sql/Connection; \n.field private sentSQL Ljava/sql/Statement; \n.field private rst Ljava/sql/ResultSet; \n\n.method public <init> : ()V \n    .code stack 1 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     ldc 'com.mysql.jdbc.Driver' \nL6:     astore_1 \nL7:     aload_1 \nL8:     invokestatic Method java/lang/Class forName (Ljava/lang/String;)Ljava/lang/Class; \nL11:    invokevirtual Method java/lang/Class newInstance ()Ljava/lang/Object; \nL14:    pop \nL15:    aload_0 \nL16:    invokevirtual Method Conexion conectar ()V \nL19:    return \nL20:    \n        .linenumbertable \n            L0 14 \n            L4 16 \n            L7 17 \n            L15 18 \n            L19 19 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/ClassNotFoundException java/sql/SQLException java/lang/InstantiationException java/lang/IllegalAccessException \n.end method \n\n.method public conectar : ()V \n    .code stack 4 locals 4 \nL0:     ldc 'jdbc:mysql://localhost/taller_de_poo' \nL2:     astore_1 \nL3:     ldc 'root' \nL5:     astore_2 \nL6:     ldc '1507' \nL8:     astore_3 \nL9:     aload_0 \nL10:    aload_1 \nL11:    aload_2 \nL12:    aload_3 \nL13:    invokestatic Method java/sql/DriverManager getConnection (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection; \nL16:    putfield Field Conexion con Ljava/sql/Connection; \nL19:    aload_0 \nL20:    aload_0 \nL21:    getfield Field Conexion con Ljava/sql/Connection; \nL24:    sipush 1005 \nL27:    sipush 1008 \nL30:    invokeinterface InterfaceMethod java/sql/Connection createStatement (II)Ljava/sql/Statement; 3 \nL35:    putfield Field Conexion sentSQL Ljava/sql/Statement; \nL38:    return \nL39:    \n        .linenumbertable \n            L0 23 \n            L3 24 \n            L6 25 \n            L9 27 \n            L19 29 \n            L38 30 \n        .end linenumbertable \n    .end code \n    .exceptions java/sql/SQLException \n.end method \n\n.method public ejecutar : (Ljava/lang/String;)Ljava/lang/String; \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field Conexion sentSQL Ljava/sql/Statement; \nL4:     aload_1 \nL5:     invokeinterface InterfaceMethod java/sql/Statement executeUpdate (Ljava/lang/String;)I 2 \nL10:    pop \nL11:    ldc '' \nL13:    areturn \nL14:    \n        .linenumbertable \n            L0 45 \n            L11 47 \n        .end linenumbertable \n    .end code \n    .exceptions java/sql/SQLException \n.end method \n\n.method public consulta : (Ljava/lang/String;)Ljava/sql/ResultSet; \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     aload_0 \nL2:     getfield Field Conexion sentSQL Ljava/sql/Statement; \nL5:     aload_1 \nL6:     invokeinterface InterfaceMethod java/sql/Statement executeQuery (Ljava/lang/String;)Ljava/sql/ResultSet; 2 \nL11:    putfield Field Conexion rst Ljava/sql/ResultSet; \nL14:    aload_0 \nL15:    getfield Field Conexion rst Ljava/sql/ResultSet; \nL18:    areturn \nL19:    \n        .linenumbertable \n            L0 55 \n            L14 57 \n        .end linenumbertable \n    .end code \n    .exceptions java/sql/SQLException \n.end method \n.sourcefile 'Conexion.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 18:40:55 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Conexion_ESTest extends Conexion_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Conexion conexion0 = null;\n      try {\n        conexion0 = new Conexion();\n        fail(\"Expecting exception: ClassNotFoundException\");\n      \n      } catch(Throwable e) {\n      }\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 18:40:55 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Conexion_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Conexion\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpgglxu1b_\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Conexion_ESTest_scaffolding.class.getClassLoader() ,\n      \"Conexion\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Conexion_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Conexion\"\n    );\n  }\n}\n", "class_idx": 252}
{"class_name": "ThreadMXBeanUtils", "java_source": "/*\n * Copyright 2019 NAVER Corp.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport java.lang.management.ManagementFactory;\nimport java.lang.management.ThreadInfo;\nimport java.lang.management.ThreadMXBean;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Objects;\n\n/**\n * @author emeroad\n */\npublic final class ThreadMXBeanUtils {\n\n  private static final ThreadMXBean THREAD_MX_BEAN = ManagementFactory.getThreadMXBean();\n\n  private static final boolean OBJECT_MONITOR_USAGE_SUPPORT;\n  private static final boolean SYNCHRONIZER_USAGE_SUPPORT;\n  // check support -> getWaitedTime(), getBlockedTime()\n  private static final boolean CONTENTION_MONITORING_SUPPORT;\n\n  private static final int DEFAULT_STACK_TRACE_MAX_DEPTH = 32;\n\n  private ThreadMXBeanUtils() {}\n\n  static {\n    OBJECT_MONITOR_USAGE_SUPPORT = THREAD_MX_BEAN.isObjectMonitorUsageSupported();\n    SYNCHRONIZER_USAGE_SUPPORT = THREAD_MX_BEAN.isSynchronizerUsageSupported();\n    CONTENTION_MONITORING_SUPPORT = THREAD_MX_BEAN.isThreadContentionMonitoringSupported();\n  }\n\n  // for test\n  static String getOption() {\n    final StringBuilder builder = new StringBuilder();\n    builder.append(\"ThreadMXBean SupportOption:{OBJECT_MONITOR_USAGE_SUPPORT=\");\n    builder.append(OBJECT_MONITOR_USAGE_SUPPORT);\n    builder.append(\"}, {SYNCHRONIZER_USAGE_SUPPORT=\");\n    builder.append(SYNCHRONIZER_USAGE_SUPPORT);\n    builder.append(\"}, {CONTENTION_MONITORING_SUPPORT=\");\n    builder.append(CONTENTION_MONITORING_SUPPORT);\n    builder.append('}');\n    return builder.toString();\n  }\n\n  public static ThreadInfo[] dumpAllThread() {\n    //        try {\n    return THREAD_MX_BEAN.dumpAllThreads(OBJECT_MONITOR_USAGE_SUPPORT, SYNCHRONIZER_USAGE_SUPPORT);\n    //        ?? handle exception\n    //        } catch (java.lang.SecurityException se) {\n    //            log??\n    //            return new ThreadInfo[]{};\n    //        } catch (java.lang.UnsupportedOperationException ue) {\n    //            log??\n    //            return new ThreadInfo[]{};\n    //        }\n  }\n\n  public static ThreadInfo getThreadInfo(long id) {\n    return getThreadInfo(id, DEFAULT_STACK_TRACE_MAX_DEPTH);\n  }\n\n  public static ThreadInfo getThreadInfo(long id, int stackTraceMaxDepth) {\n    if (stackTraceMaxDepth <= 0) {\n      return THREAD_MX_BEAN.getThreadInfo(id);\n    } else {\n      return THREAD_MX_BEAN.getThreadInfo(id, stackTraceMaxDepth);\n    }\n  }\n\n  public static ThreadInfo[] findThread(long[] id, int stackTraceMaxDepth) {\n    if (stackTraceMaxDepth <= 0) {\n      return THREAD_MX_BEAN.getThreadInfo(id);\n    } else {\n      return THREAD_MX_BEAN.getThreadInfo(id, stackTraceMaxDepth);\n    }\n  }\n\n  public static List<ThreadInfo> findThread(String threadName) {\n    Objects.requireNonNull(threadName, \"threadName\");\n\n    ThreadInfo[] threadInfos = dumpAllThread();\n    if (threadInfos == null) {\n      return Collections.emptyList();\n    }\n\n    List<ThreadInfo> threadInfoList = new ArrayList<ThreadInfo>(1);\n    for (ThreadInfo threadInfo : threadInfos) {\n      if (threadName.equals(threadInfo.getThreadName())) {\n        threadInfoList.add(threadInfo);\n      }\n    }\n    return threadInfoList;\n  }\n\n  public static boolean findThreadName(ThreadInfo[] threadInfos, String threadName) {\n    if (threadInfos == null) {\n      return false;\n    }\n    if (threadName == null) {\n      return false;\n    }\n    for (ThreadInfo threadInfo : threadInfos) {\n      if (threadInfo.getThreadName().equals(threadName)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public static boolean findThreadName(String threadName) {\n    if (threadName == null) {\n      return false;\n    }\n\n    final ThreadInfo[] threadInfos = dumpAllThread();\n    return findThreadName(threadInfos, threadName);\n  }\n\n  public static long[] findDeadlockedThreads() {\n    return THREAD_MX_BEAN.findDeadlockedThreads();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public final super ThreadMXBeanUtils \n.super java/lang/Object \n.field private static final THREAD_MX_BEAN Ljava/lang/management/ThreadMXBean; \n.field private static final OBJECT_MONITOR_USAGE_SUPPORT Z \n.field private static final SYNCHRONIZER_USAGE_SUPPORT Z \n.field private static final CONTENTION_MONITORING_SUPPORT Z \n.field private static final DEFAULT_STACK_TRACE_MAX_DEPTH I = 32 \n\n.method private <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 41 \n            L4 42 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static getOption : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     astore_0 \nL8:     aload_0 \nL9:     ldc 'ThreadMXBean SupportOption:{OBJECT_MONITOR_USAGE_SUPPORT=' \nL11:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL14:    pop \nL15:    aload_0 \nL16:    getstatic Field ThreadMXBeanUtils OBJECT_MONITOR_USAGE_SUPPORT Z \nL19:    invokevirtual Method java/lang/StringBuilder append (Z)Ljava/lang/StringBuilder; \nL22:    pop \nL23:    aload_0 \nL24:    ldc '}, {SYNCHRONIZER_USAGE_SUPPORT=' \nL26:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL29:    pop \nL30:    aload_0 \nL31:    getstatic Field ThreadMXBeanUtils SYNCHRONIZER_USAGE_SUPPORT Z \nL34:    invokevirtual Method java/lang/StringBuilder append (Z)Ljava/lang/StringBuilder; \nL37:    pop \nL38:    aload_0 \nL39:    ldc '}, {CONTENTION_MONITORING_SUPPORT=' \nL41:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL44:    pop \nL45:    aload_0 \nL46:    getstatic Field ThreadMXBeanUtils CONTENTION_MONITORING_SUPPORT Z \nL49:    invokevirtual Method java/lang/StringBuilder append (Z)Ljava/lang/StringBuilder; \nL52:    pop \nL53:    aload_0 \nL54:    bipush 125 \nL56:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL59:    pop \nL60:    aload_0 \nL61:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL64:    areturn \nL65:    \n        .linenumbertable \n            L0 52 \n            L8 53 \n            L15 54 \n            L23 55 \n            L30 56 \n            L38 57 \n            L45 58 \n            L53 59 \n            L60 60 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static dumpAllThread : ()[Ljava/lang/management/ThreadInfo; \n    .code stack 3 locals 0 \nL0:     getstatic Field ThreadMXBeanUtils THREAD_MX_BEAN Ljava/lang/management/ThreadMXBean; \nL3:     getstatic Field ThreadMXBeanUtils OBJECT_MONITOR_USAGE_SUPPORT Z \nL6:     getstatic Field ThreadMXBeanUtils SYNCHRONIZER_USAGE_SUPPORT Z \nL9:     invokeinterface InterfaceMethod java/lang/management/ThreadMXBean dumpAllThreads (ZZ)[Ljava/lang/management/ThreadInfo; 3 \nL14:    areturn \nL15:    \n        .linenumbertable \n            L0 65 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static getThreadInfo : (J)Ljava/lang/management/ThreadInfo; \n    .code stack 3 locals 2 \nL0:     lload_0 \nL1:     bipush 32 \nL3:     invokestatic Method ThreadMXBeanUtils getThreadInfo (JI)Ljava/lang/management/ThreadInfo; \nL6:     areturn \nL7:     \n        .linenumbertable \n            L0 78 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static getThreadInfo : (JI)Ljava/lang/management/ThreadInfo; \n    .code stack 4 locals 3 \nL0:     iload_2 \nL1:     ifgt L14 \nL4:     getstatic Field ThreadMXBeanUtils THREAD_MX_BEAN Ljava/lang/management/ThreadMXBean; \nL7:     lload_0 \nL8:     invokeinterface InterfaceMethod java/lang/management/ThreadMXBean getThreadInfo (J)Ljava/lang/management/ThreadInfo; 3 \nL13:    areturn \n\n        .stack same \nL14:    getstatic Field ThreadMXBeanUtils THREAD_MX_BEAN Ljava/lang/management/ThreadMXBean; \nL17:    lload_0 \nL18:    iload_2 \nL19:    invokeinterface InterfaceMethod java/lang/management/ThreadMXBean getThreadInfo (JI)Ljava/lang/management/ThreadInfo; 4 \nL24:    areturn \nL25:    \n        .linenumbertable \n            L0 82 \n            L4 83 \n            L14 85 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static findThread : ([JI)[Ljava/lang/management/ThreadInfo; \n    .code stack 3 locals 2 \nL0:     iload_1 \nL1:     ifgt L14 \nL4:     getstatic Field ThreadMXBeanUtils THREAD_MX_BEAN Ljava/lang/management/ThreadMXBean; \nL7:     aload_0 \nL8:     invokeinterface InterfaceMethod java/lang/management/ThreadMXBean getThreadInfo ([J)[Ljava/lang/management/ThreadInfo; 2 \nL13:    areturn \n\n        .stack same \nL14:    getstatic Field ThreadMXBeanUtils THREAD_MX_BEAN Ljava/lang/management/ThreadMXBean; \nL17:    aload_0 \nL18:    iload_1 \nL19:    invokeinterface InterfaceMethod java/lang/management/ThreadMXBean getThreadInfo ([JI)[Ljava/lang/management/ThreadInfo; 3 \nL24:    areturn \nL25:    \n        .linenumbertable \n            L0 90 \n            L4 91 \n            L14 93 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static findThread : (Ljava/lang/String;)Ljava/util/List; \n    .code stack 3 locals 7 \nL0:     aload_0 \nL1:     ldc 'threadName' \nL3:     invokestatic Method java/util/Objects requireNonNull (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; \nL6:     pop \nL7:     invokestatic Method ThreadMXBeanUtils dumpAllThread ()[Ljava/lang/management/ThreadInfo; \nL10:    astore_1 \nL11:    aload_1 \nL12:    ifnonnull L19 \nL15:    invokestatic Method java/util/Collections emptyList ()Ljava/util/List; \nL18:    areturn \n\n        .stack append Object [Ljava/lang/management/ThreadInfo; \nL19:    new java/util/ArrayList \nL22:    dup \nL23:    iconst_1 \nL24:    invokespecial Method java/util/ArrayList <init> (I)V \nL27:    astore_2 \nL28:    aload_1 \nL29:    astore_3 \nL30:    aload_3 \nL31:    arraylength \nL32:    istore 4 \nL34:    iconst_0 \nL35:    istore 5 \n\n        .stack full \n            locals Object java/lang/String Object [Ljava/lang/management/ThreadInfo; Object java/util/List Object [Ljava/lang/management/ThreadInfo; Integer Integer \n            stack \n        .end stack \nL37:    iload 5 \nL39:    iload 4 \nL41:    if_icmpge L77 \nL44:    aload_3 \nL45:    iload 5 \nL47:    aaload \nL48:    astore 6 \nL50:    aload_0 \nL51:    aload 6 \nL53:    invokevirtual Method java/lang/management/ThreadInfo getThreadName ()Ljava/lang/String; \nL56:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL59:    ifeq L71 \nL62:    aload_2 \nL63:    aload 6 \nL65:    invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL70:    pop \n\n        .stack same \nL71:    iinc 5 1 \nL74:    goto L37 \n\n        .stack chop 3 \nL77:    aload_2 \nL78:    areturn \nL79:    \n        .linenumbertable \n            L0 98 \n            L7 100 \n            L11 101 \n            L15 102 \n            L19 105 \n            L28 106 \n            L50 107 \n            L62 108 \n            L71 106 \n            L77 111 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/lang/String;)Ljava/util/List<Ljava/lang/management/ThreadInfo;>; \n.end method \n\n.method public static findThreadName : ([Ljava/lang/management/ThreadInfo;Ljava/lang/String;)Z \n    .code stack 2 locals 6 \nL0:     aload_0 \nL1:     ifnonnull L6 \nL4:     iconst_0 \nL5:     ireturn \n\n        .stack same \nL6:     aload_1 \nL7:     ifnonnull L12 \nL10:    iconst_0 \nL11:    ireturn \n\n        .stack same \nL12:    aload_0 \nL13:    astore_2 \nL14:    aload_2 \nL15:    arraylength \nL16:    istore_3 \nL17:    iconst_0 \nL18:    istore 4 \n\n        .stack append Object [Ljava/lang/management/ThreadInfo; Integer Integer \nL20:    iload 4 \nL22:    iload_3 \nL23:    if_icmpge L52 \nL26:    aload_2 \nL27:    iload 4 \nL29:    aaload \nL30:    astore 5 \nL32:    aload 5 \nL34:    invokevirtual Method java/lang/management/ThreadInfo getThreadName ()Ljava/lang/String; \nL37:    aload_1 \nL38:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL41:    ifeq L46 \nL44:    iconst_1 \nL45:    ireturn \n\n        .stack same \nL46:    iinc 4 1 \nL49:    goto L20 \n\n        .stack chop 3 \nL52:    iconst_0 \nL53:    ireturn \nL54:    \n        .linenumbertable \n            L0 115 \n            L4 116 \n            L6 118 \n            L10 119 \n            L12 121 \n            L32 122 \n            L44 123 \n            L46 121 \n            L52 126 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static findThreadName : (Ljava/lang/String;)Z \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     ifnonnull L6 \nL4:     iconst_0 \nL5:     ireturn \n\n        .stack same \nL6:     invokestatic Method ThreadMXBeanUtils dumpAllThread ()[Ljava/lang/management/ThreadInfo; \nL9:     astore_1 \nL10:    aload_1 \nL11:    aload_0 \nL12:    invokestatic Method ThreadMXBeanUtils findThreadName ([Ljava/lang/management/ThreadInfo;Ljava/lang/String;)Z \nL15:    ireturn \nL16:    \n        .linenumbertable \n            L0 130 \n            L4 131 \n            L6 134 \n            L10 135 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static findDeadlockedThreads : ()[J \n    .code stack 1 locals 0 \nL0:     getstatic Field ThreadMXBeanUtils THREAD_MX_BEAN Ljava/lang/management/ThreadMXBean; \nL3:     invokeinterface InterfaceMethod java/lang/management/ThreadMXBean findDeadlockedThreads ()[J 1 \nL8:     areturn \nL9:     \n        .linenumbertable \n            L0 139 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 1 locals 0 \nL0:     invokestatic Method java/lang/management/ManagementFactory getThreadMXBean ()Ljava/lang/management/ThreadMXBean; \nL3:     putstatic Field ThreadMXBeanUtils THREAD_MX_BEAN Ljava/lang/management/ThreadMXBean; \nL6:     getstatic Field ThreadMXBeanUtils THREAD_MX_BEAN Ljava/lang/management/ThreadMXBean; \nL9:     invokeinterface InterfaceMethod java/lang/management/ThreadMXBean isObjectMonitorUsageSupported ()Z 1 \nL14:    putstatic Field ThreadMXBeanUtils OBJECT_MONITOR_USAGE_SUPPORT Z \nL17:    getstatic Field ThreadMXBeanUtils THREAD_MX_BEAN Ljava/lang/management/ThreadMXBean; \nL20:    invokeinterface InterfaceMethod java/lang/management/ThreadMXBean isSynchronizerUsageSupported ()Z 1 \nL25:    putstatic Field ThreadMXBeanUtils SYNCHRONIZER_USAGE_SUPPORT Z \nL28:    getstatic Field ThreadMXBeanUtils THREAD_MX_BEAN Ljava/lang/management/ThreadMXBean; \nL31:    invokeinterface InterfaceMethod java/lang/management/ThreadMXBean isThreadContentionMonitoringSupported ()Z 1 \nL36:    putstatic Field ThreadMXBeanUtils CONTENTION_MONITORING_SUPPORT Z \nL39:    return \nL40:    \n        .linenumbertable \n            L0 32 \n            L6 45 \n            L17 46 \n            L28 47 \n            L39 48 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ThreadMXBeanUtils.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 15:26:58 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.lang.management.ThreadInfo;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ThreadMXBeanUtils_ESTest extends ThreadMXBeanUtils_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      long[] longArray0 = new long[0];\n      int int0 = 1;\n      ThreadInfo[] threadInfoArray0 = ThreadMXBeanUtils.findThread(longArray0, 1);\n      ThreadMXBeanUtils.getOption();\n      ThreadMXBeanUtils.findThreadName(\"ThreadMXBean SupportOption:{OBJECT_MONITOR_USAGE_SUPPORT=true}, {SYNCHRONIZER_USAGE_SUPPORT=true}, {CONTENTION_MONITORING_SUPPORT=true}\");\n      ThreadMXBeanUtils.findDeadlockedThreads();\n      ThreadMXBeanUtils.getThreadInfo((long) 1);\n      ThreadMXBeanUtils.getThreadInfo((long) 1);\n      ThreadInfo[] threadInfoArray1 = ThreadMXBeanUtils.dumpAllThread();\n      String string0 = \"0)Ho\";\n      ThreadMXBeanUtils.findThreadName(threadInfoArray1, \"0)Ho\");\n      ThreadMXBeanUtils.getOption();\n      ThreadMXBeanUtils.getThreadInfo((long) 1);\n      ThreadMXBeanUtils.findThreadName(threadInfoArray0, \"G\");\n      long long0 = 49372L;\n      ThreadMXBeanUtils.getThreadInfo(49372L, 1);\n      ThreadMXBeanUtils.dumpAllThread();\n      ThreadMXBeanUtils.findThread(\"\");\n      // Undeclared exception!\n      try { \n        ThreadMXBeanUtils.findThread((long[]) null, 1);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"java.util.Objects\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      ThreadMXBeanUtils.findThread(\"\");\n      long long0 = 56488L;\n      int int0 = (-58535);\n      ThreadMXBeanUtils.getThreadInfo(56488L, (-58535));\n      ThreadMXBeanUtils.findDeadlockedThreads();\n      ThreadMXBeanUtils.findThreadName((String) null);\n      // Undeclared exception!\n      try { \n        ThreadMXBeanUtils.findThread((String) null);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // threadName\n         //\n         verifyException(\"java.util.Objects\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      ThreadMXBeanUtils.findDeadlockedThreads();\n      ThreadMXBeanUtils.findThreadName(\"$Te0/) NnPsD\u007fSF.$\");\n      ThreadMXBeanUtils.getOption();\n      ThreadMXBeanUtils.findThread(\"$Te0/) NnPsD\u007fSF.$\");\n      ThreadMXBeanUtils.findDeadlockedThreads();\n      ThreadMXBeanUtils.getOption();\n      ThreadInfo[] threadInfoArray0 = new ThreadInfo[6];\n      // Undeclared exception!\n      try { \n        ThreadMXBeanUtils.getThreadInfo(0L, 27112);\n        fail(\"Expecting exception: IllegalArgumentException\");\n      \n      } catch(IllegalArgumentException e) {\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      ThreadMXBeanUtils.findThread(\"}, {CONTENTION_MONITORING_SUPPORT=\");\n      ThreadMXBeanUtils.getOption();\n      ThreadMXBeanUtils.getOption();\n      ThreadMXBeanUtils.getOption();\n      // Undeclared exception!\n      try { \n        ThreadMXBeanUtils.getThreadInfo((-4353L));\n        fail(\"Expecting exception: IllegalArgumentException\");\n      \n      } catch(IllegalArgumentException e) {\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      ThreadMXBeanUtils.dumpAllThread();\n      ThreadMXBeanUtils.getOption();\n      ThreadMXBeanUtils.getThreadInfo(1L, 1);\n      long[] longArray0 = new long[9];\n      longArray0[0] = (long) 1;\n      longArray0[1] = (long) 1;\n      longArray0[2] = 1L;\n      longArray0[3] = 1L;\n      longArray0[4] = 1L;\n      longArray0[5] = (long) 1;\n      longArray0[6] = 1L;\n      longArray0[7] = 1L;\n      longArray0[8] = (long) 1;\n      int int0 = 0;\n      ThreadMXBeanUtils.findThread(longArray0, 0);\n      ThreadMXBeanUtils.findThread(longArray0, 0);\n      ThreadMXBeanUtils.findDeadlockedThreads();\n      ThreadMXBeanUtils.getOption();\n      // Undeclared exception!\n      try { \n        ThreadMXBeanUtils.getThreadInfo(0L);\n        fail(\"Expecting exception: IllegalArgumentException\");\n      \n      } catch(IllegalArgumentException e) {\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      ThreadMXBeanUtils.dumpAllThread();\n      ThreadMXBeanUtils.dumpAllThread();\n      ThreadMXBeanUtils.findThreadName(\"[eFT-Wm{@@nN\");\n      ThreadMXBeanUtils.getThreadInfo(6456L);\n      ThreadMXBeanUtils.findDeadlockedThreads();\n      ThreadMXBeanUtils.findThreadName(\"[eFT-Wm{@@nN\");\n      ThreadInfo threadInfo0 = ThreadMXBeanUtils.getThreadInfo(6456L);\n      assertNull(threadInfo0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      long long0 = 1924L;\n      int int0 = 0;\n      ThreadMXBeanUtils.getThreadInfo(1924L, 0);\n      ThreadInfo[] threadInfoArray0 = new ThreadInfo[9];\n      threadInfoArray0[0] = null;\n      // Undeclared exception!\n      try { \n        ThreadMXBeanUtils.getThreadInfo((long) 0, 0);\n        fail(\"Expecting exception: IllegalArgumentException\");\n      \n      } catch(IllegalArgumentException e) {\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      ThreadMXBeanUtils.getOption();\n      ThreadInfo[] threadInfoArray0 = ThreadMXBeanUtils.dumpAllThread();\n      ThreadMXBeanUtils.findThreadName(\"ThreadMXBean SupportOption:{OBJECT_MONITOR_USAGE_SUPPORT=true}, {SYNCHRONIZER_USAGE_SUPPORT=true}, {CONTENTION_MONITORING_SUPPORT=true}\");\n      ThreadMXBeanUtils.findThreadName(threadInfoArray0, \"ThreadMXBean SupportOption:{OBJECT_MONITOR_USAGE_SUPPORT=true}, {SYNCHRONIZER_USAGE_SUPPORT=true}, {CONTENTION_MONITORING_SUPPORT=true}\");\n      ThreadMXBeanUtils.findThreadName(\"ThreadMXBean SupportOption:{OBJECT_MONITOR_USAGE_SUPPORT=true}, {SYNCHRONIZER_USAGE_SUPPORT=true}, {CONTENTION_MONITORING_SUPPORT=true}\");\n      long[] longArray0 = new long[8];\n      long long0 = 38122L;\n      longArray0[0] = 38122L;\n      long long1 = 0L;\n      longArray0[1] = 0L;\n      longArray0[2] = 4284L;\n      longArray0[3] = 77672L;\n      long long2 = 0L;\n      longArray0[4] = 0L;\n      long long3 = 24166L;\n      longArray0[5] = 24166L;\n      longArray0[6] = (-1L);\n      long long4 = 14887L;\n      longArray0[7] = 14887L;\n      // Undeclared exception!\n      try { \n        ThreadMXBeanUtils.findThread(longArray0, (-1));\n        fail(\"Expecting exception: IllegalArgumentException\");\n      \n      } catch(IllegalArgumentException e) {\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      ThreadInfo threadInfo0 = ThreadMXBeanUtils.getThreadInfo(20410L, 5865);\n      assertNull(threadInfo0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 15:26:58 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ThreadMXBeanUtils_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ThreadMXBeanUtils\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp31nyl518\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ThreadMXBeanUtils_ESTest_scaffolding.class.getClassLoader() ,\n      \"ThreadMXBeanUtils\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ThreadMXBeanUtils_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ThreadMXBeanUtils\"\n    );\n  }\n}\n", "class_idx": 253}
{"class_name": "AbstractEngine", "java_source": "/** Created by Almaz on 30.08.2015. */\npublic abstract class AbstractEngine {}\n", "jasm_code": ".version 52 0 \n.class public super abstract AbstractEngine \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 6 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'AbstractEngine.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 15:33:04 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class AbstractEngine_ESTest extends AbstractEngine_ESTest_scaffolding {\n  @Test\n  public void notGeneratedAnyTest() {\n    // EvoSuite did not generate any tests\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 15:33:04 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class AbstractEngine_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"AbstractEngine\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    /*No java.lang.System property to set*/\n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractEngine_ESTest_scaffolding.class.getClassLoader() ,\n      \"AbstractEngine\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractEngine_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"AbstractEngine\"\n    );\n  }\n}\n", "class_idx": 254}
{"class_name": "ExitRequestedException", "java_source": "public class ExitRequestedException extends RuntimeException {}\n", "jasm_code": ".version 52 0 \n.class public super ExitRequestedException \n.super java/lang/RuntimeException \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/RuntimeException <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ExitRequestedException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 02:26:26 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ExitRequestedException_ESTest extends ExitRequestedException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      ExitRequestedException exitRequestedException0 = new ExitRequestedException();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 02:26:26 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ExitRequestedException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ExitRequestedException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpgzx0_7av\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ExitRequestedException_ESTest_scaffolding.class.getClassLoader() ,\n      \"ExitRequestedException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ExitRequestedException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ExitRequestedException\"\n    );\n  }\n}\n", "class_idx": 255}
{"class_name": "SecurityException", "java_source": "/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n\n/**\n * @author jmrunge\n */\npublic class SecurityException extends Exception {\n\n  public SecurityException(String msg) {\n    super(msg);\n  }\n\n  public SecurityException(String msg, Throwable t) {\n    super(msg, t);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super SecurityException \n.super java/lang/Exception \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 14 \n            L5 15 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/Throwable;)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     aload_2 \nL3:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;Ljava/lang/Throwable;)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 18 \n            L6 19 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'SecurityException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 12:31:44 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class SecurityException_ESTest extends SecurityException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      SecurityException securityException0 = new SecurityException(\"\");\n      SecurityException securityException1 = new SecurityException(\"ITM)=U:\", securityException0);\n      assertFalse(securityException1.equals((Object)securityException0));\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 12:31:44 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class SecurityException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"SecurityException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp1rytljdv\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SecurityException_ESTest_scaffolding.class.getClassLoader() ,\n      \"SecurityException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SecurityException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"SecurityException\"\n    );\n  }\n}\n", "class_idx": 256}
{"class_name": "QueueSample", "java_source": "/**\n * QueueSample.java - Java type representing a snapshot of a given queue. It bundles together the\n * instant time the snapshot was taken, the queue size and the queue head.\n */\nimport java.beans.ConstructorProperties;\nimport java.util.Date;\n\npublic class QueueSample {\n\n  private final Date date;\n  private final int size;\n  private final String head;\n\n  @ConstructorProperties({\"date\", \"size\", \"head\"})\n  public QueueSample(Date date, int size, String head) {\n    this.date = date;\n    this.size = size;\n    this.head = head;\n  }\n\n  public Date getDate() {\n    return date;\n  }\n\n  public int getSize() {\n    return size;\n  }\n\n  public String getHead() {\n    return head;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super QueueSample \n.super java/lang/Object \n.field private final date Ljava/util/Date; \n.field private final size I \n.field private final head Ljava/lang/String; \n\n.method public <init> : (Ljava/util/Date;ILjava/lang/String;)V \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field QueueSample date Ljava/util/Date; \nL9:     aload_0 \nL10:    iload_2 \nL11:    putfield Field QueueSample size I \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field QueueSample head Ljava/lang/String; \nL19:    return \nL20:    \n        .linenumbertable \n            L0 19 \n            L4 20 \n            L9 21 \n            L14 22 \n            L19 23 \n        .end linenumbertable \n    .end code \n    .runtime visible annotations \n        .annotation Ljava/beans/ConstructorProperties; \n            value = array \n                string date \n                string size \n                string head \n            .end array \n        .end annotation \n    .end runtime \n.end method \n\n.method public getDate : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field QueueSample date Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 26 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSize : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field QueueSample size I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getHead : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field QueueSample head Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 34 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'QueueSample.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 22:48:00 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.Date;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.util.MockDate;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class QueueSample_ESTest extends QueueSample_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      MockDate mockDate0 = new MockDate(0, 1, 0);\n      QueueSample queueSample0 = new QueueSample(mockDate0, 0, \"\");\n      int int0 = queueSample0.getSize();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      MockDate mockDate0 = new MockDate((-68787), (-1), (-1), (-1), (-68787));\n      QueueSample queueSample0 = new QueueSample(mockDate0, (-68787), \"QueueSample\");\n      int int0 = queueSample0.getSize();\n      assertEquals((-68787), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      MockDate mockDate0 = new MockDate(64273, 1, 1);\n      QueueSample queueSample0 = new QueueSample(mockDate0, 64273, (String) null);\n      queueSample0.getHead();\n      assertEquals(64273, queueSample0.getSize());\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      MockDate mockDate0 = new MockDate(0L);\n      QueueSample queueSample0 = new QueueSample(mockDate0, (-1), \"\");\n      queueSample0.getHead();\n      assertEquals((-1), queueSample0.getSize());\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      QueueSample queueSample0 = new QueueSample((Date) null, 25043, \"QueueSample\");\n      queueSample0.getDate();\n      assertEquals(25043, queueSample0.getSize());\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      MockDate mockDate0 = new MockDate((-131043L));\n      QueueSample queueSample0 = new QueueSample(mockDate0, 64591, \"~7\\u0005=7(9qMy5GsDa~B\");\n      queueSample0.getDate();\n      assertEquals(64591, queueSample0.getSize());\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      MockDate mockDate0 = new MockDate((-131043L));\n      QueueSample queueSample0 = new QueueSample(mockDate0, 64591, \"~7\\u0005=7(9qMy5GsDa~B\");\n      queueSample0.getHead();\n      assertEquals(64591, queueSample0.getSize());\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      MockDate mockDate0 = new MockDate((-131043L));\n      QueueSample queueSample0 = new QueueSample(mockDate0, 64591, \"~7\\u0005=7(9qMy5GsDa~B\");\n      int int0 = queueSample0.getSize();\n      assertEquals(64591, int0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 22:48:00 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class QueueSample_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"QueueSample\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpq5uj2dyj\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(QueueSample_ESTest_scaffolding.class.getClassLoader() ,\n      \"QueueSample\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(QueueSample_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"QueueSample\"\n    );\n  }\n}\n", "class_idx": 257}
{"class_name": "GameEvent", "java_source": "/***************************************************************************\n *                   (C) Copyright 2009-2020 - Marauroa                    *\n ***************************************************************************\n ***************************************************************************\n *                                                                         *\n *   This program is free software; you can redistribute it and/or modify  *\n *   it under the terms of the GNU General Public License as published by  *\n *   the Free Software Foundation; either version 2 of the License, or     *\n *   (at your option) any later version.                                   *\n *                                                                         *\n ***************************************************************************/\n\nimport java.sql.Timestamp;\nimport java.util.Date;\n\n/** a gameEvent for logging */\npublic class GameEvent {\n\n  private String source;\n  private String event;\n  private Timestamp timestamp;\n  private String[] params;\n\n  /**\n   * create a GameEvent object for logging\n   *\n   * @param source source of the event (e. g. player name)\n   * @param event name of event\n   * @param params parameters\n   */\n  public GameEvent(String source, String event, String... params) {\n    this(source, event, new Timestamp(new Date().getTime()), params);\n  }\n\n  /**\n   * create a GameEvent object for logging\n   *\n   * @param source source of the event (e. g. player name)\n   * @param event name of event\n   * @param timestamp timestamp\n   * @param params parameters\n   */\n  public GameEvent(String source, String event, Timestamp timestamp, String... params) {\n    this.source = source;\n    this.event = event;\n    this.timestamp = timestamp;\n    this.params = new String[params.length];\n    System.arraycopy(params, 0, this.params, 0, params.length);\n  }\n\n  /**\n   * gets the source\n   *\n   * @return source\n   */\n  public String getSource() {\n    return source;\n  }\n\n  /**\n   * gets the event name\n   *\n   * @return event name\n   */\n  public String getEvent() {\n    return event;\n  }\n\n  /**\n   * gets the timestamp\n   *\n   * @return timestamp\n   */\n  public Timestamp getTimestamp() {\n    return timestamp;\n  }\n\n  /**\n   * gets the parameters\n   *\n   * @return parameters\n   */\n  public String[] getParams() {\n    String[] res = new String[this.params.length];\n    System.arraycopy(this.params, 0, res, 0, this.params.length);\n    return res;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super GameEvent \n.super java/lang/Object \n.field private source Ljava/lang/String; \n.field private event Ljava/lang/String; \n.field private timestamp Ljava/sql/Timestamp; \n.field private params [Ljava/lang/String; \n\n.method public varargs <init> : (Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V \n    .code stack 7 locals 4 \nL0:     aload_0 \nL1:     aload_1 \nL2:     aload_2 \nL3:     new java/sql/Timestamp \nL6:     dup \nL7:     new java/util/Date \nL10:    dup \nL11:    invokespecial Method java/util/Date <init> ()V \nL14:    invokevirtual Method java/util/Date getTime ()J \nL17:    invokespecial Method java/sql/Timestamp <init> (J)V \nL20:    aload_3 \nL21:    invokespecial Method GameEvent <init> (Ljava/lang/String;Ljava/lang/String;Ljava/sql/Timestamp;[Ljava/lang/String;)V \nL24:    return \nL25:    \n        .linenumbertable \n            L0 35 \n            L24 36 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public varargs <init> : (Ljava/lang/String;Ljava/lang/String;Ljava/sql/Timestamp;[Ljava/lang/String;)V \n    .code stack 5 locals 5 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field GameEvent source Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field GameEvent event Ljava/lang/String; \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field GameEvent timestamp Ljava/sql/Timestamp; \nL19:    aload_0 \nL20:    aload 4 \nL22:    arraylength \nL23:    anewarray java/lang/String \nL26:    putfield Field GameEvent params [Ljava/lang/String; \nL29:    aload 4 \nL31:    iconst_0 \nL32:    aload_0 \nL33:    getfield Field GameEvent params [Ljava/lang/String; \nL36:    iconst_0 \nL37:    aload 4 \nL39:    arraylength \nL40:    invokestatic Method java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V \nL43:    return \nL44:    \n        .linenumbertable \n            L0 46 \n            L4 47 \n            L9 48 \n            L14 49 \n            L19 50 \n            L29 51 \n            L43 52 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSource : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GameEvent source Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 60 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getEvent : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GameEvent event Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 69 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getTimestamp : ()Ljava/sql/Timestamp; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field GameEvent timestamp Ljava/sql/Timestamp; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 78 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getParams : ()[Ljava/lang/String; \n    .code stack 5 locals 2 \nL0:     aload_0 \nL1:     getfield Field GameEvent params [Ljava/lang/String; \nL4:     arraylength \nL5:     anewarray java/lang/String \nL8:     astore_1 \nL9:     aload_0 \nL10:    getfield Field GameEvent params [Ljava/lang/String; \nL13:    iconst_0 \nL14:    aload_1 \nL15:    iconst_0 \nL16:    aload_0 \nL17:    getfield Field GameEvent params [Ljava/lang/String; \nL20:    arraylength \nL21:    invokestatic Method java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V \nL24:    aload_1 \nL25:    areturn \nL26:    \n        .linenumbertable \n            L0 87 \n            L9 88 \n            L24 89 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'GameEvent.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 18:37:27 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.sql.Timestamp;\nimport java.time.Instant;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.time.MockInstant;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class GameEvent_ESTest extends GameEvent_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      GameEvent gameEvent0 = null;\n      try {\n        gameEvent0 = new GameEvent(\"\", \"\", (String[]) null);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"GameEvent\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      String[] stringArray0 = new String[2];\n      GameEvent gameEvent0 = new GameEvent(\"\", \"\", (Timestamp) null, stringArray0);\n      Timestamp timestamp0 = gameEvent0.getTimestamp();\n      assertNull(timestamp0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Timestamp timestamp0 = new Timestamp((-4304L));\n      String[] stringArray0 = new String[9];\n      timestamp0.setTime(0L);\n      GameEvent gameEvent0 = new GameEvent(\"\", \"\", timestamp0, stringArray0);\n      Timestamp timestamp1 = gameEvent0.getTimestamp();\n      assertSame(timestamp0, timestamp1);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      String[] stringArray0 = new String[0];\n      GameEvent gameEvent0 = new GameEvent(\"GameEvent\", \"GameEvent\", stringArray0);\n      String string0 = gameEvent0.getSource();\n      assertEquals(\"GameEvent\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Timestamp timestamp0 = new Timestamp((-4304L));\n      String[] stringArray0 = new String[9];\n      GameEvent gameEvent0 = new GameEvent(\"\", \"\", timestamp0, stringArray0);\n      gameEvent0.getSource();\n      gameEvent0.getParams();\n      gameEvent0.getSource();\n      Timestamp timestamp1 = gameEvent0.getTimestamp();\n      assertSame(timestamp0, timestamp1);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Instant instant0 = MockInstant.now();\n      Timestamp timestamp0 = Timestamp.from(instant0);\n      String[] stringArray0 = new String[0];\n      GameEvent gameEvent0 = new GameEvent(\"\", \"v|.[[W./G+>5.E*\", timestamp0, stringArray0);\n      String[] stringArray1 = gameEvent0.getParams();\n      assertNotSame(stringArray0, stringArray1);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      Instant instant0 = MockInstant.now();\n      Timestamp timestamp0 = Timestamp.from(instant0);\n      String[] stringArray0 = new String[0];\n      GameEvent gameEvent0 = new GameEvent(\"\", \"v|.[[W./G+>5.E*\", timestamp0, stringArray0);\n      String string0 = gameEvent0.getEvent();\n      assertEquals(\"v|.[[W./G+>5.E*\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      Timestamp timestamp0 = new Timestamp((-4304L));\n      String[] stringArray0 = new String[9];\n      GameEvent gameEvent0 = new GameEvent(\"\", \"\", timestamp0, stringArray0);\n      String string0 = gameEvent0.getEvent();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      String[] stringArray0 = new String[7];\n      GameEvent gameEvent0 = new GameEvent((String) null, (String) null, stringArray0);\n      String string0 = gameEvent0.getEvent();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test9()  throws Throwable  {\n      String[] stringArray0 = new String[7];\n      GameEvent gameEvent0 = new GameEvent((String) null, (String) null, stringArray0);\n      String string0 = gameEvent0.getSource();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 18:37:27 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class GameEvent_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"GameEvent\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp5ufnidav\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(GameEvent_ESTest_scaffolding.class.getClassLoader() ,\n      \"GameEvent\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(GameEvent_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"GameEvent\"\n    );\n  }\n}\n", "class_idx": 258}
{"class_name": "ObjectUtility", "java_source": "/*\n * ProActive Parallel Suite(TM):\n * The Open Source library for parallel and distributed\n * Workflows & Scheduling, Orchestration, Cloud Automation\n * and Big Data Analysis on Enterprise Grids & Clouds.\n *\n * Copyright (c) 2007 - 2017 ActiveEon\n * Contact: contact@activeeon.com\n *\n * This library is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License\n * as published by the Free Software Foundation: version 3 of\n * the License.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n * If needed, contact us to obtain a release under GPL Version 2 or 3\n * or a different license than the AGPL.\n */\n\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\n\npublic class ObjectUtility {\n\n  public static Object object(byte[] bytes) {\n    if (bytes == null) {\n      return \"[NULL]\";\n    }\n    try {\n      return new ObjectInputStream(new ByteArrayInputStream(bytes)).readObject();\n    } catch (ClassNotFoundException cnfe) {\n      return String.format(\"[De-serialization error : %s]\", cnfe.getMessage());\n    } catch (IOException ioe) {\n      return String.format(\"[De-serialization error : %s]\", ioe.getMessage());\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ObjectUtility \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 33 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static object : ([B)Ljava/lang/Object; \n    .code stack 5 locals 2 \nL0:     aload_0 \nL1:     ifnonnull L7 \nL4:     ldc '[NULL]' \nL6:     areturn \n        .catch java/lang/ClassNotFoundException from L7 to L25 using L26 \n        .catch java/io/IOException from L7 to L25 using L44 \n\n        .stack same \nL7:     new java/io/ObjectInputStream \nL10:    dup \nL11:    new java/io/ByteArrayInputStream \nL14:    dup \nL15:    aload_0 \nL16:    invokespecial Method java/io/ByteArrayInputStream <init> ([B)V \nL19:    invokespecial Method java/io/ObjectInputStream <init> (Ljava/io/InputStream;)V \nL22:    invokevirtual Method java/io/ObjectInputStream readObject ()Ljava/lang/Object; \nL25:    areturn \n\n        .stack stack_1 Object java/lang/ClassNotFoundException \nL26:    astore_1 \nL27:    ldc '[De-serialization error : %s]' \nL29:    iconst_1 \nL30:    anewarray java/lang/Object \nL33:    dup \nL34:    iconst_0 \nL35:    aload_1 \nL36:    invokevirtual Method java/lang/ClassNotFoundException getMessage ()Ljava/lang/String; \nL39:    aastore \nL40:    invokestatic Method java/lang/String format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; \nL43:    areturn \n\n        .stack stack_1 Object java/io/IOException \nL44:    astore_1 \nL45:    ldc '[De-serialization error : %s]' \nL47:    iconst_1 \nL48:    anewarray java/lang/Object \nL51:    dup \nL52:    iconst_0 \nL53:    aload_1 \nL54:    invokevirtual Method java/io/IOException getMessage ()Ljava/lang/String; \nL57:    aastore \nL58:    invokestatic Method java/lang/String format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; \nL61:    areturn \nL62:    \n        .linenumbertable \n            L0 36 \n            L4 37 \n            L7 40 \n            L26 41 \n            L27 42 \n            L44 43 \n            L45 44 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ObjectUtility.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 11:54:09 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ObjectUtility_ESTest extends ObjectUtility_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      byte[] byteArray0 = new byte[0];\n      Object object0 = ObjectUtility.object(byteArray0);\n      assertEquals(\"[De-serialization error : null]\", object0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Object object0 = ObjectUtility.object((byte[]) null);\n      assertEquals(\"[NULL]\", object0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      ObjectUtility objectUtility0 = new ObjectUtility();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 11:54:09 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ObjectUtility_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ObjectUtility\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp_42gguh2\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ObjectUtility_ESTest_scaffolding.class.getClassLoader() ,\n      \"ObjectUtility\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ObjectUtility_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ObjectUtility\"\n    );\n  }\n}\n", "class_idx": 259}
{"class_name": "County", "java_source": "/** Created by xusen on 2016/12/18. */\npublic class County {\n  private int id;\n  private String countyName;\n  private String countyCode;\n  private int cityId;\n\n  public int getId() {\n    return id;\n  }\n\n  public void setId(int id) {\n    this.id = id;\n  }\n\n  public String getCountyName() {\n    return countyName;\n  }\n\n  public void setCountyName(String countyName) {\n    this.countyName = countyName;\n  }\n\n  public String getCountyCode() {\n    return countyCode;\n  }\n\n  public void setCountyCode(String countyCode) {\n    this.countyCode = countyCode;\n  }\n\n  public int getCityId() {\n    return cityId;\n  }\n\n  public void setCityId(int cityId) {\n    this.cityId = cityId;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super County \n.super java/lang/Object \n.field private id I \n.field private countyName Ljava/lang/String; \n.field private countyCode Ljava/lang/String; \n.field private cityId I \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 7 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getId : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field County id I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 14 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setId : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field County id I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 18 \n            L5 19 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCountyName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field County countyName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 22 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCountyName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field County countyName Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 26 \n            L5 27 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCountyCode : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field County countyCode Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCountyCode : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field County countyCode Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 34 \n            L5 35 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCityId : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field County cityId I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 38 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCityId : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field County cityId I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 42 \n            L5 43 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'County.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 16:07:49 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class County_ESTest extends County_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      County county0 = new County();\n      county0.setId(22723);\n      int int0 = county0.getId();\n      assertEquals(22723, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      County county0 = new County();\n      county0.setId((-38802));\n      int int0 = county0.getId();\n      assertEquals((-38802), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      County county0 = new County();\n      county0.setCountyName(\"\");\n      String string0 = county0.getCountyName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      County county0 = new County();\n      county0.setCountyCode(\"NtXy)&k$Ma)o'M/M?\");\n      String string0 = county0.getCountyCode();\n      assertEquals(\"NtXy)&k$Ma)o'M/M?\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      County county0 = new County();\n      county0.setCountyCode(\"\");\n      String string0 = county0.getCountyCode();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      County county0 = new County();\n      county0.setCityId(1);\n      int int0 = county0.getCityId();\n      assertEquals(1, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      County county0 = new County();\n      county0.setCityId((-1));\n      int int0 = county0.getCityId();\n      assertEquals((-1), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      County county0 = new County();\n      int int0 = county0.getId();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      County county0 = new County();\n      String string0 = county0.getCountyCode();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      County county0 = new County();\n      String string0 = county0.getCountyName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      County county0 = new County();\n      int int0 = county0.getCityId();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      County county0 = new County();\n      county0.setCountyName(\"NtXy)&k$Ma)o'M/M?\");\n      String string0 = county0.getCountyName();\n      assertEquals(\"NtXy)&k$Ma)o'M/M?\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 16:07:49 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class County_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"County\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpi6da7u1m\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(County_ESTest_scaffolding.class.getClassLoader() ,\n      \"County\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(County_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"County\"\n    );\n  }\n}\n", "class_idx": 260}
{"class_name": "ConsoleInput", "java_source": "import java.util.Scanner;\n\npublic class ConsoleInput {\n\n  private Scanner scanner = new Scanner(System.in);\n\n  public String input(String message) {\n    System.out.println(message);\n    return this.scanner.nextLine();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ConsoleInput \n.super java/lang/Object \n.field private scanner Ljava/util/Scanner; \n\n.method public <init> : ()V \n    .code stack 4 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     new java/util/Scanner \nL8:     dup \nL9:     getstatic Field java/lang/System in Ljava/io/InputStream; \nL12:    invokespecial Method java/util/Scanner <init> (Ljava/io/InputStream;)V \nL15:    putfield Field ConsoleInput scanner Ljava/util/Scanner; \nL18:    return \nL19:    \n        .linenumbertable \n            L0 6 \n            L4 8 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public input : (Ljava/lang/String;)Ljava/lang/String; \n    .code stack 2 locals 2 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     aload_1 \nL4:     invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL7:     aload_0 \nL8:     getfield Field ConsoleInput scanner Ljava/util/Scanner; \nL11:    invokevirtual Method java/util/Scanner nextLine ()Ljava/lang/String; \nL14:    areturn \nL15:    \n        .linenumbertable \n            L0 11 \n            L7 12 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ConsoleInput.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 21:05:06 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.util.SystemInUtil;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ConsoleInput_ESTest extends ConsoleInput_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      SystemInUtil.addInputLine(\"+gb;TOMGK28GBK`#\");\n      ConsoleInput consoleInput0 = new ConsoleInput();\n      String string0 = consoleInput0.input(\"p\");\n      assertEquals(\"+gb;TOMGK28GBK`#\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      ConsoleInput consoleInput0 = new ConsoleInput();\n      SystemInUtil.addInputLine(\"\");\n      String string0 = consoleInput0.input(\"ConsoleInput\");\n      assertEquals(\"\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 21:05:06 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ConsoleInput_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ConsoleInput\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n    org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpxrridngq\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ConsoleInput_ESTest_scaffolding.class.getClassLoader() ,\n      \"ConsoleInput\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ConsoleInput_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ConsoleInput\"\n    );\n  }\n}\n", "class_idx": 261}
{"class_name": "SerializedObject3D", "java_source": "import java.io.Serializable;\n\npublic class SerializedObject3D implements Serializable {\n  private static final long serialVersionUID = 5264861128471177349L;\n\n  protected float[] mVertices;\n  protected float[] mNormals;\n  protected float[] mTextureCoords;\n  protected float[] mColors;\n  protected int[] mIndices;\n  protected float[][] mFrameNormals;\n  protected float[][] mFrameVertices;\n  protected String[] mFrameNames;\n\n  public SerializedObject3D(\n      int numVertices, int numNormals, int numTextureCoords, int numColors, int numIndices) {\n    mVertices = new float[numVertices];\n    mNormals = new float[numNormals];\n    mTextureCoords = new float[numTextureCoords];\n    mColors = new float[numColors];\n    mIndices = new int[numIndices];\n  }\n\n  public float[] getVertices() {\n    return mVertices;\n  }\n\n  public void setVertices(float[] vertices) {\n    this.mVertices = vertices;\n  }\n\n  public float[] getNormals() {\n    return mNormals;\n  }\n\n  public void setNormals(float[] normals) {\n    this.mNormals = normals;\n  }\n\n  public float[] getTextureCoords() {\n    return mTextureCoords;\n  }\n\n  public void setTextureCoords(float[] textureCoords) {\n    this.mTextureCoords = textureCoords;\n  }\n\n  public int[] getIndices() {\n    return mIndices;\n  }\n\n  public void setIndices(int[] indices) {\n    this.mIndices = indices;\n  }\n\n  public float[] getColors() {\n    return mColors;\n  }\n\n  public void setColors(float[] colors) {\n    this.mColors = colors;\n  }\n\n  public String[] getFrameNames() {\n    return mFrameNames;\n  }\n\n  public void setFrameNames(String[] frameNames) {\n    this.mFrameNames = frameNames;\n  }\n\n  public float[][] getFrameVertices() {\n    return mFrameVertices;\n  }\n\n  public void setFrameVertices(float[][] frameVertices) {\n    this.mFrameVertices = frameVertices;\n  }\n\n  public float[][] getFrameNormals() {\n    return mFrameNormals;\n  }\n\n  public void setFrameNormals(float[][] frameNormals) {\n    this.mFrameNormals = frameNormals;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super SerializedObject3D \n.super java/lang/Object \n.implements java/io/Serializable \n.field private static final serialVersionUID J = 5264861128471177349L \n.field protected mVertices [F \n.field protected mNormals [F \n.field protected mTextureCoords [F \n.field protected mColors [F \n.field protected mIndices [I \n.field protected mFrameNormals [[F \n.field protected mFrameVertices [[F \n.field protected mFrameNames [Ljava/lang/String; \n\n.method public <init> : (IIIII)V \n    .code stack 2 locals 6 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     newarray float \nL8:     putfield Field SerializedObject3D mVertices [F \nL11:    aload_0 \nL12:    iload_2 \nL13:    newarray float \nL15:    putfield Field SerializedObject3D mNormals [F \nL18:    aload_0 \nL19:    iload_3 \nL20:    newarray float \nL22:    putfield Field SerializedObject3D mTextureCoords [F \nL25:    aload_0 \nL26:    iload 4 \nL28:    newarray float \nL30:    putfield Field SerializedObject3D mColors [F \nL33:    aload_0 \nL34:    iload 5 \nL36:    newarray int \nL38:    putfield Field SerializedObject3D mIndices [I \nL41:    return \nL42:    \n        .linenumbertable \n            L0 17 \n            L4 18 \n            L11 19 \n            L18 20 \n            L25 21 \n            L33 22 \n            L41 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getVertices : ()[F \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SerializedObject3D mVertices [F \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 26 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setVertices : ([F)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field SerializedObject3D mVertices [F \nL5:     return \nL6:     \n        .linenumbertable \n            L0 30 \n            L5 31 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getNormals : ()[F \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SerializedObject3D mNormals [F \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 34 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setNormals : ([F)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field SerializedObject3D mNormals [F \nL5:     return \nL6:     \n        .linenumbertable \n            L0 38 \n            L5 39 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getTextureCoords : ()[F \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SerializedObject3D mTextureCoords [F \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 42 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setTextureCoords : ([F)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field SerializedObject3D mTextureCoords [F \nL5:     return \nL6:     \n        .linenumbertable \n            L0 46 \n            L5 47 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getIndices : ()[I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SerializedObject3D mIndices [I \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 50 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setIndices : ([I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field SerializedObject3D mIndices [I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 54 \n            L5 55 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getColors : ()[F \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SerializedObject3D mColors [F \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 58 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setColors : ([F)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field SerializedObject3D mColors [F \nL5:     return \nL6:     \n        .linenumbertable \n            L0 62 \n            L5 63 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFrameNames : ()[Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SerializedObject3D mFrameNames [Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 66 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setFrameNames : ([Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field SerializedObject3D mFrameNames [Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 70 \n            L5 71 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFrameVertices : ()[[F \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SerializedObject3D mFrameVertices [[F \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 74 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setFrameVertices : ([[F)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field SerializedObject3D mFrameVertices [[F \nL5:     return \nL6:     \n        .linenumbertable \n            L0 78 \n            L5 79 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFrameNormals : ()[[F \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SerializedObject3D mFrameNormals [[F \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 82 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setFrameNormals : ([[F)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field SerializedObject3D mFrameNormals [[F \nL5:     return \nL6:     \n        .linenumbertable \n            L0 86 \n            L5 87 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'SerializedObject3D.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 12:41:46 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class SerializedObject3D_ESTest extends SerializedObject3D_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(26015, 26015, 26015, 26015, 0);\n      serializedObject3D0.setVertices((float[]) null);\n      float[] floatArray0 = serializedObject3D0.getVertices();\n      assertNull(floatArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(0, 0, 0, 0, 0);\n      float[] floatArray0 = serializedObject3D0.getVertices();\n      assertEquals(0, floatArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(1, 1, 1, 0, 1);\n      serializedObject3D0.setTextureCoords((float[]) null);\n      float[] floatArray0 = serializedObject3D0.getTextureCoords();\n      assertNull(floatArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(44374, 0, 0, 44374, 44374);\n      float[] floatArray0 = serializedObject3D0.getTextureCoords();\n      assertEquals(0, floatArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(49569, 0, 49569, 49569, 23474);\n      serializedObject3D0.setNormals((float[]) null);\n      float[] floatArray0 = serializedObject3D0.getNormals();\n      assertNull(floatArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(0, 0, 0, 0, 0);\n      float[] floatArray0 = serializedObject3D0.getNormals();\n      assertEquals(0, floatArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(19640, 19640, 19640, 19640, 0);\n      serializedObject3D0.mIndices = null;\n      int[] intArray0 = serializedObject3D0.getIndices();\n      assertNull(intArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(0, 10467, 0, 0, 10467);\n      int[] intArray0 = serializedObject3D0.getIndices();\n      assertEquals(10467, intArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(1, 1, 1, 1, 1);\n      float[][] floatArray0 = new float[6][3];\n      serializedObject3D0.setFrameVertices(floatArray0);\n      float[][] floatArray1 = serializedObject3D0.getFrameVertices();\n      assertSame(floatArray1, floatArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(0, 10467, 0, 0, 10467);\n      float[][] floatArray0 = new float[0][1];\n      serializedObject3D0.mFrameVertices = floatArray0;\n      float[][] floatArray1 = serializedObject3D0.getFrameVertices();\n      assertEquals(0, floatArray1.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(113012, 1, 1, 0, 0);\n      float[][] floatArray0 = new float[1][9];\n      serializedObject3D0.mFrameNormals = floatArray0;\n      float[][] floatArray1 = serializedObject3D0.getFrameNormals();\n      assertEquals(1, floatArray1.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(0, 0, 0, 0, 0);\n      float[][] floatArray0 = new float[0][6];\n      serializedObject3D0.mFrameNormals = floatArray0;\n      float[][] floatArray1 = serializedObject3D0.getFrameNormals();\n      assertSame(floatArray1, floatArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(0, 0, 0, 0, 0);\n      String[] stringArray0 = new String[6];\n      serializedObject3D0.setFrameNames(stringArray0);\n      String[] stringArray1 = serializedObject3D0.getFrameNames();\n      assertSame(stringArray1, stringArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(0, 10467, 0, 0, 10467);\n      String[] stringArray0 = new String[0];\n      serializedObject3D0.mFrameNames = stringArray0;\n      String[] stringArray1 = serializedObject3D0.getFrameNames();\n      assertEquals(0, stringArray1.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(18001, 18001, 18001, 18001, 0);\n      serializedObject3D0.mColors = null;\n      float[] floatArray0 = serializedObject3D0.getColors();\n      assertNull(floatArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(49569, 0, 49569, 49569, 23474);\n      float[] floatArray0 = serializedObject3D0.getColors();\n      assertEquals(49569, floatArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(0, 10467, 0, 0, 10467);\n      float[][] floatArray0 = serializedObject3D0.getFrameNormals();\n      assertNull(floatArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(1, 70619, 70619, 0, 1);\n      int[] intArray0 = new int[0];\n      serializedObject3D0.setIndices(intArray0);\n      assertArrayEquals(new int[] {}, intArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(18001, 18001, 18001, 18001, 0);\n      float[] floatArray0 = new float[4];\n      serializedObject3D0.setColors(floatArray0);\n      assertEquals(4, floatArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(1, 70619, 70619, 0, 1);\n      float[][] floatArray0 = serializedObject3D0.getFrameVertices();\n      assertNull(floatArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(1, 70619, 70619, 0, 1);\n      float[] floatArray0 = serializedObject3D0.getColors();\n      assertEquals(0, floatArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(19640, 19640, 19640, 19640, 0);\n      int[] intArray0 = serializedObject3D0.getIndices();\n      assertEquals(0, intArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test22()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(19640, 19640, 19640, 19640, 0);\n      float[] floatArray0 = serializedObject3D0.getNormals();\n      assertEquals(19640, floatArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test23()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(0, 0, 0, 0, 0);\n      serializedObject3D0.setFrameNormals((float[][]) null);\n  }\n\n  @Test(timeout = 4000)\n  public void test24()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(1, 70619, 70619, 0, 1);\n      float[] floatArray0 = serializedObject3D0.getTextureCoords();\n      assertEquals(70619, floatArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test25()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(18001, 18001, 18001, 18001, 0);\n      String[] stringArray0 = serializedObject3D0.getFrameNames();\n      assertNull(stringArray0);\n  }\n\n  @Test(timeout = 4000)\n  public void test26()  throws Throwable  {\n      SerializedObject3D serializedObject3D0 = new SerializedObject3D(18001, 18001, 18001, 18001, 0);\n      float[] floatArray0 = serializedObject3D0.getVertices();\n      assertEquals(18001, floatArray0.length);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 12:41:46 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class SerializedObject3D_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"SerializedObject3D\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpnj4f_i_o\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SerializedObject3D_ESTest_scaffolding.class.getClassLoader() ,\n      \"SerializedObject3D\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SerializedObject3D_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"SerializedObject3D\"\n    );\n  }\n}\n", "class_idx": 262}
{"class_name": "EventProgress", "java_source": "/** Created by wayne on 2017/7/11. */\npublic class EventProgress {\n  private boolean show;\n  private String type;\n\n  public EventProgress(boolean show) {\n    this.show = show;\n  }\n\n  public EventProgress(boolean show, String type) {\n    this.show = show;\n    this.type = type;\n  }\n\n  public boolean isShow() {\n    return show;\n  }\n\n  public void setShow(boolean show) {\n    this.show = show;\n  }\n\n  public String getType() {\n    return type;\n  }\n\n  public void setType(String type) {\n    this.type = type;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super EventProgress \n.super java/lang/Object \n.field private show Z \n.field private type Ljava/lang/String; \n\n.method public <init> : (Z)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field EventProgress show Z \nL9:     return \nL10:    \n        .linenumbertable \n            L0 11 \n            L4 12 \n            L9 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (ZLjava/lang/String;)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     iload_1 \nL6:     putfield Field EventProgress show Z \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field EventProgress type Ljava/lang/String; \nL14:    return \nL15:    \n        .linenumbertable \n            L0 15 \n            L4 16 \n            L9 17 \n            L14 18 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public isShow : ()Z \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field EventProgress show Z \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setShow : (Z)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field EventProgress show Z \nL5:     return \nL6:     \n        .linenumbertable \n            L0 25 \n            L5 26 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getType : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field EventProgress type Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 29 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setType : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field EventProgress type Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 33 \n            L5 34 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'EventProgress.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 18:48:56 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class EventProgress_ESTest extends EventProgress_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      EventProgress eventProgress0 = new EventProgress(false);\n      assertFalse(eventProgress0.isShow());\n      \n      eventProgress0.setShow(true);\n      boolean boolean0 = eventProgress0.isShow();\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      EventProgress eventProgress0 = new EventProgress(true, \"'Gzs0nG4n(>b'7\");\n      eventProgress0.getType();\n      assertTrue(eventProgress0.isShow());\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      EventProgress eventProgress0 = new EventProgress(false, \"\");\n      eventProgress0.getType();\n      assertFalse(eventProgress0.isShow());\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      EventProgress eventProgress0 = new EventProgress(false, \"\");\n      eventProgress0.setType(\"\");\n      assertFalse(eventProgress0.isShow());\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      EventProgress eventProgress0 = new EventProgress(false, \"\");\n      boolean boolean0 = eventProgress0.isShow();\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      EventProgress eventProgress0 = new EventProgress(false);\n      eventProgress0.getType();\n      assertFalse(eventProgress0.isShow());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 18:48:56 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class EventProgress_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"EventProgress\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp3cqxz4qr\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(EventProgress_ESTest_scaffolding.class.getClassLoader() ,\n      \"EventProgress\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(EventProgress_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"EventProgress\"\n    );\n  }\n}\n", "class_idx": 263}
{"class_name": "Reversion", "java_source": "import java.math.BigDecimal;\nimport java.util.Date;\n\npublic class Reversion {\n  private Integer id;\n  private String billNo;\n  private Integer billStat;\n  private Integer rentBillId;\n  private String rentBillNo;\n  private Integer rentBillStat;\n  private String rentBillStatName;\n\n  private Integer warehouseId;\n  private String warehouseName;\n\n  private String customerName;\n  private String customerPhone;\n  private String customerAddr;\n  private String customerCard;\n\n  private Integer supplierId;\n  private String supplierName;\n  private String expressBillNo;\n\n  private Date beginDate;\n  private Date endDate;\n  private Date reversionDate;\n  private BigDecimal rentMoney;\n  private BigDecimal repoMoney;\n  private BigDecimal compensateMoney;\n\n  private Integer create_by;\n  private Integer update_by;\n\n  private Date create_time;\n  private Date update_time;\n\n  public Integer getId() {\n    return id;\n  }\n\n  public void setId(Integer id) {\n    this.id = id;\n  }\n\n  public String getBillNo() {\n    return billNo;\n  }\n\n  public void setBillNo(String billNo) {\n    this.billNo = billNo;\n  }\n\n  public Integer getBillStat() {\n    return billStat;\n  }\n\n  public void setBillStat(Integer billStat) {\n    this.billStat = billStat;\n  }\n\n  public Integer getRentBillId() {\n    return rentBillId;\n  }\n\n  public void setRentBillId(Integer rentBillId) {\n    this.rentBillId = rentBillId;\n  }\n\n  public String getRentBillNo() {\n    return rentBillNo;\n  }\n\n  public void setRentBillNo(String rentBillNo) {\n    this.rentBillNo = rentBillNo;\n  }\n\n  public Integer getRentBillStat() {\n    return rentBillStat;\n  }\n\n  public void setRentBillStat(Integer rentBillStat) {\n    this.rentBillStat = rentBillStat;\n  }\n\n  public String getRentBillStatName() {\n    return rentBillStatName;\n  }\n\n  public void setRentBillStatName(String rentBillStatName) {\n    this.rentBillStatName = rentBillStatName;\n  }\n\n  public Integer getWarehouseId() {\n    return warehouseId;\n  }\n\n  public void setWarehouseId(Integer warehouseId) {\n    this.warehouseId = warehouseId;\n  }\n\n  public String getWarehouseName() {\n    return warehouseName;\n  }\n\n  public void setWarehouseName(String warehouseName) {\n    this.warehouseName = warehouseName;\n  }\n\n  public String getCustomerName() {\n    return customerName;\n  }\n\n  public void setCustomerName(String customerName) {\n    this.customerName = customerName;\n  }\n\n  public String getCustomerPhone() {\n    return customerPhone;\n  }\n\n  public void setCustomerPhone(String customerPhone) {\n    this.customerPhone = customerPhone;\n  }\n\n  public String getCustomerAddr() {\n    return customerAddr;\n  }\n\n  public void setCustomerAddr(String customerAddr) {\n    this.customerAddr = customerAddr;\n  }\n\n  public String getCustomerCard() {\n    return customerCard;\n  }\n\n  public void setCustomerCard(String customerCard) {\n    this.customerCard = customerCard;\n  }\n\n  public Integer getSupplierId() {\n    return supplierId;\n  }\n\n  public void setSupplierId(Integer supplierId) {\n    this.supplierId = supplierId;\n  }\n\n  public String getSupplierName() {\n    return supplierName;\n  }\n\n  public void setSupplierName(String supplierName) {\n    this.supplierName = supplierName;\n  }\n\n  public String getExpressBillNo() {\n    return expressBillNo;\n  }\n\n  public void setExpressBillNo(String expressBillNo) {\n    this.expressBillNo = expressBillNo;\n  }\n\n  public Date getBeginDate() {\n    return beginDate;\n  }\n\n  public void setBeginDate(Date beginDate) {\n    this.beginDate = beginDate;\n  }\n\n  public Date getEndDate() {\n    return endDate;\n  }\n\n  public void setEndDate(Date endDate) {\n    this.endDate = endDate;\n  }\n\n  public Date getReversionDate() {\n    return reversionDate;\n  }\n\n  public void setReversionDate(Date reversionDate) {\n    this.reversionDate = reversionDate;\n  }\n\n  public BigDecimal getRentMoney() {\n    return rentMoney;\n  }\n\n  public void setRentMoney(BigDecimal rentMoney) {\n    this.rentMoney = rentMoney;\n  }\n\n  public BigDecimal getRepoMoney() {\n    return repoMoney;\n  }\n\n  public void setRepoMoney(BigDecimal repoMoney) {\n    this.repoMoney = repoMoney;\n  }\n\n  public BigDecimal getCompensateMoney() {\n    return compensateMoney;\n  }\n\n  public void setCompensateMoney(BigDecimal compensateMoney) {\n    this.compensateMoney = compensateMoney;\n  }\n\n  public Integer getCreate_by() {\n    return create_by;\n  }\n\n  public void setCreate_by(Integer create_by) {\n    this.create_by = create_by;\n  }\n\n  public Integer getUpdate_by() {\n    return update_by;\n  }\n\n  public void setUpdate_by(Integer update_by) {\n    this.update_by = update_by;\n  }\n\n  public Date getCreate_time() {\n    return create_time;\n  }\n\n  public void setCreate_time(Date create_time) {\n    this.create_time = create_time;\n  }\n\n  public Date getUpdate_time() {\n    return update_time;\n  }\n\n  public void setUpdate_time(Date update_time) {\n    this.update_time = update_time;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Reversion \n.super java/lang/Object \n.field private id Ljava/lang/Integer; \n.field private billNo Ljava/lang/String; \n.field private billStat Ljava/lang/Integer; \n.field private rentBillId Ljava/lang/Integer; \n.field private rentBillNo Ljava/lang/String; \n.field private rentBillStat Ljava/lang/Integer; \n.field private rentBillStatName Ljava/lang/String; \n.field private warehouseId Ljava/lang/Integer; \n.field private warehouseName Ljava/lang/String; \n.field private customerName Ljava/lang/String; \n.field private customerPhone Ljava/lang/String; \n.field private customerAddr Ljava/lang/String; \n.field private customerCard Ljava/lang/String; \n.field private supplierId Ljava/lang/Integer; \n.field private supplierName Ljava/lang/String; \n.field private expressBillNo Ljava/lang/String; \n.field private beginDate Ljava/util/Date; \n.field private endDate Ljava/util/Date; \n.field private reversionDate Ljava/util/Date; \n.field private rentMoney Ljava/math/BigDecimal; \n.field private repoMoney Ljava/math/BigDecimal; \n.field private compensateMoney Ljava/math/BigDecimal; \n.field private create_by Ljava/lang/Integer; \n.field private update_by Ljava/lang/Integer; \n.field private create_time Ljava/util/Date; \n.field private update_time Ljava/util/Date; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getId : ()Ljava/lang/Integer; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion id Ljava/lang/Integer; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 41 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setId : (Ljava/lang/Integer;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion id Ljava/lang/Integer; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 45 \n            L5 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getBillNo : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion billNo Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 49 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setBillNo : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion billNo Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 53 \n            L5 54 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getBillStat : ()Ljava/lang/Integer; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion billStat Ljava/lang/Integer; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 57 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setBillStat : (Ljava/lang/Integer;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion billStat Ljava/lang/Integer; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 61 \n            L5 62 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getRentBillId : ()Ljava/lang/Integer; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion rentBillId Ljava/lang/Integer; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 65 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRentBillId : (Ljava/lang/Integer;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion rentBillId Ljava/lang/Integer; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 69 \n            L5 70 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getRentBillNo : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion rentBillNo Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 73 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRentBillNo : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion rentBillNo Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 77 \n            L5 78 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getRentBillStat : ()Ljava/lang/Integer; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion rentBillStat Ljava/lang/Integer; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 81 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRentBillStat : (Ljava/lang/Integer;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion rentBillStat Ljava/lang/Integer; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 85 \n            L5 86 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getRentBillStatName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion rentBillStatName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 89 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRentBillStatName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion rentBillStatName Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 93 \n            L5 94 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getWarehouseId : ()Ljava/lang/Integer; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion warehouseId Ljava/lang/Integer; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 97 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setWarehouseId : (Ljava/lang/Integer;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion warehouseId Ljava/lang/Integer; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 101 \n            L5 102 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getWarehouseName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion warehouseName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 105 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setWarehouseName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion warehouseName Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 109 \n            L5 110 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCustomerName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion customerName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 113 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCustomerName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion customerName Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 117 \n            L5 118 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCustomerPhone : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion customerPhone Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 121 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCustomerPhone : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion customerPhone Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 125 \n            L5 126 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCustomerAddr : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion customerAddr Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 129 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCustomerAddr : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion customerAddr Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 133 \n            L5 134 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCustomerCard : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion customerCard Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 137 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCustomerCard : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion customerCard Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 141 \n            L5 142 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSupplierId : ()Ljava/lang/Integer; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion supplierId Ljava/lang/Integer; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 145 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setSupplierId : (Ljava/lang/Integer;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion supplierId Ljava/lang/Integer; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 149 \n            L5 150 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSupplierName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion supplierName Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 153 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setSupplierName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion supplierName Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 157 \n            L5 158 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getExpressBillNo : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion expressBillNo Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 161 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setExpressBillNo : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion expressBillNo Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 165 \n            L5 166 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getBeginDate : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion beginDate Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 169 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setBeginDate : (Ljava/util/Date;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion beginDate Ljava/util/Date; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 173 \n            L5 174 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getEndDate : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion endDate Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 177 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setEndDate : (Ljava/util/Date;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion endDate Ljava/util/Date; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 181 \n            L5 182 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getReversionDate : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion reversionDate Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 185 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setReversionDate : (Ljava/util/Date;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion reversionDate Ljava/util/Date; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 189 \n            L5 190 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getRentMoney : ()Ljava/math/BigDecimal; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion rentMoney Ljava/math/BigDecimal; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 193 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRentMoney : (Ljava/math/BigDecimal;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion rentMoney Ljava/math/BigDecimal; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 197 \n            L5 198 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getRepoMoney : ()Ljava/math/BigDecimal; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion repoMoney Ljava/math/BigDecimal; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 201 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRepoMoney : (Ljava/math/BigDecimal;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion repoMoney Ljava/math/BigDecimal; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 205 \n            L5 206 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCompensateMoney : ()Ljava/math/BigDecimal; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion compensateMoney Ljava/math/BigDecimal; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 209 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCompensateMoney : (Ljava/math/BigDecimal;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion compensateMoney Ljava/math/BigDecimal; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 213 \n            L5 214 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCreate_by : ()Ljava/lang/Integer; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion create_by Ljava/lang/Integer; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 217 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCreate_by : (Ljava/lang/Integer;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion create_by Ljava/lang/Integer; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 221 \n            L5 222 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getUpdate_by : ()Ljava/lang/Integer; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion update_by Ljava/lang/Integer; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 225 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setUpdate_by : (Ljava/lang/Integer;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion update_by Ljava/lang/Integer; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 229 \n            L5 230 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCreate_time : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion create_time Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 233 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCreate_time : (Ljava/util/Date;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion create_time Ljava/util/Date; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 237 \n            L5 238 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getUpdate_time : ()Ljava/util/Date; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Reversion update_time Ljava/util/Date; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 241 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setUpdate_time : (Ljava/util/Date;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Reversion update_time Ljava/util/Date; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 245 \n            L5 246 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Reversion.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 19:47:44 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\nimport java.time.Instant;\nimport java.util.Date;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.time.MockInstant;\nimport org.evosuite.runtime.mock.java.util.MockDate;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Reversion_ESTest extends Reversion_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setWarehouseName(\"_ck-7y&fs\");\n      String string0 = reversion0.getWarehouseName();\n      assertEquals(\"_ck-7y&fs\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setWarehouseName(\"\");\n      String string0 = reversion0.getWarehouseName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(0);\n      reversion0.setWarehouseId(integer0);\n      Integer integer1 = reversion0.getWarehouseId();\n      assertEquals(0, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(1);\n      reversion0.setWarehouseId(integer0);\n      Integer integer1 = reversion0.getWarehouseId();\n      assertEquals(1, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer((-87370));\n      reversion0.setWarehouseId(integer0);\n      Integer integer1 = reversion0.getWarehouseId();\n      assertEquals((-87370), (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      MockDate mockDate0 = new MockDate(2526, 2526, 1, (-24434), (-1857));\n      reversion0.setUpdate_time(mockDate0);\n      Date date0 = reversion0.getUpdate_time();\n      assertSame(date0, mockDate0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer((-108957));\n      reversion0.setUpdate_by(integer0);\n      Integer integer1 = reversion0.getUpdate_by();\n      assertEquals((-108957), (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(131019);\n      reversion0.setUpdate_by(integer0);\n      Integer integer1 = reversion0.getUpdate_by();\n      assertEquals(131019, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setSupplierName(\"_+<dKF#C8O'Dm-\");\n      String string0 = reversion0.getSupplierName();\n      assertEquals(\"_+<dKF#C8O'Dm-\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(0);\n      reversion0.setSupplierId(integer0);\n      Integer integer1 = reversion0.getSupplierId();\n      assertEquals(0, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer((byte)1);\n      reversion0.setSupplierId(integer0);\n      Integer integer1 = reversion0.getSupplierId();\n      assertEquals(1, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer((-25679));\n      reversion0.setSupplierId(integer0);\n      Integer integer1 = reversion0.getSupplierId();\n      assertEquals((-25679), (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      MockDate mockDate0 = new MockDate(8019, 8019, 0, 8019, 48211);\n      reversion0.setReversionDate(mockDate0);\n      Date date0 = reversion0.getReversionDate();\n      assertEquals(\"Tue Apr 01 14:31:00 GMT 10588\", date0.toString());\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      BigDecimal bigDecimal0 = new BigDecimal(0.0);\n      reversion0.setRepoMoney(bigDecimal0);\n      BigDecimal bigDecimal1 = reversion0.getRepoMoney();\n      assertEquals((byte)0, bigDecimal1.byteValue());\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      BigInteger bigInteger0 = BigInteger.TEN;\n      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);\n      reversion0.setRepoMoney(bigDecimal0);\n      BigDecimal bigDecimal1 = reversion0.getRepoMoney();\n      assertSame(bigDecimal1, bigDecimal0);\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      BigDecimal bigDecimal0 = new BigDecimal(36292);\n      reversion0.setRepoMoney(bigDecimal0);\n      BigDecimal bigDecimal1 = reversion0.getRepoMoney();\n      assertEquals((short) (-29244), bigDecimal1.shortValue());\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      BigDecimal bigDecimal0 = BigDecimal.ZERO;\n      reversion0.setRentMoney(bigDecimal0);\n      BigDecimal bigDecimal1 = reversion0.getRentMoney();\n      assertSame(bigDecimal1, bigDecimal0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      BigDecimal bigDecimal0 = new BigDecimal(33097L);\n      reversion0.setRentMoney(bigDecimal0);\n      BigDecimal bigDecimal1 = reversion0.getRentMoney();\n      assertEquals((byte)73, bigDecimal1.byteValue());\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      BigDecimal bigDecimal0 = new BigDecimal((-41037L));\n      reversion0.setRentMoney(bigDecimal0);\n      BigDecimal bigDecimal1 = reversion0.getRentMoney();\n      assertSame(bigDecimal1, bigDecimal0);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setRentBillStatName(\"UT?|]Uhy]F))JUU\");\n      String string0 = reversion0.getRentBillStatName();\n      assertEquals(\"UT?|]Uhy]F))JUU\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setRentBillStatName(\"\");\n      String string0 = reversion0.getRentBillStatName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(1);\n      reversion0.setRentBillStat(integer0);\n      Integer integer1 = reversion0.getRentBillStat();\n      assertEquals(1, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test22()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer((-630));\n      reversion0.setRentBillStat(integer0);\n      Integer integer1 = reversion0.getRentBillStat();\n      assertEquals((-630), (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test23()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setRentBillNo(\"I04b3\");\n      String string0 = reversion0.getRentBillNo();\n      assertEquals(\"I04b3\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test24()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setRentBillNo(\"\");\n      String string0 = reversion0.getRentBillNo();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test25()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(0);\n      reversion0.setRentBillId(integer0);\n      Integer integer1 = reversion0.getRentBillId();\n      assertEquals(0, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test26()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(90190);\n      reversion0.setRentBillId(integer0);\n      Integer integer1 = reversion0.getRentBillId();\n      assertEquals(90190, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test27()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = Integer.valueOf((-1));\n      reversion0.setRentBillId(integer0);\n      Integer integer1 = reversion0.getRentBillId();\n      assertEquals((-1), (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test28()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer((-49422));\n      reversion0.setId(integer0);\n      Integer integer1 = reversion0.getId();\n      assertEquals((-49422), (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test29()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(0);\n      reversion0.setId(integer0);\n      Integer integer1 = reversion0.getId();\n      assertEquals(0, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test30()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = Integer.getInteger(\"/(!P2{I!u9\", (-71877));\n      reversion0.setId(integer0);\n      Integer integer1 = reversion0.getId();\n      assertEquals((-71877), (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test31()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setExpressBillNo(\"!((@sN\");\n      String string0 = reversion0.getExpressBillNo();\n      assertEquals(\"!((@sN\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test32()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setExpressBillNo(\"\");\n      String string0 = reversion0.getExpressBillNo();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test33()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      MockDate mockDate0 = new MockDate(2526, 2526, 1, (-24434), (-1857));\n      reversion0.setEndDate(mockDate0);\n      Date date0 = reversion0.getEndDate();\n      assertEquals(\"Sun Sep 15 15:03:00 GMT 4633\", date0.toString());\n  }\n\n  @Test(timeout = 4000)\n  public void test34()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setCustomerPhone(\"`wA8ZxO%wj&27*B'N?\");\n      String string0 = reversion0.getCustomerPhone();\n      assertEquals(\"`wA8ZxO%wj&27*B'N?\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test35()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setCustomerPhone(\"\");\n      String string0 = reversion0.getCustomerPhone();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test36()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setCustomerName(\"Reversion\");\n      String string0 = reversion0.getCustomerName();\n      assertEquals(\"Reversion\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test37()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setCustomerName(\"\");\n      String string0 = reversion0.getCustomerName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test38()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setCustomerCard(\"C*+|p\u007f1s6<y'Jcb)\u007f \");\n      String string0 = reversion0.getCustomerCard();\n      assertEquals(\"C*+|p\u007f1s6<y'Jcb)\u007f \", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test39()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setCustomerCard(\"\");\n      String string0 = reversion0.getCustomerCard();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test40()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setCustomerAddr(\"P,6.N! 6^\");\n      String string0 = reversion0.getCustomerAddr();\n      assertEquals(\"P,6.N! 6^\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test41()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setCustomerAddr(\"\");\n      String string0 = reversion0.getCustomerAddr();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test42()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      MockDate mockDate0 = new MockDate();\n      reversion0.setCreate_time(mockDate0);\n      Date date0 = reversion0.getCreate_time();\n      assertSame(date0, mockDate0);\n  }\n\n  @Test(timeout = 4000)\n  public void test43()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(9340);\n      reversion0.setCreate_by(integer0);\n      Integer integer1 = reversion0.getCreate_by();\n      assertEquals(9340, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test44()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(0);\n      reversion0.setCreate_by(integer0);\n      Integer integer1 = reversion0.getCreate_by();\n      assertEquals(0, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test45()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(61033);\n      reversion0.setCreate_by(integer0);\n      Integer integer1 = reversion0.getCreate_by();\n      assertEquals(61033, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test46()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = Integer.getInteger(\"Reversion\", (-31236));\n      reversion0.setCreate_by(integer0);\n      Integer integer1 = reversion0.getCreate_by();\n      assertEquals((-31236), (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test47()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      BigDecimal bigDecimal0 = new BigDecimal((-73961L));\n      reversion0.setCompensateMoney(bigDecimal0);\n      BigDecimal bigDecimal1 = reversion0.getCompensateMoney();\n      assertEquals((byte)23, bigDecimal1.byteValue());\n  }\n\n  @Test(timeout = 4000)\n  public void test48()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      BigDecimal bigDecimal0 = BigDecimal.ZERO;\n      reversion0.setCompensateMoney(bigDecimal0);\n      BigDecimal bigDecimal1 = reversion0.getCompensateMoney();\n      assertSame(bigDecimal1, bigDecimal0);\n  }\n\n  @Test(timeout = 4000)\n  public void test49()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      BigDecimal bigDecimal0 = BigDecimal.TEN;\n      reversion0.setCompensateMoney(bigDecimal0);\n      BigDecimal bigDecimal1 = reversion0.getCompensateMoney();\n      assertEquals((short)10, bigDecimal1.shortValue());\n  }\n\n  @Test(timeout = 4000)\n  public void test50()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(47984);\n      reversion0.setBillStat(integer0);\n      Integer integer1 = reversion0.getBillStat();\n      assertEquals(47984, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test51()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(0);\n      reversion0.setBillStat(integer0);\n      Integer integer1 = reversion0.getBillStat();\n      assertEquals(0, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test52()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer((-108957));\n      reversion0.setBillStat(integer0);\n      Integer integer1 = reversion0.getBillStat();\n      assertEquals((-108957), (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test53()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(8369);\n      reversion0.setBillStat(integer0);\n      Integer integer1 = reversion0.getBillStat();\n      assertEquals(8369, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test54()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setBillNo(\"Z\");\n      String string0 = reversion0.getBillNo();\n      assertEquals(\"Z\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test55()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setBillNo(\"\");\n      String string0 = reversion0.getBillNo();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test56()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Instant instant0 = MockInstant.now();\n      Date date0 = Date.from(instant0);\n      reversion0.setBeginDate(date0);\n      Date date1 = reversion0.getBeginDate();\n      assertSame(date1, date0);\n  }\n\n  @Test(timeout = 4000)\n  public void test57()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      String string0 = reversion0.getBillNo();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test58()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = reversion0.getWarehouseId();\n      assertNull(integer0);\n  }\n\n  @Test(timeout = 4000)\n  public void test59()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Date date0 = reversion0.getUpdate_time();\n      assertNull(date0);\n  }\n\n  @Test(timeout = 4000)\n  public void test60()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Date date0 = reversion0.getReversionDate();\n      assertNull(date0);\n  }\n\n  @Test(timeout = 4000)\n  public void test61()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      String string0 = reversion0.getWarehouseName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test62()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = reversion0.getBillStat();\n      reversion0.setRentBillId(integer0);\n      assertNull(reversion0.getCustomerName());\n  }\n\n  @Test(timeout = 4000)\n  public void test63()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(0);\n      reversion0.setUpdate_by(integer0);\n      Integer integer1 = reversion0.getUpdate_by();\n      assertEquals(0, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test64()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      String string0 = reversion0.getRentBillNo();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test65()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      String string0 = reversion0.getCustomerName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test66()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      BigDecimal bigDecimal0 = reversion0.getRepoMoney();\n      assertNull(bigDecimal0);\n  }\n\n  @Test(timeout = 4000)\n  public void test67()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = reversion0.getRentBillStat();\n      assertNull(integer0);\n  }\n\n  @Test(timeout = 4000)\n  public void test68()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Date date0 = reversion0.getBeginDate();\n      assertNull(date0);\n  }\n\n  @Test(timeout = 4000)\n  public void test69()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Date date0 = reversion0.getCreate_time();\n      assertNull(date0);\n  }\n\n  @Test(timeout = 4000)\n  public void test70()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      String string0 = reversion0.getCustomerCard();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test71()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = reversion0.getId();\n      assertNull(integer0);\n  }\n\n  @Test(timeout = 4000)\n  public void test72()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = reversion0.getCreate_by();\n      assertNull(integer0);\n  }\n\n  @Test(timeout = 4000)\n  public void test73()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      BigDecimal bigDecimal0 = reversion0.getRentMoney();\n      assertNull(bigDecimal0);\n  }\n\n  @Test(timeout = 4000)\n  public void test74()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = reversion0.getRentBillId();\n      assertNull(integer0);\n  }\n\n  @Test(timeout = 4000)\n  public void test75()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      BigDecimal bigDecimal0 = reversion0.getCompensateMoney();\n      assertNull(bigDecimal0);\n  }\n\n  @Test(timeout = 4000)\n  public void test76()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(98448);\n      reversion0.setId(integer0);\n      Integer integer1 = reversion0.getId();\n      assertEquals(98448, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test77()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      String string0 = reversion0.getExpressBillNo();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test78()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = reversion0.getUpdate_by();\n      assertNull(integer0);\n  }\n\n  @Test(timeout = 4000)\n  public void test79()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      String string0 = reversion0.getCustomerPhone();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test80()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = new Integer(0);\n      reversion0.setRentBillStat(integer0);\n      Integer integer1 = reversion0.getRentBillStat();\n      assertEquals(0, (int)integer1);\n  }\n\n  @Test(timeout = 4000)\n  public void test81()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Date date0 = reversion0.getEndDate();\n      assertNull(date0);\n  }\n\n  @Test(timeout = 4000)\n  public void test82()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      Integer integer0 = reversion0.getSupplierId();\n      assertNull(integer0);\n  }\n\n  @Test(timeout = 4000)\n  public void test83()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      String string0 = reversion0.getSupplierName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test84()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      String string0 = reversion0.getCustomerAddr();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test85()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      reversion0.setSupplierName(\"\");\n      String string0 = reversion0.getSupplierName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test86()  throws Throwable  {\n      Reversion reversion0 = new Reversion();\n      String string0 = reversion0.getRentBillStatName();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 19:47:44 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Reversion_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Reversion\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp0_x9r07b\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Reversion_ESTest_scaffolding.class.getClassLoader() ,\n      \"Reversion\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Reversion_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Reversion\"\n    );\n  }\n}\n", "class_idx": 264}
{"class_name": "NamedThreadFactory", "java_source": "import java.util.concurrent.ThreadFactory;\nimport java.util.concurrent.atomic.AtomicInteger;\n\n/** \u5e26\u540d\u79f0\u7684\u7ebf\u7a0b\u751f\u6210\u5de5\u5382,\u652f\u6301\u8bbe\u7f6e\u540d\u79f0\uff0c\u8bbe\u7f6e\u662f\u5426\u4e3a\u5b88\u62a4\u7ebf\u7a0b */\npublic class NamedThreadFactory implements ThreadFactory {\n\n  /** \u7cfb\u7edf\u5168\u5c40\u7ebf\u7a0b\u6c60\u8ba1\u6570\u5668 */\n  private static final AtomicInteger poolCount = new AtomicInteger();\n  /** \u5f53\u524d\u7ebf\u7a0b\u6c60\u8ba1\u6570\u5668 */\n  final AtomicInteger threadCount = new AtomicInteger(1);\n\n  final ThreadGroup group;\n  final String namePrefix;\n  final boolean isDaemon; // \u662f\u5426\u5b88\u62a4\u7ebf\u7a0b\uff0ctrue\u7684\u8bdd\u968f\u4e3b\u7ebf\u7a0b\u9000\u51fa\u800c\u9000\u51fa\uff0cfalse\u7684\u8bdd\u5219\u8981\u4e3b\u52a8\u9000\u51fa\n\n  /**\n   * \u6784\u9020\u51fd\u6570\uff0c\u9ed8\u8ba4\u975e\u5b88\u62a4\u7ebf\u7a0b\n   *\n   * @param prefix \u524d\u7f00\uff0c\u540e\u9762\u4f1a\u81ea\u52a8\u52a0\u4e0a-SortMain-\n   */\n  public NamedThreadFactory(String prefix) {\n    this(prefix, false);\n  }\n\n  /**\n   * \u6784\u9020\u51fd\u6570\n   *\n   * @param prefix \u524d\u7f00\uff0c\u540e\u9762\u4f1a\u81ea\u52a8\u52a0\u4e0a-SortMain-\n   * @param daemon \u662f\u5426\u5b88\u62a4\u7ebf\u7a0b\uff0ctrue\u7684\u8bdd\u968f\u4e3b\u7ebf\u7a0b\u9000\u51fa\u800c\u9000\u51fa\uff0cfalse\u7684\u8bdd\u5219\u8981\u4e3b\u52a8\u9000\u51fa\n   */\n  public NamedThreadFactory(String prefix, boolean daemon) {\n    SecurityManager s = System.getSecurityManager();\n    group = (s != null) ? s.getThreadGroup() : Thread.currentThread().getThreadGroup();\n    namePrefix = prefix + \"-\" + poolCount.getAndIncrement() + \"-SortMain-\";\n    isDaemon = daemon;\n  }\n\n  @Override\n  public Thread newThread(Runnable r) {\n    Thread t = new Thread(group, r, namePrefix + threadCount.getAndIncrement(), 0);\n    t.setDaemon(isDaemon);\n    if (t.getPriority() != Thread.NORM_PRIORITY) {\n      t.setPriority(Thread.NORM_PRIORITY);\n    }\n    return t;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super NamedThreadFactory \n.super java/lang/Object \n.implements java/util/concurrent/ThreadFactory \n.field private static final poolCount Ljava/util/concurrent/atomic/AtomicInteger; \n.field final threadCount Ljava/util/concurrent/atomic/AtomicInteger; \n.field final group Ljava/lang/ThreadGroup; \n.field final namePrefix Ljava/lang/String; \n.field final isDaemon Z \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     iconst_0 \nL3:     invokespecial Method NamedThreadFactory <init> (Ljava/lang/String;Z)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 29 \n            L6 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Z)V \n    .code stack 4 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     new java/util/concurrent/atomic/AtomicInteger \nL8:     dup \nL9:     iconst_1 \nL10:    invokespecial Method java/util/concurrent/atomic/AtomicInteger <init> (I)V \nL13:    putfield Field NamedThreadFactory threadCount Ljava/util/concurrent/atomic/AtomicInteger; \nL16:    invokestatic Method java/lang/System getSecurityManager ()Ljava/lang/SecurityManager; \nL19:    astore_3 \nL20:    aload_0 \nL21:    aload_3 \nL22:    ifnull L32 \nL25:    aload_3 \nL26:    invokevirtual Method java/lang/SecurityManager getThreadGroup ()Ljava/lang/ThreadGroup; \nL29:    goto L38 \n\n        .stack full \n            locals Object NamedThreadFactory Object java/lang/String Integer Object java/lang/SecurityManager \n            stack Object NamedThreadFactory \n        .end stack \nL32:    invokestatic Method java/lang/Thread currentThread ()Ljava/lang/Thread; \nL35:    invokevirtual Method java/lang/Thread getThreadGroup ()Ljava/lang/ThreadGroup; \n\n        .stack full \n            locals Object NamedThreadFactory Object java/lang/String Integer Object java/lang/SecurityManager \n            stack Object NamedThreadFactory Object java/lang/ThreadGroup \n        .end stack \nL38:    putfield Field NamedThreadFactory group Ljava/lang/ThreadGroup; \nL41:    aload_0 \nL42:    new java/lang/StringBuilder \nL45:    dup \nL46:    invokespecial Method java/lang/StringBuilder <init> ()V \nL49:    aload_1 \nL50:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL53:    ldc '-' \nL55:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL58:    getstatic Field NamedThreadFactory poolCount Ljava/util/concurrent/atomic/AtomicInteger; \nL61:    invokevirtual Method java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I \nL64:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL67:    ldc '-SortMain-' \nL69:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL72:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL75:    putfield Field NamedThreadFactory namePrefix Ljava/lang/String; \nL78:    aload_0 \nL79:    iload_2 \nL80:    putfield Field NamedThreadFactory isDaemon Z \nL83:    return \nL84:    \n        .linenumbertable \n            L0 38 \n            L4 18 \n            L16 39 \n            L20 40 \n            L41 41 \n            L78 42 \n            L83 43 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public newThread : (Ljava/lang/Runnable;)Ljava/lang/Thread; \n    .code stack 7 locals 3 \nL0:     new java/lang/Thread \nL3:     dup \nL4:     aload_0 \nL5:     getfield Field NamedThreadFactory group Ljava/lang/ThreadGroup; \nL8:     aload_1 \nL9:     new java/lang/StringBuilder \nL12:    dup \nL13:    invokespecial Method java/lang/StringBuilder <init> ()V \nL16:    aload_0 \nL17:    getfield Field NamedThreadFactory namePrefix Ljava/lang/String; \nL20:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL23:    aload_0 \nL24:    getfield Field NamedThreadFactory threadCount Ljava/util/concurrent/atomic/AtomicInteger; \nL27:    invokevirtual Method java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I \nL30:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL33:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL36:    lconst_0 \nL37:    invokespecial Method java/lang/Thread <init> (Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V \nL40:    astore_2 \nL41:    aload_2 \nL42:    aload_0 \nL43:    getfield Field NamedThreadFactory isDaemon Z \nL46:    invokevirtual Method java/lang/Thread setDaemon (Z)V \nL49:    aload_2 \nL50:    invokevirtual Method java/lang/Thread getPriority ()I \nL53:    iconst_5 \nL54:    if_icmpeq L62 \nL57:    aload_2 \nL58:    iconst_5 \nL59:    invokevirtual Method java/lang/Thread setPriority (I)V \n\n        .stack append Object java/lang/Thread \nL62:    aload_2 \nL63:    areturn \nL64:    \n        .linenumbertable \n            L0 47 \n            L41 48 \n            L49 49 \n            L57 50 \n            L62 52 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 2 locals 0 \nL0:     new java/util/concurrent/atomic/AtomicInteger \nL3:     dup \nL4:     invokespecial Method java/util/concurrent/atomic/AtomicInteger <init> ()V \nL7:     putstatic Field NamedThreadFactory poolCount Ljava/util/concurrent/atomic/AtomicInteger; \nL10:    return \nL11:    \n        .linenumbertable \n            L0 14 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'NamedThreadFactory.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 11:34:27 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.lang.MockThread;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class NamedThreadFactory_ESTest extends NamedThreadFactory_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      NamedThreadFactory namedThreadFactory0 = new NamedThreadFactory(\"6Wr/i~\", true);\n      MockThread mockThread0 = new MockThread();\n      Thread thread0 = namedThreadFactory0.newThread(mockThread0);\n      assertTrue(thread0.isDaemon());\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      NamedThreadFactory namedThreadFactory0 = new NamedThreadFactory(\"\", false);\n      Thread thread0 = MockThread.currentThread();\n      Thread thread1 = namedThreadFactory0.newThread(thread0);\n      assertFalse(thread1.isDaemon());\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      NamedThreadFactory namedThreadFactory0 = new NamedThreadFactory(\"\");\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 11:34:27 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class NamedThreadFactory_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"NamedThreadFactory\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp2ycbbzzb\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NamedThreadFactory_ESTest_scaffolding.class.getClassLoader() ,\n      \"NamedThreadFactory\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NamedThreadFactory_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"NamedThreadFactory\"\n    );\n  }\n}\n", "class_idx": 265}
{"class_name": "Animal", "java_source": "public class Animal {\n  private byte age;\n  private String name;\n  private boolean isMale;\n\n  public void sound() {}\n}\n", "jasm_code": ".version 52 0 \n.class public super Animal \n.super java/lang/Object \n.field private age B \n.field private name Ljava/lang/String; \n.field private isMale Z \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 2 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public sound : ()V \n    .code stack 0 locals 1 \nL0:     return \nL1:     \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Animal.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 15:30:12 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Animal_ESTest extends Animal_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Animal animal0 = new Animal();\n      animal0.sound();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 15:30:12 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Animal_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Animal\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp07x4e6jj\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Animal_ESTest_scaffolding.class.getClassLoader() ,\n      \"Animal\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Animal_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Animal\"\n    );\n  }\n}\n", "class_idx": 266}
{"class_name": "SolutionFileInfo", "java_source": "public class SolutionFileInfo {\n\n  private String path;\n\n  private String file;\n\n  public void setPath(String path) {\n\n    if (path.endsWith(\"/\")) {\n      path = path.substring(0, path.length() - 1);\n    }\n\n    this.path = path;\n  }\n\n  public String getPath() {\n    return path;\n  }\n\n  public void setFile(String file) {\n    this.file = file;\n  }\n\n  public String getFile() {\n    return file;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super SolutionFileInfo \n.super java/lang/Object \n.field private path Ljava/lang/String; \n.field private file Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPath : (Ljava/lang/String;)V \n    .code stack 4 locals 2 \nL0:     aload_1 \nL1:     ldc '/' \nL3:     invokevirtual Method java/lang/String endsWith (Ljava/lang/String;)Z \nL6:     ifeq L21 \nL9:     aload_1 \nL10:    iconst_0 \nL11:    aload_1 \nL12:    invokevirtual Method java/lang/String length ()I \nL15:    iconst_1 \nL16:    isub \nL17:    invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL20:    astore_1 \n\n        .stack same \nL21:    aload_0 \nL22:    aload_1 \nL23:    putfield Field SolutionFileInfo path Ljava/lang/String; \nL26:    return \nL27:    \n        .linenumbertable \n            L0 11 \n            L9 12 \n            L21 15 \n            L26 16 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPath : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SolutionFileInfo path Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 19 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setFile : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field SolutionFileInfo file Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 23 \n            L5 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFile : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field SolutionFileInfo file Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 27 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'SolutionFileInfo.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 06:44:33 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class SolutionFileInfo_ESTest extends SolutionFileInfo_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      SolutionFileInfo solutionFileInfo0 = new SolutionFileInfo();\n      solutionFileInfo0.setPath(\"SolutionFileInfo/\");\n      solutionFileInfo0.setPath(\"SolutionFileInfo/\");\n      assertEquals(\"SolutionFileInfo\", solutionFileInfo0.getPath());\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      SolutionFileInfo solutionFileInfo0 = new SolutionFileInfo();\n      solutionFileInfo0.setPath(\"\");\n      String string0 = solutionFileInfo0.getPath();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      SolutionFileInfo solutionFileInfo0 = new SolutionFileInfo();\n      solutionFileInfo0.setFile(\"\");\n      String string0 = solutionFileInfo0.getFile();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      SolutionFileInfo solutionFileInfo0 = new SolutionFileInfo();\n      solutionFileInfo0.setPath(\"e)Qk2>iAjU8KK1/\");\n      String string0 = solutionFileInfo0.getPath();\n      assertEquals(\"e)Qk2>iAjU8KK1\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      SolutionFileInfo solutionFileInfo0 = new SolutionFileInfo();\n      solutionFileInfo0.setPath(\"e)Qk2>iAjU8KK1\");\n      assertEquals(\"e)Qk2>iAjU8KK1\", solutionFileInfo0.getPath());\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      SolutionFileInfo solutionFileInfo0 = new SolutionFileInfo();\n      String string0 = solutionFileInfo0.getPath();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      SolutionFileInfo solutionFileInfo0 = new SolutionFileInfo();\n      solutionFileInfo0.setFile(\"e)Qk2>iAjU8KK1/\");\n      String string0 = solutionFileInfo0.getFile();\n      assertEquals(\"e)Qk2>iAjU8KK1/\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      SolutionFileInfo solutionFileInfo0 = new SolutionFileInfo();\n      String string0 = solutionFileInfo0.getFile();\n      assertNull(string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 06:44:33 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class SolutionFileInfo_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"SolutionFileInfo\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp62a6e8ao\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SolutionFileInfo_ESTest_scaffolding.class.getClassLoader() ,\n      \"SolutionFileInfo\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SolutionFileInfo_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"SolutionFileInfo\"\n    );\n  }\n}\n", "class_idx": 267}
{"class_name": "FlowTaskException", "java_source": "/*\n * Copyright 2008 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @author Martin Krasser\n */\n@SuppressWarnings(\"serial\")\npublic class FlowTaskException extends RuntimeException {\n\n  public FlowTaskException(String message, Throwable cause) {\n    super(message, cause);\n  }\n\n  public FlowTaskException(String message) {\n    super(message);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super FlowTaskException \n.super java/lang/RuntimeException \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/Throwable;)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     aload_2 \nL3:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;Ljava/lang/Throwable;)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 25 \n            L6 26 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/RuntimeException <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 29 \n            L5 30 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'FlowTaskException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 22:01:47 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class FlowTaskException_ESTest extends FlowTaskException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      FlowTaskException flowTaskException0 = new FlowTaskException(\"\");\n      FlowTaskException flowTaskException1 = new FlowTaskException((String) null, flowTaskException0);\n      assertFalse(flowTaskException1.equals((Object)flowTaskException0));\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 22:01:47 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class FlowTaskException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"FlowTaskException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp0dgx0did\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FlowTaskException_ESTest_scaffolding.class.getClassLoader() ,\n      \"FlowTaskException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FlowTaskException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"FlowTaskException\"\n    );\n  }\n}\n", "class_idx": 268}
{"class_name": "TableInfo", "java_source": "import java.sql.ResultSet;\nimport java.sql.SQLException;\n\npublic class TableInfo {\n  /** TABLE_NAME */\n  private String name;\n  /** TABLE_TYPE */\n  private String type;\n  /** REMARKS */\n  private String remark;\n\n  public static TableInfo getTableInfo(ResultSet rs) throws SQLException {\n    TableInfo tableInfo = new TableInfo();\n\n    tableInfo.setName(rs.getString(\"TABLE_NAME\"));\n    tableInfo.setType(rs.getString(\"TABLE_TYPE\"));\n    try {\n      tableInfo.setRemark(rs.getString(\"REMARKS\"));\n    } catch (SQLException e) {\n      tableInfo.setRemark(\"\"); // getRowIdentefier exception\n    }\n\n    return tableInfo;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getType() {\n    return type;\n  }\n\n  public void setType(String type) {\n    this.type = type;\n  }\n\n  public String getRemark() {\n    return remark;\n  }\n\n  public void setRemark(String remark) {\n    this.remark = remark;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super TableInfo \n.super java/lang/Object \n.field private name Ljava/lang/String; \n.field private type Ljava/lang/String; \n.field private remark Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static getTableInfo : (Ljava/sql/ResultSet;)LTableInfo; \n    .code stack 3 locals 3 \nL0:     new TableInfo \nL3:     dup \nL4:     invokespecial Method TableInfo <init> ()V \nL7:     astore_1 \nL8:     aload_1 \nL9:     aload_0 \nL10:    ldc 'TABLE_NAME' \nL12:    invokeinterface InterfaceMethod java/sql/ResultSet getString (Ljava/lang/String;)Ljava/lang/String; 2 \nL17:    invokevirtual Method TableInfo setName (Ljava/lang/String;)V \nL20:    aload_1 \nL21:    aload_0 \nL22:    ldc 'TABLE_TYPE' \nL24:    invokeinterface InterfaceMethod java/sql/ResultSet getString (Ljava/lang/String;)Ljava/lang/String; 2 \nL29:    invokevirtual Method TableInfo setType (Ljava/lang/String;)V \n        .catch java/sql/SQLException from L32 to L44 using L47 \nL32:    aload_1 \nL33:    aload_0 \nL34:    ldc 'REMARKS' \nL36:    invokeinterface InterfaceMethod java/sql/ResultSet getString (Ljava/lang/String;)Ljava/lang/String; 2 \nL41:    invokevirtual Method TableInfo setRemark (Ljava/lang/String;)V \nL44:    goto L54 \n\n        .stack full \n            locals Object java/sql/ResultSet Object TableInfo \n            stack Object java/sql/SQLException \n        .end stack \nL47:    astore_2 \nL48:    aload_1 \nL49:    ldc '' \nL51:    invokevirtual Method TableInfo setRemark (Ljava/lang/String;)V \n\n        .stack same \nL54:    aload_1 \nL55:    areturn \nL56:    \n        .linenumbertable \n            L0 21 \n            L8 23 \n            L20 24 \n            L32 26 \n            L44 29 \n            L47 27 \n            L48 28 \n            L54 31 \n        .end linenumbertable \n    .end code \n    .exceptions java/sql/SQLException \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field TableInfo name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 35 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field TableInfo name Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 39 \n            L5 40 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getType : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field TableInfo type Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 43 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setType : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field TableInfo type Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 47 \n            L5 48 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getRemark : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field TableInfo remark Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 51 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRemark : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field TableInfo remark Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 55 \n            L5 56 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'TableInfo.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 02:37:42 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.shaded.org.mockito.Mockito.*;\nimport java.sql.ResultSet;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.ViolatedAssumptionAnswer;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class TableInfo_ESTest extends TableInfo_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      TableInfo tableInfo0 = new TableInfo();\n      tableInfo0.setType(\"TableInfo\");\n      String string0 = tableInfo0.getType();\n      assertEquals(\"TableInfo\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      TableInfo tableInfo0 = new TableInfo();\n      tableInfo0.setRemark(\"TableInfo\");\n      String string0 = tableInfo0.getRemark();\n      assertEquals(\"TableInfo\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      TableInfo tableInfo0 = new TableInfo();\n      tableInfo0.setName(\"~9{~V+.Zgz#\");\n      String string0 = tableInfo0.getName();\n      assertEquals(\"~9{~V+.Zgz#\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      TableInfo tableInfo0 = new TableInfo();\n      tableInfo0.setType(\"\");\n      String string0 = tableInfo0.getType();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      TableInfo tableInfo0 = new TableInfo();\n      tableInfo0.setName(\"\");\n      String string0 = tableInfo0.getName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      TableInfo tableInfo0 = new TableInfo();\n      String string0 = tableInfo0.getRemark();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      TableInfo tableInfo0 = new TableInfo();\n      String string0 = tableInfo0.getType();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      TableInfo tableInfo0 = new TableInfo();\n      String string0 = tableInfo0.getName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());\n      doReturn((String) null, (String) null, (String) null).when(resultSet0).getString(anyString());\n      TableInfo tableInfo0 = TableInfo.getTableInfo(resultSet0);\n      tableInfo0.setRemark(\"\");\n      String string0 = tableInfo0.getRemark();\n      assertEquals(\"\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 02:37:42 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\nimport static org.evosuite.shaded.org.mockito.Mockito.*;\n@EvoSuiteClassExclude\npublic class TableInfo_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"TableInfo\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpdcduln8r\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(TableInfo_ESTest_scaffolding.class.getClassLoader() ,\n      \"TableInfo\"\n    );\n  } \n  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { \n    mock(Class.forName(\"java.sql.ResultSet\", false, TableInfo_ESTest_scaffolding.class.getClassLoader()));\n  }\n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(TableInfo_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"TableInfo\"\n    );\n  }\n}\n", "class_idx": 269}
{"class_name": "ParamBase", "java_source": "public class ParamBase {\n  private String version = \"\";\n  private String device_id = \"\";\n  private long timestamp = 0;\n  private int user_id = 0;\n  private String user_token = \"\";\n\n  public String getVersion() {\n    return version;\n  }\n\n  public void setVersion(String version) {\n    this.version = version;\n  }\n\n  public String getDevice_id() {\n    return device_id;\n  }\n\n  public void setDevice_id(String device_id) {\n    this.device_id = device_id;\n  }\n\n  public long getTimestamp() {\n    return timestamp;\n  }\n\n  public void setTimestamp(long timestamp) {\n    this.timestamp = timestamp;\n  }\n\n  public int getUser_id() {\n    return user_id;\n  }\n\n  public void setUser_id(int user_id) {\n    this.user_id = user_id;\n  }\n\n  public String getUser_token() {\n    return user_token;\n  }\n\n  public void setUser_token(String user_token) {\n    this.user_token = user_token;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super ParamBase \n.super java/lang/Object \n.field private version Ljava/lang/String; \n.field private device_id Ljava/lang/String; \n.field private timestamp J \n.field private user_id I \n.field private user_token Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 3 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     ldc '' \nL7:     putfield Field ParamBase version Ljava/lang/String; \nL10:    aload_0 \nL11:    ldc '' \nL13:    putfield Field ParamBase device_id Ljava/lang/String; \nL16:    aload_0 \nL17:    lconst_0 \nL18:    putfield Field ParamBase timestamp J \nL21:    aload_0 \nL22:    iconst_0 \nL23:    putfield Field ParamBase user_id I \nL26:    aload_0 \nL27:    ldc '' \nL29:    putfield Field ParamBase user_token Ljava/lang/String; \nL32:    return \nL33:    \n        .linenumbertable \n            L0 3 \n            L4 4 \n            L10 5 \n            L16 6 \n            L21 7 \n            L26 8 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getVersion : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ParamBase version Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 11 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setVersion : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ParamBase version Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 15 \n            L5 16 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getDevice_id : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ParamBase device_id Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 19 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setDevice_id : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ParamBase device_id Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 23 \n            L5 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getTimestamp : ()J \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field ParamBase timestamp J \nL4:     lreturn \nL5:     \n        .linenumbertable \n            L0 27 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setTimestamp : (J)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     lload_1 \nL2:     putfield Field ParamBase timestamp J \nL5:     return \nL6:     \n        .linenumbertable \n            L0 31 \n            L5 32 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getUser_id : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ParamBase user_id I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 35 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setUser_id : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field ParamBase user_id I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 39 \n            L5 40 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getUser_token : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field ParamBase user_token Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 43 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setUser_token : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field ParamBase user_token Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 47 \n            L5 48 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'ParamBase.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 03:27:36 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class ParamBase_ESTest extends ParamBase_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      ParamBase paramBase0 = new ParamBase();\n      paramBase0.setVersion((String) null);\n      paramBase0.getVersion();\n      assertEquals(0L, paramBase0.getTimestamp());\n      assertEquals(0, paramBase0.getUser_id());\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      ParamBase paramBase0 = new ParamBase();\n      paramBase0.setUser_token(\"fi[,A8H])#`8-W$\");\n      paramBase0.getUser_token();\n      assertEquals(0, paramBase0.getUser_id());\n      assertEquals(0L, paramBase0.getTimestamp());\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      ParamBase paramBase0 = new ParamBase();\n      paramBase0.setUser_id((-53350));\n      int int0 = paramBase0.getUser_id();\n      assertEquals((-53350), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      ParamBase paramBase0 = new ParamBase();\n      paramBase0.setTimestamp((-67056L));\n      long long0 = paramBase0.getTimestamp();\n      assertEquals((-67056L), long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      ParamBase paramBase0 = new ParamBase();\n      paramBase0.setDevice_id((String) null);\n      paramBase0.getDevice_id();\n      assertEquals(0, paramBase0.getUser_id());\n      assertEquals(0L, paramBase0.getTimestamp());\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      ParamBase paramBase0 = new ParamBase();\n      paramBase0.setDevice_id(\"K>FUz&WWO'B.V+ *{t\");\n      paramBase0.getDevice_id();\n      assertEquals(0, paramBase0.getUser_id());\n      assertEquals(0L, paramBase0.getTimestamp());\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      ParamBase paramBase0 = new ParamBase();\n      paramBase0.getUser_token();\n      assertEquals(0, paramBase0.getUser_id());\n      assertEquals(0L, paramBase0.getTimestamp());\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      ParamBase paramBase0 = new ParamBase();\n      assertEquals(0, paramBase0.getUser_id());\n      \n      paramBase0.setUser_id(1);\n      int int0 = paramBase0.getUser_id();\n      assertEquals(1, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      ParamBase paramBase0 = new ParamBase();\n      int int0 = paramBase0.getUser_id();\n      assertEquals(0L, paramBase0.getTimestamp());\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      ParamBase paramBase0 = new ParamBase();\n      long long0 = paramBase0.getTimestamp();\n      assertEquals(0, paramBase0.getUser_id());\n      assertEquals(0L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      ParamBase paramBase0 = new ParamBase();\n      assertEquals(0L, paramBase0.getTimestamp());\n      \n      paramBase0.setTimestamp(1);\n      long long0 = paramBase0.getTimestamp();\n      assertEquals(1L, long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      ParamBase paramBase0 = new ParamBase();\n      paramBase0.setVersion(\"fi[,A8H])#`8-W$\");\n      paramBase0.getVersion();\n      assertEquals(0L, paramBase0.getTimestamp());\n      assertEquals(0, paramBase0.getUser_id());\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      ParamBase paramBase0 = new ParamBase();\n      paramBase0.getVersion();\n      assertEquals(0L, paramBase0.getTimestamp());\n      assertEquals(0, paramBase0.getUser_id());\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      ParamBase paramBase0 = new ParamBase();\n      paramBase0.getDevice_id();\n      assertEquals(0L, paramBase0.getTimestamp());\n      assertEquals(0, paramBase0.getUser_id());\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      ParamBase paramBase0 = new ParamBase();\n      paramBase0.setUser_token((String) null);\n      paramBase0.getUser_token();\n      assertEquals(0L, paramBase0.getTimestamp());\n      assertEquals(0, paramBase0.getUser_id());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 03:27:36 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class ParamBase_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"ParamBase\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpfs7u65dk\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ParamBase_ESTest_scaffolding.class.getClassLoader() ,\n      \"ParamBase\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ParamBase_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"ParamBase\"\n    );\n  }\n}\n", "class_idx": 270}
{"class_name": "LineProxy", "java_source": "import java.io.Serializable;\nimport java.util.LinkedList;\nimport java.util.List;\n\n/*\n * represents a line entity that is part of a connection. might be walking, a subway connection, a bus connection, etc.\n */\npublic class LineProxy implements Serializable {\n\n  private static final long serialVersionUID = 1L;\n\n  // to calculate the time it takes, the length is multiplied with one of those values\n  private static final float[] multiplicators = {\n    0.015F, 0.0024F, 0.0015F, 0.001F, 0.0020F, 0.0019F\n  }; // 4, 25, 40 bzw 60 km/h\n\n  private String key; // internal database id, might be that it is never used anyway\n\n  private String linenum;\n\n  private String ramal;\n\n  private int type; // 0 = walk, 1 = bus, 2 = subte, 3 = train, 4 = metrobus, 5 = premetro\n\n  private List<Float>\n      relevantPoints; // points of the line that lie within the part relevant for the search query\n\n  private List<Float>\n      allPoints; // all points of the line, including those that are beyond the part that the\n                 // connection actually uses\n\n  private List<String>\n      alternativeLines; // other lines that travel between this line's starting and end points as\n                        // well, in text representation only\n\n  private List<String>\n      stations; // stations of this line, if available. index corresponds to allPoints/2. i.e.\n                // second station (index 1) = indices 2 and 3 in all points.\n\n  private int distance; // sum of distances in relevantPoints\n\n  private String startStreet; // street name at first element in relevantPoints\n\n  private String destStreet; // street name at last element in relevantPoints\n\n  public LineProxy() {}\n\n  public LineProxy(\n      String key,\n      String linenum,\n      String ramal,\n      int type,\n      List<Float> relevantPoints,\n      int distance,\n      List<Float> allPoints,\n      List<String> stations) {\n    this.key = key;\n    this.linenum = linenum;\n    this.ramal = ramal;\n    this.relevantPoints = relevantPoints;\n    this.distance = distance;\n    this.allPoints = allPoints;\n    this.type = type;\n    this.stations = stations;\n    this.alternativeLines = new LinkedList<String>();\n  }\n\n  public LineProxy(\n      String key,\n      String linenum,\n      String ramal,\n      int type,\n      List<Float> relevantPoints,\n      int distance,\n      List<Float> allPoints) {\n    this.key = key;\n    this.linenum = linenum;\n    this.ramal = ramal;\n    this.relevantPoints = relevantPoints;\n    this.distance = distance;\n    this.allPoints = allPoints;\n    this.type = type;\n    this.stations = null;\n    this.alternativeLines = new LinkedList<String>();\n  }\n\n  public String getKey() {\n    return key;\n  }\n\n  public void setKey(String key) {\n    this.key = key;\n  }\n\n  public String getLinenum() {\n    return linenum;\n  }\n\n  public void setLinenum(String linenum) {\n    this.linenum = linenum;\n  }\n\n  public String getRamal() {\n    return ramal;\n  }\n\n  public void setRamal(String ramal) {\n    this.ramal = ramal;\n  }\n\n  public String toString() {\n    return linenum + \" \" + ramal;\n  }\n\n  public int getDistance() {\n    return distance;\n  }\n\n  /*\n   * time it takes in minutes\n   */\n  public int getTime() {\n    int trackTime = Math.round(distance * multiplicators[type]);\n    int waitTime = 0;\n    if (type == 1) {\n      waitTime = 8;\n    } else if (type == 2) {\n      waitTime = 4;\n    } else if (type == 3) {\n      waitTime = 15;\n    } else if (type == 4) {\n      waitTime = 5;\n    }\n    return trackTime + waitTime;\n  }\n\n  public void setDistance(int distance) {\n    this.distance = distance;\n  }\n\n  public List<Float> getRelevantPoints() {\n    return relevantPoints;\n  }\n\n  public void setRelevantPoints(List<Float> relevantPoints) {\n    this.relevantPoints = relevantPoints;\n  }\n\n  public List<Float> getAllPoints() {\n    return allPoints;\n  }\n\n  public void setAllPoints(List<Float> allPoints) {\n    this.allPoints = allPoints;\n  }\n\n  public void addAlternativeLine(String s) {\n    this.alternativeLines.add(s);\n  }\n\n  public List<String> getAlternativeLines() {\n    return alternativeLines;\n  }\n\n  public String getStartStreet() {\n    return startStreet;\n  }\n\n  public void setStartStreet(String startStreet) {\n    this.startStreet = startStreet;\n  }\n\n  public String getDestStreet() {\n    return destStreet;\n  }\n\n  public void setDestStreet(String destStreet) {\n    this.destStreet = destStreet;\n  }\n\n  public int getType() {\n    return type;\n  }\n\n  public String getTypeAsString() {\n    if (type == 0) {\n      return \"caminar\";\n    } else if (type == 1) {\n      return \"colectivo\";\n    } else if (type == 2) {\n      return \"subte\";\n    } else if (type == 3) {\n      //\t\t\treturn \"tren\";\n      return \"\";\n    } else if (type == 4 || type == 5) { // metrobus und premetro haben dies schon im eigennamen\n      return \"\";\n    } else {\n      return \"error: invalid type\";\n    }\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((alternativeLines == null) ? 0 : alternativeLines.hashCode());\n    result = prime * result + ((destStreet == null) ? 0 : destStreet.hashCode());\n    result = prime * result + distance;\n    result = prime * result + ((key == null) ? 0 : key.hashCode());\n    result = prime * result + ((linenum == null) ? 0 : linenum.hashCode());\n    result = prime * result + ((ramal == null) ? 0 : ramal.hashCode());\n    result = prime * result + ((startStreet == null) ? 0 : startStreet.hashCode());\n    result = prime * result + type;\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (obj == null) return false;\n    if (getClass() != obj.getClass()) return false;\n    LineProxy other = (LineProxy) obj;\n    if (alternativeLines == null) {\n      if (other.alternativeLines != null) return false;\n    } else if (!alternativeLines.equals(other.alternativeLines)) return false;\n    if (destStreet == null) {\n      if (other.destStreet != null) return false;\n    } else if (!destStreet.equals(other.destStreet)) return false;\n    if (distance != other.distance) return false;\n    if (key == null) {\n      if (other.key != null) return false;\n    } else if (!key.equals(other.key)) return false;\n    if (linenum == null) {\n      if (other.linenum != null) return false;\n    } else if (!linenum.equals(other.linenum)) return false;\n    if (ramal == null) {\n      if (other.ramal != null) return false;\n    } else if (!ramal.equals(other.ramal)) return false;\n    if (startStreet == null) {\n      if (other.startStreet != null) return false;\n    } else if (!startStreet.equals(other.startStreet)) return false;\n    if (type != other.type) return false;\n    return true;\n  }\n\n  public List<String> getStations() {\n    return stations;\n  }\n\n  public void setType(int type) {\n    this.type = type;\n  }\n\n  public void setAlternativeLines(List<String> alternativeLines) {\n    this.alternativeLines = alternativeLines;\n  }\n\n  public void setStations(List<String> stations) {\n    this.stations = stations;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super LineProxy \n.super java/lang/Object \n.implements java/io/Serializable \n.field private static final serialVersionUID J = 1L \n.field private static final multiplicators [F \n.field private key Ljava/lang/String; \n.field private linenum Ljava/lang/String; \n.field private ramal Ljava/lang/String; \n.field private type I \n.field private relevantPoints Ljava/util/List; .fieldattributes \n    .signature Ljava/util/List<Ljava/lang/Float;>; \n.end fieldattributes \n.field private allPoints Ljava/util/List; .fieldattributes \n    .signature Ljava/util/List<Ljava/lang/Float;>; \n.end fieldattributes \n.field private alternativeLines Ljava/util/List; .fieldattributes \n    .signature Ljava/util/List<Ljava/lang/String;>; \n.end fieldattributes \n.field private stations Ljava/util/List; .fieldattributes \n    .signature Ljava/util/List<Ljava/lang/String;>; \n.end fieldattributes \n.field private distance I \n.field private startStreet Ljava/lang/String; \n.field private destStreet Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 39 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/util/List;ILjava/util/List;Ljava/util/List;)V \n    .code stack 3 locals 9 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field LineProxy key Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field LineProxy linenum Ljava/lang/String; \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field LineProxy ramal Ljava/lang/String; \nL19:    aload_0 \nL20:    aload 5 \nL22:    putfield Field LineProxy relevantPoints Ljava/util/List; \nL25:    aload_0 \nL26:    iload 6 \nL28:    putfield Field LineProxy distance I \nL31:    aload_0 \nL32:    aload 7 \nL34:    putfield Field LineProxy allPoints Ljava/util/List; \nL37:    aload_0 \nL38:    iload 4 \nL40:    putfield Field LineProxy type I \nL43:    aload_0 \nL44:    aload 8 \nL46:    putfield Field LineProxy stations Ljava/util/List; \nL49:    aload_0 \nL50:    new java/util/LinkedList \nL53:    dup \nL54:    invokespecial Method java/util/LinkedList <init> ()V \nL57:    putfield Field LineProxy alternativeLines Ljava/util/List; \nL60:    return \nL61:    \n        .linenumbertable \n            L0 41 \n            L4 42 \n            L9 43 \n            L14 44 \n            L19 45 \n            L25 46 \n            L31 47 \n            L37 48 \n            L43 49 \n            L49 50 \n            L60 51 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/util/List<Ljava/lang/Float;>;ILjava/util/List<Ljava/lang/Float;>;Ljava/util/List<Ljava/lang/String;>;)V \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/util/List;ILjava/util/List;)V \n    .code stack 3 locals 8 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field LineProxy key Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field LineProxy linenum Ljava/lang/String; \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field LineProxy ramal Ljava/lang/String; \nL19:    aload_0 \nL20:    aload 5 \nL22:    putfield Field LineProxy relevantPoints Ljava/util/List; \nL25:    aload_0 \nL26:    iload 6 \nL28:    putfield Field LineProxy distance I \nL31:    aload_0 \nL32:    aload 7 \nL34:    putfield Field LineProxy allPoints Ljava/util/List; \nL37:    aload_0 \nL38:    iload 4 \nL40:    putfield Field LineProxy type I \nL43:    aload_0 \nL44:    aconst_null \nL45:    putfield Field LineProxy stations Ljava/util/List; \nL48:    aload_0 \nL49:    new java/util/LinkedList \nL52:    dup \nL53:    invokespecial Method java/util/LinkedList <init> ()V \nL56:    putfield Field LineProxy alternativeLines Ljava/util/List; \nL59:    return \nL60:    \n        .linenumbertable \n            L0 53 \n            L4 54 \n            L9 55 \n            L14 56 \n            L19 57 \n            L25 58 \n            L31 59 \n            L37 60 \n            L43 61 \n            L48 62 \n            L59 63 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/util/List<Ljava/lang/Float;>;ILjava/util/List<Ljava/lang/Float;>;)V \n.end method \n\n.method public getKey : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LineProxy key Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 66 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setKey : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field LineProxy key Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 70 \n            L5 71 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getLinenum : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LineProxy linenum Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 74 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setLinenum : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field LineProxy linenum Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 78 \n            L5 79 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getRamal : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LineProxy ramal Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 82 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setRamal : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field LineProxy ramal Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 86 \n            L5 87 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     aload_0 \nL8:     getfield Field LineProxy linenum Ljava/lang/String; \nL11:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL14:    ldc ' ' \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    aload_0 \nL20:    getfield Field LineProxy ramal Ljava/lang/String; \nL23:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL26:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL29:    areturn \nL30:    \n        .linenumbertable \n            L0 90 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getDistance : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LineProxy distance I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 94 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getTime : ()I \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     getfield Field LineProxy distance I \nL4:     i2f \nL5:     getstatic Field LineProxy multiplicators [F \nL8:     aload_0 \nL9:     getfield Field LineProxy type I \nL12:    faload \nL13:    fmul \nL14:    invokestatic Method java/lang/Math round (F)I \nL17:    istore_1 \nL18:    iconst_0 \nL19:    istore_2 \nL20:    aload_0 \nL21:    getfield Field LineProxy type I \nL24:    iconst_1 \nL25:    if_icmpne L34 \nL28:    bipush 8 \nL30:    istore_2 \nL31:    goto L71 \n\n        .stack append Integer Integer \nL34:    aload_0 \nL35:    getfield Field LineProxy type I \nL38:    iconst_2 \nL39:    if_icmpne L47 \nL42:    iconst_4 \nL43:    istore_2 \nL44:    goto L71 \n\n        .stack same \nL47:    aload_0 \nL48:    getfield Field LineProxy type I \nL51:    iconst_3 \nL52:    if_icmpne L61 \nL55:    bipush 15 \nL57:    istore_2 \nL58:    goto L71 \n\n        .stack same \nL61:    aload_0 \nL62:    getfield Field LineProxy type I \nL65:    iconst_4 \nL66:    if_icmpne L71 \nL69:    iconst_5 \nL70:    istore_2 \n\n        .stack same \nL71:    iload_1 \nL72:    iload_2 \nL73:    iadd \nL74:    ireturn \nL75:    \n        .linenumbertable \n            L0 101 \n            L18 102 \n            L20 103 \n            L28 104 \n            L34 105 \n            L42 106 \n            L47 107 \n            L55 108 \n            L61 109 \n            L69 110 \n            L71 112 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setDistance : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field LineProxy distance I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 116 \n            L5 117 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getRelevantPoints : ()Ljava/util/List; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LineProxy relevantPoints Ljava/util/List; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 120 \n        .end linenumbertable \n    .end code \n    .signature ()Ljava/util/List<Ljava/lang/Float;>; \n.end method \n\n.method public setRelevantPoints : (Ljava/util/List;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field LineProxy relevantPoints Ljava/util/List; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 124 \n            L5 125 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/util/List<Ljava/lang/Float;>;)V \n.end method \n\n.method public getAllPoints : ()Ljava/util/List; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LineProxy allPoints Ljava/util/List; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 128 \n        .end linenumbertable \n    .end code \n    .signature ()Ljava/util/List<Ljava/lang/Float;>; \n.end method \n\n.method public setAllPoints : (Ljava/util/List;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field LineProxy allPoints Ljava/util/List; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 132 \n            L5 133 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/util/List<Ljava/lang/Float;>;)V \n.end method \n\n.method public addAlternativeLine : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field LineProxy alternativeLines Ljava/util/List; \nL4:     aload_1 \nL5:     invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL10:    pop \nL11:    return \nL12:    \n        .linenumbertable \n            L0 136 \n            L11 137 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getAlternativeLines : ()Ljava/util/List; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LineProxy alternativeLines Ljava/util/List; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 140 \n        .end linenumbertable \n    .end code \n    .signature ()Ljava/util/List<Ljava/lang/String;>; \n.end method \n\n.method public getStartStreet : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LineProxy startStreet Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 144 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setStartStreet : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field LineProxy startStreet Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 148 \n            L5 149 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getDestStreet : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LineProxy destStreet Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 152 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setDestStreet : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field LineProxy destStreet Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 156 \n            L5 157 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getType : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LineProxy type I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 160 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getTypeAsString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field LineProxy type I \nL4:     ifne L10 \nL7:     ldc 'caminar' \nL9:     areturn \n\n        .stack same \nL10:    aload_0 \nL11:    getfield Field LineProxy type I \nL14:    iconst_1 \nL15:    if_icmpne L21 \nL18:    ldc 'colectivo' \nL20:    areturn \n\n        .stack same \nL21:    aload_0 \nL22:    getfield Field LineProxy type I \nL25:    iconst_2 \nL26:    if_icmpne L32 \nL29:    ldc 'subte' \nL31:    areturn \n\n        .stack same \nL32:    aload_0 \nL33:    getfield Field LineProxy type I \nL36:    iconst_3 \nL37:    if_icmpne L43 \nL40:    ldc '' \nL42:    areturn \n\n        .stack same \nL43:    aload_0 \nL44:    getfield Field LineProxy type I \nL47:    iconst_4 \nL48:    if_icmpeq L59 \nL51:    aload_0 \nL52:    getfield Field LineProxy type I \nL55:    iconst_5 \nL56:    if_icmpne L62 \n\n        .stack same \nL59:    ldc '' \nL61:    areturn \n\n        .stack same \nL62:    ldc 'error: invalid type' \nL64:    areturn \nL65:    \n        .linenumbertable \n            L0 164 \n            L7 165 \n            L10 166 \n            L18 167 \n            L21 168 \n            L29 169 \n            L32 170 \n            L40 172 \n            L43 173 \n            L59 174 \n            L62 176 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public hashCode : ()I \n    .code stack 2 locals 3 \nL0:     iconst_1 \nL1:     istore_2 \nL2:     bipush 31 \nL4:     iload_2 \nL5:     imul \nL6:     aload_0 \nL7:     getfield Field LineProxy alternativeLines Ljava/util/List; \nL10:    ifnonnull L17 \nL13:    iconst_0 \nL14:    goto L26 \n\n        .stack full \n            locals Object LineProxy Top Integer \n            stack Integer \n        .end stack \nL17:    aload_0 \nL18:    getfield Field LineProxy alternativeLines Ljava/util/List; \nL21:    invokeinterface InterfaceMethod java/util/List hashCode ()I 1 \n\n        .stack full \n            locals Object LineProxy Top Integer \n            stack Integer Integer \n        .end stack \nL26:    iadd \nL27:    istore_2 \nL28:    bipush 31 \nL30:    iload_2 \nL31:    imul \nL32:    aload_0 \nL33:    getfield Field LineProxy destStreet Ljava/lang/String; \nL36:    ifnonnull L43 \nL39:    iconst_0 \nL40:    goto L50 \n\n        .stack stack_1 Integer \nL43:    aload_0 \nL44:    getfield Field LineProxy destStreet Ljava/lang/String; \nL47:    invokevirtual Method java/lang/String hashCode ()I \n\n        .stack full \n            locals Object LineProxy Top Integer \n            stack Integer Integer \n        .end stack \nL50:    iadd \nL51:    istore_2 \nL52:    bipush 31 \nL54:    iload_2 \nL55:    imul \nL56:    aload_0 \nL57:    getfield Field LineProxy distance I \nL60:    iadd \nL61:    istore_2 \nL62:    bipush 31 \nL64:    iload_2 \nL65:    imul \nL66:    aload_0 \nL67:    getfield Field LineProxy key Ljava/lang/String; \nL70:    ifnonnull L77 \nL73:    iconst_0 \nL74:    goto L84 \n\n        .stack stack_1 Integer \nL77:    aload_0 \nL78:    getfield Field LineProxy key Ljava/lang/String; \nL81:    invokevirtual Method java/lang/String hashCode ()I \n\n        .stack full \n            locals Object LineProxy Top Integer \n            stack Integer Integer \n        .end stack \nL84:    iadd \nL85:    istore_2 \nL86:    bipush 31 \nL88:    iload_2 \nL89:    imul \nL90:    aload_0 \nL91:    getfield Field LineProxy linenum Ljava/lang/String; \nL94:    ifnonnull L101 \nL97:    iconst_0 \nL98:    goto L108 \n\n        .stack stack_1 Integer \nL101:   aload_0 \nL102:   getfield Field LineProxy linenum Ljava/lang/String; \nL105:   invokevirtual Method java/lang/String hashCode ()I \n\n        .stack full \n            locals Object LineProxy Top Integer \n            stack Integer Integer \n        .end stack \nL108:   iadd \nL109:   istore_2 \nL110:   bipush 31 \nL112:   iload_2 \nL113:   imul \nL114:   aload_0 \nL115:   getfield Field LineProxy ramal Ljava/lang/String; \nL118:   ifnonnull L125 \nL121:   iconst_0 \nL122:   goto L132 \n\n        .stack stack_1 Integer \nL125:   aload_0 \nL126:   getfield Field LineProxy ramal Ljava/lang/String; \nL129:   invokevirtual Method java/lang/String hashCode ()I \n\n        .stack full \n            locals Object LineProxy Top Integer \n            stack Integer Integer \n        .end stack \nL132:   iadd \nL133:   istore_2 \nL134:   bipush 31 \nL136:   iload_2 \nL137:   imul \nL138:   aload_0 \nL139:   getfield Field LineProxy startStreet Ljava/lang/String; \nL142:   ifnonnull L149 \nL145:   iconst_0 \nL146:   goto L156 \n\n        .stack stack_1 Integer \nL149:   aload_0 \nL150:   getfield Field LineProxy startStreet Ljava/lang/String; \nL153:   invokevirtual Method java/lang/String hashCode ()I \n\n        .stack full \n            locals Object LineProxy Top Integer \n            stack Integer Integer \n        .end stack \nL156:   iadd \nL157:   istore_2 \nL158:   bipush 31 \nL160:   iload_2 \nL161:   imul \nL162:   aload_0 \nL163:   getfield Field LineProxy type I \nL166:   iadd \nL167:   istore_2 \nL168:   iload_2 \nL169:   ireturn \nL170:   \n        .linenumbertable \n            L0 183 \n            L2 184 \n            L21 186 \n            L28 187 \n            L47 188 \n            L52 189 \n            L62 190 \n            L86 191 \n            L110 192 \n            L134 193 \n            L153 194 \n            L158 195 \n            L168 196 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public equals : (Ljava/lang/Object;)Z \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     if_acmpne L7 \nL5:     iconst_1 \nL6:     ireturn \n\n        .stack same \nL7:     aload_1 \nL8:     ifnonnull L13 \nL11:    iconst_0 \nL12:    ireturn \n\n        .stack same \nL13:    aload_0 \nL14:    invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL17:    aload_1 \nL18:    invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL21:    if_acmpeq L26 \nL24:    iconst_0 \nL25:    ireturn \n\n        .stack same \nL26:    aload_1 \nL27:    checkcast LineProxy \nL30:    astore_2 \nL31:    aload_0 \nL32:    getfield Field LineProxy alternativeLines Ljava/util/List; \nL35:    ifnonnull L47 \nL38:    aload_2 \nL39:    getfield Field LineProxy alternativeLines Ljava/util/List; \nL42:    ifnull L65 \nL45:    iconst_0 \nL46:    ireturn \n\n        .stack append Object LineProxy \nL47:    aload_0 \nL48:    getfield Field LineProxy alternativeLines Ljava/util/List; \nL51:    aload_2 \nL52:    getfield Field LineProxy alternativeLines Ljava/util/List; \nL55:    invokeinterface InterfaceMethod java/util/List equals (Ljava/lang/Object;)Z 2 \nL60:    ifne L65 \nL63:    iconst_0 \nL64:    ireturn \n\n        .stack same \nL65:    aload_0 \nL66:    getfield Field LineProxy destStreet Ljava/lang/String; \nL69:    ifnonnull L81 \nL72:    aload_2 \nL73:    getfield Field LineProxy destStreet Ljava/lang/String; \nL76:    ifnull L97 \nL79:    iconst_0 \nL80:    ireturn \n\n        .stack same \nL81:    aload_0 \nL82:    getfield Field LineProxy destStreet Ljava/lang/String; \nL85:    aload_2 \nL86:    getfield Field LineProxy destStreet Ljava/lang/String; \nL89:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL92:    ifne L97 \nL95:    iconst_0 \nL96:    ireturn \n\n        .stack same \nL97:    aload_0 \nL98:    getfield Field LineProxy distance I \nL101:   aload_2 \nL102:   getfield Field LineProxy distance I \nL105:   if_icmpeq L110 \nL108:   iconst_0 \nL109:   ireturn \n\n        .stack same \nL110:   aload_0 \nL111:   getfield Field LineProxy key Ljava/lang/String; \nL114:   ifnonnull L126 \nL117:   aload_2 \nL118:   getfield Field LineProxy key Ljava/lang/String; \nL121:   ifnull L142 \nL124:   iconst_0 \nL125:   ireturn \n\n        .stack same \nL126:   aload_0 \nL127:   getfield Field LineProxy key Ljava/lang/String; \nL130:   aload_2 \nL131:   getfield Field LineProxy key Ljava/lang/String; \nL134:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL137:   ifne L142 \nL140:   iconst_0 \nL141:   ireturn \n\n        .stack same \nL142:   aload_0 \nL143:   getfield Field LineProxy linenum Ljava/lang/String; \nL146:   ifnonnull L158 \nL149:   aload_2 \nL150:   getfield Field LineProxy linenum Ljava/lang/String; \nL153:   ifnull L174 \nL156:   iconst_0 \nL157:   ireturn \n\n        .stack same \nL158:   aload_0 \nL159:   getfield Field LineProxy linenum Ljava/lang/String; \nL162:   aload_2 \nL163:   getfield Field LineProxy linenum Ljava/lang/String; \nL166:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL169:   ifne L174 \nL172:   iconst_0 \nL173:   ireturn \n\n        .stack same \nL174:   aload_0 \nL175:   getfield Field LineProxy ramal Ljava/lang/String; \nL178:   ifnonnull L190 \nL181:   aload_2 \nL182:   getfield Field LineProxy ramal Ljava/lang/String; \nL185:   ifnull L206 \nL188:   iconst_0 \nL189:   ireturn \n\n        .stack same \nL190:   aload_0 \nL191:   getfield Field LineProxy ramal Ljava/lang/String; \nL194:   aload_2 \nL195:   getfield Field LineProxy ramal Ljava/lang/String; \nL198:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL201:   ifne L206 \nL204:   iconst_0 \nL205:   ireturn \n\n        .stack same \nL206:   aload_0 \nL207:   getfield Field LineProxy startStreet Ljava/lang/String; \nL210:   ifnonnull L222 \nL213:   aload_2 \nL214:   getfield Field LineProxy startStreet Ljava/lang/String; \nL217:   ifnull L238 \nL220:   iconst_0 \nL221:   ireturn \n\n        .stack same \nL222:   aload_0 \nL223:   getfield Field LineProxy startStreet Ljava/lang/String; \nL226:   aload_2 \nL227:   getfield Field LineProxy startStreet Ljava/lang/String; \nL230:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL233:   ifne L238 \nL236:   iconst_0 \nL237:   ireturn \n\n        .stack same \nL238:   aload_0 \nL239:   getfield Field LineProxy type I \nL242:   aload_2 \nL243:   getfield Field LineProxy type I \nL246:   if_icmpeq L251 \nL249:   iconst_0 \nL250:   ireturn \n\n        .stack same \nL251:   iconst_1 \nL252:   ireturn \nL253:   \n        .linenumbertable \n            L0 201 \n            L5 202 \n            L7 203 \n            L11 204 \n            L13 205 \n            L24 206 \n            L26 207 \n            L31 208 \n            L38 209 \n            L45 210 \n            L47 211 \n            L63 212 \n            L65 213 \n            L72 214 \n            L79 215 \n            L81 216 \n            L95 217 \n            L97 218 \n            L108 219 \n            L110 220 \n            L117 221 \n            L124 222 \n            L126 223 \n            L140 224 \n            L142 225 \n            L149 226 \n            L156 227 \n            L158 228 \n            L172 229 \n            L174 230 \n            L181 231 \n            L188 232 \n            L190 233 \n            L204 234 \n            L206 235 \n            L213 236 \n            L220 237 \n            L222 238 \n            L236 239 \n            L238 240 \n            L249 241 \n            L251 242 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getStations : ()Ljava/util/List; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LineProxy stations Ljava/util/List; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 246 \n        .end linenumbertable \n    .end code \n    .signature ()Ljava/util/List<Ljava/lang/String;>; \n.end method \n\n.method public setType : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field LineProxy type I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 250 \n            L5 251 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setAlternativeLines : (Ljava/util/List;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field LineProxy alternativeLines Ljava/util/List; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 254 \n            L5 255 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/util/List<Ljava/lang/String;>;)V \n.end method \n\n.method public setStations : (Ljava/util/List;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field LineProxy stations Ljava/util/List; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 258 \n            L5 259 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/util/List<Ljava/lang/String;>;)V \n.end method \n\n.method static <clinit> : ()V \n    .code stack 4 locals 0 \nL0:     bipush 6 \nL2:     newarray float \nL4:     dup \nL5:     iconst_0 \nL6:     ldc +0.014999999664723873f \nL8:     fastore \nL9:     dup \nL10:    iconst_1 \nL11:    ldc +0.002400000113993883f \nL13:    fastore \nL14:    dup \nL15:    iconst_2 \nL16:    ldc +0.001500000013038516f \nL18:    fastore \nL19:    dup \nL20:    iconst_3 \nL21:    ldc +0.0010000000474974513f \nL23:    fastore \nL24:    dup \nL25:    iconst_4 \nL26:    ldc +0.0020000000949949026f \nL28:    fastore \nL29:    dup \nL30:    iconst_5 \nL31:    ldc +0.0019000000320374966f \nL33:    fastore \nL34:    putstatic Field LineProxy multiplicators [F \nL37:    return \nL38:    \n        .linenumbertable \n            L0 15 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'LineProxy.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 18:47:58 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.util.LinkedList;\nimport java.util.List;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class LineProxy_ESTest extends LineProxy_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy(\"Y\", \"Y\", \"#7IwM2i@QN[<*y\u007f[zAG\", 0, (List<Float>) null, 0, (List<Float>) null);\n      lineProxy0.setDistance((-26538));\n      lineProxy0.hashCode();\n      assertEquals((-398), lineProxy0.getTime());\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy(\">9?\", \"subte\", \">9?\", (-10297), (List<Float>) null, (-10297), (List<Float>) null, (List<String>) null);\n      String string0 = lineProxy0.getTypeAsString();\n      assertEquals(\"error: invalid type\", string0);\n      assertEquals((-10297), lineProxy0.getType());\n      assertEquals((-10297), lineProxy0.getDistance());\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy(\"Y\", \"Y\", \"#7IwM2i@QN[<*y\u007f[zAG\", 0, (List<Float>) null, 0, (List<Float>) null);\n      lineProxy0.addAlternativeLine((String) null);\n      lineProxy0.setDistance((-26538));\n      lineProxy0.hashCode();\n      assertEquals((-398), lineProxy0.getTime());\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      LinkedList<Float> linkedList0 = new LinkedList<Float>();\n      LineProxy lineProxy0 = new LineProxy((String) null, (String) null, \"\", 23939, linkedList0, 0, linkedList0, (List<String>) null);\n      int int0 = lineProxy0.getType();\n      assertEquals(23939, int0);\n      assertEquals(0, lineProxy0.getDistance());\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy(\">9?\", \"subte\", \">9?\", (-10297), (List<Float>) null, (-10297), (List<Float>) null, (List<String>) null);\n      int int0 = lineProxy0.getType();\n      assertEquals((-10297), int0);\n      assertEquals((-10297), lineProxy0.getDistance());\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy(\"Y\", \"Y\", \"#7IwM2i@QN[<*y\u007f[zAG\", 0, (List<Float>) null, 0, (List<Float>) null);\n      lineProxy0.setDistance((-26538));\n      int int0 = lineProxy0.getTime();\n      assertEquals((-26538), lineProxy0.getDistance());\n      assertEquals((-398), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      LinkedList<String> linkedList0 = new LinkedList<String>();\n      LineProxy lineProxy0 = new LineProxy(\"caminar\", \"caminar\", \"caminar\", 0, (List<Float>) null, 0, (List<Float>) null, linkedList0);\n      linkedList0.add(\",\");\n      lineProxy0.getStations();\n      assertEquals(0, lineProxy0.getDistance());\n      assertEquals(0, lineProxy0.getType());\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      lineProxy0.setStartStreet(\"5ZM6<y3g0c|V:K)D?1$\");\n      String string0 = lineProxy0.getStartStreet();\n      assertEquals(\"5ZM6<y3g0c|V:K)D?1$\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy(\"Y\", \"Y\", \"#7IwM2i@QN[<*y\u007f[zAG\", 0, (List<Float>) null, 0, (List<Float>) null);\n      lineProxy0.getRelevantPoints();\n      assertEquals(0, lineProxy0.getDistance());\n      assertEquals(0, lineProxy0.getType());\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      LinkedList<Float> linkedList0 = new LinkedList<Float>();\n      LineProxy lineProxy0 = new LineProxy(\"\", \"I:yf8cHQ&0i`=LT\\\"bh=\", \"\", 0, linkedList0, 0, linkedList0);\n      Float float0 = new Float((float) 0);\n      linkedList0.add(float0);\n      lineProxy0.getRelevantPoints();\n      assertEquals(0, lineProxy0.getDistance());\n      assertEquals(0, lineProxy0.getType());\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy(\"vCMC.]7<^U!Py-$m\", \"caminar\", \"vCMC.]7<^U!Py-$m\", (-1), (List<Float>) null, (-1), (List<Float>) null);\n      lineProxy0.getRamal();\n      assertEquals((-1), lineProxy0.getType());\n      assertEquals((-1), lineProxy0.getDistance());\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      lineProxy0.setRamal(\"\");\n      String string0 = lineProxy0.getRamal();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy(\"xOs4E&\", \"xOs4E&\", \"PYaFX<Ln~hC{3 tK>[Y\", 0, (List<Float>) null, 0, (List<Float>) null);\n      lineProxy0.getLinenum();\n      assertEquals(0, lineProxy0.getDistance());\n      assertEquals(\"caminar\", lineProxy0.getTypeAsString());\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      String string0 = lineProxy0.getKey();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy(\"(&}Can\", \"(&}Can\", \"(&}Can\", 0, (List<Float>) null, 129492, (List<Float>) null);\n      lineProxy0.getKey();\n      assertEquals(\"caminar\", lineProxy0.getTypeAsString());\n      assertEquals(129492, lineProxy0.getDistance());\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy(\"(&}Can\", \"(&}Can\", \"(&}Can\", 0, (List<Float>) null, 129492, (List<Float>) null);\n      int int0 = lineProxy0.getDistance();\n      assertEquals(129492, int0);\n      assertEquals(0, lineProxy0.getType());\n  }\n\n  @Test(timeout = 4000)\n  public void test16()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy(\"Y\", \"Y\", \"#7IwM2i@QN[<*y\u007f[zAG\", 0, (List<Float>) null, 0, (List<Float>) null);\n      lineProxy0.setDistance((-26538));\n      int int0 = lineProxy0.getDistance();\n      assertEquals((-26538), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test17()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      lineProxy0.setDestStreet(\"q$42-duzS3MvRWg\");\n      String string0 = lineProxy0.getDestStreet();\n      assertEquals(\"q$42-duzS3MvRWg\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test18()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      List<String> list0 = lineProxy0.getAlternativeLines();\n      assertNull(list0);\n  }\n\n  @Test(timeout = 4000)\n  public void test19()  throws Throwable  {\n      LinkedList<Float> linkedList0 = new LinkedList<Float>();\n      LineProxy lineProxy0 = new LineProxy((String) null, (String) null, (String) null, (-58184), linkedList0, (-58184), linkedList0, (List<String>) null);\n      lineProxy0.getAllPoints();\n      assertEquals((-58184), lineProxy0.getDistance());\n      assertEquals((-58184), lineProxy0.getType());\n  }\n\n  @Test(timeout = 4000)\n  public void test20()  throws Throwable  {\n      LinkedList<Float> linkedList0 = new LinkedList<Float>();\n      Float float0 = new Float((-1.0));\n      linkedList0.add(float0);\n      LineProxy lineProxy0 = new LineProxy(\"V6k'kK{`d4T+KD NA}\", \"V6k'kK{`d4T+KD NA}\", \"\", 4, linkedList0, 0, linkedList0, (List<String>) null);\n      lineProxy0.getAllPoints();\n      assertEquals(5, lineProxy0.getTime());\n      assertEquals(0, lineProxy0.getDistance());\n  }\n\n  @Test(timeout = 4000)\n  public void test21()  throws Throwable  {\n      LinkedList<Float> linkedList0 = new LinkedList<Float>();\n      LineProxy lineProxy0 = new LineProxy();\n      LineProxy lineProxy1 = new LineProxy(\"q&h'_CJgQZ\", \"q&h'_CJgQZ\", \"q&h'_CJgQZ\", 6262, linkedList0, 6262, linkedList0, (List<String>) null);\n      lineProxy0.equals(lineProxy1);\n      // Undeclared exception!\n      try { \n        lineProxy1.getTime();\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // 6262\n         //\n         verifyException(\"LineProxy\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test22()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      boolean boolean0 = lineProxy0.equals(\"caminar\");\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test23()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      boolean boolean0 = lineProxy0.equals((Object) null);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test24()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      lineProxy0.setStartStreet(\"\");\n      lineProxy0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test25()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      lineProxy0.setDestStreet(\"error: invalid type\");\n      lineProxy0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test26()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      lineProxy0.setType(6);\n      lineProxy0.getTypeAsString();\n      assertEquals(6, lineProxy0.getType());\n  }\n\n  @Test(timeout = 4000)\n  public void test27()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      String string0 = lineProxy0.getTypeAsString();\n      assertEquals(\"caminar\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test28()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy(\"\", (String) null, (String) null, 5, (List<Float>) null, 0, (List<Float>) null);\n      String string0 = lineProxy0.getTypeAsString();\n      assertEquals(0, lineProxy0.getDistance());\n      assertEquals(\"\", string0);\n      assertEquals(5, lineProxy0.getType());\n  }\n\n  @Test(timeout = 4000)\n  public void test29()  throws Throwable  {\n      LinkedList<Float> linkedList0 = new LinkedList<Float>();\n      LineProxy lineProxy0 = new LineProxy(\"V6k'kK{`d4T+KD NA}\", \"V6k'kK{`d4T+KD NA}\", \"\", 4, linkedList0, 0, linkedList0, (List<String>) null);\n      int int0 = lineProxy0.getTime();\n      assertEquals(0, lineProxy0.getDistance());\n      assertEquals(4, lineProxy0.getType());\n      assertEquals(5, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test30()  throws Throwable  {\n      LinkedList<Float> linkedList0 = new LinkedList<Float>();\n      LineProxy lineProxy0 = new LineProxy(\"W!\u007fu}{,\\\"+\", \"W!\u007fu}{,\\\"+\", \"W!\u007fu}{,\\\"+\", 3, linkedList0, 7219, linkedList0);\n      int int0 = lineProxy0.getTime();\n      assertEquals(22, int0);\n      assertEquals(7219, lineProxy0.getDistance());\n      assertEquals(\"\", lineProxy0.getTypeAsString());\n  }\n\n  @Test(timeout = 4000)\n  public void test31()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      int int0 = lineProxy0.getTime();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test32()  throws Throwable  {\n      LinkedList<Float> linkedList0 = new LinkedList<Float>();\n      LineProxy lineProxy0 = new LineProxy(\"\", \"I:yf8cHQ&0i`=LT\\\"bh=\", \"\", 0, linkedList0, 0, linkedList0);\n      lineProxy0.getRelevantPoints();\n      assertEquals(0, lineProxy0.getType());\n      assertEquals(0, lineProxy0.getDistance());\n  }\n\n  @Test(timeout = 4000)\n  public void test33()  throws Throwable  {\n      LinkedList<Float> linkedList0 = new LinkedList<Float>();\n      LineProxy lineProxy0 = new LineProxy(\"\", \"I:yf8cHQ&0i`=LT\\\"bh=\", \"\", 0, linkedList0, 0, linkedList0);\n      String string0 = lineProxy0.toString();\n      assertEquals(\"I:yf8cHQ&0i`=LT\\\"bh= \", string0);\n      assertEquals(0, lineProxy0.getDistance());\n      assertEquals(0, lineProxy0.getType());\n  }\n\n  @Test(timeout = 4000)\n  public void test34()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      lineProxy0.setDestStreet(\"\");\n      String string0 = lineProxy0.getDestStreet();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test35()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      LinkedList<String> linkedList0 = new LinkedList<String>();\n      lineProxy0.setAlternativeLines(linkedList0);\n      assertEquals(0, lineProxy0.getTime());\n  }\n\n  @Test(timeout = 4000)\n  public void test36()  throws Throwable  {\n      LinkedList<Float> linkedList0 = new LinkedList<Float>();\n      LineProxy lineProxy0 = new LineProxy(\"\", (String) null, \"y_614T!7i&qR\", 0, linkedList0, 0, linkedList0);\n      lineProxy0.getStations();\n      assertEquals(0, lineProxy0.getDistance());\n      assertEquals(\"caminar\", lineProxy0.getTypeAsString());\n  }\n\n  @Test(timeout = 4000)\n  public void test37()  throws Throwable  {\n      LinkedList<Float> linkedList0 = new LinkedList<Float>();\n      LineProxy lineProxy0 = new LineProxy(\"\", \"I:yf8cHQ&0i`=LT\\\"bh=\", \"\", 0, linkedList0, 0, linkedList0);\n      int int0 = lineProxy0.getType();\n      assertEquals(0, int0);\n      assertEquals(0, lineProxy0.getDistance());\n  }\n\n  @Test(timeout = 4000)\n  public void test38()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      String string0 = lineProxy0.getLinenum();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test39()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      int int0 = lineProxy0.getDistance();\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test40()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      lineProxy0.setStations((List<String>) null);\n      assertNull(lineProxy0.getDestStreet());\n  }\n\n  @Test(timeout = 4000)\n  public void test41()  throws Throwable  {\n      LinkedList<Float> linkedList0 = new LinkedList<Float>();\n      LineProxy lineProxy0 = new LineProxy(\"\", \"I:yf8cHQ&0i`=LT\\\"bh=\", \"\", 0, linkedList0, 0, linkedList0);\n      lineProxy0.setRelevantPoints(linkedList0);\n      assertEquals(\"caminar\", lineProxy0.getTypeAsString());\n      assertEquals(0, lineProxy0.getDistance());\n  }\n\n  @Test(timeout = 4000)\n  public void test42()  throws Throwable  {\n      LinkedList<Float> linkedList0 = new LinkedList<Float>();\n      LineProxy lineProxy0 = new LineProxy(\"\", \"I:yf8cHQ&0i`=LT\\\"bh=\", \"\", 0, linkedList0, 0, linkedList0);\n      lineProxy0.getKey();\n      assertEquals(0, lineProxy0.getDistance());\n      assertEquals(\"caminar\", lineProxy0.getTypeAsString());\n  }\n\n  @Test(timeout = 4000)\n  public void test43()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      String string0 = lineProxy0.getDestStreet();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test44()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      String string0 = lineProxy0.getRamal();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test45()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      String string0 = lineProxy0.getStartStreet();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test46()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      lineProxy0.setKey(\"\");\n      assertNull(lineProxy0.getDestStreet());\n  }\n\n  @Test(timeout = 4000)\n  public void test47()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      lineProxy0.setAllPoints((List<Float>) null);\n      assertNull(lineProxy0.getDestStreet());\n  }\n\n  @Test(timeout = 4000)\n  public void test48()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      lineProxy0.setLinenum(\"\");\n      String string0 = lineProxy0.getLinenum();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test49()  throws Throwable  {\n      LineProxy lineProxy0 = new LineProxy();\n      List<Float> list0 = lineProxy0.getAllPoints();\n      assertNull(list0);\n  }\n\n  @Test(timeout = 4000)\n  public void test50()  throws Throwable  {\n      LinkedList<Float> linkedList0 = new LinkedList<Float>();\n      LineProxy lineProxy0 = new LineProxy(\"\", (String) null, \"y_614T!7i&qR\", 0, linkedList0, 0, linkedList0);\n      List<String> list0 = lineProxy0.getAlternativeLines();\n      LinkedList<String> linkedList1 = new LinkedList<String>(list0);\n      LineProxy lineProxy1 = new LineProxy(\"\", \"\", \"y_614T!7i&qR\", 64533, linkedList0, 88622, linkedList0, linkedList1);\n      lineProxy1.getStations();\n      assertEquals(0, lineProxy0.getDistance());\n      assertEquals(0, lineProxy0.getType());\n      assertEquals(88622, lineProxy1.getDistance());\n      assertEquals(64533, lineProxy1.getType());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 18:47:58 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class LineProxy_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"LineProxy\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp92j19ogd\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(LineProxy_ESTest_scaffolding.class.getClassLoader() ,\n      \"LineProxy\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(LineProxy_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"LineProxy\"\n    );\n  }\n}\n", "class_idx": 271}
{"class_name": "Array11", "java_source": "public class Array11 {\n  public static void main(String... args) {\n    // Result: 1.\n    System.out.println(new Array11().array11(new int[] {2, 6, 11}, 0));\n  }\n\n  public int array11(int[] nums, int index) {\n    return (nums.length == 0 || index == nums.length)\n        ? 0\n        : ((nums[index] == 11) ? 1 + array11(nums, ++index) : array11(nums, ++index));\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Array11 \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 1 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static varargs main : ([Ljava/lang/String;)V \n    .code stack 6 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new Array11 \nL6:     dup \nL7:     invokespecial Method Array11 <init> ()V \nL10:    iconst_3 \nL11:    newarray int \nL13:    dup \nL14:    iconst_0 \nL15:    iconst_2 \nL16:    iastore \nL17:    dup \nL18:    iconst_1 \nL19:    bipush 6 \nL21:    iastore \nL22:    dup \nL23:    iconst_2 \nL24:    bipush 11 \nL26:    iastore \nL27:    iconst_0 \nL28:    invokevirtual Method Array11 array11 ([II)I \nL31:    invokevirtual Method java/io/PrintStream println (I)V \nL34:    return \nL35:    \n        .linenumbertable \n            L0 4 \n            L34 5 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public array11 : ([II)I \n    .code stack 4 locals 3 \nL0:     aload_1 \nL1:     arraylength \nL2:     ifeq L11 \nL5:     iload_2 \nL6:     aload_1 \nL7:     arraylength \nL8:     if_icmpne L15 \n\n        .stack same \nL11:    iconst_0 \nL12:    goto L46 \n\n        .stack same \nL15:    aload_1 \nL16:    iload_2 \nL17:    iaload \nL18:    bipush 11 \nL20:    if_icmpne L37 \nL23:    iconst_1 \nL24:    aload_0 \nL25:    aload_1 \nL26:    iinc 2 1 \nL29:    iload_2 \nL30:    invokevirtual Method Array11 array11 ([II)I \nL33:    iadd \nL34:    goto L46 \n\n        .stack same \nL37:    aload_0 \nL38:    aload_1 \nL39:    iinc 2 1 \nL42:    iload_2 \nL43:    invokevirtual Method Array11 array11 ([II)I \n\n        .stack stack_1 Integer \nL46:    ireturn \nL47:    \n        .linenumbertable \n            L0 8 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Array11.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 07:52:27 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Array11_ESTest extends Array11_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Array11 array11_0 = new Array11();\n      int[] intArray0 = new int[6];\n      intArray0[0] = (-62467);\n      int int0 = array11_0.array11(intArray0, 0);\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Array11 array11_0 = new Array11();\n      String[] stringArray0 = new String[4];\n      Array11.main(stringArray0);\n      int[] intArray0 = new int[9];\n      // Undeclared exception!\n      try { \n        array11_0.array11(intArray0, 72711);\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // 72711\n         //\n         verifyException(\"Array11\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Array11 array11_0 = new Array11();\n      int[] intArray0 = new int[0];\n      String[] stringArray0 = new String[7];\n      Array11.main(stringArray0);\n      int int0 = array11_0.array11(intArray0, 94775);\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Array11 array11_0 = new Array11();\n      int[] intArray0 = new int[6];\n      intArray0[5] = 74495;\n      int int0 = array11_0.array11(intArray0, 0);\n      assertEquals(0, int0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 07:52:27 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Array11_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Array11\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmptgsnkp42\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Array11_ESTest_scaffolding.class.getClassLoader() ,\n      \"Array11\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Array11_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Array11\"\n    );\n  }\n}\n", "class_idx": 272}
{"class_name": "Equality", "java_source": "/** Created by neznaa on 3/9/2016. */\npublic class Equality {\n\n  public static void main(String[] args) {\n    String s1 = \"firefox\";\n    String s2 = \"firefox\";\n\n    System.out.println(s1 == s2);\n    System.out.println(s1.equals(s2));\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Equality \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 3 locals 3 \nL0:     ldc 'firefox' \nL2:     astore_1 \nL3:     ldc 'firefox' \nL5:     astore_2 \nL6:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL9:     aload_1 \nL10:    aload_2 \nL11:    if_acmpne L18 \nL14:    iconst_1 \nL15:    goto L19 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object java/lang/String Object java/lang/String \n            stack Object java/io/PrintStream \n        .end stack \nL18:    iconst_0 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object java/lang/String Object java/lang/String \n            stack Object java/io/PrintStream Integer \n        .end stack \nL19:    invokevirtual Method java/io/PrintStream println (Z)V \nL22:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL25:    aload_1 \nL26:    aload_2 \nL27:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL30:    invokevirtual Method java/io/PrintStream println (Z)V \nL33:    return \nL34:    \n        .linenumbertable \n            L0 9 \n            L3 10 \n            L6 12 \n            L22 13 \n            L33 14 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Equality.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 14:23:54 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Equality_ESTest extends Equality_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String[] stringArray0 = new String[19];\n      Equality.main(stringArray0);\n      assertEquals(19, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Equality equality0 = new Equality();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 14:23:54 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Equality_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Equality\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp_7c08vj7\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Equality_ESTest_scaffolding.class.getClassLoader() ,\n      \"Equality\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Equality_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Equality\"\n    );\n  }\n}\n", "class_idx": 273}
{"class_name": "Constant", "java_source": "import java.util.Arrays;\nimport java.util.List;\n\n/** Created by engineer on 2016/9/24. */\npublic class Constant {\n\n  private static String[] pics = {\n    \"http://img5.imgtn.bdimg.com/it/u=1653858330,2839655607&fm=21&gp=0.jpg\",\n    \"http://img3.imgtn.bdimg.com/it/u=3996559489,3436218348&fm=21&gp=0.jpg\",\n    \"http://img0.imgtn.bdimg.com/it/u=2466061736,1474812220&fm=21&gp=0.jpg\"\n  };\n\n  private static String[] pics2 = {\n    \"http://img5.imgtn.bdimg.com/it/u=3676114267,848416754&fm=21&gp=0.jpg\",\n    \"http://img3.imgtn.bdimg.com/it/u=527603723,2697086410&fm=21&gp=0.jpg\",\n    \"http://img4.imgtn.bdimg.com/it/u=2897844664,899304846&fm=21&gp=0.jpg\"\n  };\n\n  public static List<String> headPics = Arrays.asList(pics);\n  public static List<String> itemPics = Arrays.asList(pics2);\n}\n", "jasm_code": ".version 52 0 \n.class public super Constant \n.super java/lang/Object \n.field private static pics [Ljava/lang/String; \n.field private static pics2 [Ljava/lang/String; \n.field public static headPics Ljava/util/List; .fieldattributes \n    .signature Ljava/util/List<Ljava/lang/String;>; \n.end fieldattributes \n.field public static itemPics Ljava/util/List; .fieldattributes \n    .signature Ljava/util/List<Ljava/lang/String;>; \n.end fieldattributes \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 10 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 4 locals 0 \nL0:     iconst_3 \nL1:     anewarray java/lang/String \nL4:     dup \nL5:     iconst_0 \nL6:     ldc 'http://img5.imgtn.bdimg.com/it/u=1653858330,2839655607&fm=21&gp=0.jpg' \nL8:     aastore \nL9:     dup \nL10:    iconst_1 \nL11:    ldc 'http://img3.imgtn.bdimg.com/it/u=3996559489,3436218348&fm=21&gp=0.jpg' \nL13:    aastore \nL14:    dup \nL15:    iconst_2 \nL16:    ldc 'http://img0.imgtn.bdimg.com/it/u=2466061736,1474812220&fm=21&gp=0.jpg' \nL18:    aastore \nL19:    putstatic Field Constant pics [Ljava/lang/String; \nL22:    iconst_3 \nL23:    anewarray java/lang/String \nL26:    dup \nL27:    iconst_0 \nL28:    ldc 'http://img5.imgtn.bdimg.com/it/u=3676114267,848416754&fm=21&gp=0.jpg' \nL30:    aastore \nL31:    dup \nL32:    iconst_1 \nL33:    ldc 'http://img3.imgtn.bdimg.com/it/u=527603723,2697086410&fm=21&gp=0.jpg' \nL35:    aastore \nL36:    dup \nL37:    iconst_2 \nL38:    ldc 'http://img4.imgtn.bdimg.com/it/u=2897844664,899304846&fm=21&gp=0.jpg' \nL40:    aastore \nL41:    putstatic Field Constant pics2 [Ljava/lang/String; \nL44:    getstatic Field Constant pics [Ljava/lang/String; \nL47:    invokestatic Method java/util/Arrays asList ([Ljava/lang/Object;)Ljava/util/List; \nL50:    putstatic Field Constant headPics Ljava/util/List; \nL53:    getstatic Field Constant pics2 [Ljava/lang/String; \nL56:    invokestatic Method java/util/Arrays asList ([Ljava/lang/Object;)Ljava/util/List; \nL59:    putstatic Field Constant itemPics Ljava/util/List; \nL62:    return \nL63:    \n        .linenumbertable \n            L0 12 \n            L22 16 \n            L44 20 \n            L53 21 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Constant.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 09:11:12 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Constant_ESTest extends Constant_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Constant constant0 = new Constant();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 09:11:12 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Constant_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Constant\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpb0s785a2\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Constant_ESTest_scaffolding.class.getClassLoader() ,\n      \"Constant\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Constant_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Constant\"\n    );\n  }\n}\n", "class_idx": 274}
{"class_name": "DOP", "java_source": "/* ====================================================================\n   Licensed to the Apache Software Foundation (ASF) under one or more\n   contributor license agreements.  See the NOTICE file distributed with\n   this work for additional information regarding copyright ownership.\n   The ASF licenses this file to You under the Apache License, Version 2.0\n   (the \"License\"); you may not use this file except in compliance with\n   the License.  You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n==================================================================== */\n\n/**\n * Comment me\n *\n * @author Ryan Ackley\n */\npublic class DOP {\n\n  public boolean _fFacingPages;\n  public int _fpc;\n  public int _epc;\n  public int _rncFtn;\n  public int _nFtn;\n  public int _rncEdn;\n  public int _nEdn;\n\n  public DOP() {}\n}\n", "jasm_code": ".version 52 0 \n.class public super DOP \n.super java/lang/Object \n.field public _fFacingPages Z \n.field public _fpc I \n.field public _epc I \n.field public _rncFtn I \n.field public _nFtn I \n.field public _rncEdn I \n.field public _nEdn I \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 41 \n            L4 42 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'DOP.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 16:32:39 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class DOP_ESTest extends DOP_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      DOP dOP0 = new DOP();\n      assertEquals(0, dOP0._rncEdn);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 16:32:39 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class DOP_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"DOP\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpbb4a0_t9\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DOP_ESTest_scaffolding.class.getClassLoader() ,\n      \"DOP\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DOP_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"DOP\"\n    );\n  }\n}\n", "class_idx": 275}
{"class_name": "Location", "java_source": "// Copyright Yahoo. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project\n// root.\n\n/** A pointer to a location in a YQL source program. */\nfinal class Location {\n\n  private final String programName;\n  private final int lineNumber;\n  private final int characterOffset;\n\n  public Location(String programName, int lineNumber, int characterOffset) {\n    this.programName = programName;\n    this.lineNumber = lineNumber;\n    this.characterOffset = characterOffset;\n  }\n\n  public int getLineNumber() {\n    return lineNumber;\n  }\n\n  public int getCharacterOffset() {\n    return characterOffset;\n  }\n\n  @Override\n  public String toString() {\n    if (programName != null) {\n      return programName + \":L\" + lineNumber + \":\" + characterOffset;\n    } else {\n      return \"L\" + lineNumber + \":\" + characterOffset;\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class final super Location \n.super java/lang/Object \n.field private final programName Ljava/lang/String; \n.field private final lineNumber I \n.field private final characterOffset I \n\n.method public <init> : (Ljava/lang/String;II)V \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field Location programName Ljava/lang/String; \nL9:     aload_0 \nL10:    iload_2 \nL11:    putfield Field Location lineNumber I \nL14:    aload_0 \nL15:    iload_3 \nL16:    putfield Field Location characterOffset I \nL19:    return \nL20:    \n        .linenumbertable \n            L0 13 \n            L4 14 \n            L9 15 \n            L14 16 \n            L19 17 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getLineNumber : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Location lineNumber I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCharacterOffset : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Location characterOffset I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 25 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field Location programName Ljava/lang/String; \nL4:     ifnull L49 \nL7:     new java/lang/StringBuilder \nL10:    dup \nL11:    invokespecial Method java/lang/StringBuilder <init> ()V \nL14:    aload_0 \nL15:    getfield Field Location programName Ljava/lang/String; \nL18:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL21:    ldc ':L' \nL23:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL26:    aload_0 \nL27:    getfield Field Location lineNumber I \nL30:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL33:    ldc ':' \nL35:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL38:    aload_0 \nL39:    getfield Field Location characterOffset I \nL42:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL45:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL48:    areturn \n\n        .stack same \nL49:    new java/lang/StringBuilder \nL52:    dup \nL53:    invokespecial Method java/lang/StringBuilder <init> ()V \nL56:    ldc 'L' \nL58:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL61:    aload_0 \nL62:    getfield Field Location lineNumber I \nL65:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL68:    ldc ':' \nL70:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL73:    aload_0 \nL74:    getfield Field Location characterOffset I \nL77:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL80:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL83:    areturn \nL84:    \n        .linenumbertable \n            L0 30 \n            L7 31 \n            L49 33 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Location.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 16:22:19 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Location_ESTest extends Location_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Location location0 = new Location(\"\", 0, 0);\n      int int0 = location0.getLineNumber();\n      assertEquals(0, int0);\n      assertEquals(0, location0.getCharacterOffset());\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Location location0 = new Location((String) null, (-1), (-1));\n      int int0 = location0.getLineNumber();\n      assertEquals((-1), int0);\n      assertEquals((-1), location0.getCharacterOffset());\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Location location0 = new Location(\"\", 1, 15529);\n      int int0 = location0.getCharacterOffset();\n      assertEquals(1, location0.getLineNumber());\n      assertEquals(15529, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Location location0 = new Location(\"\", (-9028), (-9028));\n      int int0 = location0.getCharacterOffset();\n      assertEquals((-9028), location0.getLineNumber());\n      assertEquals((-9028), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Location location0 = new Location(\"\", 0, 0);\n      String string0 = location0.toString();\n      assertEquals(\":L0:0\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Location location0 = new Location((String) null, (-14), (-14));\n      String string0 = location0.toString();\n      assertEquals(\"L-14:-14\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      Location location0 = new Location(\"\", 0, 0);\n      int int0 = location0.getCharacterOffset();\n      assertEquals(0, location0.getLineNumber());\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      Location location0 = new Location(\"B<{\", 1998, 1998);\n      int int0 = location0.getLineNumber();\n      assertEquals(1998, int0);\n      assertEquals(1998, location0.getCharacterOffset());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 16:22:19 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Location_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Location\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpcvkvk8ei\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Location_ESTest_scaffolding.class.getClassLoader() ,\n      \"Location\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Location_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Location\"\n    );\n  }\n}\n", "class_idx": 276}
{"class_name": "TradeComissions", "java_source": "import java.util.Scanner;\n\npublic class TradeComissions {\n  public static void main(String[] args) {\n    Scanner console = new Scanner(System.in);\n    String city = console.nextLine();\n    double sell = Double.parseDouble(console.nextLine());\n    if (city.equals(\"Sofia\")) {\n      if (sell >= 0 && sell <= 500) {\n        sell *= 0.05;\n        System.out.printf(\"%.2f\", sell);\n      } else if (sell > 500 && sell <= 1000) {\n        sell *= 0.07;\n        System.out.printf(\"%.2f\", sell);\n      } else if (sell > 1000 && sell <= 10000) {\n        sell *= 0.08;\n        System.out.printf(\"%.2f\", sell);\n      } else if (sell > 10000) {\n        sell *= 0.12;\n        System.out.printf(\"%.2f\", sell);\n      } else {\n        System.out.println(\"error\");\n      }\n    } else if (city.equals(\"Varna\")) {\n      if (sell >= 0 && sell <= 500) {\n        sell *= 0.045;\n        System.out.printf(\"%.2f\", sell);\n      } else if (sell > 500 && sell <= 1000) {\n        sell *= 0.075;\n        System.out.printf(\"%.2f\", sell);\n      } else if (sell > 1000 && sell <= 10000) {\n        sell *= 0.10;\n        System.out.printf(\"%.2f\", sell);\n      } else if (sell > 10000) {\n        sell *= 0.13;\n        System.out.printf(\"%.2f\", sell);\n      } else {\n        System.out.println(\"error\");\n      }\n    } else if (city.equals(\"Plovdiv\")) {\n      if (sell >= 0 && sell <= 500) {\n        sell *= 0.055;\n        System.out.printf(\"%.2f\", sell);\n      } else if (sell > 500 && sell <= 1000) {\n        sell *= 0.08;\n        System.out.printf(\"%.2f\", sell);\n      } else if (sell > 1000 && sell <= 10000) {\n        sell *= 0.12;\n        System.out.printf(\"%.2f\", sell);\n      } else if (sell > 10000) {\n        sell *= 0.145;\n        System.out.printf(\"%.2f\", sell);\n      } else {\n        System.out.println(\"error\");\n      }\n    } else {\n      System.out.println(\"error\");\n    }\n    console.close();\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super TradeComissions \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 7 locals 5 \nL0:     new java/util/Scanner \nL3:     dup \nL4:     getstatic Field java/lang/System in Ljava/io/InputStream; \nL7:     invokespecial Method java/util/Scanner <init> (Ljava/io/InputStream;)V \nL10:    astore_1 \nL11:    aload_1 \nL12:    invokevirtual Method java/util/Scanner nextLine ()Ljava/lang/String; \nL15:    astore_2 \nL16:    aload_1 \nL17:    invokevirtual Method java/util/Scanner nextLine ()Ljava/lang/String; \nL20:    invokestatic Method java/lang/Double parseDouble (Ljava/lang/String;)D \nL23:    dstore_3 \nL24:    aload_2 \nL25:    ldc 'Sofia' \nL27:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL30:    ifeq L214 \nL33:    dload_3 \nL34:    dconst_0 \nL35:    dcmpl \nL36:    iflt L76 \nL39:    dload_3 \nL40:    ldc2_w +500.0 \nL43:    dcmpg \nL44:    ifgt L76 \nL47:    dload_3 \nL48:    ldc2_w +0.05 \nL51:    dmul \nL52:    dstore_3 \nL53:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL56:    ldc '%.2f' \nL58:    iconst_1 \nL59:    anewarray java/lang/Object \nL62:    dup \nL63:    iconst_0 \nL64:    dload_3 \nL65:    invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL68:    aastore \nL69:    invokevirtual Method java/io/PrintStream printf (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; \nL72:    pop \nL73:    goto L602 \n\n        .stack append Object java/util/Scanner Object java/lang/String Double \nL76:    dload_3 \nL77:    ldc2_w +500.0 \nL80:    dcmpl \nL81:    ifle L121 \nL84:    dload_3 \nL85:    ldc2_w +1000.0 \nL88:    dcmpg \nL89:    ifgt L121 \nL92:    dload_3 \nL93:    ldc2_w +0.07 \nL96:    dmul \nL97:    dstore_3 \nL98:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL101:   ldc '%.2f' \nL103:   iconst_1 \nL104:   anewarray java/lang/Object \nL107:   dup \nL108:   iconst_0 \nL109:   dload_3 \nL110:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL113:   aastore \nL114:   invokevirtual Method java/io/PrintStream printf (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; \nL117:   pop \nL118:   goto L602 \n\n        .stack same \nL121:   dload_3 \nL122:   ldc2_w +1000.0 \nL125:   dcmpl \nL126:   ifle L166 \nL129:   dload_3 \nL130:   ldc2_w +10000.0 \nL133:   dcmpg \nL134:   ifgt L166 \nL137:   dload_3 \nL138:   ldc2_w +0.08 \nL141:   dmul \nL142:   dstore_3 \nL143:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL146:   ldc '%.2f' \nL148:   iconst_1 \nL149:   anewarray java/lang/Object \nL152:   dup \nL153:   iconst_0 \nL154:   dload_3 \nL155:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL158:   aastore \nL159:   invokevirtual Method java/io/PrintStream printf (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; \nL162:   pop \nL163:   goto L602 \n\n        .stack same \nL166:   dload_3 \nL167:   ldc2_w +10000.0 \nL170:   dcmpl \nL171:   ifle L203 \nL174:   dload_3 \nL175:   ldc2_w +0.12 \nL178:   dmul \nL179:   dstore_3 \nL180:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL183:   ldc '%.2f' \nL185:   iconst_1 \nL186:   anewarray java/lang/Object \nL189:   dup \nL190:   iconst_0 \nL191:   dload_3 \nL192:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL195:   aastore \nL196:   invokevirtual Method java/io/PrintStream printf (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; \nL199:   pop \nL200:   goto L602 \n\n        .stack same \nL203:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL206:   ldc 'error' \nL208:   invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL211:   goto L602 \n\n        .stack same \nL214:   aload_2 \nL215:   ldc 'Varna' \nL217:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL220:   ifeq L404 \nL223:   dload_3 \nL224:   dconst_0 \nL225:   dcmpl \nL226:   iflt L266 \nL229:   dload_3 \nL230:   ldc2_w +500.0 \nL233:   dcmpg \nL234:   ifgt L266 \nL237:   dload_3 \nL238:   ldc2_w +0.045 \nL241:   dmul \nL242:   dstore_3 \nL243:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL246:   ldc '%.2f' \nL248:   iconst_1 \nL249:   anewarray java/lang/Object \nL252:   dup \nL253:   iconst_0 \nL254:   dload_3 \nL255:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL258:   aastore \nL259:   invokevirtual Method java/io/PrintStream printf (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; \nL262:   pop \nL263:   goto L602 \n\n        .stack same \nL266:   dload_3 \nL267:   ldc2_w +500.0 \nL270:   dcmpl \nL271:   ifle L311 \nL274:   dload_3 \nL275:   ldc2_w +1000.0 \nL278:   dcmpg \nL279:   ifgt L311 \nL282:   dload_3 \nL283:   ldc2_w +0.075 \nL286:   dmul \nL287:   dstore_3 \nL288:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL291:   ldc '%.2f' \nL293:   iconst_1 \nL294:   anewarray java/lang/Object \nL297:   dup \nL298:   iconst_0 \nL299:   dload_3 \nL300:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL303:   aastore \nL304:   invokevirtual Method java/io/PrintStream printf (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; \nL307:   pop \nL308:   goto L602 \n\n        .stack same \nL311:   dload_3 \nL312:   ldc2_w +1000.0 \nL315:   dcmpl \nL316:   ifle L356 \nL319:   dload_3 \nL320:   ldc2_w +10000.0 \nL323:   dcmpg \nL324:   ifgt L356 \nL327:   dload_3 \nL328:   ldc2_w +0.1 \nL331:   dmul \nL332:   dstore_3 \nL333:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL336:   ldc '%.2f' \nL338:   iconst_1 \nL339:   anewarray java/lang/Object \nL342:   dup \nL343:   iconst_0 \nL344:   dload_3 \nL345:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL348:   aastore \nL349:   invokevirtual Method java/io/PrintStream printf (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; \nL352:   pop \nL353:   goto L602 \n\n        .stack same \nL356:   dload_3 \nL357:   ldc2_w +10000.0 \nL360:   dcmpl \nL361:   ifle L393 \nL364:   dload_3 \nL365:   ldc2_w +0.13 \nL368:   dmul \nL369:   dstore_3 \nL370:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL373:   ldc '%.2f' \nL375:   iconst_1 \nL376:   anewarray java/lang/Object \nL379:   dup \nL380:   iconst_0 \nL381:   dload_3 \nL382:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL385:   aastore \nL386:   invokevirtual Method java/io/PrintStream printf (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; \nL389:   pop \nL390:   goto L602 \n\n        .stack same \nL393:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL396:   ldc 'error' \nL398:   invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL401:   goto L602 \n\n        .stack same \nL404:   aload_2 \nL405:   ldc 'Plovdiv' \nL407:   invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL410:   ifeq L594 \nL413:   dload_3 \nL414:   dconst_0 \nL415:   dcmpl \nL416:   iflt L456 \nL419:   dload_3 \nL420:   ldc2_w +500.0 \nL423:   dcmpg \nL424:   ifgt L456 \nL427:   dload_3 \nL428:   ldc2_w +0.055 \nL431:   dmul \nL432:   dstore_3 \nL433:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL436:   ldc '%.2f' \nL438:   iconst_1 \nL439:   anewarray java/lang/Object \nL442:   dup \nL443:   iconst_0 \nL444:   dload_3 \nL445:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL448:   aastore \nL449:   invokevirtual Method java/io/PrintStream printf (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; \nL452:   pop \nL453:   goto L602 \n\n        .stack same \nL456:   dload_3 \nL457:   ldc2_w +500.0 \nL460:   dcmpl \nL461:   ifle L501 \nL464:   dload_3 \nL465:   ldc2_w +1000.0 \nL468:   dcmpg \nL469:   ifgt L501 \nL472:   dload_3 \nL473:   ldc2_w +0.08 \nL476:   dmul \nL477:   dstore_3 \nL478:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL481:   ldc '%.2f' \nL483:   iconst_1 \nL484:   anewarray java/lang/Object \nL487:   dup \nL488:   iconst_0 \nL489:   dload_3 \nL490:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL493:   aastore \nL494:   invokevirtual Method java/io/PrintStream printf (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; \nL497:   pop \nL498:   goto L602 \n\n        .stack same \nL501:   dload_3 \nL502:   ldc2_w +1000.0 \nL505:   dcmpl \nL506:   ifle L546 \nL509:   dload_3 \nL510:   ldc2_w +10000.0 \nL513:   dcmpg \nL514:   ifgt L546 \nL517:   dload_3 \nL518:   ldc2_w +0.12 \nL521:   dmul \nL522:   dstore_3 \nL523:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL526:   ldc '%.2f' \nL528:   iconst_1 \nL529:   anewarray java/lang/Object \nL532:   dup \nL533:   iconst_0 \nL534:   dload_3 \nL535:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL538:   aastore \nL539:   invokevirtual Method java/io/PrintStream printf [u98] \nL542:   pop \nL543:   goto L602 \n\n        .stack same \nL546:   dload_3 \nL547:   ldc2_w +10000.0 \nL550:   dcmpl \nL551:   ifle L583 \nL554:   dload_3 \nL555:   ldc2_w +0.145 \nL558:   dmul \nL559:   dstore_3 \nL560:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL563:   ldc '%.2f' \nL565:   iconst_1 \nL566:   anewarray java/lang/Object \nL569:   dup \nL570:   iconst_0 \nL571:   dload_3 \nL572:   invokestatic Method java/lang/Double valueOf (D)Ljava/lang/Double; \nL575:   aastore \nL576:   invokevirtual Method java/io/PrintStream printf [u98] \nL579:   pop \nL580:   goto L602 \n\n        .stack same \nL583:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL586:   ldc 'error' \nL588:   invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL591:   goto L602 \n\n        .stack same \nL594:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL597:   ldc 'error' \nL599:   invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \n\n        .stack same \nL602:   aload_1 \nL603:   invokevirtual Method java/util/Scanner close ()V \nL606:   return \nL607:   \n        .linenumbertable \n            L0 5 \n            L11 6 \n            L16 7 \n            L24 8 \n            L33 9 \n            L47 10 \n            L53 11 \n            L76 12 \n            L92 13 \n            L98 14 \n            L121 15 \n            L137 16 \n            L143 17 \n            L166 18 \n            L174 19 \n            L180 20 \n            L203 22 \n            L214 24 \n            L223 25 \n            L237 26 \n            L243 27 \n            L266 28 \n            L282 29 \n            L288 30 \n            L311 31 \n            L327 32 \n            L333 33 \n            L356 34 \n            L364 35 \n            L370 36 \n            L393 38 \n            L404 40 \n            L413 41 \n            L427 42 \n            L433 43 \n            L456 44 \n            L472 45 \n            L478 46 \n            L501 47 \n            L517 48 \n            L523 49 \n            L546 50 \n            L554 51 \n            L560 52 \n            L583 54 \n            L594 57 \n            L602 59 \n            L606 60 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'TradeComissions.java' \n.const [u98] = Utf8 (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 21:33:35 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.util.SystemInUtil;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class TradeComissions_ESTest extends TradeComissions_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      SystemInUtil.addInputLine(\"Wg.+ES^5?\");\n      SystemInUtil.addInputLine(\"8\");\n      String[] stringArray0 = new String[0];\n      TradeComissions.main(stringArray0);\n      assertEquals(0, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      TradeComissions tradeComissions0 = new TradeComissions();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 21:33:35 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class TradeComissions_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"TradeComissions\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n    org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpvy_82d7q\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(TradeComissions_ESTest_scaffolding.class.getClassLoader() ,\n      \"TradeComissions\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(TradeComissions_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"TradeComissions\"\n    );\n  }\n}\n", "class_idx": 277}
{"class_name": "While", "java_source": "class While {\n  public static void main(String[] argv) {\n    System.out.println(new WhileClass().run());\n  }\n}\n\nclass WhileClass {\n\n  int sum;\n  int i;\n\n  public int run() {\n\n    sum = 0;\n    i = 1;\n    while (i < 11) {\n      sum = sum + i;\n      System.out.println(sum);\n      i = i + 1;\n    }\n    return 0;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class super While \n.super java/lang/Object \n\n.method <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 1 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 3 locals 1 \nL0:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL3:     new WhileClass \nL6:     dup \nL7:     invokespecial Method WhileClass <init> ()V \nL10:    invokevirtual Method WhileClass run ()I \nL13:    invokevirtual Method java/io/PrintStream println (I)V \nL16:    return \nL17:    \n        .linenumbertable \n            L0 3 \n            L16 4 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'While.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 03:20:45 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class While_ESTest extends While_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String[] stringArray0 = new String[11];\n      // Undeclared exception!\n      try { \n        While.main(stringArray0);\n        fail(\"Expecting exception: NoClassDefFoundError\");\n      \n      } catch(NoClassDefFoundError e) {\n         //\n         // WhileClass\n         //\n         verifyException(\"While\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      While while0 = new While();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 03:20:45 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class While_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"While\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmplmdchnwu\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(While_ESTest_scaffolding.class.getClassLoader() ,\n      \"While\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(While_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"While\"\n    );\n  }\n}\n", "class_idx": 278}
{"class_name": "UpdateWebACLResult", "java_source": "/*\n * Copyright 2010-2016 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n\nimport java.io.Serializable;\n\n/** */\npublic class UpdateWebACLResult implements Serializable, Cloneable {\n\n  /**\n   * The <code>ChangeToken</code> that you used to submit the <code>UpdateWebACL</code> request. You\n   * can also use this value to query the status of the request. For more information, see\n   * <a>GetChangeTokenStatus</a>.\n   */\n  private String changeToken;\n\n  /**\n   * The <code>ChangeToken</code> that you used to submit the <code>UpdateWebACL</code> request. You\n   * can also use this value to query the status of the request. For more information, see\n   * <a>GetChangeTokenStatus</a>.\n   *\n   * @param changeToken The <code>ChangeToken</code> that you used to submit the <code>UpdateWebACL\n   *     </code> request. You can also use this value to query the status of the request. For more\n   *     information, see <a>GetChangeTokenStatus</a>.\n   */\n  public void setChangeToken(String changeToken) {\n    this.changeToken = changeToken;\n  }\n\n  /**\n   * The <code>ChangeToken</code> that you used to submit the <code>UpdateWebACL</code> request. You\n   * can also use this value to query the status of the request. For more information, see\n   * <a>GetChangeTokenStatus</a>.\n   *\n   * @return The <code>ChangeToken</code> that you used to submit the <code>UpdateWebACL</code>\n   *     request. You can also use this value to query the status of the request. For more\n   *     information, see <a>GetChangeTokenStatus</a>.\n   */\n  public String getChangeToken() {\n    return this.changeToken;\n  }\n\n  /**\n   * The <code>ChangeToken</code> that you used to submit the <code>UpdateWebACL</code> request. You\n   * can also use this value to query the status of the request. For more information, see\n   * <a>GetChangeTokenStatus</a>.\n   *\n   * @param changeToken The <code>ChangeToken</code> that you used to submit the <code>UpdateWebACL\n   *     </code> request. You can also use this value to query the status of the request. For more\n   *     information, see <a>GetChangeTokenStatus</a>.\n   * @return Returns a reference to this object so that method calls can be chained together.\n   */\n  public UpdateWebACLResult withChangeToken(String changeToken) {\n    setChangeToken(changeToken);\n    return this;\n  }\n\n  /**\n   * Returns a string representation of this object; useful for testing and debugging.\n   *\n   * @return A string representation of this object.\n   * @see java.lang.Object#toString()\n   */\n  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"{\");\n    if (getChangeToken() != null) sb.append(\"ChangeToken: \" + getChangeToken());\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (obj == null) return false;\n\n    if (obj instanceof UpdateWebACLResult == false) return false;\n    UpdateWebACLResult other = (UpdateWebACLResult) obj;\n    if (other.getChangeToken() == null ^ this.getChangeToken() == null) return false;\n    if (other.getChangeToken() != null\n        && other.getChangeToken().equals(this.getChangeToken()) == false) return false;\n    return true;\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int hashCode = 1;\n\n    hashCode = prime * hashCode + ((getChangeToken() == null) ? 0 : getChangeToken().hashCode());\n    return hashCode;\n  }\n\n  @Override\n  public UpdateWebACLResult clone() {\n    try {\n      return (UpdateWebACLResult) super.clone();\n    } catch (CloneNotSupportedException e) {\n      throw new IllegalStateException(\n          \"Got a CloneNotSupportedException from Object.clone() \" + \"even though we're Cloneable!\",\n          e);\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super UpdateWebACLResult \n.super java/lang/Object \n.implements java/io/Serializable \n.implements java/lang/Cloneable \n.field private changeToken Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setChangeToken : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field UpdateWebACLResult changeToken Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 52 \n            L5 53 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getChangeToken : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field UpdateWebACLResult changeToken Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 70 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public withChangeToken : (Ljava/lang/String;)LUpdateWebACLResult; \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokevirtual Method UpdateWebACLResult setChangeToken (Ljava/lang/String;)V \nL5:     aload_0 \nL6:     areturn \nL7:     \n        .linenumbertable \n            L0 91 \n            L5 92 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 3 locals 2 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     astore_1 \nL8:     aload_1 \nL9:     ldc '{' \nL11:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL14:    pop \nL15:    aload_0 \nL16:    invokevirtual Method UpdateWebACLResult getChangeToken ()Ljava/lang/String; \nL19:    ifnull L49 \nL22:    aload_1 \nL23:    new java/lang/StringBuilder \nL26:    dup \nL27:    invokespecial Method java/lang/StringBuilder <init> ()V \nL30:    ldc 'ChangeToken: ' \nL32:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL35:    aload_0 \nL36:    invokevirtual Method UpdateWebACLResult getChangeToken ()Ljava/lang/String; \nL39:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL42:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL45:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL48:    pop \n\n        .stack append Object java/lang/StringBuilder \nL49:    aload_1 \nL50:    ldc '}' \nL52:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL55:    pop \nL56:    aload_1 \nL57:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL60:    areturn \nL61:    \n        .linenumbertable \n            L0 105 \n            L8 106 \n            L15 107 \n            L22 108 \n            L49 109 \n            L56 110 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public equals : (Ljava/lang/Object;)Z \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     if_acmpne L7 \nL5:     iconst_1 \nL6:     ireturn \n\n        .stack same \nL7:     aload_1 \nL8:     ifnonnull L13 \nL11:    iconst_0 \nL12:    ireturn \n\n        .stack same \nL13:    aload_1 \nL14:    instanceof UpdateWebACLResult \nL17:    ifne L22 \nL20:    iconst_0 \nL21:    ireturn \n\n        .stack same \nL22:    aload_1 \nL23:    checkcast UpdateWebACLResult \nL26:    astore_2 \nL27:    aload_2 \nL28:    invokevirtual Method UpdateWebACLResult getChangeToken ()Ljava/lang/String; \nL31:    ifnonnull L38 \nL34:    iconst_1 \nL35:    goto L39 \n\n        .stack append Object UpdateWebACLResult \nL38:    iconst_0 \n\n        .stack stack_1 Integer \nL39:    aload_0 \nL40:    invokevirtual Method UpdateWebACLResult getChangeToken ()Ljava/lang/String; \nL43:    ifnonnull L50 \nL46:    iconst_1 \nL47:    goto L51 \n\n        .stack stack_1 Integer \nL50:    iconst_0 \n\n        .stack full \n            locals Object UpdateWebACLResult Object java/lang/Object Object UpdateWebACLResult \n            stack Integer Integer \n        .end stack \nL51:    ixor \nL52:    ifeq L57 \nL55:    iconst_0 \nL56:    ireturn \n\n        .stack same \nL57:    aload_2 \nL58:    invokevirtual Method UpdateWebACLResult getChangeToken ()Ljava/lang/String; \nL61:    ifnull L80 \nL64:    aload_2 \nL65:    invokevirtual Method UpdateWebACLResult getChangeToken ()Ljava/lang/String; \nL68:    aload_0 \nL69:    invokevirtual Method UpdateWebACLResult getChangeToken ()Ljava/lang/String; \nL72:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL75:    ifne L80 \nL78:    iconst_0 \nL79:    ireturn \n\n        .stack same \nL80:    iconst_1 \nL81:    ireturn \nL82:    \n        .linenumbertable \n            L0 115 \n            L5 116 \n            L7 117 \n            L11 118 \n            L13 120 \n            L20 121 \n            L22 122 \n            L27 123 \n            L55 124 \n            L57 125 \n            L65 126 \n            L78 127 \n            L80 128 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public hashCode : ()I \n    .code stack 2 locals 3 \nL0:     iconst_1 \nL1:     istore_2 \nL2:     bipush 31 \nL4:     iload_2 \nL5:     imul \nL6:     aload_0 \nL7:     invokevirtual Method UpdateWebACLResult getChangeToken ()Ljava/lang/String; \nL10:    ifnonnull L17 \nL13:    iconst_0 \nL14:    goto L24 \n\n        .stack full \n            locals Object UpdateWebACLResult Top Integer \n            stack Integer \n        .end stack \nL17:    aload_0 \nL18:    invokevirtual Method UpdateWebACLResult getChangeToken ()Ljava/lang/String; \nL21:    invokevirtual Method java/lang/String hashCode ()I \n\n        .stack full \n            locals Object UpdateWebACLResult Top Integer \n            stack Integer Integer \n        .end stack \nL24:    iadd \nL25:    istore_2 \nL26:    iload_2 \nL27:    ireturn \nL28:    \n        .linenumbertable \n            L0 134 \n            L2 136 \n            L7 138 \n            L26 139 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public clone : ()LUpdateWebACLResult; \n    .code stack 4 locals 2 \n        .catch java/lang/CloneNotSupportedException from L0 to L7 using L8 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object clone ()Ljava/lang/Object; \nL4:     checkcast UpdateWebACLResult \nL7:     areturn \n\n        .stack stack_1 Object java/lang/CloneNotSupportedException \nL8:     astore_1 \nL9:     new java/lang/IllegalStateException \nL12:    dup \nL13:    ldc \"Got a CloneNotSupportedException from Object.clone() even though we're Cloneable!\" \nL15:    aload_1 \nL16:    invokespecial Method java/lang/IllegalStateException <init> (Ljava/lang/String;Ljava/lang/Throwable;)V \nL19:    athrow \nL20:    \n        .linenumbertable \n            L0 145 \n            L8 146 \n            L9 147 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public bridge synthetic clone : ()Ljava/lang/Object; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokevirtual Method UpdateWebACLResult clone ()LUpdateWebACLResult; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 24 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/CloneNotSupportedException \n.end method \n.sourcefile 'UpdateWebACLResult.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 06:34:56 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class UpdateWebACLResult_ESTest extends UpdateWebACLResult_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      UpdateWebACLResult updateWebACLResult0 = new UpdateWebACLResult();\n      UpdateWebACLResult updateWebACLResult1 = updateWebACLResult0.withChangeToken(\"-:_t-ScnN\");\n      String string0 = updateWebACLResult1.getChangeToken();\n      assertEquals(\"-:_t-ScnN\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      UpdateWebACLResult updateWebACLResult0 = new UpdateWebACLResult();\n      UpdateWebACLResult updateWebACLResult1 = updateWebACLResult0.withChangeToken(\"\");\n      String string0 = updateWebACLResult1.getChangeToken();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      UpdateWebACLResult updateWebACLResult0 = new UpdateWebACLResult();\n      String string0 = updateWebACLResult0.getChangeToken();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      UpdateWebACLResult updateWebACLResult0 = new UpdateWebACLResult();\n      updateWebACLResult0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      UpdateWebACLResult updateWebACLResult0 = new UpdateWebACLResult();\n      updateWebACLResult0.setChangeToken(\"3&ke;g_$jSc'3\");\n      updateWebACLResult0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      UpdateWebACLResult updateWebACLResult0 = new UpdateWebACLResult();\n      updateWebACLResult0.setChangeToken(\"3&ke;g_$jSc'3\");\n      UpdateWebACLResult updateWebACLResult1 = updateWebACLResult0.clone();\n      assertTrue(updateWebACLResult1.equals((Object)updateWebACLResult0));\n      \n      updateWebACLResult0.withChangeToken(\"N66YeoAP`+S\");\n      boolean boolean0 = updateWebACLResult1.equals(updateWebACLResult0);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      UpdateWebACLResult updateWebACLResult0 = new UpdateWebACLResult();\n      updateWebACLResult0.setChangeToken(\"3&ke;g_$jSc'3\");\n      UpdateWebACLResult updateWebACLResult1 = updateWebACLResult0.clone();\n      boolean boolean0 = updateWebACLResult1.equals(updateWebACLResult0);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      UpdateWebACLResult updateWebACLResult0 = new UpdateWebACLResult();\n      UpdateWebACLResult updateWebACLResult1 = updateWebACLResult0.clone();\n      boolean boolean0 = updateWebACLResult0.equals(updateWebACLResult1);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      UpdateWebACLResult updateWebACLResult0 = new UpdateWebACLResult();\n      Object object0 = new Object();\n      boolean boolean0 = updateWebACLResult0.equals(object0);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      UpdateWebACLResult updateWebACLResult0 = new UpdateWebACLResult();\n      boolean boolean0 = updateWebACLResult0.equals((Object) null);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      UpdateWebACLResult updateWebACLResult0 = new UpdateWebACLResult();\n      boolean boolean0 = updateWebACLResult0.equals(updateWebACLResult0);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      UpdateWebACLResult updateWebACLResult0 = new UpdateWebACLResult();\n      updateWebACLResult0.setChangeToken(\"3&ke;g_$jSc'3\");\n      String string0 = updateWebACLResult0.toString();\n      assertEquals(\"{ChangeToken: 3&ke;g_$jSc'3}\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      UpdateWebACLResult updateWebACLResult0 = new UpdateWebACLResult();\n      String string0 = updateWebACLResult0.toString();\n      assertEquals(\"{}\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      UpdateWebACLResult updateWebACLResult0 = new UpdateWebACLResult();\n      UpdateWebACLResult updateWebACLResult1 = updateWebACLResult0.clone();\n      assertTrue(updateWebACLResult1.equals((Object)updateWebACLResult0));\n      \n      updateWebACLResult1.setChangeToken(\"3&ke;g_$jSc'3\");\n      boolean boolean0 = updateWebACLResult0.equals(updateWebACLResult1);\n      assertFalse(updateWebACLResult1.equals((Object)updateWebACLResult0));\n      assertFalse(boolean0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 06:34:56 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class UpdateWebACLResult_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"UpdateWebACLResult\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpia4akbxr\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(UpdateWebACLResult_ESTest_scaffolding.class.getClassLoader() ,\n      \"UpdateWebACLResult\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(UpdateWebACLResult_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"UpdateWebACLResult\"\n    );\n  }\n}\n", "class_idx": 279}
{"class_name": "HostileRegion", "java_source": "enum Region {\n  FOREST,\n  DESERT,\n  BEACH,\n  ROADS,\n  MOUNTAINS,\n  CAVE\n};\n\npublic class HostileRegion {\n  Region regionType;\n}\n", "jasm_code": ".version 52 0 \n.class public super HostileRegion \n.super java/lang/Object \n.field regionType LRegion; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 5 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'HostileRegion.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 17:53:47 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class HostileRegion_ESTest extends HostileRegion_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      HostileRegion hostileRegion0 = new HostileRegion();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 17:53:47 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class HostileRegion_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"HostileRegion\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpnpnz390m\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(HostileRegion_ESTest_scaffolding.class.getClassLoader() ,\n      \"HostileRegion\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(HostileRegion_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"HostileRegion\"\n    );\n  }\n}\n", "class_idx": 280}
{"class_name": "IllegalConfigException", "java_source": "/**\n * Copyright by Michael Weiss, weiss.michael@gmx.ch\n *\n * <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @author Michael Weiss\n */\npublic class IllegalConfigException extends Exception {\n\n  private static final long serialVersionUID = 796760183683128928L;\n\n  public IllegalConfigException() {\n    super();\n  }\n\n  public IllegalConfigException(\n      String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {\n    super(message, cause, enableSuppression, writableStackTrace);\n  }\n\n  public IllegalConfigException(String message, Throwable cause) {\n    super(message, cause);\n  }\n\n  public IllegalConfigException(String message) {\n    super(message);\n  }\n\n  public IllegalConfigException(Throwable cause) {\n    super(cause);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super IllegalConfigException \n.super java/lang/Exception \n.field private static final serialVersionUID J = 796760183683128928L \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Exception <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 17 \n            L4 19 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/Throwable;ZZ)V \n    .code stack 5 locals 5 \nL0:     aload_0 \nL1:     aload_1 \nL2:     aload_2 \nL3:     iload_3 \nL4:     iload 4 \nL6:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;Ljava/lang/Throwable;ZZ)V \nL9:     return \nL10:    \n        .linenumbertable \n            L0 23 \n            L9 25 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/Throwable;)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     aload_2 \nL3:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;Ljava/lang/Throwable;)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 28 \n            L6 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception <init> (Ljava/lang/String;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 33 \n            L5 35 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/Throwable;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     invokespecial Method java/lang/Exception <init> (Ljava/lang/Throwable;)V \nL5:     return \nL6:     \n        .linenumbertable \n            L0 38 \n            L5 40 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'IllegalConfigException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 14:06:33 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.lang.MockThrowable;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class IllegalConfigException_ESTest extends IllegalConfigException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      IllegalConfigException illegalConfigException0 = new IllegalConfigException(\"IllegalConfigException\");\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      IllegalConfigException illegalConfigException0 = new IllegalConfigException();\n      MockThrowable mockThrowable0 = new MockThrowable(\"\", illegalConfigException0);\n      IllegalConfigException illegalConfigException1 = new IllegalConfigException(mockThrowable0);\n      assertFalse(illegalConfigException1.equals((Object)illegalConfigException0));\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      IllegalConfigException illegalConfigException0 = new IllegalConfigException();\n      MockThrowable mockThrowable0 = new MockThrowable(\"gih72'8`y0PoW!*uQ9\", illegalConfigException0);\n      IllegalConfigException illegalConfigException1 = new IllegalConfigException(\"gih72'8`y0PoW!*uQ9\", mockThrowable0, false, true);\n      assertFalse(illegalConfigException1.equals((Object)illegalConfigException0));\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      IllegalConfigException illegalConfigException0 = new IllegalConfigException();\n      IllegalConfigException illegalConfigException1 = new IllegalConfigException(\"gih72'8`y0PoW!*uQ9\", illegalConfigException0);\n      assertFalse(illegalConfigException1.equals((Object)illegalConfigException0));\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 14:06:33 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class IllegalConfigException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"IllegalConfigException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpnzu44rx7\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IllegalConfigException_ESTest_scaffolding.class.getClassLoader() ,\n      \"IllegalConfigException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IllegalConfigException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"IllegalConfigException\"\n    );\n  }\n}\n", "class_idx": 281}
{"class_name": "Solution", "java_source": "/// *\n// * memory limit exceeded.\n// */\n// #include <string.h>\n// #include <stdlib.h>\n// #include <stdio.h>\n//\n// #define STEP 8\n//\n// static char **res;\n// int\tmaxp, p;\n//\n// static int compar(const void *x, const void *y)\n// {\n//\treturn(strcmp(*(char **)x, *(char **)y));\n// }\n//\n// static int comlen(const char *s1, const char *s2)\n// {\n//\tint\ti = 0;\n//\twhile (*s1 && *s1++ == *s2++)\n//\t\ti++;\n//\treturn(i);\n// }\n//\n// static void add_ans(const char *s)\n// {\n//\tif (!res) {\n//\t\tmaxp = STEP;\n//\t\tp = 0;\n//\t\tres = malloc(maxp * sizeof(char *));\n//\t}\n//\tif (p >= maxp) {\n//\t\tmaxp += STEP;\n//\t\tres = realloc(res, maxp * sizeof(char *));\n//\t}\n//\tres[p++] = strndup(s, 10);\n// }\n//\n// char **findRepeatedDnaSequences(char *s, int *returnSize)\n// {\n//\tint\tlen = strlen(s), i, clen;\n//\tchar\t**post;\n//\n//\tif (len < 20) {\n//\t\t*returnSize = 0;\n//\t\treturn(0);\n//\t}\n//\n//\tres = 0;\n//\tpost = malloc(len * sizeof(char *));\n//\tfor (i = 0; i < len; i++)\n//\t\tpost[i] = &s[i];\n//\tqsort(post, len, sizeof(char *), compar);\n//\n//\tfor (i = 1; i < len; i++) {\n//\t\tclen = comlen(post[i - 1], post[i]);\n//\t\tif (clen < 10)\n//\t\t\tcontinue;\n//\t\tadd_ans(post[i]);\n//\t}\n//\n//\tfree(post);\n//\tif (!res) {\n//\t\t*returnSize = 0;\n//\t\treturn(res);\n//\t}\n//\t*returnSize = p;\n//\treturn(res);\n// }\n//\n// int main(int argc, char **argv)\n// {\n//\tchar\t**res;\n//\tint\tn;\n//\tres = findRepeatedDnaSequences(argv[1], &n);\n//\twhile (n-- > 0)\n//\t\tprintf(\"%s\\n\", res[n]);\n//\treturn(0);\n// }\n\nimport java.util.*;\n\nclass Solution {\n  public List<String> findRepeatedDnaSequences(String s) {\n    List<String> result = new LinkedList<>();\n    if (s.length() < 10) return (result);\n\n    Set<Integer> tmp = new HashSet<>();\n    Set<Integer> added = new HashSet<>();\n    int hash = 0;\n    for (int i = 0; i < s.length(); i++) {\n      switch (s.charAt(i)) {\n        case 'A':\n          hash = (hash << 2) + 0x00;\n          break;\n        case 'T':\n          hash = (hash << 2) + 0x01;\n          break;\n        case 'C':\n          hash = (hash << 2) + 0x02;\n          break;\n        case 'G':\n          hash = (hash << 2) + 0x03;\n          break;\n      }\n      if (i < 9) continue;\n      hash &= (1 << 20) - 1;\n      if (tmp.contains(hash) && !added.contains(hash)) {\n        added.add(hash);\n        result.add(s.substring(i - 9, i + 1));\n      } else {\n        tmp.add(hash);\n      }\n    }\n    return (result);\n  }\n\n  public static void main(String[] args) {\n    List<String> res = new Solution().findRepeatedDnaSequences(args[0]);\n    for (int i = 0; i < res.size(); i++) System.out.println(res.get(i));\n  }\n}\n", "jasm_code": ".version 52 0 \n.class super Solution \n.super java/lang/Object \n\n.method <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 84 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public findRepeatedDnaSequences : (Ljava/lang/String;)Ljava/util/List; \n    .code stack 5 locals 7 \nL0:     new java/util/LinkedList \nL3:     dup \nL4:     invokespecial Method java/util/LinkedList <init> ()V \nL7:     astore_2 \nL8:     aload_1 \nL9:     invokevirtual Method java/lang/String length ()I \nL12:    bipush 10 \nL14:    if_icmpge L19 \nL17:    aload_2 \nL18:    areturn \n\n        .stack append Object java/util/List \nL19:    new java/util/HashSet \nL22:    dup \nL23:    invokespecial Method java/util/HashSet <init> ()V \nL26:    astore_3 \nL27:    new java/util/HashSet \nL30:    dup \nL31:    invokespecial Method java/util/HashSet <init> ()V \nL34:    astore 4 \nL36:    iconst_0 \nL37:    istore 5 \nL39:    iconst_0 \nL40:    istore 6 \n\n        .stack full \n            locals Object Solution Object java/lang/String Object java/util/List Object java/util/Set Object java/util/Set Integer Integer \n            stack \n        .end stack \nL42:    iload 6 \nL44:    aload_1 \nL45:    invokevirtual Method java/lang/String length ()I \nL48:    if_icmpge L241 \nL51:    aload_1 \nL52:    iload 6 \nL54:    invokevirtual Method java/lang/String charAt (I)C \nL57:    lookupswitch \n            65 : L100 \n            67 : L122 \n            71 : L133 \n            84 : L111 \n            default : L141 \n\n\n        .stack same \nL100:   iload 5 \nL102:   iconst_2 \nL103:   ishl \nL104:   iconst_0 \nL105:   iadd \nL106:   istore 5 \nL108:   goto L141 \n\n        .stack same \nL111:   iload 5 \nL113:   iconst_2 \nL114:   ishl \nL115:   iconst_1 \nL116:   iadd \nL117:   istore 5 \nL119:   goto L141 \n\n        .stack same \nL122:   iload 5 \nL124:   iconst_2 \nL125:   ishl \nL126:   iconst_2 \nL127:   iadd \nL128:   istore 5 \nL130:   goto L141 \n\n        .stack same \nL133:   iload 5 \nL135:   iconst_2 \nL136:   ishl \nL137:   iconst_3 \nL138:   iadd \nL139:   istore 5 \n\n        .stack same \nL141:   iload 6 \nL143:   bipush 9 \nL145:   if_icmpge L151 \nL148:   goto L235 \n\n        .stack same \nL151:   iload 5 \nL153:   ldc 1048575 \nL155:   iand \nL156:   istore 5 \nL158:   aload_3 \nL159:   iload 5 \nL161:   invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL164:   invokeinterface InterfaceMethod java/util/Set contains (Ljava/lang/Object;)Z 2 \nL169:   ifeq L223 \nL172:   aload 4 \nL174:   iload 5 \nL176:   invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL179:   invokeinterface InterfaceMethod java/util/Set contains (Ljava/lang/Object;)Z 2 \nL184:   ifne L223 \nL187:   aload 4 \nL189:   iload 5 \nL191:   invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL194:   invokeinterface InterfaceMethod java/util/Set add (Ljava/lang/Object;)Z 2 \nL199:   pop \nL200:   aload_2 \nL201:   aload_1 \nL202:   iload 6 \nL204:   bipush 9 \nL206:   isub \nL207:   iload 6 \nL209:   iconst_1 \nL210:   iadd \nL211:   invokevirtual Method java/lang/String substring (II)Ljava/lang/String; \nL214:   invokeinterface InterfaceMethod java/util/List add (Ljava/lang/Object;)Z 2 \nL219:   pop \nL220:   goto L235 \n\n        .stack same_extended \nL223:   aload_3 \nL224:   iload 5 \nL226:   invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL229:   invokeinterface InterfaceMethod java/util/Set add (Ljava/lang/Object;)Z 2 \nL234:   pop \n\n        .stack same \nL235:   iinc 6 1 \nL238:   goto L42 \n\n        .stack chop 1 \nL241:   aload_2 \nL242:   areturn \nL243:   \n        .linenumbertable \n            L0 86 \n            L8 87 \n            L17 88 \n            L19 90 \n            L27 91 \n            L36 92 \n            L39 93 \n            L51 94 \n            L100 95 \n            L111 96 \n            L122 97 \n            L133 98 \n            L141 100 \n            L148 101 \n            L151 102 \n            L158 103 \n            L187 104 \n            L200 105 \n            L223 107 \n            L235 93 \n            L241 110 \n        .end linenumbertable \n    .end code \n    .signature (Ljava/lang/String;)Ljava/util/List<Ljava/lang/String;>; \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 3 locals 3 \nL0:     new Solution \nL3:     dup \nL4:     invokespecial Method Solution <init> ()V \nL7:     aload_0 \nL8:     iconst_0 \nL9:     aaload \nL10:    invokevirtual Method Solution findRepeatedDnaSequences (Ljava/lang/String;)Ljava/util/List; \nL13:    astore_1 \nL14:    iconst_0 \nL15:    istore_2 \n\n        .stack append Object java/util/List Integer \nL16:    iload_2 \nL17:    aload_1 \nL18:    invokeinterface InterfaceMethod java/util/List size ()I 1 \nL23:    if_icmpge L48 \nL26:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL29:    aload_1 \nL30:    iload_2 \nL31:    invokeinterface InterfaceMethod java/util/List get (I)Ljava/lang/Object; 2 \nL36:    checkcast java/lang/String \nL39:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL42:    iinc 2 1 \nL45:    goto L16 \n\n        .stack chop 1 \nL48:    return \nL49:    \n        .linenumbertable \n            L0 113 \n            L14 114 \n            L26 115 \n            L42 114 \n            L48 116 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Solution.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 07:11:43 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.util.List;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Solution_ESTest extends Solution_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String[] stringArray0 = new String[7];\n      stringArray0[0] = \".BFx<0N(x~c?vG\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \"\";\n      stringArray0[5] = \"p/}{Avw(9\\\">B\";\n      stringArray0[6] = \"NCy?z<Lt/8R$tr3V\";\n      Solution.main(stringArray0);\n      Solution solution0 = new Solution();\n      Solution.main(stringArray0);\n      String[] stringArray1 = new String[5];\n      stringArray1[0] = \".BFx<0N(x~c?vG\";\n      stringArray1[1] = \".BFx<0N(x~c?vG\";\n      stringArray1[2] = \"@YlG.qk\";\n      stringArray1[3] = \"@YlG.qk\";\n      stringArray1[4] = \".BFx<0N(x~c?vG\";\n      Solution.main(stringArray1);\n      solution0.findRepeatedDnaSequences(\"@YlG.qk\");\n      solution0.findRepeatedDnaSequences(\"\");\n      String[] stringArray2 = new String[4];\n      stringArray2[0] = \"p/}{Avw(9\\\">B\";\n      stringArray2[1] = \"@YlG.qk\";\n      stringArray2[2] = \"\";\n      stringArray2[3] = \"p/}{Avw(9\\\">B\";\n      Solution.main(stringArray2);\n      assertEquals(4, stringArray2.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      String[] stringArray0 = new String[5];\n      String string0 = \"FKU4+%|0 o\";\n      stringArray0[0] = \"FKU4+%|0 o\";\n      String string1 = \"6\\\\5jHO(p~ta^~f~\";\n      stringArray0[1] = \"6\\u0005jHO(p~ta^~f~\";\n      String string2 = \"\";\n      stringArray0[2] = \"\";\n      String string3 = \"\";\n      stringArray0[3] = \"\";\n      String string4 = \"\";\n      stringArray0[4] = \"\";\n      Solution.main(stringArray0);\n      Solution solution0 = new Solution();\n      Solution.main(stringArray0);\n      Solution.main(stringArray0);\n      Solution.main(stringArray0);\n      Solution.main(stringArray0);\n      Solution.main(stringArray0);\n      Solution.main(stringArray0);\n      String string5 = null;\n      // Undeclared exception!\n      try { \n        solution0.findRepeatedDnaSequences((String) null);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"Solution\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String[] stringArray0 = new String[2];\n      stringArray0[0] = \"\";\n      Solution.main(stringArray0);\n      solution0.findRepeatedDnaSequences(\"\");\n      solution0.findRepeatedDnaSequences(\"\");\n      solution0.findRepeatedDnaSequences(\"\");\n      solution0.findRepeatedDnaSequences(\"\");\n      stringArray0[1] = \"}*Oe1~[\\\"DvG_,T\";\n      Solution.main(stringArray0);\n      solution0.findRepeatedDnaSequences(\"\");\n      solution0.findRepeatedDnaSequences(\"}*Oe1~[\\\"DvG_,T\");\n      Solution.main(stringArray0);\n      Solution.main(stringArray0);\n      Solution.main(stringArray0);\n      Solution.main(stringArray0);\n      Solution.main(stringArray0);\n      assertEquals(2, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String[] stringArray0 = new String[6];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"ejAS=>NDqNk\";\n      stringArray0[2] = \"+[#z\";\n      stringArray0[3] = \"=|@/T~\";\n      stringArray0[4] = \"Y,;^~GcL6R*0\u007f \";\n      stringArray0[5] = \"\";\n      Solution.main(stringArray0);\n      // Undeclared exception!\n      try { \n        solution0.findRepeatedDnaSequences((String) null);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"Solution\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Solution solution0 = new Solution();\n      solution0.findRepeatedDnaSequences(\"\");\n      List<String> list0 = solution0.findRepeatedDnaSequences(\"\");\n      solution0.findRepeatedDnaSequences(\"\");\n      List<String> list1 = solution0.findRepeatedDnaSequences(\"\");\n      assertTrue(list1.equals((Object)list0));\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String[] stringArray0 = new String[2];\n      solution0.findRepeatedDnaSequences(\":y&#2sin/WZGIY\");\n      stringArray0[0] = \":y&#2sin/WZGIY\";\n      stringArray0[1] = \" {z(!c!BW!QfWq1/]\";\n      Solution.main(stringArray0);\n      Solution.main(stringArray0);\n      solution0.findRepeatedDnaSequences(\"\");\n      String[] stringArray1 = new String[0];\n      // Undeclared exception!\n      try { \n        Solution.main(stringArray1);\n        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n      \n      } catch(ArrayIndexOutOfBoundsException e) {\n         //\n         // 0\n         //\n         verifyException(\"Solution\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      Solution solution0 = new Solution();\n      solution0.findRepeatedDnaSequences(\"xh\");\n      solution0.findRepeatedDnaSequences(\"\");\n      List<String> list0 = solution0.findRepeatedDnaSequences(\"\");\n      String[] stringArray0 = new String[1];\n      stringArray0[0] = \"\";\n      String[] stringArray1 = new String[7];\n      stringArray1[0] = \"\";\n      stringArray1[1] = \"\";\n      stringArray1[2] = \"xh\";\n      stringArray1[3] = \"\";\n      stringArray1[4] = \"xh\";\n      stringArray1[5] = \"xh\";\n      stringArray1[6] = \"\";\n      Solution.main(stringArray1);\n      Solution.main(stringArray0);\n      String[] stringArray2 = new String[6];\n      stringArray2[0] = \"\";\n      stringArray2[1] = \"\";\n      stringArray2[2] = \"\";\n      stringArray2[3] = \"\";\n      stringArray2[4] = \"9\";\n      stringArray2[5] = \"\";\n      Solution.main(stringArray2);\n      List<String> list1 = solution0.findRepeatedDnaSequences(\"xh\");\n      assertTrue(list1.equals((Object)list0));\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      String[] stringArray0 = null;\n      // Undeclared exception!\n      try { \n        Solution.main((String[]) null);\n        fail(\"Expecting exception: NullPointerException\");\n      \n      } catch(NullPointerException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"Solution\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String[] stringArray0 = new String[8];\n      stringArray0[0] = \">lb\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"Solution\";\n      stringArray0[4] = \"t[@{F86ci3]~G}+a}\";\n      stringArray0[5] = \"T;UZuJwiX/=-@\";\n      stringArray0[6] = \"\";\n      stringArray0[7] = \"BUq\";\n      Solution.main(stringArray0);\n      String[] stringArray1 = new String[6];\n      stringArray1[0] = \"\";\n      stringArray1[1] = \"\";\n      stringArray1[2] = \"\";\n      stringArray1[3] = \"\";\n      stringArray1[4] = \"B<<sx9H+\";\n      stringArray1[5] = \"\";\n      Solution.main(stringArray1);\n      Solution.main(stringArray1);\n      List<String> list0 = solution0.findRepeatedDnaSequences(\"QpdV'T>@n\");\n      assertEquals(0, list0.size());\n  }\n\n  @Test(timeout = 4000)\n  public void test9()  throws Throwable  {\n      Solution solution0 = new Solution();\n      String[] stringArray0 = new String[4];\n      stringArray0[0] = \"8sa#[?mT,iIV.NSFk@7\";\n      solution0.findRepeatedDnaSequences(\"8sa#[?mT,iIV.NSFk@7\");\n      Solution.main(stringArray0);\n      stringArray0[1] = \"4iTH:H/{vBr\";\n      stringArray0[2] = \"RH*\";\n      stringArray0[3] = \"\";\n      Solution.main(stringArray0);\n      solution0.findRepeatedDnaSequences(\"\");\n      Solution.main(stringArray0);\n      Solution.main(stringArray0);\n      solution0.findRepeatedDnaSequences(\"\");\n      List<String> list0 = solution0.findRepeatedDnaSequences(\"Y_{Hx;^kqM=C`g_/lD\");\n      assertEquals(2, list0.size());\n      \n      Solution.main(stringArray0);\n      Solution.main(stringArray0);\n      solution0.findRepeatedDnaSequences(\"y~`T^5#\");\n      Solution.main(stringArray0);\n      Solution.main(stringArray0);\n      solution0.findRepeatedDnaSequences(\"\");\n      List<String> list1 = solution0.findRepeatedDnaSequences(\"DzYg>4kagdl!!/ufY\");\n      assertEquals(1, list1.size());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 07:11:43 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Solution_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Solution\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp2cfun8y7\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Solution_ESTest_scaffolding.class.getClassLoader() ,\n      \"Solution\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Solution_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Solution\"\n    );\n  }\n}\n", "class_idx": 282}
{"class_name": "Stock", "java_source": "import java.io.Serializable;\n\npublic class Stock implements Serializable {\n  private String symbol;\n  private double price;\n\n  public Stock(String symbol, double price) {\n    this.symbol = symbol;\n    this.price = price;\n  }\n\n  // Methods to return the private values of this object\n  public double getPrice() {\n    return price;\n  }\n\n  public String getSymbol() {\n    return symbol;\n  }\n\n  public void setPrice(double newPrice) {\n    price = newPrice;\n  }\n\n  public String toString() {\n    return \"Stock:  \" + symbol + \"  \" + price;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Stock \n.super java/lang/Object \n.implements java/io/Serializable \n.field private symbol Ljava/lang/String; \n.field private price D \n\n.method public <init> : (Ljava/lang/String;D)V \n    .code stack 3 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field Stock symbol Ljava/lang/String; \nL9:     aload_0 \nL10:    dload_2 \nL11:    putfield Field Stock price D \nL14:    return \nL15:    \n        .linenumbertable \n            L0 8 \n            L4 9 \n            L9 10 \n            L14 11 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPrice : ()D \n    .code stack 2 locals 1 \nL0:     aload_0 \nL1:     getfield Field Stock price D \nL4:     dreturn \nL5:     \n        .linenumbertable \n            L0 15 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSymbol : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Stock symbol Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 19 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setPrice : (D)V \n    .code stack 3 locals 3 \nL0:     aload_0 \nL1:     dload_1 \nL2:     putfield Field Stock price D \nL5:     return \nL6:     \n        .linenumbertable \n            L0 23 \n            L5 24 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 3 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     ldc 'Stock:  ' \nL9:     invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL12:    aload_0 \nL13:    getfield Field Stock symbol Ljava/lang/String; \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    ldc '  ' \nL21:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL24:    aload_0 \nL25:    getfield Field Stock price D \nL28:    invokevirtual Method java/lang/StringBuilder append (D)Ljava/lang/StringBuilder; \nL31:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL34:    areturn \nL35:    \n        .linenumbertable \n            L0 27 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Stock.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 08:32:20 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Stock_ESTest extends Stock_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Stock stock0 = new Stock((String) null, 115267.6);\n      stock0.getSymbol();\n      assertEquals(115267.6, stock0.getPrice(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Stock stock0 = new Stock(\"2\u007fy{G#CyT\", (-1.0));\n      stock0.getSymbol();\n      assertEquals((-1.0), stock0.getPrice(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Stock stock0 = new Stock(\"\", 0.0);\n      double double0 = stock0.getPrice();\n      assertEquals(0.0, double0, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Stock stock0 = new Stock((String) null, 34399.552849015);\n      double double0 = stock0.getPrice();\n      assertEquals(34399.552849015, double0, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Stock stock0 = new Stock(\"\", (-72687.08249368351));\n      stock0.getSymbol();\n      assertEquals((-72687.08249368351), stock0.getPrice(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Stock stock0 = new Stock(\"\", (-72687.08249368351));\n      double double0 = stock0.getPrice();\n      assertEquals((-72687.08249368351), double0, 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      Stock stock0 = new Stock(\"\", (-72687.08249368351));\n      stock0.setPrice((-72687.08249368351));\n      assertEquals((-72687.08249368351), stock0.getPrice(), 1.0E-4);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      Stock stock0 = new Stock(\"\", (-72687.08249368351));\n      String string0 = stock0.toString();\n      assertEquals(\"Stock:    -72687.08249368351\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 08:32:20 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Stock_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Stock\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpetbs5lj5\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Stock_ESTest_scaffolding.class.getClassLoader() ,\n      \"Stock\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Stock_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Stock\"\n    );\n  }\n}\n", "class_idx": 283}
{"class_name": "Encoding", "java_source": "/** Created by Administrator on 2014/4/7. */\npublic class Encoding {\n\n  private String username;\n\n  public String getUsername() {\n    return username;\n  }\n\n  public void setUsername(String username) {\n    this.username = username;\n  }\n\n  public String test() {\n    return \"success\";\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Encoding \n.super java/lang/Object \n.field private username Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getUsername : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Encoding username Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 11 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setUsername : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field Encoding username Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 15 \n            L5 16 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public test : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     ldc 'success' \nL2:     areturn \nL3:     \n        .linenumbertable \n            L0 19 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Encoding.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 04:00:19 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Encoding_ESTest extends Encoding_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Encoding encoding0 = new Encoding();\n      encoding0.setUsername(\"\u007fv!\");\n      String string0 = encoding0.getUsername();\n      assertEquals(\"\u007fv!\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Encoding encoding0 = new Encoding();\n      encoding0.setUsername(\"\");\n      String string0 = encoding0.getUsername();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Encoding encoding0 = new Encoding();\n      String string0 = encoding0.getUsername();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Encoding encoding0 = new Encoding();\n      String string0 = encoding0.test();\n      assertEquals(\"success\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 04:00:19 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Encoding_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Encoding\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp847dg7pp\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Encoding_ESTest_scaffolding.class.getClassLoader() ,\n      \"Encoding\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Encoding_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Encoding\"\n    );\n  }\n}\n", "class_idx": 284}
{"class_name": "TestLookupSwitch", "java_source": "/*\n *  This file is part of the Jikes RVM project (http://jikesrvm.org).\n *\n *  This file is licensed to You under the Eclipse Public License (EPL);\n *  You may not use this file except in compliance with the License. You\n *  may obtain a copy of the License at\n *\n *      http://www.opensource.org/licenses/eclipse-1.0.php\n *\n *  See the COPYRIGHT.txt file distributed with this work for information\n *  regarding copyright ownership.\n */\nclass TestLookupSwitch {\n  static boolean run() {\n    int i = foo(1000);\n    System.out.println(\"TestLookupSwitch returned: \" + i);\n    return true;\n  }\n\n  static int foo(int bar) {\n    int retVal = 0;\n\n    switch (bar) {\n      case -1000:\n      case -100:\n        retVal = (bar + 1);\n        break;\n      case -10:\n        retVal = (bar + 2);\n        break;\n      case -1:\n        retVal = (bar + 3);\n      case 1:\n      case 10:\n        retVal = (bar + 4);\n        break;\n      case 100:\n        retVal = (bar + 5);\n        break;\n      case 1000:\n      case 10000:\n      case 100000:\n      case 1000000:\n        retVal = (bar + 6);\n        break;\n      case 10000000:\n      case 100000000:\n        retVal = (bar + 7);\n      default:\n        retVal = (bar + 8);\n        break;\n    }\n\n    return retVal;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class super TestLookupSwitch \n.super java/lang/Object \n\n.method <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static run : ()Z \n    .code stack 3 locals 1 \nL0:     sipush 1000 \nL3:     invokestatic Method TestLookupSwitch foo (I)I \nL6:     istore_0 \nL7:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL10:    new java/lang/StringBuilder \nL13:    dup \nL14:    invokespecial Method java/lang/StringBuilder <init> ()V \nL17:    ldc 'TestLookupSwitch returned: ' \nL19:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL22:    iload_0 \nL23:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL26:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL29:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL32:    iconst_1 \nL33:    ireturn \nL34:    \n        .linenumbertable \n            L0 15 \n            L7 16 \n            L32 17 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static foo : (I)I \n    .code stack 2 locals 2 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     iload_0 \nL3:     lookupswitch \n            -1000 : L116 \n            -100 : L116 \n            -10 : L123 \n            -1 : L130 \n            1 : L134 \n            10 : L134 \n            100 : L141 \n            1000 : L148 \n            10000 : L148 \n            100000 : L148 \n            1000000 : L148 \n            10000000 : L156 \n            100000000 : L156 \n            default : L161 \n\n\n        .stack append Integer \nL116:   iload_0 \nL117:   iconst_1 \nL118:   iadd \nL119:   istore_1 \nL120:   goto L166 \n\n        .stack same \nL123:   iload_0 \nL124:   iconst_2 \nL125:   iadd \nL126:   istore_1 \nL127:   goto L166 \n\n        .stack same \nL130:   iload_0 \nL131:   iconst_3 \nL132:   iadd \nL133:   istore_1 \n\n        .stack same \nL134:   iload_0 \nL135:   iconst_4 \nL136:   iadd \nL137:   istore_1 \nL138:   goto L166 \n\n        .stack same \nL141:   iload_0 \nL142:   iconst_5 \nL143:   iadd \nL144:   istore_1 \nL145:   goto L166 \n\n        .stack same \nL148:   iload_0 \nL149:   bipush 6 \nL151:   iadd \nL152:   istore_1 \nL153:   goto L166 \n\n        .stack same \nL156:   iload_0 \nL157:   bipush 7 \nL159:   iadd \nL160:   istore_1 \n\n        .stack same \nL161:   iload_0 \nL162:   bipush 8 \nL164:   iadd \nL165:   istore_1 \n\n        .stack same \nL166:   iload_1 \nL167:   ireturn \nL168:   \n        .linenumbertable \n            L0 21 \n            L2 23 \n            L116 26 \n            L120 27 \n            L123 29 \n            L127 30 \n            L130 32 \n            L134 35 \n            L138 36 \n            L141 38 \n            L145 39 \n            L148 44 \n            L153 45 \n            L156 48 \n            L161 50 \n            L166 54 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'TestLookupSwitch.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 16:29:36 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class TestLookupSwitch_ESTest extends TestLookupSwitch_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      int int0 = TestLookupSwitch.foo((-8));\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      int int0 = TestLookupSwitch.foo(0);\n      assertEquals(8, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      int int0 = TestLookupSwitch.foo(100000000);\n      assertEquals(100000008, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      int int0 = TestLookupSwitch.foo(10000000);\n      assertEquals(10000008, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      int int0 = TestLookupSwitch.foo(1000000);\n      assertEquals(1000006, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      int int0 = TestLookupSwitch.foo(100000);\n      assertEquals(100006, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      int int0 = TestLookupSwitch.foo(10000);\n      assertEquals(10006, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      int int0 = TestLookupSwitch.foo(100);\n      assertEquals(105, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      int int0 = TestLookupSwitch.foo(10);\n      assertEquals(14, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      int int0 = TestLookupSwitch.foo(1);\n      assertEquals(5, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      int int0 = TestLookupSwitch.foo((-1));\n      assertEquals(3, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      int int0 = TestLookupSwitch.foo((-10));\n      assertEquals((-8), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      int int0 = TestLookupSwitch.foo((-100));\n      assertEquals((-99), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      int int0 = TestLookupSwitch.foo((-1000));\n      assertEquals((-999), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      TestLookupSwitch testLookupSwitch0 = new TestLookupSwitch();\n  }\n\n  @Test(timeout = 4000)\n  public void test15()  throws Throwable  {\n      boolean boolean0 = TestLookupSwitch.run();\n      assertTrue(boolean0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 16:29:36 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class TestLookupSwitch_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"TestLookupSwitch\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp80q_r2fq\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(TestLookupSwitch_ESTest_scaffolding.class.getClassLoader() ,\n      \"TestLookupSwitch\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(TestLookupSwitch_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"TestLookupSwitch\"\n    );\n  }\n}\n", "class_idx": 285}
{"class_name": "CustomerLivesOnWestCoast", "java_source": "public class CustomerLivesOnWestCoast {}\n", "jasm_code": ".version 52 0 \n.class public super CustomerLivesOnWestCoast \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'CustomerLivesOnWestCoast.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 21:34:35 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class CustomerLivesOnWestCoast_ESTest extends CustomerLivesOnWestCoast_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      CustomerLivesOnWestCoast customerLivesOnWestCoast0 = new CustomerLivesOnWestCoast();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 21:34:35 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class CustomerLivesOnWestCoast_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"CustomerLivesOnWestCoast\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp5takcc5h\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CustomerLivesOnWestCoast_ESTest_scaffolding.class.getClassLoader() ,\n      \"CustomerLivesOnWestCoast\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CustomerLivesOnWestCoast_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"CustomerLivesOnWestCoast\"\n    );\n  }\n}\n", "class_idx": 286}
{"class_name": "LogfileTemplate", "java_source": "/*\n * WUMprep4Weka - WUMprep for the WEKA data mining environment\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n */\n\n/*\n * LogfileTemplate.java\n * Copyright (C) 2005 Carsten Pohle (cp AT cpohle de)\n */\n\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.LineNumberReader;\nimport java.io.Serializable;\nimport java.util.Vector;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\n/**\n * Encapsulates a WUMprep log file template.\n *\n * @author Carsten Pohle (cp AT cpohle de)\n * @version $Id: LogfileTemplate.java,v 1.2 2005/10/16 13:25:42 cpohle Exp $\n */\npublic class LogfileTemplate implements Serializable {\n\n  /** */\n  private static final long serialVersionUID = 1L;\n\n  /** The template file encapsulated by <code>this</code>. */\n  private File templateFile = null;\n\n  /** The template line as defined in the WUMprep template file. */\n  private String template = null;\n\n  /** The regular expression form of the template, suited for parsing a log line. */\n  private String logLineRegExp = null;\n\n  /** The list of fields used in the template */\n  private Vector<String> fields = new Vector<String>();\n\n  /**\n   * Gets the temlate file encapsulated by this <code>LogilfeTemplate</code>.\n   *\n   * @return The template file's absolute path.\n   */\n  public String getTemplateFile() {\n    if (this.templateFile != null) return this.templateFile.getAbsolutePath();\n    else return \"\";\n  }\n\n  /**\n   * Sets the template file encapsulated by this <code>LogfileTemplate</code>.\n   *\n   * @param path The absolute path of the template file to parse.\n   */\n  public void setTemplateFile(String path) {\n    File file = new File(path);\n    if (file.exists()) init(file);\n    else init(null);\n  }\n\n  /** Creates a new, blank <code>LogfileTemplate</code>.... */\n  public LogfileTemplate() {\n    init(null);\n  }\n\n  /**\n   * Creates a new <code>LogfileTemplate</code> instance from a given WUMprep template file.\n   *\n   * @param templateFile The WUMprep configuration file to construct this <code>LogfileTemplate\n   *     </code> from.\n   * @throws IllegalArgumentException If the <code>templateFile</code> is not a valid WUMprep\n   *     configuration file.\n   */\n  public LogfileTemplate(File templateFile) throws IllegalArgumentException {\n    init(templateFile);\n  }\n\n  /**\n   * Creates a new <code>LogfileTemplate</code> instance from a given WUMprep template file.\n   *\n   * @param templateFilePath The path of a WUMprep template file\n   * @throws IllegalArgumentException If the <code>templateFile</code> is not a valid WUMprep\n   *     configuration file.\n   */\n  public LogfileTemplate(String templateFilePath) throws IllegalArgumentException {\n    if (templateFilePath != \"\") init(new File(templateFilePath));\n    else init(null);\n  }\n\n  /**\n   * Initializes <code>this</code> by parsing a given WUMprep log file template and constructing a\n   * regular expression from it that can be used for parsing log lines conforming to the template.\n   *\n   * @param templateFile The WUMprep configuration file to construct this <code>LogfileTemplate\n   *     </code> from.\n   * @throws IllegalArgumentException If the <code>templateFile</code> is not a valid WUMprep\n   *     configuration file.\n   */\n  private void init(File templateFile) throws IllegalArgumentException {\n    String logLineRegExp = \"\";\n    Vector<String> fields = new Vector<String>();\n    Pattern ignorePattern = Pattern.compile(\"^(?:#.*)|(?:\\\\s*)$\");\n    Pattern fieldName = Pattern.compile(\"@(.+?)@\");\n    Pattern placeholder = Pattern.compile(\"(@.+?@)\");\n    Pattern quotedPattern = Pattern.compile(\"\\\"\\\\(\\\\\\\\S\\\\+\\\\)\\\"\");\n    Pattern braces = Pattern.compile(\"(\\\\[|\\\\])\");\n\n    if (templateFile != null) {\n      // Read the logfile template\n      try {\n        if (templateFile.exists()) {\n          LineNumberReader reader = new LineNumberReader(new FileReader(templateFile));\n\n          String line = reader.readLine();\n          while (line != null) {\n            Matcher m = ignorePattern.matcher(line);\n\n            // ignore blank and commentary lines\n            if (!m.matches()) {\n              this.template = line;\n              // extract field names from the template line\n              m.usePattern(fieldName);\n              m.reset();\n              while (m.find()) {\n                fields.addElement(m.group(1));\n              }\n\n              // convert template line into regular expression\n              m.reset();\n              m.usePattern(placeholder);\n              logLineRegExp = m.replaceAll(\"(\\\\\\\\S+)\");\n              m.reset();\n              m = quotedPattern.matcher(logLineRegExp);\n              logLineRegExp = m.replaceAll(\"\\\"(.+)\\\"\");\n              m.reset();\n              m = braces.matcher(logLineRegExp);\n              logLineRegExp = m.replaceAll(\"\\\\\\\\$1\");\n            }\n            line = reader.readLine();\n          }\n        }\n\n        if (logLineRegExp != \"\") {\n          this.logLineRegExp = logLineRegExp;\n          this.fields = fields;\n\n          // Store the file for later reference.\n          this.templateFile = templateFile;\n        } else if (templateFile.exists()) {\n          throw new IllegalArgumentException(\n              \"The file '\"\n                  + templateFile.getAbsolutePath()\n                  + \"' is not a valid WUMprep configuration file.\");\n        }\n      } catch (FileNotFoundException e) {\n        e.printStackTrace();\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n    } else {\n      // logfileTemplate == null (called from default constructor)\n      this.templateFile = null;\n      this.fields = fields;\n      this.template = \"\";\n      this.logLineRegExp = \"\";\n    }\n  }\n\n  /**\n   * Gets the template line as defined in the WUMprep template file.\n   *\n   * @return The template.\n   */\n  public String getTemplate() {\n    return this.template;\n  }\n\n  /**\n   * Sets the template line.\n   *\n   * @param template The template.\n   */\n  public void setTemplate(String template) {\n    this.template = template;\n  }\n\n  /**\n   * Gets the list of fields used in the template, ordered by appearance. This list may be used as\n   * an index for accessing selected fields from a log line parsed with the regular expression\n   * returned by {@link #getRegExp()}.\n   *\n   * @return The field list.\n   */\n  public Vector<String> getFields() {\n    return this.fields;\n  }\n\n  /**\n   * Gets the regular expression built from the log line template. Every field matching\n   * sub-expression is enclosed in grouping parentheses, so that each field from a log line can\n   * easily be accessed using the {@link java.util.regex.Matcher#group(int)} method.\n   *\n   * @return The regular expression that parses a log line formatted according to the template.\n   */\n  public String getRegExp() {\n    return this.logLineRegExp;\n  }\n\n  /**\n   * Gets a <code>Pattern</code> that can be used to create a {@link Matcher} for parsing log lines\n   * as in the following example:\n   *\n   * <pre>\n   *         LogfileTemplate lt = new LogfileTemplate(&quot;someTemplateFile&quot;);\n   *         Matcher m = lt.getPattern.matcher(&lt;String&gt; logLine);\n   *         m.matches();\n   *\n   *         for (int i = 0; i &lt; getStructure().numAttributes(); i++)\n   *           System.out.println(&quot;Field No. &quot; + i + &quot;: &quot; + m.group(i + 1));\n   * </pre>\n   *\n   * @return The pattern for parsing log lines.\n   */\n  public Pattern getPattern() {\n    return Pattern.compile(getRegExp());\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super LogfileTemplate \n.super java/lang/Object \n.implements java/io/Serializable \n.field private static final serialVersionUID J = 1L \n.field private templateFile Ljava/io/File; \n.field private template Ljava/lang/String; \n.field private logLineRegExp Ljava/lang/String; \n.field private fields Ljava/util/Vector; .fieldattributes \n    .signature Ljava/util/Vector<Ljava/lang/String;>; \n.end fieldattributes \n\n.method public getTemplateFile : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LogfileTemplate templateFile Ljava/io/File; \nL4:     ifnull L15 \nL7:     aload_0 \nL8:     getfield Field LogfileTemplate templateFile Ljava/io/File; \nL11:    invokevirtual Method java/io/File getAbsolutePath ()Ljava/lang/String; \nL14:    areturn \n\n        .stack same \nL15:    ldc '' \nL17:    areturn \nL18:    \n        .linenumbertable \n            L0 73 \n            L7 74 \n            L15 76 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setTemplateFile : (Ljava/lang/String;)V \n    .code stack 3 locals 3 \nL0:     new java/io/File \nL3:     dup \nL4:     aload_1 \nL5:     invokespecial Method java/io/File <init> (Ljava/lang/String;)V \nL8:     astore_2 \nL9:     aload_2 \nL10:    invokevirtual Method java/io/File exists ()Z \nL13:    ifeq L24 \nL16:    aload_0 \nL17:    aload_2 \nL18:    invokespecial Method LogfileTemplate init (Ljava/io/File;)V \nL21:    goto L29 \n\n        .stack append Object java/io/File \nL24:    aload_0 \nL25:    aconst_null \nL26:    invokespecial Method LogfileTemplate init (Ljava/io/File;)V \n\n        .stack same \nL29:    return \nL30:    \n        .linenumbertable \n            L0 86 \n            L9 87 \n            L16 88 \n            L24 90 \n            L29 91 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : ()V \n    .code stack 3 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aconst_null \nL6:     putfield Field LogfileTemplate templateFile Ljava/io/File; \nL9:     aload_0 \nL10:    aconst_null \nL11:    putfield Field LogfileTemplate template Ljava/lang/String; \nL14:    aload_0 \nL15:    aconst_null \nL16:    putfield Field LogfileTemplate logLineRegExp Ljava/lang/String; \nL19:    aload_0 \nL20:    new java/util/Vector \nL23:    dup \nL24:    invokespecial Method java/util/Vector <init> ()V \nL27:    putfield Field LogfileTemplate fields Ljava/util/Vector; \nL30:    aload_0 \nL31:    aconst_null \nL32:    invokespecial Method LogfileTemplate init (Ljava/io/File;)V \nL35:    return \nL36:    \n        .linenumbertable \n            L0 96 \n            L4 50 \n            L9 55 \n            L14 60 \n            L19 65 \n            L30 97 \n            L35 98 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/io/File;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aconst_null \nL6:     putfield Field LogfileTemplate templateFile Ljava/io/File; \nL9:     aload_0 \nL10:    aconst_null \nL11:    putfield Field LogfileTemplate template Ljava/lang/String; \nL14:    aload_0 \nL15:    aconst_null \nL16:    putfield Field LogfileTemplate logLineRegExp Ljava/lang/String; \nL19:    aload_0 \nL20:    new java/util/Vector \nL23:    dup \nL24:    invokespecial Method java/util/Vector <init> ()V \nL27:    putfield Field LogfileTemplate fields Ljava/util/Vector; \nL30:    aload_0 \nL31:    aload_1 \nL32:    invokespecial Method LogfileTemplate init (Ljava/io/File;)V \nL35:    return \nL36:    \n        .linenumbertable \n            L0 111 \n            L4 50 \n            L9 55 \n            L14 60 \n            L19 65 \n            L30 112 \n            L35 113 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/IllegalArgumentException \n.end method \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 4 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aconst_null \nL6:     putfield Field LogfileTemplate templateFile Ljava/io/File; \nL9:     aload_0 \nL10:    aconst_null \nL11:    putfield Field LogfileTemplate template Ljava/lang/String; \nL14:    aload_0 \nL15:    aconst_null \nL16:    putfield Field LogfileTemplate logLineRegExp Ljava/lang/String; \nL19:    aload_0 \nL20:    new java/util/Vector \nL23:    dup \nL24:    invokespecial Method java/util/Vector <init> ()V \nL27:    putfield Field LogfileTemplate fields Ljava/util/Vector; \nL30:    aload_1 \nL31:    ldc '' \nL33:    if_acmpeq L51 \nL36:    aload_0 \nL37:    new java/io/File \nL40:    dup \nL41:    aload_1 \nL42:    invokespecial Method java/io/File <init> (Ljava/lang/String;)V \nL45:    invokespecial Method LogfileTemplate init (Ljava/io/File;)V \nL48:    goto L56 \n\n        .stack full \n            locals Object LogfileTemplate Object java/lang/String \n            stack \n        .end stack \nL51:    aload_0 \nL52:    aconst_null \nL53:    invokespecial Method LogfileTemplate init (Ljava/io/File;)V \n\n        .stack same \nL56:    return \nL57:    \n        .linenumbertable \n            L0 126 \n            L4 50 \n            L9 55 \n            L14 60 \n            L19 65 \n            L30 127 \n            L36 128 \n            L51 130 \n            L56 131 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/IllegalArgumentException \n.end method \n\n.method private init : (Ljava/io/File;)V \n    .code stack 5 locals 12 \nL0:     ldc '' \nL2:     astore_2 \nL3:     new java/util/Vector \nL6:     dup \nL7:     invokespecial Method java/util/Vector <init> ()V \nL10:    astore_3 \nL11:    ldc '^(?:#.*)|(?:\\\\s*)$' \nL13:    invokestatic Method java/util/regex/Pattern compile (Ljava/lang/String;)Ljava/util/regex/Pattern; \nL16:    astore 4 \nL18:    ldc '@(.+?)@' \nL20:    invokestatic Method java/util/regex/Pattern compile (Ljava/lang/String;)Ljava/util/regex/Pattern; \nL23:    astore 5 \nL25:    ldc '(@.+?@)' \nL27:    invokestatic Method java/util/regex/Pattern compile (Ljava/lang/String;)Ljava/util/regex/Pattern; \nL30:    astore 6 \nL32:    ldc '\"\\\\(\\\\\\\\S\\\\+\\\\)\"' \nL34:    invokestatic Method java/util/regex/Pattern compile (Ljava/lang/String;)Ljava/util/regex/Pattern; \nL37:    astore 7 \nL39:    ldc '(\\\\[|\\\\])' \nL41:    invokestatic Method java/util/regex/Pattern compile (Ljava/lang/String;)Ljava/util/regex/Pattern; \nL44:    astore 8 \nL46:    aload_1 \nL47:    ifnull L309 \n        .catch java/io/FileNotFoundException from L50 to L286 using L289 \n        .catch java/io/IOException from L50 to L286 using L299 \nL50:    aload_1 \nL51:    invokevirtual Method java/io/File exists ()Z \nL54:    ifeq L220 \nL57:    new java/io/LineNumberReader \nL60:    dup \nL61:    new java/io/FileReader \nL64:    dup \nL65:    aload_1 \nL66:    invokespecial Method java/io/FileReader <init> (Ljava/io/File;)V \nL69:    invokespecial Method java/io/LineNumberReader <init> (Ljava/io/Reader;)V \nL72:    astore 9 \nL74:    aload 9 \nL76:    invokevirtual Method java/io/LineNumberReader readLine ()Ljava/lang/String; \nL79:    astore 10 \n\n        .stack full \n            locals Object LogfileTemplate Object java/io/File Object java/lang/String Object java/util/Vector Object java/util/regex/Pattern Object java/util/regex/Pattern Object java/util/regex/Pattern Object java/util/regex/Pattern Object java/util/regex/Pattern Object java/io/LineNumberReader Object java/lang/String \n            stack \n        .end stack \nL81:    aload 10 \nL83:    ifnull L220 \nL86:    aload 4 \nL88:    aload 10 \nL90:    invokevirtual Method java/util/regex/Pattern matcher (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher; \nL93:    astore 11 \nL95:    aload 11 \nL97:    invokevirtual Method java/util/regex/Matcher matches ()Z \nL100:   ifne L210 \nL103:   aload_0 \nL104:   aload 10 \nL106:   putfield Field LogfileTemplate template Ljava/lang/String; \nL109:   aload 11 \nL111:   aload 5 \nL113:   invokevirtual Method java/util/regex/Matcher usePattern (Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher; \nL116:   pop \nL117:   aload 11 \nL119:   invokevirtual Method java/util/regex/Matcher reset ()Ljava/util/regex/Matcher; \nL122:   pop \n\n        .stack append Object java/util/regex/Matcher \nL123:   aload 11 \nL125:   invokevirtual Method java/util/regex/Matcher find ()Z \nL128:   ifeq L144 \nL131:   aload_3 \nL132:   aload 11 \nL134:   iconst_1 \nL135:   invokevirtual Method java/util/regex/Matcher group (I)Ljava/lang/String; \nL138:   invokevirtual Method java/util/Vector addElement (Ljava/lang/Object;)V \nL141:   goto L123 \n\n        .stack same \nL144:   aload 11 \nL146:   invokevirtual Method java/util/regex/Matcher reset ()Ljava/util/regex/Matcher; \nL149:   pop \nL150:   aload 11 \nL152:   aload 6 \nL154:   invokevirtual Method java/util/regex/Matcher usePattern (Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher; \nL157:   pop \nL158:   aload 11 \nL160:   ldc '(\\\\\\\\S+)' \nL162:   invokevirtual Method java/util/regex/Matcher replaceAll (Ljava/lang/String;)Ljava/lang/String; \nL165:   astore_2 \nL166:   aload 11 \nL168:   invokevirtual Method java/util/regex/Matcher reset ()Ljava/util/regex/Matcher; \nL171:   pop \nL172:   aload 7 \nL174:   aload_2 \nL175:   invokevirtual Method java/util/regex/Pattern matcher (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher; \nL178:   astore 11 \nL180:   aload 11 \nL182:   ldc '\"(.+)\"' \nL184:   invokevirtual Method java/util/regex/Matcher replaceAll (Ljava/lang/String;)Ljava/lang/String; \nL187:   astore_2 \nL188:   aload 11 \nL190:   invokevirtual Method java/util/regex/Matcher reset ()Ljava/util/regex/Matcher; \nL193:   pop \nL194:   aload 8 \nL196:   aload_2 \nL197:   invokevirtual Method java/util/regex/Pattern matcher (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher; \nL200:   astore 11 \nL202:   aload 11 \nL204:   ldc '\\\\\\\\$1' \nL206:   invokevirtual Method java/util/regex/Matcher replaceAll (Ljava/lang/String;)Ljava/lang/String; \nL209:   astore_2 \n\n        .stack same_extended \nL210:   aload 9 \nL212:   invokevirtual Method java/io/LineNumberReader readLine ()Ljava/lang/String; \nL215:   astore 10 \nL217:   goto L81 \n\n        .stack chop 3 \nL220:   aload_2 \nL221:   ldc '' \nL223:   if_acmpeq L244 \nL226:   aload_0 \nL227:   aload_2 \nL228:   putfield Field LogfileTemplate logLineRegExp Ljava/lang/String; \nL231:   aload_0 \nL232:   aload_3 \nL233:   putfield Field LogfileTemplate fields Ljava/util/Vector; \nL236:   aload_0 \nL237:   aload_1 \nL238:   putfield Field LogfileTemplate templateFile Ljava/io/File; \nL241:   goto L286 \n\n        .stack same \nL244:   aload_1 \nL245:   invokevirtual Method java/io/File exists ()Z \nL248:   ifeq L286 \nL251:   new java/lang/IllegalArgumentException \nL254:   dup \nL255:   new java/lang/StringBuilder \nL258:   dup \nL259:   invokespecial Method java/lang/StringBuilder <init> ()V \nL262:   ldc \"The file '\" \nL264:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL267:   aload_1 \nL268:   invokevirtual Method java/io/File getAbsolutePath ()Ljava/lang/String; \nL271:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL274:   ldc \"' is not a valid WUMprep configuration file.\" \nL276:   invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL279:   invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL282:   invokespecial Method java/lang/IllegalArgumentException <init> (Ljava/lang/String;)V \nL285:   athrow \n\n        .stack same \nL286:   goto L331 \n\n        .stack stack_1 Object java/io/FileNotFoundException \nL289:   astore 9 \nL291:   aload 9 \nL293:   invokevirtual Method java/io/FileNotFoundException printStackTrace ()V \nL296:   goto L331 \n\n        .stack stack_1 Object java/io/IOException \nL299:   astore 9 \nL301:   aload 9 \nL303:   invokevirtual Method java/io/IOException printStackTrace ()V \nL306:   goto L331 \n\n        .stack same \nL309:   aload_0 \nL310:   aconst_null \nL311:   putfield Field LogfileTemplate templateFile Ljava/io/File; \nL314:   aload_0 \nL315:   aload_3 \nL316:   putfield Field LogfileTemplate fields Ljava/util/Vector; \nL319:   aload_0 \nL320:   ldc '' \nL322:   putfield Field LogfileTemplate template Ljava/lang/String; \nL325:   aload_0 \nL326:   ldc '' \nL328:   putfield Field LogfileTemplate logLineRegExp Ljava/lang/String; \n\n        .stack same \nL331:   return \nL332:   \n        .linenumbertable \n            L0 146 \n            L3 147 \n            L11 148 \n            L18 149 \n            L25 150 \n            L32 151 \n            L39 152 \n            L46 154 \n            L50 157 \n            L57 158 \n            L74 161 \n            L81 162 \n            L86 163 \n            L95 166 \n            L103 167 \n            L109 169 \n            L117 170 \n            L123 171 \n            L131 172 \n            L144 176 \n            L150 177 \n            L158 178 \n            L166 179 \n            L172 180 \n            L180 181 \n            L188 182 \n            L194 183 \n            L202 184 \n            L210 186 \n            L217 187 \n            L220 190 \n            L226 191 \n            L231 192 \n            L236 195 \n            L244 196 \n            L251 197 \n            L268 198 \n            L286 205 \n            L289 201 \n            L291 202 \n            L296 205 \n            L299 203 \n            L301 204 \n            L306 205 \n            L309 208 \n            L314 209 \n            L319 210 \n            L325 211 \n            L331 213 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/IllegalArgumentException \n.end method \n\n.method public getTemplate : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LogfileTemplate template Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 221 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setTemplate : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field LogfileTemplate template Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 231 \n            L5 232 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFields : ()Ljava/util/Vector; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LogfileTemplate fields Ljava/util/Vector; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 242 \n        .end linenumbertable \n    .end code \n    .signature ()Ljava/util/Vector<Ljava/lang/String;>; \n.end method \n\n.method public getRegExp : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field LogfileTemplate logLineRegExp Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 255 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getPattern : ()Ljava/util/regex/Pattern; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokevirtual Method LogfileTemplate getRegExp ()Ljava/lang/String; \nL4:     invokestatic Method java/util/regex/Pattern compile (Ljava/lang/String;)Ljava/util/regex/Pattern; \nL7:     areturn \nL8:     \n        .linenumbertable \n            L0 274 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'LogfileTemplate.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 17:07:40 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.io.File;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.io.MockFile;\nimport org.evosuite.runtime.testdata.EvoSuiteFile;\nimport org.evosuite.runtime.testdata.FileSystemHandling;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class LogfileTemplate_ESTest extends LogfileTemplate_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String string0 = \"\";\n      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(\"/tmp/]BFc'0\");\n      FileSystemHandling.appendStringToFile(evoSuiteFile0, \"?:\");\n      File file0 = MockFile.createTempFile(\"]BFc'\", \"\");\n      LogfileTemplate logfileTemplate0 = null;\n      try {\n        logfileTemplate0 = new LogfileTemplate(file0);\n       //  fail(\"Expecting exception: IllegalArgumentException\");\n       // Unstable assertion\n      } catch(IllegalArgumentException e) {\n         //\n         // The file '/tmp/]BFc'0' is not a valid WUMprep configuration file.\n         //\n         verifyException(\"LogfileTemplate\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(\"/tmp/]BFc'0\");\n      FileSystemHandling.appendLineToFile(evoSuiteFile0, \":&4K:\\\"N}$\\\"\");\n      File file0 = MockFile.createTempFile(\"]BFc'\", \"\");\n      LogfileTemplate logfileTemplate0 = new LogfileTemplate(file0);\n      logfileTemplate0.setTemplate(\"\");\n      logfileTemplate0.getTemplate();\n      assertEquals(\":&4K:\\\"N}$\\\"\", logfileTemplate0.getRegExp());\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      LogfileTemplate logfileTemplate0 = new LogfileTemplate(\"<},+@y30Ux\");\n      String string0 = logfileTemplate0.getRegExp();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      LogfileTemplate logfileTemplate0 = new LogfileTemplate(\"\");\n      String string0 = logfileTemplate0.getTemplate();\n      //  // Unstable assertion: assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(\"/tmp/]BFc'0\");\n      FileSystemHandling.appendLineToFile(evoSuiteFile0, \":&4K:\\\"N}$\\\"\");\n      File file0 = MockFile.createTempFile(\"]BFc'\", \"\");\n      LogfileTemplate logfileTemplate0 = new LogfileTemplate(file0);\n      logfileTemplate0.setTemplateFile(\"?:\");\n      logfileTemplate0.getTemplateFile();\n      assertEquals(\"\", logfileTemplate0.getTemplate());\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(\"/tmp/]BFc'0\");\n      FileSystemHandling.appendLineToFile(evoSuiteFile0, \":&4K:\\\"N}$\\\"\");\n      File file0 = MockFile.createTempFile(\"]BFc'\", \"\");\n      LogfileTemplate logfileTemplate0 = new LogfileTemplate(file0);\n      logfileTemplate0.getFields();\n      assertEquals(\":&4K:\\\"N}$\\\"\", logfileTemplate0.getRegExp());\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(\"/tmp/]BFc'0\");\n      FileSystemHandling.appendLineToFile(evoSuiteFile0, \":&4K:\\\"N}$\\\"\");\n      File file0 = MockFile.createTempFile(\"]BFc'\", \"\");\n      LogfileTemplate logfileTemplate0 = new LogfileTemplate(file0);\n      String string0 = logfileTemplate0.getRegExp();\n      assertEquals(\":&4K:\\\"N}$\\\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      LogfileTemplate logfileTemplate0 = new LogfileTemplate();\n      String string0 = logfileTemplate0.getRegExp();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(\"/tmp/]BFc'0\");\n      FileSystemHandling.appendLineToFile(evoSuiteFile0, \":&4K:\\\"N}$\\\"\");\n      File file0 = MockFile.createTempFile(\"]BFc'\", \"\");\n      LogfileTemplate logfileTemplate0 = new LogfileTemplate(file0);\n      logfileTemplate0.getTemplate();\n      assertEquals(\":&4K:\\\"N}$\\\"\", logfileTemplate0.getRegExp());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 17:07:40 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class LogfileTemplate_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"LogfileTemplate\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp7snjxdgm\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(LogfileTemplate_ESTest_scaffolding.class.getClassLoader() ,\n      \"LogfileTemplate\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(LogfileTemplate_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"LogfileTemplate\"\n    );\n  }\n}\n", "class_idx": 287}
{"class_name": "O42", "java_source": "import java.util.Scanner;\n\npublic class O42 {\n\n  public static void main(String[] args) {\n    // TODO Auto-generated method stub\n    Scanner scn = new Scanner(System.in);\n    int a = scn.nextInt();\n    for (int i = 0; i < a; i++) {\n      for (int j = 0; j < a; j++) {\n        System.out.print(\"*\");\n      }\n      System.out.println(\"\");\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super O42 \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 2 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 3 locals 5 \nL0:     new java/util/Scanner \nL3:     dup \nL4:     getstatic Field java/lang/System in Ljava/io/InputStream; \nL7:     invokespecial Method java/util/Scanner <init> (Ljava/io/InputStream;)V \nL10:    astore_1 \nL11:    aload_1 \nL12:    invokevirtual Method java/util/Scanner nextInt ()I \nL15:    istore_2 \nL16:    iconst_0 \nL17:    istore_3 \n\n        .stack append Object java/util/Scanner Integer Integer \nL18:    iload_3 \nL19:    iload_2 \nL20:    if_icmpge L60 \nL23:    iconst_0 \nL24:    istore 4 \n\n        .stack append Integer \nL26:    iload 4 \nL28:    iload_2 \nL29:    if_icmpge L46 \nL32:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL35:    ldc '*' \nL37:    invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \nL40:    iinc 4 1 \nL43:    goto L26 \n\n        .stack chop 1 \nL46:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL49:    ldc '' \nL51:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL54:    iinc 3 1 \nL57:    goto L18 \n\n        .stack chop 1 \nL60:    return \nL61:    \n        .linenumbertable \n            L0 6 \n            L11 7 \n            L16 8 \n            L23 9 \n            L32 10 \n            L40 9 \n            L46 11 \n            L54 8 \n            L60 13 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'O42.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 00:53:06 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport java.util.NoSuchElementException;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.util.SystemInUtil;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class O42_ESTest extends O42_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      SystemInUtil.addInputLine(\"3\");\n      String[] stringArray0 = new String[10];\n      O42.main(stringArray0);\n      // Undeclared exception!\n      try { \n        O42.main(stringArray0);\n        fail(\"Expecting exception: NoSuchElementException\");\n      \n      } catch(NoSuchElementException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"java.util.Scanner\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      O42 o42_0 = new O42();\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 00:53:06 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class O42_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"O42\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n    org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmprgqcnq4a\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(O42_ESTest_scaffolding.class.getClassLoader() ,\n      \"O42\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(O42_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"O42\"\n    );\n  }\n}\n", "class_idx": 288}
{"class_name": "Util", "java_source": "import java.math.BigDecimal;\nimport java.nio.ByteBuffer;\n\npublic class Util {\n  public static void main(String[] args) {\n    int ip = ipStr2Int(\"192.168.2.103\");\n    System.out.println(ip);\n    System.out.println(ipInt2Str(ip));\n  }\n\n  public static float scaleTo2bit(double value) {\n    try {\n      return new BigDecimal(value).setScale(2, BigDecimal.ROUND_HALF_UP).floatValue();\n    } catch (NumberFormatException e) {\n      e.printStackTrace();\n    }\n    return -1.0f;\n  }\n\n  public static ByteBuffer bf = ByteBuffer.allocate(4);\n\n  /** exit if the condition is false */\n  public static void exitIfErr(boolean _assert, String msg) {\n    if (!_assert) {\n      System.out.println(msg);\n      System.exit(1);\n    }\n  }\n\n  public static int ipStr2Int(String ip) throws NumberFormatException {\n    int ret = 0;\n    String[] strs = ip.split(\"\\\\.\");\n    for (String s : strs) {\n      ret = (ret << 8) + Integer.parseInt(s);\n    }\n    return ret;\n  }\n\n  public static String ipInt2Str(int ip) throws NumberFormatException {\n    String ret = \"\";\n    synchronized (bf) {\n      bf.clear();\n      bf.putInt(ip);\n      for (int i = 0; i < 4; i++) {\n        ret += ((int) bf.get(i) + 256) % 256;\n        if (i != 3) {\n          ret += \".\";\n        }\n      }\n    }\n    return ret;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Util \n.super java/lang/Object \n.field public static bf Ljava/nio/ByteBuffer; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 6 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     ldc '192.168.2.103' \nL2:     invokestatic Method Util ipStr2Int (Ljava/lang/String;)I \nL5:     istore_1 \nL6:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL9:     iload_1 \nL10:    invokevirtual Method java/io/PrintStream println (I)V \nL13:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL16:    iload_1 \nL17:    invokestatic Method Util ipInt2Str (I)Ljava/lang/String; \nL20:    invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL23:    return \nL24:    \n        .linenumbertable \n            L0 10 \n            L6 11 \n            L13 12 \n            L23 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static scaleTo2bit : (D)F \n    .code stack 4 locals 3 \n        .catch java/lang/NumberFormatException from L0 to L16 using L17 \nL0:     new java/math/BigDecimal \nL3:     dup \nL4:     dload_0 \nL5:     invokespecial Method java/math/BigDecimal <init> (D)V \nL8:     iconst_2 \nL9:     iconst_4 \nL10:    invokevirtual Method java/math/BigDecimal setScale (II)Ljava/math/BigDecimal; \nL13:    invokevirtual Method java/math/BigDecimal floatValue ()F \nL16:    freturn \n\n        .stack stack_1 Object java/lang/NumberFormatException \nL17:    astore_2 \nL18:    aload_2 \nL19:    invokevirtual Method java/lang/NumberFormatException printStackTrace ()V \nL22:    ldc -1.0f \nL24:    freturn \nL25:    \n        .linenumbertable \n            L0 20 \n            L17 22 \n            L18 24 \n            L22 26 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static exitIfErr : (ZLjava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     iload_0 \nL1:     ifne L15 \nL4:     getstatic Field java/lang/System out Ljava/io/PrintStream; \nL7:     aload_1 \nL8:     invokevirtual Method java/io/PrintStream println (Ljava/lang/String;)V \nL11:    iconst_1 \nL12:    invokestatic Method java/lang/System exit (I)V \n\n        .stack same \nL15:    return \nL16:    \n        .linenumbertable \n            L0 36 \n            L4 38 \n            L11 39 \n            L15 41 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static ipStr2Int : (Ljava/lang/String;)I \n    .code stack 2 locals 7 \nL0:     iconst_0 \nL1:     istore_1 \nL2:     aload_0 \nL3:     ldc '\\\\.' \nL5:     invokevirtual Method java/lang/String split (Ljava/lang/String;)[Ljava/lang/String; \nL8:     astore_2 \nL9:     aload_2 \nL10:    astore_3 \nL11:    aload_3 \nL12:    arraylength \nL13:    istore 4 \nL15:    iconst_0 \nL16:    istore 5 \n\n        .stack full \n            locals Object java/lang/String Integer Object [Ljava/lang/String; Object [Ljava/lang/String; Integer Integer \n            stack \n        .end stack \nL18:    iload 5 \nL20:    iload 4 \nL22:    if_icmpge L48 \nL25:    aload_3 \nL26:    iload 5 \nL28:    aaload \nL29:    astore 6 \nL31:    iload_1 \nL32:    bipush 8 \nL34:    ishl \nL35:    aload 6 \nL37:    invokestatic Method java/lang/Integer parseInt (Ljava/lang/String;)I \nL40:    iadd \nL41:    istore_1 \nL42:    iinc 5 1 \nL45:    goto L18 \n\n        .stack chop 3 \nL48:    iload_1 \nL49:    ireturn \nL50:    \n        .linenumbertable \n            L0 45 \n            L2 46 \n            L9 47 \n            L31 49 \n            L42 47 \n            L48 51 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/NumberFormatException \n.end method \n\n.method public static ipInt2Str : (I)Ljava/lang/String; \n    .code stack 3 locals 5 \nL0:     ldc '' \nL2:     astore_1 \nL3:     getstatic Field Util bf Ljava/nio/ByteBuffer; \nL6:     dup \nL7:     astore_2 \nL8:     monitorenter \n        .catch [0] from L9 to L97 using L100 \nL9:     getstatic Field Util bf Ljava/nio/ByteBuffer; \nL12:    invokevirtual Method java/nio/ByteBuffer clear ()Ljava/nio/Buffer; \nL15:    pop \nL16:    getstatic Field Util bf Ljava/nio/ByteBuffer; \nL19:    iload_0 \nL20:    invokevirtual Method java/nio/ByteBuffer putInt (I)Ljava/nio/ByteBuffer; \nL23:    pop \nL24:    iconst_0 \nL25:    istore_3 \n\n        .stack append Object java/lang/String Object java/lang/Object Integer \nL26:    iload_3 \nL27:    iconst_4 \nL28:    if_icmpge L95 \nL31:    new java/lang/StringBuilder \nL34:    dup \nL35:    invokespecial Method java/lang/StringBuilder <init> ()V \nL38:    aload_1 \nL39:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL42:    getstatic Field Util bf Ljava/nio/ByteBuffer; \nL45:    iload_3 \nL46:    invokevirtual Method java/nio/ByteBuffer get (I)B \nL49:    sipush 256 \nL52:    iadd \nL53:    sipush 256 \nL56:    irem \nL57:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL60:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL63:    astore_1 \nL64:    iload_3 \nL65:    iconst_3 \nL66:    if_icmpeq L89 \nL69:    new java/lang/StringBuilder \nL72:    dup \nL73:    invokespecial Method java/lang/StringBuilder <init> ()V \nL76:    aload_1 \nL77:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL80:    ldc '.' \nL82:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL85:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL88:    astore_1 \n\n        .stack same \nL89:    iinc 3 1 \nL92:    goto L26 \n\n        .stack chop 1 \nL95:    aload_2 \nL96:    monitorexit \nL97:    goto L107 \n        .catch [0] from L100 to L104 using L100 \n\n        .stack stack_1 Object java/lang/Throwable \nL100:   astore 4 \nL102:   aload_2 \nL103:   monitorexit \nL104:   aload 4 \nL106:   athrow \n\n        .stack chop 1 \nL107:   aload_1 \nL108:   areturn \nL109:   \n        .linenumbertable \n            L0 56 \n            L3 57 \n            L9 59 \n            L16 60 \n            L24 61 \n            L31 63 \n            L64 64 \n            L69 66 \n            L89 61 \n            L95 69 \n            L107 70 \n        .end linenumbertable \n    .end code \n    .exceptions java/lang/NumberFormatException \n.end method \n\n.method static <clinit> : ()V \n    .code stack 1 locals 0 \nL0:     iconst_4 \nL1:     invokestatic Method java/nio/ByteBuffer allocate (I)Ljava/nio/ByteBuffer; \nL4:     putstatic Field Util bf Ljava/nio/ByteBuffer; \nL7:     return \nL8:     \n        .linenumbertable \n            L0 29 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Util.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 02:20:28 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.evosuite.runtime.EvoAssertions.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.System;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Util_ESTest extends Util_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      float float0 = Util.scaleTo2bit(6006.3952198645775);\n      assertEquals(6006.4F, float0, 0.01F);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      float float0 = Util.scaleTo2bit((-1));\n      assertEquals((-1.0F), float0, 0.01F);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Util.ipInt2Str(23926);\n      Util util0 = new Util();\n      Util.scaleTo2bit(0.0);\n      String[] stringArray0 = new String[6];\n      Util.main(stringArray0);\n      assertEquals(6, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      int int0 = Util.ipStr2Int(\"0.0.93.118\");\n      assertEquals(23926, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      // Undeclared exception!\n      try { \n        Util.exitIfErr(false, (String) null);\n        fail(\"Expecting exception: System.SystemExitException\");\n      \n      } catch(System.SystemExitException e) {\n         //\n         // no message in exception (getMessage() returned null)\n         //\n         verifyException(\"org.evosuite.runtime.System\", e);\n      }\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Util.exitIfErr(true, \"\");\n      Util util0 = new Util();\n      Util.scaleTo2bit(0.0);\n      String[] stringArray0 = new String[6];\n      Util.main(stringArray0);\n      assertEquals(6, stringArray0.length);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 02:20:28 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Util_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Util\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpsteresar\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Util_ESTest_scaffolding.class.getClassLoader() ,\n      \"Util\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Util_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Util\"\n    );\n  }\n}\n", "class_idx": 289}
{"class_name": "PoolManager", "java_source": "import java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\n\n/**\n * \u7ebf\u7a0b\u6c60\u7ba1\u7406\u7c7b\n *\n * @author\n */\npublic class PoolManager {\n  private static PoolManager instance = null;\n  private static ExecutorService service = null;\n\n  private PoolManager() {\n    // \u83b7\u53d6\u7cfb\u7edf\u5904\u7406\u5668\u6570\u91cf\n    int num = Runtime.getRuntime().availableProcessors();\n    service = Executors.newFixedThreadPool(num * 2);\n  }\n\n  public static synchronized PoolManager create() {\n    if (instance == null) {\n      instance = new PoolManager();\n      // \u521b\u5efa\u53ef\u91cd\u590d\u4f7f\u7528\u7684\u56fa\u5b9a\u7684\u7ebf\u7a0b\n    }\n    return instance;\n  }\n\n  /** \u5728\u7ebf\u7a0b\u6c60\u4e2d\u6267\u884c\u6211\u4f20\u8fdb\u6765\u7684\u4efb\u52a1 */\n  public void addTask(Runnable run) {\n    service.execute(run);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super PoolManager \n.super java/lang/Object \n.field private static instance LPoolManager; \n.field private static service Ljava/util/concurrent/ExecutorService; \n\n.method private <init> : ()V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     invokestatic Method java/lang/Runtime getRuntime ()Ljava/lang/Runtime; \nL7:     invokevirtual Method java/lang/Runtime availableProcessors ()I \nL10:    istore_1 \nL11:    iload_1 \nL12:    iconst_2 \nL13:    imul \nL14:    invokestatic Method java/util/concurrent/Executors newFixedThreadPool (I)Ljava/util/concurrent/ExecutorService; \nL17:    putstatic Field PoolManager service Ljava/util/concurrent/ExecutorService; \nL20:    return \nL21:    \n        .linenumbertable \n            L0 16 \n            L4 18 \n            L11 19 \n            L20 20 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static synchronized create : ()LPoolManager; \n    .code stack 2 locals 0 \nL0:     getstatic Field PoolManager instance LPoolManager; \nL3:     ifnonnull L16 \nL6:     new PoolManager \nL9:     dup \nL10:    invokespecial Method PoolManager <init> ()V \nL13:    putstatic Field PoolManager instance LPoolManager; \n\n        .stack same \nL16:    getstatic Field PoolManager instance LPoolManager; \nL19:    areturn \nL20:    \n        .linenumbertable \n            L0 23 \n            L6 24 \n            L16 27 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public addTask : (Ljava/lang/Runnable;)V \n    .code stack 2 locals 2 \nL0:     getstatic Field PoolManager service Ljava/util/concurrent/ExecutorService; \nL3:     aload_1 \nL4:     invokeinterface InterfaceMethod java/util/concurrent/ExecutorService execute (Ljava/lang/Runnable;)V 2 \nL9:     return \nL10:    \n        .linenumbertable \n            L0 34 \n            L9 35 \n        .end linenumbertable \n    .end code \n.end method \n\n.method static <clinit> : ()V \n    .code stack 1 locals 0 \nL0:     aconst_null \nL1:     putstatic Field PoolManager instance LPoolManager; \nL4:     aconst_null \nL5:     putstatic Field PoolManager service Ljava/util/concurrent/ExecutorService; \nL8:     return \nL9:     \n        .linenumbertable \n            L0 13 \n            L4 14 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'PoolManager.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 22:55:21 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.lang.MockThread;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class PoolManager_ESTest extends PoolManager_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      PoolManager poolManager0 = PoolManager.create();\n      MockThread mockThread0 = new MockThread(\"_ePu6*hj)L8NI\");\n      MockThread mockThread1 = new MockThread((ThreadGroup) null, mockThread0, \"_ePu6*hj)L8NI\");\n      poolManager0.addTask(mockThread1);\n      assertEquals(0, mockThread1.countStackFrames());\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 22:55:21 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class PoolManager_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"PoolManager\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpembm6azt\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(PoolManager_ESTest_scaffolding.class.getClassLoader() ,\n      \"PoolManager\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(PoolManager_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"PoolManager\"\n    );\n  }\n}\n", "class_idx": 290}
{"class_name": "AppBean", "java_source": "/** Created by 87959 on 2017/5/17. */\npublic class AppBean {\n  private String id;\n  private String name;\n  private String version;\n\n  @Override\n  public String toString() {\n    return \"AppBean{\"\n        + \"id='\"\n        + id\n        + '\\''\n        + \", name='\"\n        + name\n        + '\\''\n        + \", version='\"\n        + version\n        + '\\''\n        + '}';\n  }\n\n  public String getId() {\n    return id;\n  }\n\n  public void setId(String id) {\n    this.id = id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getVersion() {\n    return version;\n  }\n\n  public void setVersion(String version) {\n    this.version = version;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super AppBean \n.super java/lang/Object \n.field private id Ljava/lang/String; \n.field private name Ljava/lang/String; \n.field private version Ljava/lang/String; \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 7 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     ldc \"AppBean{id='\" \nL9:     invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL12:    aload_0 \nL13:    getfield Field AppBean id Ljava/lang/String; \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 39 \nL21:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL24:    ldc \", name='\" \nL26:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL29:    aload_0 \nL30:    getfield Field AppBean name Ljava/lang/String; \nL33:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL36:    bipush 39 \nL38:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL41:    ldc \", version='\" \nL43:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL46:    aload_0 \nL47:    getfield Field AppBean version Ljava/lang/String; \nL50:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL53:    bipush 39 \nL55:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL58:    bipush 125 \nL60:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL63:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL66:    areturn \nL67:    \n        .linenumbertable \n            L0 14 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getId : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field AppBean id Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 22 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setId : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field AppBean id Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 26 \n            L5 27 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field AppBean name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setName : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field AppBean name Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 34 \n            L5 35 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getVersion : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field AppBean version Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 38 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setVersion : (Ljava/lang/String;)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     putfield Field AppBean version Ljava/lang/String; \nL5:     return \nL6:     \n        .linenumbertable \n            L0 42 \n            L5 43 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'AppBean.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sun Jul 03 18:32:29 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class AppBean_ESTest extends AppBean_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      AppBean appBean0 = new AppBean();\n      appBean0.setVersion(\"z\u007ftpv|^a1H$-~9$,et|\");\n      String string0 = appBean0.getVersion();\n      assertEquals(\"z\u007ftpv|^a1H$-~9$,et|\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      AppBean appBean0 = new AppBean();\n      appBean0.setVersion(\"\");\n      String string0 = appBean0.getVersion();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      AppBean appBean0 = new AppBean();\n      appBean0.setName(\"Q1WBn-~6Z\");\n      String string0 = appBean0.getName();\n      assertEquals(\"Q1WBn-~6Z\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      AppBean appBean0 = new AppBean();\n      appBean0.setName(\"\");\n      String string0 = appBean0.getName();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      AppBean appBean0 = new AppBean();\n      appBean0.setId(\"\");\n      String string0 = appBean0.getId();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      AppBean appBean0 = new AppBean();\n      String string0 = appBean0.getId();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      AppBean appBean0 = new AppBean();\n      String string0 = appBean0.getVersion();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      AppBean appBean0 = new AppBean();\n      appBean0.setId(\"TU\");\n      String string0 = appBean0.getId();\n      assertEquals(\"TU\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      AppBean appBean0 = new AppBean();\n      String string0 = appBean0.getName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test9()  throws Throwable  {\n      AppBean appBean0 = new AppBean();\n      String string0 = appBean0.toString();\n      assertEquals(\"AppBean{id='null', name='null', version='null'}\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sun Jul 03 18:32:29 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class AppBean_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"AppBean\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp8rmoe16c\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AppBean_ESTest_scaffolding.class.getClassLoader() ,\n      \"AppBean\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AppBean_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"AppBean\"\n    );\n  }\n}\n", "class_idx": 291}
{"class_name": "BounceProxyUrl", "java_source": "/*\n * #%L\n * %%\n * Copyright (C) 2011 - 2017 BMW Car IT GmbH\n * %%\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * #L%\n */\n\n/**\n * Stores the base URL of the bounce proxy and composes URLs for channel creation and message\n * transmission.\n */\npublic class BounceProxyUrl {\n\n  private static final String URL_PATH_SEPARATOR = \"/\";\n  private final String bounceProxyBaseUrl;\n  private String bounceProxyChannelsBaseUrl;\n  private static final String CREATE_CHANNEL_QUERY_ITEM = \"ccid\";\n  private static final String CHANNEL_PATH_SUFFIX = \"channels\";\n\n  //    private final static String SEND_MESSAGE_PATH_APPENDIX = \"message\";\n\n  public BounceProxyUrl(final String bounceProxyBaseUrl) {\n    if (!bounceProxyBaseUrl.endsWith(URL_PATH_SEPARATOR)) {\n      this.bounceProxyBaseUrl = bounceProxyBaseUrl + URL_PATH_SEPARATOR;\n    } else {\n      this.bounceProxyBaseUrl = bounceProxyBaseUrl;\n    }\n\n    this.bounceProxyChannelsBaseUrl = bounceProxyBaseUrl + CHANNEL_PATH_SUFFIX + URL_PATH_SEPARATOR;\n  }\n\n  public String buildTimeCheckUrl() {\n    return bounceProxyBaseUrl + \"time/\";\n  }\n\n  public String buildCreateChannelUrl(final String mcid) {\n    return bounceProxyChannelsBaseUrl + \"?\" + CREATE_CHANNEL_QUERY_ITEM + \"=\" + mcid;\n  }\n\n  public String getSendUrl(final String channelId) {\n    StringBuilder sendUrl = new StringBuilder(bounceProxyChannelsBaseUrl);\n    sendUrl.append(channelId);\n    sendUrl.append(URL_PATH_SEPARATOR);\n    //        sendUrl.append(SEND_MESSAGE_PATH_APPENDIX);\n    //        sendUrl.append(URL_PATH_SEPARATOR);\n    return sendUrl.toString();\n  }\n\n  public String getBounceProxyBaseUrl() {\n    return bounceProxyBaseUrl;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super BounceProxyUrl \n.super java/lang/Object \n.field private static final URL_PATH_SEPARATOR Ljava/lang/String; = '/' \n.field private final bounceProxyBaseUrl Ljava/lang/String; \n.field private bounceProxyChannelsBaseUrl Ljava/lang/String; \n.field private static final CREATE_CHANNEL_QUERY_ITEM Ljava/lang/String; = 'ccid' \n.field private static final CHANNEL_PATH_SUFFIX Ljava/lang/String; = 'channels' \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_1 \nL5:     ldc '/' \nL7:     invokevirtual Method java/lang/String endsWith (Ljava/lang/String;)Z \nL10:    ifne L39 \nL13:    aload_0 \nL14:    new java/lang/StringBuilder \nL17:    dup \nL18:    invokespecial Method java/lang/StringBuilder <init> ()V \nL21:    aload_1 \nL22:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL25:    ldc '/' \nL27:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL30:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL33:    putfield Field BounceProxyUrl bounceProxyBaseUrl Ljava/lang/String; \nL36:    goto L44 \n\n        .stack full \n            locals Object BounceProxyUrl Object java/lang/String \n            stack \n        .end stack \nL39:    aload_0 \nL40:    aload_1 \nL41:    putfield Field BounceProxyUrl bounceProxyBaseUrl Ljava/lang/String; \n\n        .stack same \nL44:    aload_0 \nL45:    new java/lang/StringBuilder \nL48:    dup \nL49:    invokespecial Method java/lang/StringBuilder <init> ()V \nL52:    aload_1 \nL53:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL56:    ldc 'channels' \nL58:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL61:    ldc '/' \nL63:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL66:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL69:    putfield Field BounceProxyUrl bounceProxyChannelsBaseUrl Ljava/lang/String; \nL72:    return \nL73:    \n        .linenumbertable \n            L0 38 \n            L4 39 \n            L13 40 \n            L39 42 \n            L44 45 \n            L72 46 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public buildTimeCheckUrl : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     aload_0 \nL8:     getfield Field BounceProxyUrl bounceProxyBaseUrl Ljava/lang/String; \nL11:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL14:    ldc 'time/' \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL22:    areturn \nL23:    \n        .linenumbertable \n            L0 49 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public buildCreateChannelUrl : (Ljava/lang/String;)Ljava/lang/String; \n    .code stack 2 locals 2 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     aload_0 \nL8:     getfield Field BounceProxyUrl bounceProxyChannelsBaseUrl Ljava/lang/String; \nL11:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL14:    ldc '?' \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    ldc 'ccid' \nL21:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL24:    ldc '=' \nL26:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL29:    aload_1 \nL30:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL33:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL36:    areturn \nL37:    \n        .linenumbertable \n            L0 53 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getSendUrl : (Ljava/lang/String;)Ljava/lang/String; \n    .code stack 3 locals 3 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     aload_0 \nL5:     getfield Field BounceProxyUrl bounceProxyChannelsBaseUrl Ljava/lang/String; \nL8:     invokespecial Method java/lang/StringBuilder <init> (Ljava/lang/String;)V \nL11:    astore_2 \nL12:    aload_2 \nL13:    aload_1 \nL14:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL17:    pop \nL18:    aload_2 \nL19:    ldc '/' \nL21:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL24:    pop \nL25:    aload_2 \nL26:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL29:    areturn \nL30:    \n        .linenumbertable \n            L0 57 \n            L12 58 \n            L18 59 \n            L25 62 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getBounceProxyBaseUrl : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field BounceProxyUrl bounceProxyBaseUrl Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 66 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'BounceProxyUrl.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 17:55:58 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class BounceProxyUrl_ESTest extends BounceProxyUrl_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      BounceProxyUrl bounceProxyUrl0 = new BounceProxyUrl(\"BounceProxyUrl\");\n      String string0 = bounceProxyUrl0.getSendUrl(\"BounceProxyUrl\");\n      assertEquals(\"BounceProxyUrlchannels/BounceProxyUrl/\", string0);\n      assertEquals(\"BounceProxyUrl/\", bounceProxyUrl0.getBounceProxyBaseUrl());\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      BounceProxyUrl bounceProxyUrl0 = new BounceProxyUrl(\"|q/\");\n      String string0 = bounceProxyUrl0.getBounceProxyBaseUrl();\n      assertEquals(\"|q/\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      BounceProxyUrl bounceProxyUrl0 = new BounceProxyUrl(\"BounceProxyUrl\");\n      String string0 = bounceProxyUrl0.buildCreateChannelUrl(\"BounceProxyUrlchannels/BounceProxyUrl/\");\n      assertEquals(\"BounceProxyUrlchannels/?ccid=BounceProxyUrlchannels/BounceProxyUrl/\", string0);\n      assertEquals(\"BounceProxyUrl/\", bounceProxyUrl0.getBounceProxyBaseUrl());\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      BounceProxyUrl bounceProxyUrl0 = new BounceProxyUrl(\"BounceProxyUrl\");\n      String string0 = bounceProxyUrl0.buildTimeCheckUrl();\n      assertEquals(\"BounceProxyUrl/time/\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 17:55:58 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class BounceProxyUrl_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"BounceProxyUrl\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpgzasqs2z\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BounceProxyUrl_ESTest_scaffolding.class.getClassLoader() ,\n      \"BounceProxyUrl\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BounceProxyUrl_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"BounceProxyUrl\"\n    );\n  }\n}\n", "class_idx": 292}
{"class_name": "chengfabiao", "java_source": "public class chengfabiao {\n\n  /**\n   * @param args\n   */\n  public static void main(String[] args) {\n    // TODO Auto-generated method stub\n    for (int i = 1; i <= 9; i++) {\n      for (int j = 1; j <= i; j++) {\n        System.out.print(i + \"x\" + j + \"=\" + (i * j) + \"\\t\");\n      }\n      System.out.println();\n    }\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super chengfabiao \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 3 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 4 locals 3 \nL0:     iconst_1 \nL1:     istore_1 \n\n        .stack append Integer \nL2:     iload_1 \nL3:     bipush 9 \nL5:     if_icmpgt L78 \nL8:     iconst_1 \nL9:     istore_2 \n\n        .stack append Integer \nL10:    iload_2 \nL11:    iload_1 \nL12:    if_icmpgt L66 \nL15:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL18:    new java/lang/StringBuilder \nL21:    dup \nL22:    invokespecial Method java/lang/StringBuilder <init> ()V \nL25:    iload_1 \nL26:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL29:    ldc 'x' \nL31:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL34:    iload_2 \nL35:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL38:    ldc '=' \nL40:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL43:    iload_1 \nL44:    iload_2 \nL45:    imul \nL46:    invokevirtual Method java/lang/StringBuilder append (I)Ljava/lang/StringBuilder; \nL49:    ldc '\\t' \nL51:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL54:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL57:    invokevirtual Method java/io/PrintStream print (Ljava/lang/String;)V \nL60:    iinc 2 1 \nL63:    goto L10 \n\n        .stack chop 1 \nL66:    getstatic Field java/lang/System out Ljava/io/PrintStream; \nL69:    invokevirtual Method java/io/PrintStream println ()V \nL72:    iinc 1 1 \nL75:    goto L2 \n\n        .stack chop 1 \nL78:    return \nL79:    \n        .linenumbertable \n            L0 10 \n            L8 11 \n            L15 12 \n            L60 11 \n            L66 14 \n            L72 10 \n            L78 16 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'chengfabiao.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 23:36:39 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class chengfabiao_ESTest extends chengfabiao_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String[] stringArray0 = new String[9];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"SL@S}FSJx-:\";\n      stringArray0[2] = \"F$'}Y\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \"7?Z%zT8dqTE<u\";\n      stringArray0[5] = \"\";\n      stringArray0[6] = \"=7nPo.hj>$oS,Em5@2\";\n      stringArray0[7] = \"\";\n      stringArray0[8] = \"\";\n      chengfabiao.main(stringArray0);\n      assertEquals(9, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      chengfabiao chengfabiao0 = new chengfabiao();\n      String[] stringArray0 = new String[6];\n      stringArray0[0] = \"Y{vp8.RWn/,#kz\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"7\";\n      stringArray0[3] = \"\";\n      stringArray0[4] = \"\";\n      stringArray0[5] = \"\";\n      chengfabiao.main(stringArray0);\n      String[] stringArray1 = new String[0];\n      chengfabiao.main(stringArray1);\n      String[] stringArray2 = new String[0];\n      chengfabiao.main(stringArray2);\n      chengfabiao.main(stringArray2);\n      chengfabiao.main(stringArray1);\n      assertEquals(0, stringArray1.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      String[] stringArray0 = new String[1];\n      stringArray0[0] = \"\";\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao chengfabiao0 = new chengfabiao();\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      String[] stringArray1 = new String[1];\n      stringArray1[0] = \",\";\n      chengfabiao.main(stringArray1);\n      chengfabiao.main(stringArray1);\n      chengfabiao.main(stringArray0);\n      assertEquals(1, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      chengfabiao chengfabiao0 = new chengfabiao();\n      String[] stringArray0 = new String[9];\n      stringArray0[0] = \"chengfabiao\";\n      stringArray0[1] = \"(=3\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"G\";\n      stringArray0[4] = \"| \";\n      stringArray0[5] = \"\";\n      stringArray0[6] = \"/o-\";\n      stringArray0[7] = \"\";\n      stringArray0[8] = \"{'=e\u007fL=uBM\";\n      chengfabiao.main(stringArray0);\n      String[] stringArray1 = new String[0];\n      chengfabiao.main(stringArray1);\n      chengfabiao.main((String[]) null);\n      chengfabiao.main((String[]) null);\n      chengfabiao.main(stringArray1);\n      assertFalse(stringArray1.equals((Object)stringArray0));\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      String[] stringArray0 = new String[9];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"=\";\n      stringArray0[3] = \"G\";\n      stringArray0[4] = \"\";\n      stringArray0[5] = \"/l'DF7^_t+{Am^M\";\n      stringArray0[6] = \"\";\n      stringArray0[7] = \"\";\n      stringArray0[8] = \"\";\n      chengfabiao.main(stringArray0);\n      chengfabiao chengfabiao0 = new chengfabiao();\n      String[] stringArray1 = new String[9];\n      stringArray1[0] = \"\";\n      stringArray1[1] = \"\";\n      stringArray1[2] = \"\";\n      stringArray1[3] = \"G\";\n      stringArray1[4] = \"\";\n      stringArray1[5] = \"=\";\n      stringArray1[6] = \"\";\n      stringArray1[7] = \"=\";\n      stringArray1[8] = \"/l'DF7^_t+{Am^M\";\n      chengfabiao.main(stringArray1);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      assertEquals(9, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      chengfabiao chengfabiao0 = new chengfabiao();\n      String[] stringArray0 = new String[5];\n      stringArray0[0] = \" !PO?{|;g/lKc|wk*\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"%181Hz^\u007fzT?\";\n      stringArray0[4] = \"\";\n      chengfabiao.main(stringArray0);\n      String[] stringArray1 = new String[7];\n      stringArray1[0] = \"-Osd$PA%4UJ{K\";\n      stringArray1[1] = \"\";\n      stringArray1[2] = \"4#%z[HxF+Xfnq3\\\"q\u007f7\";\n      stringArray1[3] = \"=\";\n      stringArray1[4] = \"q:T3C,L:3^f<f`y-O\";\n      stringArray1[5] = \"!^'E#}'(}LD\";\n      stringArray1[6] = \"\";\n      chengfabiao.main(stringArray1);\n      assertFalse(stringArray1.equals((Object)stringArray0));\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      chengfabiao chengfabiao0 = new chengfabiao();\n      String[] stringArray0 = new String[5];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"1j656jIop\u007fZ-{38Y\";\n      stringArray0[4] = \"4g)A{p u0?h2\";\n      chengfabiao.main(stringArray0);\n      String[] stringArray1 = new String[1];\n      stringArray1[0] = \"\";\n      chengfabiao.main(stringArray1);\n      chengfabiao.main(stringArray0);\n      String[] stringArray2 = new String[9];\n      stringArray2[0] = \"\";\n      stringArray2[1] = \"\";\n      stringArray2[2] = \"1j656jIop\u007fZ-{38Y\";\n      stringArray2[3] = \"\";\n      stringArray2[4] = \"4g)A{p u0?h2\";\n      stringArray2[5] = \"\";\n      stringArray2[6] = \"1j656jIop\u007fZ-{38Y\";\n      stringArray2[7] = \"\";\n      stringArray2[8] = \"\";\n      chengfabiao.main(stringArray2);\n      assertFalse(stringArray2.equals((Object)stringArray1));\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      String[] stringArray0 = new String[4];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"9=P\";\n      stringArray0[3] = \"EVYw,[.$'6-rQ`}[\";\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao chengfabiao0 = new chengfabiao();\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      String[] stringArray1 = new String[2];\n      stringArray1[0] = \"9=P\";\n      stringArray1[1] = \"EVYw,[.$'6-rQ`}[\";\n      chengfabiao.main(stringArray1);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      String[] stringArray2 = new String[1];\n      stringArray2[0] = \"EVYw,[.$'6-rQ`}[\";\n      chengfabiao.main(stringArray2);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray1);\n      assertEquals(2, stringArray1.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      chengfabiao chengfabiao0 = new chengfabiao();\n      String[] stringArray0 = new String[4];\n      stringArray0[0] = \"\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"eU4(\u007fs ;\u007fq>!$kV28\";\n      chengfabiao.main(stringArray0);\n      assertEquals(4, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test9()  throws Throwable  {\n      String[] stringArray0 = new String[3];\n      stringArray0[0] = \"\\t\";\n      stringArray0[1] = \"@`?Pf!{%`~\";\n      stringArray0[2] = \"\";\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao chengfabiao0 = new chengfabiao();\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      chengfabiao.main(stringArray0);\n      String[] stringArray1 = new String[2];\n      stringArray1[0] = \"@`?Pf!{%`~\";\n      stringArray1[1] = \"\\t\";\n      chengfabiao.main(stringArray1);\n      chengfabiao.main(stringArray1);\n      chengfabiao.main(stringArray1);\n      chengfabiao.main(stringArray1);\n      chengfabiao.main(stringArray1);\n      assertFalse(stringArray1.equals((Object)stringArray0));\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 23:36:39 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class chengfabiao_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"chengfabiao\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp6bm71xdl\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(chengfabiao_ESTest_scaffolding.class.getClassLoader() ,\n      \"chengfabiao\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(chengfabiao_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"chengfabiao\"\n    );\n  }\n}\n", "class_idx": 293}
{"class_name": "Peripheral", "java_source": "/**\n * AppleIIGo Slot interface Copyright 2006 by Marc S. Ressl(mressl@gmail.com) Released under the GPL\n * Based on work by Steven E. Hugg\n */\nimport java.util.Random;\n\npublic class Peripheral {\n  protected Random rand = new Random();\n\n  public Peripheral() {}\n\n  public int ioRead(int address) {\n    return rand.nextInt(256);\n  }\n\n  public void ioWrite(int address, int value) {}\n\n  public int memoryRead(int address) {\n    return 0;\n  }\n\n  public void memoryWrite(int address, int value) {}\n\n  public void reset() {}\n}\n", "jasm_code": ".version 52 0 \n.class public super Peripheral \n.super java/lang/Object \n.field protected rand Ljava/util/Random; \n\n.method public <init> : ()V \n    .code stack 3 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     new java/util/Random \nL8:     dup \nL9:     invokespecial Method java/util/Random <init> ()V \nL12:    putfield Field Peripheral rand Ljava/util/Random; \nL15:    return \nL16:    \n        .linenumbertable \n            L0 15 \n            L4 13 \n            L15 16 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public ioRead : (I)I \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field Peripheral rand Ljava/util/Random; \nL4:     sipush 256 \nL7:     invokevirtual Method java/util/Random nextInt (I)I \nL10:    ireturn \nL11:    \n        .linenumbertable \n            L0 19 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public ioWrite : (II)V \n    .code stack 0 locals 3 \nL0:     return \nL1:     \n        .linenumbertable \n            L0 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public memoryRead : (I)I \n    .code stack 1 locals 2 \nL0:     iconst_0 \nL1:     ireturn \nL2:     \n        .linenumbertable \n            L0 26 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public memoryWrite : (II)V \n    .code stack 0 locals 3 \nL0:     return \nL1:     \n        .linenumbertable \n            L0 30 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public reset : ()V \n    .code stack 0 locals 1 \nL0:     return \nL1:     \n        .linenumbertable \n            L0 33 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Peripheral.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 05:45:27 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.evosuite.runtime.mock.java.util.MockRandom;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Peripheral_ESTest extends Peripheral_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Peripheral peripheral0 = new Peripheral();\n      MockRandom mockRandom0 = new MockRandom(0);\n      mockRandom0.nextGaussian();\n      int int0 = peripheral0.ioRead(0);\n      assertEquals(1, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Peripheral peripheral0 = new Peripheral();\n      peripheral0.reset();\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Peripheral peripheral0 = new Peripheral();\n      peripheral0.memoryWrite(0, 0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Peripheral peripheral0 = new Peripheral();\n      int int0 = peripheral0.memoryRead((-1));\n      assertEquals(0, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Peripheral peripheral0 = new Peripheral();\n      peripheral0.ioWrite((-1), 0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Peripheral peripheral0 = new Peripheral();\n      peripheral0.ioRead(0);\n      peripheral0.ioRead(0);\n      peripheral0.reset();\n      peripheral0.memoryRead((-1));\n      peripheral0.memoryWrite(0, 1);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 05:45:27 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Peripheral_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Peripheral\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpgnfm9pqn\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Peripheral_ESTest_scaffolding.class.getClassLoader() ,\n      \"Peripheral\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Peripheral_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Peripheral\"\n    );\n  }\n}\n", "class_idx": 294}
{"class_name": "Product", "java_source": "public class Product {\n  String name;\n  int count;\n\n  public Product(String name, int count) {\n    this.name = name;\n    this.count = count;\n  }\n\n  public int getCount() {\n    return count;\n  }\n\n  public void setCount(int count) {\n    this.count = count;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Product \n.super java/lang/Object \n.field name Ljava/lang/String; \n.field count I \n\n.method public <init> : (Ljava/lang/String;I)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field Product name Ljava/lang/String; \nL9:     aload_0 \nL10:    iload_2 \nL11:    putfield Field Product count I \nL14:    return \nL15:    \n        .linenumbertable \n            L0 8 \n            L4 9 \n            L9 10 \n            L14 11 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getCount : ()I \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Product count I \nL4:     ireturn \nL5:     \n        .linenumbertable \n            L0 14 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public setCount : (I)V \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     iload_1 \nL2:     putfield Field Product count I \nL5:     return \nL6:     \n        .linenumbertable \n            L0 18 \n            L5 19 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Product.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 07:33:50 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Product_ESTest extends Product_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Product product0 = new Product(\"\", 0);\n      product0.setCount(1708);\n      int int0 = product0.getCount();\n      assertEquals(1708, int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Product product0 = new Product(\"\", 0);\n      product0.count = (-41741);\n      int int0 = product0.getCount();\n      assertEquals((-41741), int0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Product product0 = new Product(\"\", 0);\n      int int0 = product0.getCount();\n      assertEquals(0, int0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 07:33:50 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Product_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Product\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmphca41vqm\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Product_ESTest_scaffolding.class.getClassLoader() ,\n      \"Product\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Product_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Product\"\n    );\n  }\n}\n", "class_idx": 295}
{"class_name": "Song", "java_source": "public class Song {\n\n  private String artist;\n  private String title;\n  private String duration;\n\n  public Song(String artist, String title, String duration) {\n    this.artist = artist;\n    this.title = title;\n    this.duration = duration;\n  }\n\n  public String getArtist() {\n    return artist;\n  }\n\n  public String getTitle() {\n    return title;\n  }\n\n  public String getDuration() {\n    return duration;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Song \n.super java/lang/Object \n.field private artist Ljava/lang/String; \n.field private title Ljava/lang/String; \n.field private duration Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 2 locals 4 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field Song artist Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field Song title Ljava/lang/String; \nL14:    aload_0 \nL15:    aload_3 \nL16:    putfield Field Song duration Ljava/lang/String; \nL19:    return \nL20:    \n        .linenumbertable \n            L0 9 \n            L4 10 \n            L9 11 \n            L14 12 \n            L19 13 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getArtist : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Song artist Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 16 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getTitle : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Song title Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 20 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getDuration : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Song duration Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 24 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Song.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 14:33:42 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Song_ESTest extends Song_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      Song song0 = new Song((String) null, (String) null, (String) null);\n      String string0 = song0.getTitle();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Song song0 = new Song(\"CD(6Bcj;L\", \"CD(6Bcj;L\", \"CD(6Bcj;L\");\n      String string0 = song0.getTitle();\n      assertEquals(\"CD(6Bcj;L\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Song song0 = new Song((String) null, (String) null, (String) null);\n      String string0 = song0.getDuration();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Song song0 = new Song(\"CD(6Bcj;L\", \"CD(6Bcj;L\", \"CD(6Bcj;L\");\n      String string0 = song0.getDuration();\n      assertEquals(\"CD(6Bcj;L\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      Song song0 = new Song((String) null, (String) null, (String) null);\n      String string0 = song0.getArtist();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Song song0 = new Song(\"CD(6Bcj;L\", \"CD(6Bcj;L\", \"CD(6Bcj;L\");\n      String string0 = song0.getArtist();\n      assertEquals(\"CD(6Bcj;L\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test6()  throws Throwable  {\n      Song song0 = new Song(\"\", \"\", \"\");\n      String string0 = song0.getArtist();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test7()  throws Throwable  {\n      Song song0 = new Song(\"\", \"\", \"\");\n      String string0 = song0.getTitle();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test8()  throws Throwable  {\n      Song song0 = new Song(\"\", \"\", \"\");\n      String string0 = song0.getDuration();\n      assertEquals(\"\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 14:33:42 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Song_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Song\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp7i8s9x77\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Song_ESTest_scaffolding.class.getClassLoader() ,\n      \"Song\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Song_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Song\"\n    );\n  }\n}\n", "class_idx": 296}
{"class_name": "test", "java_source": "import java.util.ArrayList;\n\npublic class test {\n  public static void main(String[] arg) {\n\n    int[][] arr = {\n      {1, 2, 3, 4, 5},\n      {6, 7, 8, 9, 10},\n      {11, 12, 13, 14, 15},\n      {16, 17, 18, 19, 20},\n      {21, 22, 23, 24, 25}\n    };\n    // int[][] arr = {{width,2,3},{4,5,6},{7,8,9}};\n    ArrayList<Integer> al = new ArrayList<Integer>();\n    int x = 2, y = 2;\n    int width = 2; // change the value of width, according to the requirement\n    for (int i = 0; i < 5; i++) {\n      for (int j = 0; j < 5; j++) {\n        if ((i == (x - width) && ((y + width) >= j && j >= (y - width)))\n            || (i == (x + width) && ((y + width) >= j && j >= (y - width)))\n            || (j == (y - width) && ((x + width) >= i && i >= (x - width)))\n            || (j == (y + width) && ((x + width) >= i && i >= (x - width)))) {\n          // if( x >= 0 && i < (i+width) && y >= 0 && j < (j+width))\n          {\n            al.add(arr[i][j]);\n          }\n        }\n      }\n    }\n    System.out.println(al);\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super test \n.super java/lang/Object \n\n.method public <init> : ()V \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     return \nL5:     \n        .linenumbertable \n            L0 4 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public static main : ([Ljava/lang/String;)V \n    .code stack 7 locals 8 \nL0:     iconst_5 \nL1:     anewarray [I \nL4:     dup \nL5:     iconst_0 \nL6:     iconst_5 \nL7:     newarray int \nL9:     dup \nL10:    iconst_0 \nL11:    iconst_1 \nL12:    iastore \nL13:    dup \nL14:    iconst_1 \nL15:    iconst_2 \nL16:    iastore \nL17:    dup \nL18:    iconst_2 \nL19:    iconst_3 \nL20:    iastore \nL21:    dup \nL22:    iconst_3 \nL23:    iconst_4 \nL24:    iastore \nL25:    dup \nL26:    iconst_4 \nL27:    iconst_5 \nL28:    iastore \nL29:    aastore \nL30:    dup \nL31:    iconst_1 \nL32:    iconst_5 \nL33:    newarray int \nL35:    dup \nL36:    iconst_0 \nL37:    bipush 6 \nL39:    iastore \nL40:    dup \nL41:    iconst_1 \nL42:    bipush 7 \nL44:    iastore \nL45:    dup \nL46:    iconst_2 \nL47:    bipush 8 \nL49:    iastore \nL50:    dup \nL51:    iconst_3 \nL52:    bipush 9 \nL54:    iastore \nL55:    dup \nL56:    iconst_4 \nL57:    bipush 10 \nL59:    iastore \nL60:    aastore \nL61:    dup \nL62:    iconst_2 \nL63:    iconst_5 \nL64:    newarray int \nL66:    dup \nL67:    iconst_0 \nL68:    bipush 11 \nL70:    iastore \nL71:    dup \nL72:    iconst_1 \nL73:    bipush 12 \nL75:    iastore \nL76:    dup \nL77:    iconst_2 \nL78:    bipush 13 \nL80:    iastore \nL81:    dup \nL82:    iconst_3 \nL83:    bipush 14 \nL85:    iastore \nL86:    dup \nL87:    iconst_4 \nL88:    bipush 15 \nL90:    iastore \nL91:    aastore \nL92:    dup \nL93:    iconst_3 \nL94:    iconst_5 \nL95:    newarray int \nL97:    dup \nL98:    iconst_0 \nL99:    bipush 16 \nL101:   iastore \nL102:   dup \nL103:   iconst_1 \nL104:   bipush 17 \nL106:   iastore \nL107:   dup \nL108:   iconst_2 \nL109:   bipush 18 \nL111:   iastore \nL112:   dup \nL113:   iconst_3 \nL114:   bipush 19 \nL116:   iastore \nL117:   dup \nL118:   iconst_4 \nL119:   bipush 20 \nL121:   iastore \nL122:   aastore \nL123:   dup \nL124:   iconst_4 \nL125:   iconst_5 \nL126:   newarray int \nL128:   dup \nL129:   iconst_0 \nL130:   bipush 21 \nL132:   iastore \nL133:   dup \nL134:   iconst_1 \nL135:   bipush 22 \nL137:   iastore \nL138:   dup \nL139:   iconst_2 \nL140:   bipush 23 \nL142:   iastore \nL143:   dup \nL144:   iconst_3 \nL145:   bipush 24 \nL147:   iastore \nL148:   dup \nL149:   iconst_4 \nL150:   bipush 25 \nL152:   iastore \nL153:   aastore \nL154:   astore_1 \nL155:   new java/util/ArrayList \nL158:   dup \nL159:   invokespecial Method java/util/ArrayList <init> ()V \nL162:   astore_2 \nL163:   iconst_2 \nL164:   istore_3 \nL165:   iconst_2 \nL166:   istore 4 \nL168:   iconst_2 \nL169:   istore 5 \nL171:   iconst_0 \nL172:   istore 6 \n\n        .stack full \n            locals Object [Ljava/lang/String; Object [[I Object java/util/ArrayList Integer Integer Integer Integer \n            stack \n        .end stack \nL174:   iload 6 \nL176:   iconst_5 \nL177:   if_icmpge L330 \nL180:   iconst_0 \nL181:   istore 7 \n\n        .stack append Integer \nL183:   iload 7 \nL185:   iconst_5 \nL186:   if_icmpge L324 \nL189:   iload 6 \nL191:   iload_3 \nL192:   iload 5 \nL194:   isub \nL195:   if_icmpne L218 \nL198:   iload 4 \nL200:   iload 5 \nL202:   iadd \nL203:   iload 7 \nL205:   if_icmplt L218 \nL208:   iload 7 \nL210:   iload 4 \nL212:   iload 5 \nL214:   isub \nL215:   if_icmpge L303 \n\n        .stack same \nL218:   iload 6 \nL220:   iload_3 \nL221:   iload 5 \nL223:   iadd \nL224:   if_icmpne L247 \nL227:   iload 4 \nL229:   iload 5 \nL231:   iadd \nL232:   iload 7 \nL234:   if_icmplt L247 \nL237:   iload 7 \nL239:   iload 4 \nL241:   iload 5 \nL243:   isub \nL244:   if_icmpge L303 \n\n        .stack same \nL247:   iload 7 \nL249:   iload 4 \nL251:   iload 5 \nL253:   isub \nL254:   if_icmpne L275 \nL257:   iload_3 \nL258:   iload 5 \nL260:   iadd \nL261:   iload 6 \nL263:   if_icmplt L275 \nL266:   iload 6 \nL268:   iload_3 \nL269:   iload 5 \nL271:   isub \nL272:   if_icmpge L303 \n\n        .stack same \nL275:   iload 7 \nL277:   iload 4 \nL279:   iload 5 \nL281:   iadd \nL282:   if_icmpne L318 \nL285:   iload_3 \nL286:   iload 5 \nL288:   iadd \nL289:   iload 6 \nL291:   if_icmplt L318 \nL294:   iload 6 \nL296:   iload_3 \nL297:   iload 5 \nL299:   isub \nL300:   if_icmplt L318 \n\n        .stack same \nL303:   aload_2 \nL304:   aload_1 \nL305:   iload 6 \nL307:   aaload \nL308:   iload 7 \nL310:   iaload \nL311:   invokestatic Method java/lang/Integer valueOf (I)Ljava/lang/Integer; \nL314:   invokevirtual Method java/util/ArrayList add (Ljava/lang/Object;)Z \nL317:   pop \n\n        .stack same \nL318:   iinc 7 1 \nL321:   goto L183 \n\n        .stack chop 1 \nL324:   iinc 6 1 \nL327:   goto L174 \n\n        .stack chop 1 \nL330:   getstatic Field java/lang/System out Ljava/io/PrintStream; \nL333:   aload_2 \nL334:   invokevirtual Method java/io/PrintStream println (Ljava/lang/Object;)V \nL337:   return \nL338:   \n        .linenumbertable \n            L0 7 \n            L155 9 \n            L163 10 \n            L168 11 \n            L171 12 \n            L180 13 \n            L189 14 \n            L303 17 \n            L318 13 \n            L324 12 \n            L330 22 \n            L337 23 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'test.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Mon Jul 04 04:06:44 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class test_ESTest extends test_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      String[] stringArray0 = new String[9];\n      stringArray0[0] = \"\\\"/W|/00e7f\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"/F\";\n      stringArray0[4] = \"test\";\n      stringArray0[5] = \"cxE=dD$\";\n      stringArray0[6] = \"\";\n      stringArray0[7] = \"\";\n      stringArray0[8] = \"*d&:b#8\\\"$l)2.>r)^mB\";\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test test0 = new test();\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      assertEquals(9, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      String[] stringArray0 = new String[1];\n      stringArray0[0] = \"q_k.n\";\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test test0 = new test();\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      test.main(stringArray0);\n      assertEquals(1, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      test test0 = new test();\n      String[] stringArray0 = new String[9];\n      stringArray0[0] = \"oN1th}jZPEn`l\";\n      stringArray0[1] = \":Y41\\\"[VNZ[x%xeh|BSQ\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \"<Qk\";\n      stringArray0[4] = \"\";\n      stringArray0[5] = \"test\";\n      stringArray0[6] = \"\";\n      stringArray0[7] = \"^4\";\n      stringArray0[8] = \"\";\n      test.main(stringArray0);\n      assertEquals(9, stringArray0.length);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      String[] stringArray0 = new String[9];\n      stringArray0[0] = \"ej+ETRZ`D3k^+E.[{\";\n      stringArray0[1] = \"\";\n      stringArray0[2] = \"\";\n      stringArray0[3] = \",C%@\";\n      stringArray0[4] = \":]W0~ICSwbt\";\n      stringArray0[5] = \" t\";\n      stringArray0[6] = \"\";\n      stringArray0[7] = \"\";\n      stringArray0[8] = \"\";\n      test.main(stringArray0);\n      assertEquals(9, stringArray0.length);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Mon Jul 04 04:06:44 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class test_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"test\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmptsr9qv5p\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(test_ESTest_scaffolding.class.getClassLoader() ,\n      \"test\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(test_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"test\"\n    );\n  }\n}\n", "class_idx": 297}
{"class_name": "Document", "java_source": "public class Document {\n\n  private final String _id;\n  private final String _filename;\n\n  /**\n   * Default constructor for a document\n   *\n   * @param id The id for this document\n   * @param filename The filename for this document\n   */\n  public Document(String id, String filename) {\n    _id = id;\n    _filename = filename;\n  }\n\n  /**\n   * Returns the id of this document\n   *\n   * @return The id of this document\n   */\n  public String getId() {\n    return _id;\n  }\n\n  /**\n   * Returns the filename for this document\n   *\n   * @return The filename for this document\n   */\n  public String getFilename() {\n    return _filename;\n  }\n\n  /**\n   * {@inheritDoc}\n   *\n   * @param o The object to compare to\n   * @return Whether these two objects are equal\n   */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    Document document = (Document) o;\n    return _id.equals(document._id) && _filename.equals(document._filename);\n  }\n\n  /**\n   * {@inheritDoc}\n   *\n   * @return A hashcode for this document\n   */\n  @Override\n  public int hashCode() {\n    int result = _id.hashCode();\n    return 11 * result + _filename.hashCode();\n  }\n\n  /**\n   * {@inheritDoc}\n   *\n   * @return String representation of a Document\n   */\n  @Override\n  public String toString() {\n    return \"Document{\" + \"filename='\" + _filename + '\\'' + '}';\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super Document \n.super java/lang/Object \n.field private final _id Ljava/lang/String; \n.field private final _filename Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/String;Ljava/lang/String;)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/Object <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field Document _id Ljava/lang/String; \nL9:     aload_0 \nL10:    aload_2 \nL11:    putfield Field Document _filename Ljava/lang/String; \nL14:    return \nL15:    \n        .linenumbertable \n            L0 13 \n            L4 14 \n            L9 15 \n            L14 16 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getId : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Document _id Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 23 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getFilename : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field Document _filename Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 31 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public equals : (Ljava/lang/Object;)Z \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     aload_1 \nL2:     if_acmpne L7 \nL5:     iconst_1 \nL6:     ireturn \n\n        .stack same \nL7:     aload_1 \nL8:     ifnull L22 \nL11:    aload_0 \nL12:    invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL15:    aload_1 \nL16:    invokevirtual Method java/lang/Object getClass ()Ljava/lang/Class; \nL19:    if_acmpeq L24 \n\n        .stack same \nL22:    iconst_0 \nL23:    ireturn \n\n        .stack same \nL24:    aload_1 \nL25:    checkcast Document \nL28:    astore_2 \nL29:    aload_0 \nL30:    getfield Field Document _id Ljava/lang/String; \nL33:    aload_2 \nL34:    getfield Field Document _id Ljava/lang/String; \nL37:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL40:    ifeq L61 \nL43:    aload_0 \nL44:    getfield Field Document _filename Ljava/lang/String; \nL47:    aload_2 \nL48:    getfield Field Document _filename Ljava/lang/String; \nL51:    invokevirtual Method java/lang/String equals (Ljava/lang/Object;)Z \nL54:    ifeq L61 \nL57:    iconst_1 \nL58:    goto L62 \n\n        .stack append Object Document \nL61:    iconst_0 \n\n        .stack stack_1 Integer \nL62:    ireturn \nL63:    \n        .linenumbertable \n            L0 42 \n            L5 43 \n            L7 45 \n            L22 46 \n            L24 48 \n            L29 49 \n            L51 50 \n            L62 49 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public hashCode : ()I \n    .code stack 2 locals 2 \nL0:     aload_0 \nL1:     getfield Field Document _id Ljava/lang/String; \nL4:     invokevirtual Method java/lang/String hashCode ()I \nL7:     istore_1 \nL8:     bipush 11 \nL10:    iload_1 \nL11:    imul \nL12:    aload_0 \nL13:    getfield Field Document _filename Ljava/lang/String; \nL16:    invokevirtual Method java/lang/String hashCode ()I \nL19:    iadd \nL20:    ireturn \nL21:    \n        .linenumbertable \n            L0 60 \n            L8 61 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public toString : ()Ljava/lang/String; \n    .code stack 2 locals 1 \nL0:     new java/lang/StringBuilder \nL3:     dup \nL4:     invokespecial Method java/lang/StringBuilder <init> ()V \nL7:     ldc \"Document{filename='\" \nL9:     invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL12:    aload_0 \nL13:    getfield Field Document _filename Ljava/lang/String; \nL16:    invokevirtual Method java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder; \nL19:    bipush 39 \nL21:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL24:    bipush 125 \nL26:    invokevirtual Method java/lang/StringBuilder append (C)Ljava/lang/StringBuilder; \nL29:    invokevirtual Method java/lang/StringBuilder toString ()Ljava/lang/String; \nL32:    areturn \nL33:    \n        .linenumbertable \n            L0 71 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'Document.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Sat Jul 02 19:18:35 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class Document_ESTest extends Document_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test00()  throws Throwable  {\n      Document document0 = new Document(\"\", \"Document{filename='\");\n      document0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test01()  throws Throwable  {\n      Document document0 = new Document(\"Document{filename='\", \"\");\n      document0.hashCode();\n  }\n\n  @Test(timeout = 4000)\n  public void test02()  throws Throwable  {\n      Document document0 = new Document((String) null, (String) null);\n      String string0 = document0.getId();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test03()  throws Throwable  {\n      Document document0 = new Document(\"Document{filename=''}\", \"Document{filename=''}\");\n      String string0 = document0.getId();\n      assertEquals(\"Document{filename=''}\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test04()  throws Throwable  {\n      Document document0 = new Document((String) null, (String) null);\n      String string0 = document0.getFilename();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test05()  throws Throwable  {\n      Document document0 = new Document(\"\", \"Document{filename='\");\n      String string0 = document0.getFilename();\n      assertEquals(\"Document{filename='\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test06()  throws Throwable  {\n      Document document0 = new Document(\"\", \"Document{filename='\");\n      Document document1 = new Document(\"\", (String) null);\n      boolean boolean0 = document0.equals(document1);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test07()  throws Throwable  {\n      Document document0 = new Document(\"\", \"Document{filename='\");\n      Document document1 = new Document(\"Document{filename='\", \"\");\n      boolean boolean0 = document0.equals(document1);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test08()  throws Throwable  {\n      Document document0 = new Document(\"\", \"\");\n      Document document1 = new Document(\"\", \"\");\n      boolean boolean0 = document0.equals(document1);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test09()  throws Throwable  {\n      Document document0 = new Document(\"\", \"\");\n      boolean boolean0 = document0.equals((Object) null);\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test10()  throws Throwable  {\n      Document document0 = new Document(\"\", \"\");\n      boolean boolean0 = document0.equals(document0);\n      assertTrue(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test11()  throws Throwable  {\n      Document document0 = new Document(\"\", \"\");\n      boolean boolean0 = document0.equals(\"\");\n      assertFalse(boolean0);\n  }\n\n  @Test(timeout = 4000)\n  public void test12()  throws Throwable  {\n      Document document0 = new Document(\"\", \"\");\n      String string0 = document0.toString();\n      assertEquals(\"Document{filename=''}\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test13()  throws Throwable  {\n      Document document0 = new Document(\"\", \"\");\n      String string0 = document0.getId();\n      assertEquals(\"\", string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test14()  throws Throwable  {\n      Document document0 = new Document(\"\", \"\");\n      String string0 = document0.getFilename();\n      assertEquals(\"\", string0);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Sat Jul 02 19:18:35 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class Document_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"Document\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmpzo2jdra0\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Document_ESTest_scaffolding.class.getClassLoader() ,\n      \"Document\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Document_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"Document\"\n    );\n  }\n}\n", "class_idx": 298}
{"class_name": "PermissionNotFoundException", "java_source": "public class PermissionNotFoundException extends RuntimeException {\n\n  private Long id;\n  private String name;\n\n  public PermissionNotFoundException(Long id) {\n    this(id, null);\n  }\n\n  public PermissionNotFoundException(String name) {\n    this(null, name);\n  }\n\n  public PermissionNotFoundException(Long id, String name) {\n    this.id = id;\n  }\n\n  public Long getId() {\n    return id;\n  }\n\n  public String getName() {\n    return name;\n  }\n}\n", "jasm_code": ".version 52 0 \n.class public super PermissionNotFoundException \n.super java/lang/RuntimeException \n.field private id Ljava/lang/Long; \n.field private name Ljava/lang/String; \n\n.method public <init> : (Ljava/lang/Long;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     aload_1 \nL2:     aconst_null \nL3:     invokespecial Method PermissionNotFoundException <init> (Ljava/lang/Long;Ljava/lang/String;)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 9 \n            L6 10 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/String;)V \n    .code stack 3 locals 2 \nL0:     aload_0 \nL1:     aconst_null \nL2:     aload_1 \nL3:     invokespecial Method PermissionNotFoundException <init> (Ljava/lang/Long;Ljava/lang/String;)V \nL6:     return \nL7:     \n        .linenumbertable \n            L0 13 \n            L6 14 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public <init> : (Ljava/lang/Long;Ljava/lang/String;)V \n    .code stack 2 locals 3 \nL0:     aload_0 \nL1:     invokespecial Method java/lang/RuntimeException <init> ()V \nL4:     aload_0 \nL5:     aload_1 \nL6:     putfield Field PermissionNotFoundException id Ljava/lang/Long; \nL9:     return \nL10:    \n        .linenumbertable \n            L0 16 \n            L4 17 \n            L9 18 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getId : ()Ljava/lang/Long; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field PermissionNotFoundException id Ljava/lang/Long; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 21 \n        .end linenumbertable \n    .end code \n.end method \n\n.method public getName : ()Ljava/lang/String; \n    .code stack 1 locals 1 \nL0:     aload_0 \nL1:     getfield Field PermissionNotFoundException name Ljava/lang/String; \nL4:     areturn \nL5:     \n        .linenumbertable \n            L0 25 \n        .end linenumbertable \n    .end code \n.end method \n.sourcefile 'PermissionNotFoundException.java' \n.end class \n", "java_test": "/*\n * This file was automatically generated by EvoSuite\n * Fri Jul 01 08:08:07 GMT 2022\n */\n\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport org.evosuite.runtime.EvoRunner;\nimport org.evosuite.runtime.EvoRunnerParameters;\nimport org.junit.runner.RunWith;\n\n@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \npublic class PermissionNotFoundException_ESTest extends PermissionNotFoundException_ESTest_scaffolding {\n\n  @Test(timeout = 4000)\n  public void test0()  throws Throwable  {\n      PermissionNotFoundException permissionNotFoundException0 = new PermissionNotFoundException(\"InG<$MK&i+%$\");\n      Long long0 = permissionNotFoundException0.getId();\n      assertNull(long0);\n  }\n\n  @Test(timeout = 4000)\n  public void test1()  throws Throwable  {\n      Long long0 = new Long(27574L);\n      PermissionNotFoundException permissionNotFoundException0 = new PermissionNotFoundException(long0, \"\");\n      Long long1 = permissionNotFoundException0.getId();\n      assertEquals(27574L, (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test2()  throws Throwable  {\n      Long long0 = new Long(0L);\n      PermissionNotFoundException permissionNotFoundException0 = new PermissionNotFoundException(long0);\n      Long long1 = permissionNotFoundException0.getId();\n      assertEquals(0L, (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test3()  throws Throwable  {\n      Long long0 = Long.valueOf((-46980L));\n      PermissionNotFoundException permissionNotFoundException0 = new PermissionNotFoundException(long0, \"@rY^M'=IaFL!`Ina?%\");\n      Long long1 = permissionNotFoundException0.getId();\n      assertEquals((-46980L), (long)long1);\n  }\n\n  @Test(timeout = 4000)\n  public void test4()  throws Throwable  {\n      PermissionNotFoundException permissionNotFoundException0 = new PermissionNotFoundException((String) null);\n      String string0 = permissionNotFoundException0.getName();\n      assertNull(string0);\n  }\n\n  @Test(timeout = 4000)\n  public void test5()  throws Throwable  {\n      Long long0 = new Long((-17173L));\n      PermissionNotFoundException permissionNotFoundException0 = new PermissionNotFoundException(long0);\n      Long long1 = permissionNotFoundException0.getId();\n      assertEquals((-17173L), (long)long1);\n  }\n}\n", "java_scaffold": "/**\n * Scaffolding file used to store all the setups needed to run \n * tests automatically generated by EvoSuite\n * Fri Jul 01 08:08:07 GMT 2022\n */\n\n\nimport org.evosuite.runtime.annotation.EvoSuiteClassExclude;\nimport org.junit.BeforeClass;\nimport org.junit.Before;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.evosuite.runtime.sandbox.Sandbox;\nimport org.evosuite.runtime.sandbox.Sandbox.SandboxMode;\n\n@EvoSuiteClassExclude\npublic class PermissionNotFoundException_ESTest_scaffolding {\n\n  @org.junit.Rule \n  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();\n\n  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); \n\n  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);\n\n\n  @BeforeClass \n  public static void initEvoSuiteFramework() { \n    org.evosuite.runtime.RuntimeSettings.className = \"PermissionNotFoundException\"; \n    org.evosuite.runtime.GuiSupport.initialize(); \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; \n    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; \n    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; \n    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; \n    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.init();\n    setSystemProperties();\n    initializeClasses();\n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n  } \n\n  @AfterClass \n  public static void clearEvoSuiteFramework(){ \n    Sandbox.resetDefaultSecurityManager(); \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n  } \n\n  @Before \n  public void initTestCase(){ \n    threadStopper.storeCurrentThreads();\n    threadStopper.startRecordingTime();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); \n    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); \n    setSystemProperties(); \n    org.evosuite.runtime.GuiSupport.setHeadless(); \n    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); \n    org.evosuite.runtime.agent.InstrumentingAgent.activate(); \n  } \n\n  @After \n  public void doneWithTestCase(){ \n    threadStopper.killAndJoinClientThreads();\n    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); \n    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); \n    resetClasses(); \n    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); \n    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); \n    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); \n  } \n\n  public static void setSystemProperties() {\n \n    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); \n    java.lang.System.setProperty(\"file.encoding\", \"UTF-8\"); \n    java.lang.System.setProperty(\"java.awt.headless\", \"true\"); \n    java.lang.System.setProperty(\"java.io.tmpdir\", \"/tmp\"); \n    java.lang.System.setProperty(\"user.country\", \"US\"); \n    java.lang.System.setProperty(\"user.dir\", \"/tmp/tmp1v57ddgf\"); \n    java.lang.System.setProperty(\"user.home\", \"/home/bmcdanel\"); \n    java.lang.System.setProperty(\"user.language\", \"en\"); \n    java.lang.System.setProperty(\"user.name\", \"bmcdanel\"); \n    java.lang.System.setProperty(\"user.timezone\", \"America/New_York\"); \n  }\n\n  private static void initializeClasses() {\n    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(PermissionNotFoundException_ESTest_scaffolding.class.getClassLoader() ,\n      \"PermissionNotFoundException\"\n    );\n  } \n\n  private static void resetClasses() {\n    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(PermissionNotFoundException_ESTest_scaffolding.class.getClassLoader()); \n\n    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(\n      \"PermissionNotFoundException\"\n    );\n  }\n}\n", "class_idx": 299}
